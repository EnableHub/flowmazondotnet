<Project Sdk="Microsoft.NET.Sdk">
  
  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>

    <IsPackable>false</IsPackable>
    <IsTestProject>true</IsTestProject>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Bogus" Version="35.6.3" />
    <PackageReference Include="coverlet.collector" Version="6.0.0" />
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Logging" Version="8.0.0" />
    <PackageReference Include="Microsoft.NET.Test.Sdk" Version="17.8.0" />
    <PackageReference Include="Testcontainers" Version="4.4.0" />
    <PackageReference Include="Testcontainers.PostgreSql" Version="4.4.0" />
    <PackageReference Include="xunit" Version="2.5.3" />
    <PackageReference Include="xunit.runner.visualstudio" Version="2.5.3" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="Xunit" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\flowmazonapi.TestSupport\flowmazonapi.TestSupport.csproj" />
  </ItemGroup>
  <!--This being an integration test project, we test "from outside the process" and
  so don't want to reference the API project. But we still want to re-run this test project
  if the API project chanses (in addition to any code in this test project or the referenced
  flowmazonapi.TestSupport project changing; referenced project changes would autoamtically trgger
  a rerun of the test project, this is how "dotnet watch test" luckily works).
  Therefore we do not include the API project as a ProejctReference but 
  reference its code fiels as a Watch glob below-->
  <ItemGroup>
    <Watch Include="..\flowmazonapi\**\*.cs" Exclude="..\flowmazonapi\bin\**\*;..\flowmazonapi\obj\**\*" />
  </ItemGroup>
  
</Project>
