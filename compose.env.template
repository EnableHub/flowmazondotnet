# DOCKER COMPOSE .env FILE


# Since next.js app access the backend api
# from a browser on the host machine, we need
# to use domain name  (localhost) and port (5000)
# on the local host machine (port 8080 is mapped to
# 5000 using `ports` key in the flowmazonbackend
# service in Docker Compose file)
NEXT_PUBLIC_BACKEND_URL="http://localhost:5000"

# Password of the default 'postgres' user
POSTGRES_PASSWORD=<postgres user password>

# Name of the default database.
# This will be the app's database
POSTGRES_DB=FlowmazonDB

# Name of the PostgreSQL user that the 
# app would use to connect to the database
# It has minimal privileges so approximates
# the database user that the app would use 
# to connect to the db in Production
APP_DB_USER=flowmazon_testuser

# Password of APP_DB_USER
APP_DB_PASSWORD=<app user password>

# Connection String taht the API project would 
# use to connection to the database
ConnectionStrings__FlowmazonDB="Server=flowmazondb;Port=5432;Database=FlowmazonDB;User Id=flowmazon_testuser;Password=<app user password>;"

# Path in which SQL scripts for DB migrations are stored
MIGRATIONS_PATH=./flowmazonapi/MigrationScripts

# Base URL of the frontend app which needs to be passed
# to the API to be allowed for Cross-Origin Requests
# (as the API is running at a different origin and 
# requests to it would originate from teh browser and so 
# would be blocked by CORS middleware unless it is 
# configured with the URL of the frontend app)
ALLOWED_CORS_ORIGINS=http://localhost:4000

# Observability backend's endpoint details for all services:
#################################################################

# Aspire DAshboard config (no longer used, hence commented out):
# OTEL_EXPORTER_OTLP_ENDPOINT=http://aspire-dashboard:18889
# OTEL_EXPORTER_OTLP_ENDPOINT=http://alloy:4317
# OTEL_EXPORTER_OTLP_PROTOCOL=grpc

# Grafana Cloud
OTEL_EXPORTER_OTLP_ENDPOINT=https://otlp-gateway-prod-eu-west-2.grafana.net/otlp
OTEL_EXPORTER_OTLP_PROTOCOL=http/protobuf

# Header used by OTLP exporter for Grafana Cloud. 
# It contains base-64 encoded API token and can be generated in Grafana Cloud. 
OTEL_EXPORTER_OTLP_HEADERS=<Authorization header>

OTEL_RESOURCE_ATTRIBUTES=deployment.environment.name=compose

NEXT_PUBLIC_FARO_URL=<faro url>
NEXT_PUBLIC_OTEL_ENVIRONMENT=compose
NEXT_PUBLIC_FARO_SERVICE_NAME=<faro service name>