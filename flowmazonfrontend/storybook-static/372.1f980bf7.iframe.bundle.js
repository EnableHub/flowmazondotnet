/*! For license information please see 372.1f980bf7.iframe.bundle.js.LICENSE.txt */
(self.webpackChunkflowmazonfrontend=self.webpackChunkflowmazonfrontend||[]).push([[372],{"./node_modules/clsx/dist/clsx.mjs":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";function r(e){var t,f,n="";if("string"==typeof e||"number"==typeof e)n+=e;else if("object"==typeof e)if(Array.isArray(e)){var o=e.length;for(t=0;t<o;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=" "),n+=f)}else for(f in e)e[f]&&(n&&(n+=" "),n+=f);return n}__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__=function clsx(){for(var e,t,f=0,n="",o=arguments.length;f<o;f++)(e=arguments[f])&&(t=r(e))&&(n&&(n+=" "),n+=t);return n}},"./node_modules/formik/dist/formik.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{TA:()=>useFormik});var isMergeableObject=function isMergeableObject(value){return function isNonNullObject(value){return!!value&&"object"==typeof value}(value)&&!function isSpecial(value){var stringValue=Object.prototype.toString.call(value);return"[object RegExp]"===stringValue||"[object Date]"===stringValue||function isReactElement(value){return value.$$typeof===REACT_ELEMENT_TYPE}(value)}(value)};var REACT_ELEMENT_TYPE="function"==typeof Symbol&&Symbol.for?Symbol.for("react.element"):60103;function cloneUnlessOtherwiseSpecified(value,options){return!1!==options.clone&&options.isMergeableObject(value)?deepmerge(function emptyTarget(val){return Array.isArray(val)?[]:{}}(value),value,options):value}function defaultArrayMerge(target,source,options){return target.concat(source).map((function(element){return cloneUnlessOtherwiseSpecified(element,options)}))}function deepmerge(target,source,options){(options=options||{}).arrayMerge=options.arrayMerge||defaultArrayMerge,options.isMergeableObject=options.isMergeableObject||isMergeableObject;var sourceIsArray=Array.isArray(source);return sourceIsArray===Array.isArray(target)?sourceIsArray?options.arrayMerge(target,source,options):function mergeObject(target,source,options){var destination={};return options.isMergeableObject(target)&&Object.keys(target).forEach((function(key){destination[key]=cloneUnlessOtherwiseSpecified(target[key],options)})),Object.keys(source).forEach((function(key){options.isMergeableObject(source[key])&&target[key]?destination[key]=deepmerge(target[key],source[key],options):destination[key]=cloneUnlessOtherwiseSpecified(source[key],options)})),destination}(target,source,options):cloneUnlessOtherwiseSpecified(source,options)}deepmerge.all=function deepmergeAll(array,options){if(!Array.isArray(array))throw new Error("first argument should be an array");return array.reduce((function(prev,next){return deepmerge(prev,next,options)}),{})};const es=deepmerge;var _root=__webpack_require__("./node_modules/lodash-es/_root.js");const _Symbol=_root.Z.Symbol;var objectProto=Object.prototype,_getRawTag_hasOwnProperty=objectProto.hasOwnProperty,nativeObjectToString=objectProto.toString,symToStringTag=_Symbol?_Symbol.toStringTag:void 0;const _getRawTag=function getRawTag(value){var isOwn=_getRawTag_hasOwnProperty.call(value,symToStringTag),tag=value[symToStringTag];try{value[symToStringTag]=void 0;var unmasked=!0}catch(e){}var result=nativeObjectToString.call(value);return unmasked&&(isOwn?value[symToStringTag]=tag:delete value[symToStringTag]),result};var _objectToString_nativeObjectToString=Object.prototype.toString;const _objectToString=function objectToString(value){return _objectToString_nativeObjectToString.call(value)};var _baseGetTag_symToStringTag=_Symbol?_Symbol.toStringTag:void 0;const _baseGetTag=function baseGetTag(value){return null==value?void 0===value?"[object Undefined]":"[object Null]":_baseGetTag_symToStringTag&&_baseGetTag_symToStringTag in Object(value)?_getRawTag(value):_objectToString(value)};const _overArg=function overArg(func,transform){return function(arg){return func(transform(arg))}};const _getPrototype=_overArg(Object.getPrototypeOf,Object);const lodash_es_isObjectLike=function isObjectLike(value){return null!=value&&"object"==typeof value};var funcProto=Function.prototype,isPlainObject_objectProto=Object.prototype,funcToString=funcProto.toString,isPlainObject_hasOwnProperty=isPlainObject_objectProto.hasOwnProperty,objectCtorString=funcToString.call(Object);const lodash_es_isPlainObject=function isPlainObject(value){if(!lodash_es_isObjectLike(value)||"[object Object]"!=_baseGetTag(value))return!1;var proto=_getPrototype(value);if(null===proto)return!0;var Ctor=isPlainObject_hasOwnProperty.call(proto,"constructor")&&proto.constructor;return"function"==typeof Ctor&&Ctor instanceof Ctor&&funcToString.call(Ctor)==objectCtorString};var react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),react_fast_compare=__webpack_require__("./node_modules/react-fast-compare/index.js"),react_fast_compare_default=__webpack_require__.n(react_fast_compare);__webpack_require__("./node_modules/console-browserify/index.js");const tiny_warning_esm=function warning(condition,message){};const _listCacheClear=function listCacheClear(){this.__data__=[],this.size=0};const lodash_es_eq=function eq(value,other){return value===other||value!=value&&other!=other};const _assocIndexOf=function assocIndexOf(array,key){for(var length=array.length;length--;)if(lodash_es_eq(array[length][0],key))return length;return-1};var splice=Array.prototype.splice;const _listCacheDelete=function listCacheDelete(key){var data=this.__data__,index=_assocIndexOf(data,key);return!(index<0)&&(index==data.length-1?data.pop():splice.call(data,index,1),--this.size,!0)};const _listCacheGet=function listCacheGet(key){var data=this.__data__,index=_assocIndexOf(data,key);return index<0?void 0:data[index][1]};const _listCacheHas=function listCacheHas(key){return _assocIndexOf(this.__data__,key)>-1};const _listCacheSet=function listCacheSet(key,value){var data=this.__data__,index=_assocIndexOf(data,key);return index<0?(++this.size,data.push([key,value])):data[index][1]=value,this};function ListCache(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}ListCache.prototype.clear=_listCacheClear,ListCache.prototype.delete=_listCacheDelete,ListCache.prototype.get=_listCacheGet,ListCache.prototype.has=_listCacheHas,ListCache.prototype.set=_listCacheSet;const _ListCache=ListCache;const _stackClear=function stackClear(){this.__data__=new _ListCache,this.size=0};const _stackDelete=function stackDelete(key){var data=this.__data__,result=data.delete(key);return this.size=data.size,result};const _stackGet=function stackGet(key){return this.__data__.get(key)};const _stackHas=function stackHas(key){return this.__data__.has(key)};const lodash_es_isObject=function isObject(value){var type=typeof value;return null!=value&&("object"==type||"function"==type)};const lodash_es_isFunction=function isFunction(value){if(!lodash_es_isObject(value))return!1;var tag=_baseGetTag(value);return"[object Function]"==tag||"[object GeneratorFunction]"==tag||"[object AsyncFunction]"==tag||"[object Proxy]"==tag};const _coreJsData=_root.Z["__core-js_shared__"];var uid,maskSrcKey=(uid=/[^.]+$/.exec(_coreJsData&&_coreJsData.keys&&_coreJsData.keys.IE_PROTO||""))?"Symbol(src)_1."+uid:"";const _isMasked=function isMasked(func){return!!maskSrcKey&&maskSrcKey in func};var _toSource_funcToString=Function.prototype.toString;const _toSource=function toSource(func){if(null!=func){try{return _toSource_funcToString.call(func)}catch(e){}try{return func+""}catch(e){}}return""};var reIsHostCtor=/^\[object .+?Constructor\]$/,_baseIsNative_funcProto=Function.prototype,_baseIsNative_objectProto=Object.prototype,_baseIsNative_funcToString=_baseIsNative_funcProto.toString,_baseIsNative_hasOwnProperty=_baseIsNative_objectProto.hasOwnProperty,reIsNative=RegExp("^"+_baseIsNative_funcToString.call(_baseIsNative_hasOwnProperty).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");const _baseIsNative=function baseIsNative(value){return!(!lodash_es_isObject(value)||_isMasked(value))&&(lodash_es_isFunction(value)?reIsNative:reIsHostCtor).test(_toSource(value))};const _getValue=function getValue(object,key){return null==object?void 0:object[key]};const _getNative=function getNative(object,key){var value=_getValue(object,key);return _baseIsNative(value)?value:void 0};const _Map=_getNative(_root.Z,"Map");const _nativeCreate=_getNative(Object,"create");const _hashClear=function hashClear(){this.__data__=_nativeCreate?_nativeCreate(null):{},this.size=0};const _hashDelete=function hashDelete(key){var result=this.has(key)&&delete this.__data__[key];return this.size-=result?1:0,result};var _hashGet_hasOwnProperty=Object.prototype.hasOwnProperty;const _hashGet=function hashGet(key){var data=this.__data__;if(_nativeCreate){var result=data[key];return"__lodash_hash_undefined__"===result?void 0:result}return _hashGet_hasOwnProperty.call(data,key)?data[key]:void 0};var _hashHas_hasOwnProperty=Object.prototype.hasOwnProperty;const _hashHas=function hashHas(key){var data=this.__data__;return _nativeCreate?void 0!==data[key]:_hashHas_hasOwnProperty.call(data,key)};const _hashSet=function hashSet(key,value){var data=this.__data__;return this.size+=this.has(key)?0:1,data[key]=_nativeCreate&&void 0===value?"__lodash_hash_undefined__":value,this};function Hash(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}Hash.prototype.clear=_hashClear,Hash.prototype.delete=_hashDelete,Hash.prototype.get=_hashGet,Hash.prototype.has=_hashHas,Hash.prototype.set=_hashSet;const _Hash=Hash;const _mapCacheClear=function mapCacheClear(){this.size=0,this.__data__={hash:new _Hash,map:new(_Map||_ListCache),string:new _Hash}};const _isKeyable=function isKeyable(value){var type=typeof value;return"string"==type||"number"==type||"symbol"==type||"boolean"==type?"__proto__"!==value:null===value};const _getMapData=function getMapData(map,key){var data=map.__data__;return _isKeyable(key)?data["string"==typeof key?"string":"hash"]:data.map};const _mapCacheDelete=function mapCacheDelete(key){var result=_getMapData(this,key).delete(key);return this.size-=result?1:0,result};const _mapCacheGet=function mapCacheGet(key){return _getMapData(this,key).get(key)};const _mapCacheHas=function mapCacheHas(key){return _getMapData(this,key).has(key)};const _mapCacheSet=function mapCacheSet(key,value){var data=_getMapData(this,key),size=data.size;return data.set(key,value),this.size+=data.size==size?0:1,this};function MapCache(entries){var index=-1,length=null==entries?0:entries.length;for(this.clear();++index<length;){var entry=entries[index];this.set(entry[0],entry[1])}}MapCache.prototype.clear=_mapCacheClear,MapCache.prototype.delete=_mapCacheDelete,MapCache.prototype.get=_mapCacheGet,MapCache.prototype.has=_mapCacheHas,MapCache.prototype.set=_mapCacheSet;const _MapCache=MapCache;const _stackSet=function stackSet(key,value){var data=this.__data__;if(data instanceof _ListCache){var pairs=data.__data__;if(!_Map||pairs.length<199)return pairs.push([key,value]),this.size=++data.size,this;data=this.__data__=new _MapCache(pairs)}return data.set(key,value),this.size=data.size,this};function Stack(entries){var data=this.__data__=new _ListCache(entries);this.size=data.size}Stack.prototype.clear=_stackClear,Stack.prototype.delete=_stackDelete,Stack.prototype.get=_stackGet,Stack.prototype.has=_stackHas,Stack.prototype.set=_stackSet;const _Stack=Stack;const _arrayEach=function arrayEach(array,iteratee){for(var index=-1,length=null==array?0:array.length;++index<length&&!1!==iteratee(array[index],index,array););return array};const _defineProperty=function(){try{var func=_getNative(Object,"defineProperty");return func({},"",{}),func}catch(e){}}();const _baseAssignValue=function baseAssignValue(object,key,value){"__proto__"==key&&_defineProperty?_defineProperty(object,key,{configurable:!0,enumerable:!0,value,writable:!0}):object[key]=value};var _assignValue_hasOwnProperty=Object.prototype.hasOwnProperty;const _assignValue=function assignValue(object,key,value){var objValue=object[key];_assignValue_hasOwnProperty.call(object,key)&&lodash_es_eq(objValue,value)&&(void 0!==value||key in object)||_baseAssignValue(object,key,value)};const _copyObject=function copyObject(source,props,object,customizer){var isNew=!object;object||(object={});for(var index=-1,length=props.length;++index<length;){var key=props[index],newValue=customizer?customizer(object[key],source[key],key,object,source):void 0;void 0===newValue&&(newValue=source[key]),isNew?_baseAssignValue(object,key,newValue):_assignValue(object,key,newValue)}return object};const _baseTimes=function baseTimes(n,iteratee){for(var index=-1,result=Array(n);++index<n;)result[index]=iteratee(index);return result};const _baseIsArguments=function baseIsArguments(value){return lodash_es_isObjectLike(value)&&"[object Arguments]"==_baseGetTag(value)};var isArguments_objectProto=Object.prototype,isArguments_hasOwnProperty=isArguments_objectProto.hasOwnProperty,propertyIsEnumerable=isArguments_objectProto.propertyIsEnumerable;const lodash_es_isArguments=_baseIsArguments(function(){return arguments}())?_baseIsArguments:function(value){return lodash_es_isObjectLike(value)&&isArguments_hasOwnProperty.call(value,"callee")&&!propertyIsEnumerable.call(value,"callee")};const lodash_es_isArray=Array.isArray;var isBuffer=__webpack_require__("./node_modules/lodash-es/isBuffer.js"),reIsUint=/^(?:0|[1-9]\d*)$/;const _isIndex=function isIndex(value,length){var type=typeof value;return!!(length=null==length?9007199254740991:length)&&("number"==type||"symbol"!=type&&reIsUint.test(value))&&value>-1&&value%1==0&&value<length};const lodash_es_isLength=function isLength(value){return"number"==typeof value&&value>-1&&value%1==0&&value<=9007199254740991};var typedArrayTags={};typedArrayTags["[object Float32Array]"]=typedArrayTags["[object Float64Array]"]=typedArrayTags["[object Int8Array]"]=typedArrayTags["[object Int16Array]"]=typedArrayTags["[object Int32Array]"]=typedArrayTags["[object Uint8Array]"]=typedArrayTags["[object Uint8ClampedArray]"]=typedArrayTags["[object Uint16Array]"]=typedArrayTags["[object Uint32Array]"]=!0,typedArrayTags["[object Arguments]"]=typedArrayTags["[object Array]"]=typedArrayTags["[object ArrayBuffer]"]=typedArrayTags["[object Boolean]"]=typedArrayTags["[object DataView]"]=typedArrayTags["[object Date]"]=typedArrayTags["[object Error]"]=typedArrayTags["[object Function]"]=typedArrayTags["[object Map]"]=typedArrayTags["[object Number]"]=typedArrayTags["[object Object]"]=typedArrayTags["[object RegExp]"]=typedArrayTags["[object Set]"]=typedArrayTags["[object String]"]=typedArrayTags["[object WeakMap]"]=!1;const _baseIsTypedArray=function baseIsTypedArray(value){return lodash_es_isObjectLike(value)&&lodash_es_isLength(value.length)&&!!typedArrayTags[_baseGetTag(value)]};const _baseUnary=function baseUnary(func){return function(value){return func(value)}};var _nodeUtil=__webpack_require__("./node_modules/lodash-es/_nodeUtil.js"),nodeIsTypedArray=_nodeUtil.Z&&_nodeUtil.Z.isTypedArray;const lodash_es_isTypedArray=nodeIsTypedArray?_baseUnary(nodeIsTypedArray):_baseIsTypedArray;var _arrayLikeKeys_hasOwnProperty=Object.prototype.hasOwnProperty;const _arrayLikeKeys=function arrayLikeKeys(value,inherited){var isArr=lodash_es_isArray(value),isArg=!isArr&&lodash_es_isArguments(value),isBuff=!isArr&&!isArg&&(0,isBuffer.Z)(value),isType=!isArr&&!isArg&&!isBuff&&lodash_es_isTypedArray(value),skipIndexes=isArr||isArg||isBuff||isType,result=skipIndexes?_baseTimes(value.length,String):[],length=result.length;for(var key in value)!inherited&&!_arrayLikeKeys_hasOwnProperty.call(value,key)||skipIndexes&&("length"==key||isBuff&&("offset"==key||"parent"==key)||isType&&("buffer"==key||"byteLength"==key||"byteOffset"==key)||_isIndex(key,length))||result.push(key);return result};var _isPrototype_objectProto=Object.prototype;const _isPrototype=function isPrototype(value){var Ctor=value&&value.constructor;return value===("function"==typeof Ctor&&Ctor.prototype||_isPrototype_objectProto)};const _nativeKeys=_overArg(Object.keys,Object);var _baseKeys_hasOwnProperty=Object.prototype.hasOwnProperty;const _baseKeys=function baseKeys(object){if(!_isPrototype(object))return _nativeKeys(object);var result=[];for(var key in Object(object))_baseKeys_hasOwnProperty.call(object,key)&&"constructor"!=key&&result.push(key);return result};const lodash_es_isArrayLike=function isArrayLike(value){return null!=value&&lodash_es_isLength(value.length)&&!lodash_es_isFunction(value)};const lodash_es_keys=function keys(object){return lodash_es_isArrayLike(object)?_arrayLikeKeys(object):_baseKeys(object)};const _baseAssign=function baseAssign(object,source){return object&&_copyObject(source,lodash_es_keys(source),object)};const _nativeKeysIn=function nativeKeysIn(object){var result=[];if(null!=object)for(var key in Object(object))result.push(key);return result};var _baseKeysIn_hasOwnProperty=Object.prototype.hasOwnProperty;const _baseKeysIn=function baseKeysIn(object){if(!lodash_es_isObject(object))return _nativeKeysIn(object);var isProto=_isPrototype(object),result=[];for(var key in object)("constructor"!=key||!isProto&&_baseKeysIn_hasOwnProperty.call(object,key))&&result.push(key);return result};const lodash_es_keysIn=function keysIn(object){return lodash_es_isArrayLike(object)?_arrayLikeKeys(object,!0):_baseKeysIn(object)};const _baseAssignIn=function baseAssignIn(object,source){return object&&_copyObject(source,lodash_es_keysIn(source),object)};var _cloneBuffer=__webpack_require__("./node_modules/lodash-es/_cloneBuffer.js");const _copyArray=function copyArray(source,array){var index=-1,length=source.length;for(array||(array=Array(length));++index<length;)array[index]=source[index];return array};const _arrayFilter=function arrayFilter(array,predicate){for(var index=-1,length=null==array?0:array.length,resIndex=0,result=[];++index<length;){var value=array[index];predicate(value,index,array)&&(result[resIndex++]=value)}return result};const lodash_es_stubArray=function stubArray(){return[]};var _getSymbols_propertyIsEnumerable=Object.prototype.propertyIsEnumerable,nativeGetSymbols=Object.getOwnPropertySymbols;const _getSymbols=nativeGetSymbols?function(object){return null==object?[]:(object=Object(object),_arrayFilter(nativeGetSymbols(object),(function(symbol){return _getSymbols_propertyIsEnumerable.call(object,symbol)})))}:lodash_es_stubArray;const _copySymbols=function copySymbols(source,object){return _copyObject(source,_getSymbols(source),object)};const _arrayPush=function arrayPush(array,values){for(var index=-1,length=values.length,offset=array.length;++index<length;)array[offset+index]=values[index];return array};const _getSymbolsIn=Object.getOwnPropertySymbols?function(object){for(var result=[];object;)_arrayPush(result,_getSymbols(object)),object=_getPrototype(object);return result}:lodash_es_stubArray;const _copySymbolsIn=function copySymbolsIn(source,object){return _copyObject(source,_getSymbolsIn(source),object)};const _baseGetAllKeys=function baseGetAllKeys(object,keysFunc,symbolsFunc){var result=keysFunc(object);return lodash_es_isArray(object)?result:_arrayPush(result,symbolsFunc(object))};const _getAllKeys=function getAllKeys(object){return _baseGetAllKeys(object,lodash_es_keys,_getSymbols)};const _getAllKeysIn=function getAllKeysIn(object){return _baseGetAllKeys(object,lodash_es_keysIn,_getSymbolsIn)};const _DataView=_getNative(_root.Z,"DataView");const _Promise=_getNative(_root.Z,"Promise");const _Set=_getNative(_root.Z,"Set");const _WeakMap=_getNative(_root.Z,"WeakMap");var dataViewCtorString=_toSource(_DataView),mapCtorString=_toSource(_Map),promiseCtorString=_toSource(_Promise),setCtorString=_toSource(_Set),weakMapCtorString=_toSource(_WeakMap),getTag=_baseGetTag;(_DataView&&"[object DataView]"!=getTag(new _DataView(new ArrayBuffer(1)))||_Map&&"[object Map]"!=getTag(new _Map)||_Promise&&"[object Promise]"!=getTag(_Promise.resolve())||_Set&&"[object Set]"!=getTag(new _Set)||_WeakMap&&"[object WeakMap]"!=getTag(new _WeakMap))&&(getTag=function(value){var result=_baseGetTag(value),Ctor="[object Object]"==result?value.constructor:void 0,ctorString=Ctor?_toSource(Ctor):"";if(ctorString)switch(ctorString){case dataViewCtorString:return"[object DataView]";case mapCtorString:return"[object Map]";case promiseCtorString:return"[object Promise]";case setCtorString:return"[object Set]";case weakMapCtorString:return"[object WeakMap]"}return result});const _getTag=getTag;var _initCloneArray_hasOwnProperty=Object.prototype.hasOwnProperty;const _initCloneArray=function initCloneArray(array){var length=array.length,result=new array.constructor(length);return length&&"string"==typeof array[0]&&_initCloneArray_hasOwnProperty.call(array,"index")&&(result.index=array.index,result.input=array.input),result};const _Uint8Array=_root.Z.Uint8Array;const _cloneArrayBuffer=function cloneArrayBuffer(arrayBuffer){var result=new arrayBuffer.constructor(arrayBuffer.byteLength);return new _Uint8Array(result).set(new _Uint8Array(arrayBuffer)),result};const _cloneDataView=function cloneDataView(dataView,isDeep){var buffer=isDeep?_cloneArrayBuffer(dataView.buffer):dataView.buffer;return new dataView.constructor(buffer,dataView.byteOffset,dataView.byteLength)};var reFlags=/\w*$/;const _cloneRegExp=function cloneRegExp(regexp){var result=new regexp.constructor(regexp.source,reFlags.exec(regexp));return result.lastIndex=regexp.lastIndex,result};var symbolProto=_Symbol?_Symbol.prototype:void 0,symbolValueOf=symbolProto?symbolProto.valueOf:void 0;const _cloneSymbol=function cloneSymbol(symbol){return symbolValueOf?Object(symbolValueOf.call(symbol)):{}};const _cloneTypedArray=function cloneTypedArray(typedArray,isDeep){var buffer=isDeep?_cloneArrayBuffer(typedArray.buffer):typedArray.buffer;return new typedArray.constructor(buffer,typedArray.byteOffset,typedArray.length)};const _initCloneByTag=function initCloneByTag(object,tag,isDeep){var Ctor=object.constructor;switch(tag){case"[object ArrayBuffer]":return _cloneArrayBuffer(object);case"[object Boolean]":case"[object Date]":return new Ctor(+object);case"[object DataView]":return _cloneDataView(object,isDeep);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return _cloneTypedArray(object,isDeep);case"[object Map]":case"[object Set]":return new Ctor;case"[object Number]":case"[object String]":return new Ctor(object);case"[object RegExp]":return _cloneRegExp(object);case"[object Symbol]":return _cloneSymbol(object)}};var objectCreate=Object.create;const _baseCreate=function(){function object(){}return function(proto){if(!lodash_es_isObject(proto))return{};if(objectCreate)return objectCreate(proto);object.prototype=proto;var result=new object;return object.prototype=void 0,result}}();const _initCloneObject=function initCloneObject(object){return"function"!=typeof object.constructor||_isPrototype(object)?{}:_baseCreate(_getPrototype(object))};const _baseIsMap=function baseIsMap(value){return lodash_es_isObjectLike(value)&&"[object Map]"==_getTag(value)};var nodeIsMap=_nodeUtil.Z&&_nodeUtil.Z.isMap;const lodash_es_isMap=nodeIsMap?_baseUnary(nodeIsMap):_baseIsMap;const _baseIsSet=function baseIsSet(value){return lodash_es_isObjectLike(value)&&"[object Set]"==_getTag(value)};var nodeIsSet=_nodeUtil.Z&&_nodeUtil.Z.isSet;const lodash_es_isSet=nodeIsSet?_baseUnary(nodeIsSet):_baseIsSet;var cloneableTags={};cloneableTags["[object Arguments]"]=cloneableTags["[object Array]"]=cloneableTags["[object ArrayBuffer]"]=cloneableTags["[object DataView]"]=cloneableTags["[object Boolean]"]=cloneableTags["[object Date]"]=cloneableTags["[object Float32Array]"]=cloneableTags["[object Float64Array]"]=cloneableTags["[object Int8Array]"]=cloneableTags["[object Int16Array]"]=cloneableTags["[object Int32Array]"]=cloneableTags["[object Map]"]=cloneableTags["[object Number]"]=cloneableTags["[object Object]"]=cloneableTags["[object RegExp]"]=cloneableTags["[object Set]"]=cloneableTags["[object String]"]=cloneableTags["[object Symbol]"]=cloneableTags["[object Uint8Array]"]=cloneableTags["[object Uint8ClampedArray]"]=cloneableTags["[object Uint16Array]"]=cloneableTags["[object Uint32Array]"]=!0,cloneableTags["[object Error]"]=cloneableTags["[object Function]"]=cloneableTags["[object WeakMap]"]=!1;const _baseClone=function baseClone(value,bitmask,customizer,key,object,stack){var result,isDeep=1&bitmask,isFlat=2&bitmask,isFull=4&bitmask;if(customizer&&(result=object?customizer(value,key,object,stack):customizer(value)),void 0!==result)return result;if(!lodash_es_isObject(value))return value;var isArr=lodash_es_isArray(value);if(isArr){if(result=_initCloneArray(value),!isDeep)return _copyArray(value,result)}else{var tag=_getTag(value),isFunc="[object Function]"==tag||"[object GeneratorFunction]"==tag;if((0,isBuffer.Z)(value))return(0,_cloneBuffer.Z)(value,isDeep);if("[object Object]"==tag||"[object Arguments]"==tag||isFunc&&!object){if(result=isFlat||isFunc?{}:_initCloneObject(value),!isDeep)return isFlat?_copySymbolsIn(value,_baseAssignIn(result,value)):_copySymbols(value,_baseAssign(result,value))}else{if(!cloneableTags[tag])return object?value:{};result=_initCloneByTag(value,tag,isDeep)}}stack||(stack=new _Stack);var stacked=stack.get(value);if(stacked)return stacked;stack.set(value,result),lodash_es_isSet(value)?value.forEach((function(subValue){result.add(baseClone(subValue,bitmask,customizer,subValue,value,stack))})):lodash_es_isMap(value)&&value.forEach((function(subValue,key){result.set(key,baseClone(subValue,bitmask,customizer,key,value,stack))}));var props=isArr?void 0:(isFull?isFlat?_getAllKeysIn:_getAllKeys:isFlat?lodash_es_keysIn:lodash_es_keys)(value);return _arrayEach(props||value,(function(subValue,key){props&&(subValue=value[key=subValue]),_assignValue(result,key,baseClone(subValue,bitmask,customizer,key,value,stack))})),result};const lodash_es_clone=function clone(value){return _baseClone(value,4)};const _arrayMap=function arrayMap(array,iteratee){for(var index=-1,length=null==array?0:array.length,result=Array(length);++index<length;)result[index]=iteratee(array[index],index,array);return result};const lodash_es_isSymbol=function isSymbol(value){return"symbol"==typeof value||lodash_es_isObjectLike(value)&&"[object Symbol]"==_baseGetTag(value)};function memoize(func,resolver){if("function"!=typeof func||null!=resolver&&"function"!=typeof resolver)throw new TypeError("Expected a function");var memoized=function(){var args=arguments,key=resolver?resolver.apply(this,args):args[0],cache=memoized.cache;if(cache.has(key))return cache.get(key);var result=func.apply(this,args);return memoized.cache=cache.set(key,result)||cache,result};return memoized.cache=new(memoize.Cache||_MapCache),memoized}memoize.Cache=_MapCache;const lodash_es_memoize=memoize;var rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,reEscapeChar=/\\(\\)?/g;const _stringToPath=function memoizeCapped(func){var result=lodash_es_memoize(func,(function(key){return 500===cache.size&&cache.clear(),key})),cache=result.cache;return result}((function(string){var result=[];return 46===string.charCodeAt(0)&&result.push(""),string.replace(rePropName,(function(match,number,quote,subString){result.push(quote?subString.replace(reEscapeChar,"$1"):number||match)})),result}));const _toKey=function toKey(value){if("string"==typeof value||lodash_es_isSymbol(value))return value;var result=value+"";return"0"==result&&1/value==-Infinity?"-0":result};var _baseToString_symbolProto=_Symbol?_Symbol.prototype:void 0,symbolToString=_baseToString_symbolProto?_baseToString_symbolProto.toString:void 0;const _baseToString=function baseToString(value){if("string"==typeof value)return value;if(lodash_es_isArray(value))return _arrayMap(value,baseToString)+"";if(lodash_es_isSymbol(value))return symbolToString?symbolToString.call(value):"";var result=value+"";return"0"==result&&1/value==-Infinity?"-0":result};const lodash_es_toString=function toString_toString(value){return null==value?"":_baseToString(value)};const lodash_es_toPath=function toPath(value){return lodash_es_isArray(value)?_arrayMap(value,_toKey):lodash_es_isSymbol(value)?[value]:_copyArray(_stringToPath(lodash_es_toString(value)))};__webpack_require__("./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js");const lodash_es_cloneDeep=function cloneDeep(value){return _baseClone(value,5)};var formik_esm_console=__webpack_require__("./node_modules/console-browserify/index.js");function _extends(){return _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}function _inheritsLoose(subClass,superClass){subClass.prototype=Object.create(superClass.prototype),subClass.prototype.constructor=subClass,subClass.__proto__=superClass}function _objectWithoutPropertiesLoose(source,excluded){if(null==source)return{};var key,i,target={},sourceKeys=Object.keys(source);for(i=0;i<sourceKeys.length;i++)key=sourceKeys[i],excluded.indexOf(key)>=0||(target[key]=source[key]);return target}function _assertThisInitialized(self){if(void 0===self)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return self}var FormikContext=(0,react.createContext)(void 0);FormikContext.displayName="FormikContext";FormikContext.Provider,FormikContext.Consumer;function useFormikContext(){var formik=(0,react.useContext)(FormikContext);return formik||tiny_warning_esm(!1),formik}var isEmptyArray=function isEmptyArray(value){return Array.isArray(value)&&0===value.length},formik_esm_isFunction=function isFunction(obj){return"function"==typeof obj},formik_esm_isObject=function isObject(obj){return null!==obj&&"object"==typeof obj},isInteger=function isInteger(obj){return String(Math.floor(Number(obj)))===obj},isString=function isString(obj){return"[object String]"===Object.prototype.toString.call(obj)},isEmptyChildren=function isEmptyChildren(children){return 0===react.Children.count(children)},isPromise=function isPromise(value){return formik_esm_isObject(value)&&formik_esm_isFunction(value.then)};function getIn(obj,key,def,p){void 0===p&&(p=0);for(var path=lodash_es_toPath(key);obj&&p<path.length;)obj=obj[path[p++]];return p===path.length||obj?void 0===obj?def:obj:def}function setIn(obj,path,value){for(var res=lodash_es_clone(obj),resVal=res,i=0,pathArray=lodash_es_toPath(path);i<pathArray.length-1;i++){var currentPath=pathArray[i],currentObj=getIn(obj,pathArray.slice(0,i+1));if(currentObj&&(formik_esm_isObject(currentObj)||Array.isArray(currentObj)))resVal=resVal[currentPath]=lodash_es_clone(currentObj);else{var nextPath=pathArray[i+1];resVal=resVal[currentPath]=isInteger(nextPath)&&Number(nextPath)>=0?[]:{}}}return(0===i?obj:resVal)[pathArray[i]]===value?obj:(void 0===value?delete resVal[pathArray[i]]:resVal[pathArray[i]]=value,0===i&&void 0===value&&delete res[pathArray[i]],res)}function setNestedObjectValues(object,value,visited,response){void 0===visited&&(visited=new WeakMap),void 0===response&&(response={});for(var _i=0,_Object$keys=Object.keys(object);_i<_Object$keys.length;_i++){var k=_Object$keys[_i],val=object[k];formik_esm_isObject(val)?visited.get(val)||(visited.set(val,!0),response[k]=Array.isArray(val)?[]:{},setNestedObjectValues(val,value,visited,response[k])):response[k]=value}return response}var emptyErrors={},emptyTouched={};function useFormik(_ref){var _ref$validateOnChange=_ref.validateOnChange,validateOnChange=void 0===_ref$validateOnChange||_ref$validateOnChange,_ref$validateOnBlur=_ref.validateOnBlur,validateOnBlur=void 0===_ref$validateOnBlur||_ref$validateOnBlur,_ref$validateOnMount=_ref.validateOnMount,validateOnMount=void 0!==_ref$validateOnMount&&_ref$validateOnMount,isInitialValid=_ref.isInitialValid,_ref$enableReinitiali=_ref.enableReinitialize,enableReinitialize=void 0!==_ref$enableReinitiali&&_ref$enableReinitiali,onSubmit=_ref.onSubmit,rest=_objectWithoutPropertiesLoose(_ref,["validateOnChange","validateOnBlur","validateOnMount","isInitialValid","enableReinitialize","onSubmit"]),props=_extends({validateOnChange,validateOnBlur,validateOnMount,onSubmit},rest),initialValues=(0,react.useRef)(props.initialValues),initialErrors=(0,react.useRef)(props.initialErrors||emptyErrors),initialTouched=(0,react.useRef)(props.initialTouched||emptyTouched),initialStatus=(0,react.useRef)(props.initialStatus),isMounted=(0,react.useRef)(!1),fieldRegistry=(0,react.useRef)({});(0,react.useEffect)((function(){return isMounted.current=!0,function(){isMounted.current=!1}}),[]);var setIteration=(0,react.useState)(0)[1],stateRef=(0,react.useRef)({values:props.initialValues,errors:props.initialErrors||emptyErrors,touched:props.initialTouched||emptyTouched,status:props.initialStatus,isSubmitting:!1,isValidating:!1,submitCount:0}),state=stateRef.current,dispatch=(0,react.useCallback)((function(action){var prev=stateRef.current;stateRef.current=function formikReducer(state,msg){switch(msg.type){case"SET_VALUES":return _extends({},state,{values:msg.payload});case"SET_TOUCHED":return _extends({},state,{touched:msg.payload});case"SET_ERRORS":return react_fast_compare_default()(state.errors,msg.payload)?state:_extends({},state,{errors:msg.payload});case"SET_STATUS":return _extends({},state,{status:msg.payload});case"SET_ISSUBMITTING":return _extends({},state,{isSubmitting:msg.payload});case"SET_ISVALIDATING":return _extends({},state,{isValidating:msg.payload});case"SET_FIELD_VALUE":return _extends({},state,{values:setIn(state.values,msg.payload.field,msg.payload.value)});case"SET_FIELD_TOUCHED":return _extends({},state,{touched:setIn(state.touched,msg.payload.field,msg.payload.value)});case"SET_FIELD_ERROR":return _extends({},state,{errors:setIn(state.errors,msg.payload.field,msg.payload.value)});case"RESET_FORM":return _extends({},state,msg.payload);case"SET_FORMIK_STATE":return msg.payload(state);case"SUBMIT_ATTEMPT":return _extends({},state,{touched:setNestedObjectValues(state.values,!0),isSubmitting:!0,submitCount:state.submitCount+1});case"SUBMIT_FAILURE":case"SUBMIT_SUCCESS":return _extends({},state,{isSubmitting:!1});default:return state}}(prev,action),prev!==stateRef.current&&setIteration((function(x){return x+1}))}),[]),runValidateHandler=(0,react.useCallback)((function(values,field){return new Promise((function(resolve,reject){var maybePromisedErrors=props.validate(values,field);null==maybePromisedErrors?resolve(emptyErrors):isPromise(maybePromisedErrors)?maybePromisedErrors.then((function(errors){resolve(errors||emptyErrors)}),(function(actualException){reject(actualException)})):resolve(maybePromisedErrors)}))}),[props.validate]),runValidationSchema=(0,react.useCallback)((function(values,field){var validationSchema=props.validationSchema,schema=formik_esm_isFunction(validationSchema)?validationSchema(field):validationSchema,promise=field&&schema.validateAt?schema.validateAt(field,values):function validateYupSchema(values,schema,sync,context){void 0===sync&&(sync=!1);var normalizedValues=prepareDataForValidation(values);return schema[sync?"validateSync":"validate"](normalizedValues,{abortEarly:!1,context:context||normalizedValues})}(values,schema);return new Promise((function(resolve,reject){promise.then((function(){resolve(emptyErrors)}),(function(err){"ValidationError"===err.name?resolve(function yupToFormErrors(yupError){var errors={};if(yupError.inner){if(0===yupError.inner.length)return setIn(errors,yupError.path,yupError.message);var _iterator=yupError.inner,_isArray=Array.isArray(_iterator),_i=0;for(_iterator=_isArray?_iterator:_iterator[Symbol.iterator]();;){var _ref5;if(_isArray){if(_i>=_iterator.length)break;_ref5=_iterator[_i++]}else{if((_i=_iterator.next()).done)break;_ref5=_i.value}var err=_ref5;getIn(errors,err.path)||(errors=setIn(errors,err.path,err.message))}}return errors}(err)):reject(err)}))}))}),[props.validationSchema]),runSingleFieldLevelValidation=(0,react.useCallback)((function(field,value){return new Promise((function(resolve){return resolve(fieldRegistry.current[field].validate(value))}))}),[]),runFieldLevelValidations=(0,react.useCallback)((function(values){var fieldKeysWithValidation=Object.keys(fieldRegistry.current).filter((function(f){return formik_esm_isFunction(fieldRegistry.current[f].validate)})),fieldValidations=fieldKeysWithValidation.length>0?fieldKeysWithValidation.map((function(f){return runSingleFieldLevelValidation(f,getIn(values,f))})):[Promise.resolve("DO_NOT_DELETE_YOU_WILL_BE_FIRED")];return Promise.all(fieldValidations).then((function(fieldErrorsList){return fieldErrorsList.reduce((function(prev,curr,index){return"DO_NOT_DELETE_YOU_WILL_BE_FIRED"===curr||curr&&(prev=setIn(prev,fieldKeysWithValidation[index],curr)),prev}),{})}))}),[runSingleFieldLevelValidation]),runAllValidations=(0,react.useCallback)((function(values){return Promise.all([runFieldLevelValidations(values),props.validationSchema?runValidationSchema(values):{},props.validate?runValidateHandler(values):{}]).then((function(_ref2){var fieldErrors=_ref2[0],schemaErrors=_ref2[1],validateErrors=_ref2[2];return es.all([fieldErrors,schemaErrors,validateErrors],{arrayMerge})}))}),[props.validate,props.validationSchema,runFieldLevelValidations,runValidateHandler,runValidationSchema]),validateFormWithHighPriority=useEventCallback((function(values){return void 0===values&&(values=state.values),dispatch({type:"SET_ISVALIDATING",payload:!0}),runAllValidations(values).then((function(combinedErrors){return isMounted.current&&(dispatch({type:"SET_ISVALIDATING",payload:!1}),dispatch({type:"SET_ERRORS",payload:combinedErrors})),combinedErrors}))}));(0,react.useEffect)((function(){validateOnMount&&!0===isMounted.current&&react_fast_compare_default()(initialValues.current,props.initialValues)&&validateFormWithHighPriority(initialValues.current)}),[validateOnMount,validateFormWithHighPriority]);var resetForm=(0,react.useCallback)((function(nextState){var values=nextState&&nextState.values?nextState.values:initialValues.current,errors=nextState&&nextState.errors?nextState.errors:initialErrors.current?initialErrors.current:props.initialErrors||{},touched=nextState&&nextState.touched?nextState.touched:initialTouched.current?initialTouched.current:props.initialTouched||{},status=nextState&&nextState.status?nextState.status:initialStatus.current?initialStatus.current:props.initialStatus;initialValues.current=values,initialErrors.current=errors,initialTouched.current=touched,initialStatus.current=status;var dispatchFn=function dispatchFn(){dispatch({type:"RESET_FORM",payload:{isSubmitting:!!nextState&&!!nextState.isSubmitting,errors,touched,status,values,isValidating:!!nextState&&!!nextState.isValidating,submitCount:nextState&&nextState.submitCount&&"number"==typeof nextState.submitCount?nextState.submitCount:0}})};if(props.onReset){var maybePromisedOnReset=props.onReset(state.values,imperativeMethods);isPromise(maybePromisedOnReset)?maybePromisedOnReset.then(dispatchFn):dispatchFn()}else dispatchFn()}),[props.initialErrors,props.initialStatus,props.initialTouched,props.onReset]);(0,react.useEffect)((function(){!0!==isMounted.current||react_fast_compare_default()(initialValues.current,props.initialValues)||enableReinitialize&&(initialValues.current=props.initialValues,resetForm(),validateOnMount&&validateFormWithHighPriority(initialValues.current))}),[enableReinitialize,props.initialValues,resetForm,validateOnMount,validateFormWithHighPriority]),(0,react.useEffect)((function(){enableReinitialize&&!0===isMounted.current&&!react_fast_compare_default()(initialErrors.current,props.initialErrors)&&(initialErrors.current=props.initialErrors||emptyErrors,dispatch({type:"SET_ERRORS",payload:props.initialErrors||emptyErrors}))}),[enableReinitialize,props.initialErrors]),(0,react.useEffect)((function(){enableReinitialize&&!0===isMounted.current&&!react_fast_compare_default()(initialTouched.current,props.initialTouched)&&(initialTouched.current=props.initialTouched||emptyTouched,dispatch({type:"SET_TOUCHED",payload:props.initialTouched||emptyTouched}))}),[enableReinitialize,props.initialTouched]),(0,react.useEffect)((function(){enableReinitialize&&!0===isMounted.current&&!react_fast_compare_default()(initialStatus.current,props.initialStatus)&&(initialStatus.current=props.initialStatus,dispatch({type:"SET_STATUS",payload:props.initialStatus}))}),[enableReinitialize,props.initialStatus,props.initialTouched]);var validateField=useEventCallback((function(name){if(fieldRegistry.current[name]&&formik_esm_isFunction(fieldRegistry.current[name].validate)){var value=getIn(state.values,name),maybePromise=fieldRegistry.current[name].validate(value);return isPromise(maybePromise)?(dispatch({type:"SET_ISVALIDATING",payload:!0}),maybePromise.then((function(x){return x})).then((function(error){dispatch({type:"SET_FIELD_ERROR",payload:{field:name,value:error}}),dispatch({type:"SET_ISVALIDATING",payload:!1})}))):(dispatch({type:"SET_FIELD_ERROR",payload:{field:name,value:maybePromise}}),Promise.resolve(maybePromise))}return props.validationSchema?(dispatch({type:"SET_ISVALIDATING",payload:!0}),runValidationSchema(state.values,name).then((function(x){return x})).then((function(error){dispatch({type:"SET_FIELD_ERROR",payload:{field:name,value:getIn(error,name)}}),dispatch({type:"SET_ISVALIDATING",payload:!1})}))):Promise.resolve()})),registerField=(0,react.useCallback)((function(name,_ref3){var validate=_ref3.validate;fieldRegistry.current[name]={validate}}),[]),unregisterField=(0,react.useCallback)((function(name){delete fieldRegistry.current[name]}),[]),setTouched=useEventCallback((function(touched,shouldValidate){return dispatch({type:"SET_TOUCHED",payload:touched}),(void 0===shouldValidate?validateOnBlur:shouldValidate)?validateFormWithHighPriority(state.values):Promise.resolve()})),setErrors=(0,react.useCallback)((function(errors){dispatch({type:"SET_ERRORS",payload:errors})}),[]),setValues=useEventCallback((function(values,shouldValidate){var resolvedValues=formik_esm_isFunction(values)?values(state.values):values;return dispatch({type:"SET_VALUES",payload:resolvedValues}),(void 0===shouldValidate?validateOnChange:shouldValidate)?validateFormWithHighPriority(resolvedValues):Promise.resolve()})),setFieldError=(0,react.useCallback)((function(field,value){dispatch({type:"SET_FIELD_ERROR",payload:{field,value}})}),[]),setFieldValue=useEventCallback((function(field,value,shouldValidate){return dispatch({type:"SET_FIELD_VALUE",payload:{field,value}}),(void 0===shouldValidate?validateOnChange:shouldValidate)?validateFormWithHighPriority(setIn(state.values,field,value)):Promise.resolve()})),executeChange=(0,react.useCallback)((function(eventOrTextValue,maybePath){var parsed,field=maybePath,val=eventOrTextValue;if(!isString(eventOrTextValue)){eventOrTextValue.persist&&eventOrTextValue.persist();var target=eventOrTextValue.target?eventOrTextValue.target:eventOrTextValue.currentTarget,type=target.type,name=target.name,id=target.id,value=target.value,checked=target.checked,options=(target.outerHTML,target.options),multiple=target.multiple;field=maybePath||(name||id),val=/number|range/.test(type)?(parsed=parseFloat(value),isNaN(parsed)?"":parsed):/checkbox/.test(type)?function getValueForCheckbox(currentValue,checked,valueProp){if("boolean"==typeof currentValue)return Boolean(checked);var currentArrayOfValues=[],isValueInArray=!1,index=-1;if(Array.isArray(currentValue))currentArrayOfValues=currentValue,isValueInArray=(index=currentValue.indexOf(valueProp))>=0;else if(!valueProp||"true"==valueProp||"false"==valueProp)return Boolean(checked);if(checked&&valueProp&&!isValueInArray)return currentArrayOfValues.concat(valueProp);if(!isValueInArray)return currentArrayOfValues;return currentArrayOfValues.slice(0,index).concat(currentArrayOfValues.slice(index+1))}(getIn(state.values,field),checked,value):options&&multiple?function getSelectedValues(options){return Array.from(options).filter((function(el){return el.selected})).map((function(el){return el.value}))}(options):value}field&&setFieldValue(field,val)}),[setFieldValue,state.values]),handleChange=useEventCallback((function(eventOrPath){if(isString(eventOrPath))return function(event){return executeChange(event,eventOrPath)};executeChange(eventOrPath)})),setFieldTouched=useEventCallback((function(field,touched,shouldValidate){return void 0===touched&&(touched=!0),dispatch({type:"SET_FIELD_TOUCHED",payload:{field,value:touched}}),(void 0===shouldValidate?validateOnBlur:shouldValidate)?validateFormWithHighPriority(state.values):Promise.resolve()})),executeBlur=(0,react.useCallback)((function(e,path){e.persist&&e.persist();var _e$target=e.target,name=_e$target.name,id=_e$target.id,field=(_e$target.outerHTML,path||(name||id));setFieldTouched(field,!0)}),[setFieldTouched]),handleBlur=useEventCallback((function(eventOrString){if(isString(eventOrString))return function(event){return executeBlur(event,eventOrString)};executeBlur(eventOrString)})),setFormikState=(0,react.useCallback)((function(stateOrCb){formik_esm_isFunction(stateOrCb)?dispatch({type:"SET_FORMIK_STATE",payload:stateOrCb}):dispatch({type:"SET_FORMIK_STATE",payload:function payload(){return stateOrCb}})}),[]),setStatus=(0,react.useCallback)((function(status){dispatch({type:"SET_STATUS",payload:status})}),[]),setSubmitting=(0,react.useCallback)((function(isSubmitting){dispatch({type:"SET_ISSUBMITTING",payload:isSubmitting})}),[]),submitForm=useEventCallback((function(){return dispatch({type:"SUBMIT_ATTEMPT"}),validateFormWithHighPriority().then((function(combinedErrors){var isInstanceOfError=combinedErrors instanceof Error;if(!isInstanceOfError&&0===Object.keys(combinedErrors).length){var promiseOrUndefined;try{if(void 0===(promiseOrUndefined=executeSubmit()))return}catch(error){throw error}return Promise.resolve(promiseOrUndefined).then((function(result){return isMounted.current&&dispatch({type:"SUBMIT_SUCCESS"}),result})).catch((function(_errors){if(isMounted.current)throw dispatch({type:"SUBMIT_FAILURE"}),_errors}))}if(isMounted.current&&(dispatch({type:"SUBMIT_FAILURE"}),isInstanceOfError))throw combinedErrors}))})),handleSubmit=useEventCallback((function(e){e&&e.preventDefault&&formik_esm_isFunction(e.preventDefault)&&e.preventDefault(),e&&e.stopPropagation&&formik_esm_isFunction(e.stopPropagation)&&e.stopPropagation(),submitForm().catch((function(reason){formik_esm_console.warn("Warning: An unhandled error was caught from submitForm()",reason)}))})),imperativeMethods={resetForm,validateForm:validateFormWithHighPriority,validateField,setErrors,setFieldError,setFieldTouched,setFieldValue,setStatus,setSubmitting,setTouched,setValues,setFormikState,submitForm},executeSubmit=useEventCallback((function(){return onSubmit(state.values,imperativeMethods)})),handleReset=useEventCallback((function(e){e&&e.preventDefault&&formik_esm_isFunction(e.preventDefault)&&e.preventDefault(),e&&e.stopPropagation&&formik_esm_isFunction(e.stopPropagation)&&e.stopPropagation(),resetForm()})),getFieldMeta=(0,react.useCallback)((function(name){return{value:getIn(state.values,name),error:getIn(state.errors,name),touched:!!getIn(state.touched,name),initialValue:getIn(initialValues.current,name),initialTouched:!!getIn(initialTouched.current,name),initialError:getIn(initialErrors.current,name)}}),[state.errors,state.touched,state.values]),getFieldHelpers=(0,react.useCallback)((function(name){return{setValue:function setValue(value,shouldValidate){return setFieldValue(name,value,shouldValidate)},setTouched:function setTouched(value,shouldValidate){return setFieldTouched(name,value,shouldValidate)},setError:function setError(value){return setFieldError(name,value)}}}),[setFieldValue,setFieldTouched,setFieldError]),getFieldProps=(0,react.useCallback)((function(nameOrOptions){var isAnObject=formik_esm_isObject(nameOrOptions),name=isAnObject?nameOrOptions.name:nameOrOptions,valueState=getIn(state.values,name),field={name,value:valueState,onChange:handleChange,onBlur:handleBlur};if(isAnObject){var type=nameOrOptions.type,valueProp=nameOrOptions.value,is=nameOrOptions.as,multiple=nameOrOptions.multiple;"checkbox"===type?void 0===valueProp?field.checked=!!valueState:(field.checked=!(!Array.isArray(valueState)||!~valueState.indexOf(valueProp)),field.value=valueProp):"radio"===type?(field.checked=valueState===valueProp,field.value=valueProp):"select"===is&&multiple&&(field.value=field.value||[],field.multiple=!0)}return field}),[handleBlur,handleChange,state.values]),dirty=(0,react.useMemo)((function(){return!react_fast_compare_default()(initialValues.current,state.values)}),[initialValues.current,state.values]),isValid=(0,react.useMemo)((function(){return void 0!==isInitialValid?dirty?state.errors&&0===Object.keys(state.errors).length:!1!==isInitialValid&&formik_esm_isFunction(isInitialValid)?isInitialValid(props):isInitialValid:state.errors&&0===Object.keys(state.errors).length}),[isInitialValid,dirty,state.errors,props]);return _extends({},state,{initialValues:initialValues.current,initialErrors:initialErrors.current,initialTouched:initialTouched.current,initialStatus:initialStatus.current,handleBlur,handleChange,handleReset,handleSubmit,resetForm,setErrors,setFormikState,setFieldTouched,setFieldValue,setFieldError,setStatus,setSubmitting,setTouched,setValues,submitForm,validateForm:validateFormWithHighPriority,validateField,isValid,dirty,unregisterField,registerField,getFieldProps,getFieldMeta,getFieldHelpers,validateOnBlur,validateOnChange,validateOnMount})}function prepareDataForValidation(values){var data=Array.isArray(values)?[]:{};for(var k in values)if(Object.prototype.hasOwnProperty.call(values,k)){var key=String(k);!0===Array.isArray(values[key])?data[key]=values[key].map((function(value){return!0===Array.isArray(value)||lodash_es_isPlainObject(value)?prepareDataForValidation(value):""!==value?value:void 0})):lodash_es_isPlainObject(values[key])?data[key]=prepareDataForValidation(values[key]):data[key]=""!==values[key]?values[key]:void 0}return data}function arrayMerge(target,source,options){var destination=target.slice();return source.forEach((function merge(e,i){if(void 0===destination[i]){var shouldClone=!1!==options.clone&&options.isMergeableObject(e);destination[i]=shouldClone?es(Array.isArray(e)?[]:{},e,options):e}else options.isMergeableObject(e)?destination[i]=es(target[i],e,options):-1===target.indexOf(e)&&destination.push(e)})),destination}var useIsomorphicLayoutEffect="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement?react.useLayoutEffect:react.useEffect;function useEventCallback(fn){var ref=(0,react.useRef)(fn);return useIsomorphicLayoutEffect((function(){ref.current=fn})),(0,react.useCallback)((function(){for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++)args[_key]=arguments[_key];return ref.current.apply(void 0,args)}),[])}(0,react.forwardRef)((function(props,ref){var action=props.action,rest=_objectWithoutPropertiesLoose(props,["action"]),_action=null!=action?action:"#",_useFormikContext=useFormikContext(),handleReset=_useFormikContext.handleReset,handleSubmit=_useFormikContext.handleSubmit;return(0,react.createElement)("form",_extends({onSubmit:handleSubmit,ref,onReset:handleReset,action:_action},rest))})).displayName="Form";var insert=function insert(arrayLike,index,value){var copy=copyArrayLike(arrayLike);return copy.splice(index,0,value),copy},copyArrayLike=function copyArrayLike(arrayLike){if(arrayLike){if(Array.isArray(arrayLike))return[].concat(arrayLike);var maxIndex=Object.keys(arrayLike).map((function(key){return parseInt(key)})).reduce((function(max,el){return el>max?el:max}),0);return Array.from(_extends({},arrayLike,{length:maxIndex+1}))}return[]},createAlterationHandler=function createAlterationHandler(alteration,defaultFunction){var fn="function"==typeof alteration?alteration:defaultFunction;return function(data){if(Array.isArray(data)||formik_esm_isObject(data)){var clone=copyArrayLike(data);return fn(clone)}return data}},FieldArrayInner=function(_React$Component){function FieldArrayInner(props){var _this;return(_this=_React$Component.call(this,props)||this).updateArrayField=function(fn,alterTouched,alterErrors){var _this$props=_this.props,name=_this$props.name;(0,_this$props.formik.setFormikState)((function(prevState){var updateErrors=createAlterationHandler(alterErrors,fn),updateTouched=createAlterationHandler(alterTouched,fn),values=setIn(prevState.values,name,fn(getIn(prevState.values,name))),fieldError=alterErrors?updateErrors(getIn(prevState.errors,name)):void 0,fieldTouched=alterTouched?updateTouched(getIn(prevState.touched,name)):void 0;return isEmptyArray(fieldError)&&(fieldError=void 0),isEmptyArray(fieldTouched)&&(fieldTouched=void 0),_extends({},prevState,{values,errors:alterErrors?setIn(prevState.errors,name,fieldError):prevState.errors,touched:alterTouched?setIn(prevState.touched,name,fieldTouched):prevState.touched})}))},_this.push=function(value){return _this.updateArrayField((function(arrayLike){return[].concat(copyArrayLike(arrayLike),[lodash_es_cloneDeep(value)])}),!1,!1)},_this.handlePush=function(value){return function(){return _this.push(value)}},_this.swap=function(indexA,indexB){return _this.updateArrayField((function(array){return function swap(arrayLike,indexA,indexB){var copy=copyArrayLike(arrayLike),a=copy[indexA];return copy[indexA]=copy[indexB],copy[indexB]=a,copy}(array,indexA,indexB)}),!0,!0)},_this.handleSwap=function(indexA,indexB){return function(){return _this.swap(indexA,indexB)}},_this.move=function(from,to){return _this.updateArrayField((function(array){return function move(array,from,to){var copy=copyArrayLike(array),value=copy[from];return copy.splice(from,1),copy.splice(to,0,value),copy}(array,from,to)}),!0,!0)},_this.handleMove=function(from,to){return function(){return _this.move(from,to)}},_this.insert=function(index,value){return _this.updateArrayField((function(array){return insert(array,index,value)}),(function(array){return insert(array,index,null)}),(function(array){return insert(array,index,null)}))},_this.handleInsert=function(index,value){return function(){return _this.insert(index,value)}},_this.replace=function(index,value){return _this.updateArrayField((function(array){return function replace(arrayLike,index,value){var copy=copyArrayLike(arrayLike);return copy[index]=value,copy}(array,index,value)}),!1,!1)},_this.handleReplace=function(index,value){return function(){return _this.replace(index,value)}},_this.unshift=function(value){var length=-1;return _this.updateArrayField((function(array){var arr=array?[value].concat(array):[value];return length=arr.length,arr}),(function(array){return array?[null].concat(array):[null]}),(function(array){return array?[null].concat(array):[null]})),length},_this.handleUnshift=function(value){return function(){return _this.unshift(value)}},_this.handleRemove=function(index){return function(){return _this.remove(index)}},_this.handlePop=function(){return function(){return _this.pop()}},_this.remove=_this.remove.bind(_assertThisInitialized(_this)),_this.pop=_this.pop.bind(_assertThisInitialized(_this)),_this}_inheritsLoose(FieldArrayInner,_React$Component);var _proto=FieldArrayInner.prototype;return _proto.componentDidUpdate=function componentDidUpdate(prevProps){this.props.validateOnChange&&this.props.formik.validateOnChange&&!react_fast_compare_default()(getIn(prevProps.formik.values,prevProps.name),getIn(this.props.formik.values,this.props.name))&&this.props.formik.validateForm(this.props.formik.values)},_proto.remove=function remove(index){var result;return this.updateArrayField((function(array){var copy=array?copyArrayLike(array):[];return result||(result=copy[index]),formik_esm_isFunction(copy.splice)&&copy.splice(index,1),formik_esm_isFunction(copy.every)&&copy.every((function(v){return void 0===v}))?[]:copy}),!0,!0),result},_proto.pop=function pop(){var result;return this.updateArrayField((function(array){var tmp=array.slice();return result||(result=tmp&&tmp.pop&&tmp.pop()),tmp}),!0,!0),result},_proto.render=function render(){var arrayHelpers={push:this.push,pop:this.pop,swap:this.swap,move:this.move,insert:this.insert,replace:this.replace,unshift:this.unshift,remove:this.remove,handlePush:this.handlePush,handlePop:this.handlePop,handleSwap:this.handleSwap,handleMove:this.handleMove,handleInsert:this.handleInsert,handleReplace:this.handleReplace,handleUnshift:this.handleUnshift,handleRemove:this.handleRemove},_this$props2=this.props,component=_this$props2.component,render=_this$props2.render,children=_this$props2.children,name=_this$props2.name,props=_extends({},arrayHelpers,{form:_objectWithoutPropertiesLoose(_this$props2.formik,["validate","validationSchema"]),name});return component?(0,react.createElement)(component,props):render?render(props):children?"function"==typeof children?children(props):isEmptyChildren(children)?null:react.Children.only(children):null},FieldArrayInner}(react.Component);FieldArrayInner.defaultProps={validateOnChange:!0}},"./node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var reactIs=__webpack_require__("./node_modules/react-is/index.js"),REACT_STATICS={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},KNOWN_STATICS={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},MEMO_STATICS={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},TYPE_STATICS={};function getStatics(component){return reactIs.isMemo(component)?MEMO_STATICS:TYPE_STATICS[component.$$typeof]||REACT_STATICS}TYPE_STATICS[reactIs.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},TYPE_STATICS[reactIs.Memo]=MEMO_STATICS;var defineProperty=Object.defineProperty,getOwnPropertyNames=Object.getOwnPropertyNames,getOwnPropertySymbols=Object.getOwnPropertySymbols,getOwnPropertyDescriptor=Object.getOwnPropertyDescriptor,getPrototypeOf=Object.getPrototypeOf,objectPrototype=Object.prototype;module.exports=function hoistNonReactStatics(targetComponent,sourceComponent,blacklist){if("string"!=typeof sourceComponent){if(objectPrototype){var inheritedComponent=getPrototypeOf(sourceComponent);inheritedComponent&&inheritedComponent!==objectPrototype&&hoistNonReactStatics(targetComponent,inheritedComponent,blacklist)}var keys=getOwnPropertyNames(sourceComponent);getOwnPropertySymbols&&(keys=keys.concat(getOwnPropertySymbols(sourceComponent)));for(var targetStatics=getStatics(targetComponent),sourceStatics=getStatics(sourceComponent),i=0;i<keys.length;++i){var key=keys[i];if(!(KNOWN_STATICS[key]||blacklist&&blacklist[key]||sourceStatics&&sourceStatics[key]||targetStatics&&targetStatics[key])){var descriptor=getOwnPropertyDescriptor(sourceComponent,key);try{defineProperty(targetComponent,key,descriptor)}catch(e){}}}}return targetComponent}},"./node_modules/lodash-es/_cloneBuffer.js":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _root_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_root.js");module=__webpack_require__.hmd(module);var freeExports="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&module&&!module.nodeType&&module,Buffer=freeModule&&freeModule.exports===freeExports?_root_js__WEBPACK_IMPORTED_MODULE_0__.Z.Buffer:void 0,allocUnsafe=Buffer?Buffer.allocUnsafe:void 0;const __WEBPACK_DEFAULT_EXPORT__=function cloneBuffer(buffer,isDeep){if(isDeep)return buffer.slice();var length=buffer.length,result=allocUnsafe?allocUnsafe(length):new buffer.constructor(length);return buffer.copy(result),result}},"./node_modules/lodash-es/_freeGlobal.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});const __WEBPACK_DEFAULT_EXPORT__="object"==typeof __webpack_require__.g&&__webpack_require__.g&&__webpack_require__.g.Object===Object&&__webpack_require__.g},"./node_modules/lodash-es/_nodeUtil.js":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_freeGlobal.js");module=__webpack_require__.hmd(module);var freeExports="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&module&&!module.nodeType&&module,freeProcess=freeModule&&freeModule.exports===freeExports&&_freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__.Z.process;const __WEBPACK_DEFAULT_EXPORT__=function(){try{var types=freeModule&&freeModule.require&&freeModule.require("util").types;return types||freeProcess&&freeProcess.binding&&freeProcess.binding("util")}catch(e){}}()},"./node_modules/lodash-es/_root.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var _freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/lodash-es/_freeGlobal.js"),freeSelf="object"==typeof self&&self&&self.Object===Object&&self;const __WEBPACK_DEFAULT_EXPORT__=_freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__.Z||freeSelf||Function("return this")()},"./node_modules/lodash-es/isBuffer.js":(module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Z:()=>lodash_es_isBuffer});var _root=__webpack_require__("./node_modules/lodash-es/_root.js");const lodash_es_stubFalse=function stubFalse(){return!1};module=__webpack_require__.hmd(module);var freeExports="object"==typeof exports&&exports&&!exports.nodeType&&exports,freeModule=freeExports&&module&&!module.nodeType&&module,Buffer=freeModule&&freeModule.exports===freeExports?_root.Z.Buffer:void 0;const lodash_es_isBuffer=(Buffer?Buffer.isBuffer:void 0)||lodash_es_stubFalse},"./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"AmpStateContext",{enumerable:!0,get:function(){return AmpStateContext}});const AmpStateContext=__webpack_require__("./node_modules/@swc/helpers/cjs/_interop_require_default.cjs")._(__webpack_require__("./node_modules/next/dist/compiled/react/index.js")).default.createContext({})},"./node_modules/next/dist/shared/lib/amp-mode.js":(__unused_webpack_module,exports)=>{"use strict";function isInAmpMode(param){let{ampFirst=!1,hybrid=!1,hasQuery=!1}=void 0===param?{}:param;return ampFirst||hybrid&&hasQuery}Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"isInAmpMode",{enumerable:!0,get:function(){return isInAmpMode}})},"./node_modules/next/dist/shared/lib/head.js":(module,exports,__webpack_require__)=>{var process=__webpack_require__("./node_modules/process/browser.js");Object.defineProperty(exports,"__esModule",{value:!0}),function _export(target,all){for(var name in all)Object.defineProperty(target,name,{enumerable:!0,get:all[name]})}(exports,{default:function(){return _default},defaultHead:function(){return defaultHead}});const _interop_require_default=__webpack_require__("./node_modules/@swc/helpers/cjs/_interop_require_default.cjs"),_interop_require_wildcard=__webpack_require__("./node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs"),_jsxruntime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),_react=_interop_require_wildcard._(__webpack_require__("./node_modules/next/dist/compiled/react/index.js")),_sideeffect=_interop_require_default._(__webpack_require__("./node_modules/next/dist/shared/lib/side-effect.js")),_ampcontextsharedruntime=__webpack_require__("./node_modules/next/dist/shared/lib/amp-context.shared-runtime.js"),_headmanagercontextsharedruntime=__webpack_require__("./node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.js"),_ampmode=__webpack_require__("./node_modules/next/dist/shared/lib/amp-mode.js");__webpack_require__("./node_modules/next/dist/shared/lib/utils/warn-once.js");function defaultHead(inAmpMode){void 0===inAmpMode&&(inAmpMode=!1);const head=[(0,_jsxruntime.jsx)("meta",{charSet:"utf-8"})];return inAmpMode||head.push((0,_jsxruntime.jsx)("meta",{name:"viewport",content:"width=device-width"})),head}function onlyReactElement(list,child){return"string"==typeof child||"number"==typeof child?list:child.type===_react.default.Fragment?list.concat(_react.default.Children.toArray(child.props.children).reduce(((fragmentList,fragmentChild)=>"string"==typeof fragmentChild||"number"==typeof fragmentChild?fragmentList:fragmentList.concat(fragmentChild)),[])):list.concat(child)}const METATYPES=["name","httpEquiv","charSet","itemProp"];function reduceComponents(headChildrenElements,props){const{inAmpMode}=props;return headChildrenElements.reduce(onlyReactElement,[]).reverse().concat(defaultHead(inAmpMode).reverse()).filter(function unique(){const keys=new Set,tags=new Set,metaTypes=new Set,metaCategories={};return h=>{let isUnique=!0,hasKey=!1;if(h.key&&"number"!=typeof h.key&&h.key.indexOf("$")>0){hasKey=!0;const key=h.key.slice(h.key.indexOf("$")+1);keys.has(key)?isUnique=!1:keys.add(key)}switch(h.type){case"title":case"base":tags.has(h.type)?isUnique=!1:tags.add(h.type);break;case"meta":for(let i=0,len=METATYPES.length;i<len;i++){const metatype=METATYPES[i];if(h.props.hasOwnProperty(metatype))if("charSet"===metatype)metaTypes.has(metatype)?isUnique=!1:metaTypes.add(metatype);else{const category=h.props[metatype],categories=metaCategories[metatype]||new Set;"name"===metatype&&hasKey||!categories.has(category)?(categories.add(category),metaCategories[metatype]=categories):isUnique=!1}}}return isUnique}}()).reverse().map(((c,i)=>{const key=c.key||i;if(process.env.__NEXT_OPTIMIZE_FONTS&&!inAmpMode&&"link"===c.type&&c.props.href&&["https://fonts.googleapis.com/css","https://use.typekit.net/"].some((url=>c.props.href.startsWith(url)))){const newProps={...c.props||{}};return newProps["data-href"]=newProps.href,newProps.href=void 0,newProps["data-optimized-fonts"]=!0,_react.default.cloneElement(c,newProps)}return _react.default.cloneElement(c,{key})}))}const _default=function Head(param){let{children}=param;const ampState=(0,_react.useContext)(_ampcontextsharedruntime.AmpStateContext),headManager=(0,_react.useContext)(_headmanagercontextsharedruntime.HeadManagerContext);return(0,_jsxruntime.jsx)(_sideeffect.default,{reduceComponentsToState:reduceComponents,headManager,inAmpMode:(0,_ampmode.isInAmpMode)(ampState),children})};("function"==typeof exports.default||"object"==typeof exports.default&&null!==exports.default)&&void 0===exports.default.__esModule&&(Object.defineProperty(exports.default,"__esModule",{value:!0}),Object.assign(exports.default,exports),module.exports=exports.default)},"./node_modules/next/dist/shared/lib/side-effect.js":(__unused_webpack_module,exports,__webpack_require__)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"default",{enumerable:!0,get:function(){return SideEffect}});const _react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js"),isServer="undefined"==typeof window,useClientOnlyLayoutEffect=isServer?()=>{}:_react.useLayoutEffect,useClientOnlyEffect=isServer?()=>{}:_react.useEffect;function SideEffect(props){const{headManager,reduceComponentsToState}=props;function emitChange(){if(headManager&&headManager.mountedInstances){const headElements=_react.Children.toArray(Array.from(headManager.mountedInstances).filter(Boolean));headManager.updateHead(reduceComponentsToState(headElements,props))}}var _headManager_mountedInstances;isServer&&(null==headManager||null==(_headManager_mountedInstances=headManager.mountedInstances)||_headManager_mountedInstances.add(props.children),emitChange());return useClientOnlyLayoutEffect((()=>{var _headManager_mountedInstances;return null==headManager||null==(_headManager_mountedInstances=headManager.mountedInstances)||_headManager_mountedInstances.add(props.children),()=>{var _headManager_mountedInstances;null==headManager||null==(_headManager_mountedInstances=headManager.mountedInstances)||_headManager_mountedInstances.delete(props.children)}})),useClientOnlyLayoutEffect((()=>(headManager&&(headManager._pendingUpdate=emitChange),()=>{headManager&&(headManager._pendingUpdate=emitChange)}))),useClientOnlyEffect((()=>(headManager&&headManager._pendingUpdate&&(headManager._pendingUpdate(),headManager._pendingUpdate=null),()=>{headManager&&headManager._pendingUpdate&&(headManager._pendingUpdate(),headManager._pendingUpdate=null)}))),null}},"./node_modules/next/dist/shared/lib/utils/warn-once.js":(__unused_webpack_module,exports)=>{"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),Object.defineProperty(exports,"warnOnce",{enumerable:!0,get:function(){return warnOnce}});let warnOnce=_=>{}},"./node_modules/next/head.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/next/dist/shared/lib/head.js")},"./node_modules/property-expr/index.js":module=>{"use strict";function Cache(maxSize){this._maxSize=maxSize,this.clear()}Cache.prototype.clear=function(){this._size=0,this._values=Object.create(null)},Cache.prototype.get=function(key){return this._values[key]},Cache.prototype.set=function(key,value){return this._size>=this._maxSize&&this.clear(),key in this._values||this._size++,this._values[key]=value};var SPLIT_REGEX=/[^.^\]^[]+|(?=\[\]|\.\.)/g,DIGIT_REGEX=/^\d+$/,LEAD_DIGIT_REGEX=/^\d/,SPEC_CHAR_REGEX=/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g,CLEAN_QUOTES_REGEX=/^\s*(['"]?)(.*?)(\1)\s*$/,pathCache=new Cache(512),setCache=new Cache(512),getCache=new Cache(512);function normalizePath(path){return pathCache.get(path)||pathCache.set(path,split(path).map((function(part){return part.replace(CLEAN_QUOTES_REGEX,"$2")})))}function split(path){return path.match(SPLIT_REGEX)||[""]}function isQuoted(str){return"string"==typeof str&&str&&-1!==["'",'"'].indexOf(str.charAt(0))}function shouldBeQuoted(part){return!isQuoted(part)&&(function hasLeadingNumber(part){return part.match(LEAD_DIGIT_REGEX)&&!part.match(DIGIT_REGEX)}(part)||function hasSpecialChars(part){return SPEC_CHAR_REGEX.test(part)}(part))}module.exports={Cache,split,normalizePath,setter:function(path){var parts=normalizePath(path);return setCache.get(path)||setCache.set(path,(function setter(obj,value){for(var index=0,len=parts.length,data=obj;index<len-1;){var part=parts[index];if("__proto__"===part||"constructor"===part||"prototype"===part)return obj;data=data[parts[index++]]}data[parts[index]]=value}))},getter:function(path,safe){var parts=normalizePath(path);return getCache.get(path)||getCache.set(path,(function getter(data){for(var index=0,len=parts.length;index<len;){if(null==data&&safe)return;data=data[parts[index++]]}return data}))},join:function(segments){return segments.reduce((function(path,part){return path+(isQuoted(part)||DIGIT_REGEX.test(part)?"["+part+"]":(path?".":"")+part)}),"")},forEach:function(path,cb,thisArg){!function forEach(parts,iter,thisArg){var part,idx,isArray,isBracket,len=parts.length;for(idx=0;idx<len;idx++)(part=parts[idx])&&(shouldBeQuoted(part)&&(part='"'+part+'"'),isArray=!(isBracket=isQuoted(part))&&/^\d+$/.test(part),iter.call(thisArg,part,isBracket,isArray,idx,parts))}(Array.isArray(path)?path:split(path),cb,thisArg)}}},"./node_modules/react-fast-compare/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";var console=__webpack_require__("./node_modules/console-browserify/index.js"),isArray=Array.isArray,keyList=Object.keys,hasProp=Object.prototype.hasOwnProperty,hasElementType="undefined"!=typeof Element;function equal(a,b){if(a===b)return!0;if(a&&b&&"object"==typeof a&&"object"==typeof b){var i,length,key,arrA=isArray(a),arrB=isArray(b);if(arrA&&arrB){if((length=a.length)!=b.length)return!1;for(i=length;0!=i--;)if(!equal(a[i],b[i]))return!1;return!0}if(arrA!=arrB)return!1;var dateA=a instanceof Date,dateB=b instanceof Date;if(dateA!=dateB)return!1;if(dateA&&dateB)return a.getTime()==b.getTime();var regexpA=a instanceof RegExp,regexpB=b instanceof RegExp;if(regexpA!=regexpB)return!1;if(regexpA&&regexpB)return a.toString()==b.toString();var keys=keyList(a);if((length=keys.length)!==keyList(b).length)return!1;for(i=length;0!=i--;)if(!hasProp.call(b,keys[i]))return!1;if(hasElementType&&a instanceof Element&&b instanceof Element)return a===b;for(i=length;0!=i--;)if(!("_owner"===(key=keys[i])&&a.$$typeof||equal(a[key],b[key])))return!1;return!0}return a!=a&&b!=b}module.exports=function exportedEqual(a,b){try{return equal(a,b)}catch(error){if(error.message&&error.message.match(/stack|recursion/i)||-2146828260===error.number)return console.warn("Warning: react-fast-compare does not handle circular references.",error.name,error.message),!1;throw error}}},"./node_modules/react-is/cjs/react-is.production.min.js":(__unused_webpack_module,exports)=>{"use strict";var b="function"==typeof Symbol&&Symbol.for,c=b?Symbol.for("react.element"):60103,d=b?Symbol.for("react.portal"):60106,e=b?Symbol.for("react.fragment"):60107,f=b?Symbol.for("react.strict_mode"):60108,g=b?Symbol.for("react.profiler"):60114,h=b?Symbol.for("react.provider"):60109,k=b?Symbol.for("react.context"):60110,l=b?Symbol.for("react.async_mode"):60111,m=b?Symbol.for("react.concurrent_mode"):60111,n=b?Symbol.for("react.forward_ref"):60112,p=b?Symbol.for("react.suspense"):60113,q=b?Symbol.for("react.suspense_list"):60120,r=b?Symbol.for("react.memo"):60115,t=b?Symbol.for("react.lazy"):60116,v=b?Symbol.for("react.block"):60121,w=b?Symbol.for("react.fundamental"):60117,x=b?Symbol.for("react.responder"):60118,y=b?Symbol.for("react.scope"):60119;function z(a){if("object"==typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l,exports.ConcurrentMode=m,exports.ContextConsumer=k,exports.ContextProvider=h,exports.Element=c,exports.ForwardRef=n,exports.Fragment=e,exports.Lazy=t,exports.Memo=r,exports.Portal=d,exports.Profiler=g,exports.StrictMode=f,exports.Suspense=p,exports.isAsyncMode=function(a){return A(a)||z(a)===l},exports.isConcurrentMode=A,exports.isContextConsumer=function(a){return z(a)===k},exports.isContextProvider=function(a){return z(a)===h},exports.isElement=function(a){return"object"==typeof a&&null!==a&&a.$$typeof===c},exports.isForwardRef=function(a){return z(a)===n},exports.isFragment=function(a){return z(a)===e},exports.isLazy=function(a){return z(a)===t},exports.isMemo=function(a){return z(a)===r},exports.isPortal=function(a){return z(a)===d},exports.isProfiler=function(a){return z(a)===g},exports.isStrictMode=function(a){return z(a)===f},exports.isSuspense=function(a){return z(a)===p},exports.isValidElementType=function(a){return"string"==typeof a||"function"==typeof a||a===e||a===m||a===g||a===f||a===p||a===q||"object"==typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)},exports.typeOf=z},"./node_modules/react-is/index.js":(module,__unused_webpack_exports,__webpack_require__)=>{"use strict";module.exports=__webpack_require__("./node_modules/react-is/cjs/react-is.production.min.js")},"./node_modules/tiny-case/index.js":module=>{const reWords=/[A-Z\xc0-\xd6\xd8-\xde]?[a-z\xdf-\xf6\xf8-\xff]+(?:['’](?:d|ll|m|re|s|t|ve))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde]|$)|(?:[A-Z\xc0-\xd6\xd8-\xde]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:D|LL|M|RE|S|T|VE))?(?=[\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000]|[A-Z\xc0-\xd6\xd8-\xde](?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])|$)|[A-Z\xc0-\xd6\xd8-\xde]?(?:[a-z\xdf-\xf6\xf8-\xff]|[^\ud800-\udfff\xac\xb1\xd7\xf7\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\xbf\u2000-\u206f \t\x0b\f\xa0\ufeff\n\r\u2028\u2029\u1680\u180e\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200a\u202f\u205f\u3000\d+\u2700-\u27bfa-z\xdf-\xf6\xf8-\xffA-Z\xc0-\xd6\xd8-\xde])+(?:['’](?:d|ll|m|re|s|t|ve))?|[A-Z\xc0-\xd6\xd8-\xde]+(?:['’](?:D|LL|M|RE|S|T|VE))?|\d*(?:1ST|2ND|3RD|(?![123])\dTH)(?=\b|[a-z_])|\d*(?:1st|2nd|3rd|(?![123])\dth)(?=\b|[A-Z_])|\d+|(?:[\u2700-\u27bf]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?(?:\u200d(?:[^\ud800-\udfff]|(?:\ud83c[\udde6-\uddff]){2}|[\ud800-\udbff][\udc00-\udfff])[\ufe0e\ufe0f]?(?:[\u0300-\u036f\ufe20-\ufe2f\u20d0-\u20ff]|\ud83c[\udffb-\udfff])?)*/g,words=str=>str.match(reWords)||[],upperFirst=str=>str[0].toUpperCase()+str.slice(1),join=(str,d)=>words(str).join(d).toLowerCase(),camelCase=str=>words(str).reduce(((acc,next)=>`${acc}${acc?next[0].toUpperCase()+next.slice(1).toLowerCase():next.toLowerCase()}`),"");module.exports={words,upperFirst,camelCase,pascalCase:str=>upperFirst(camelCase(str)),snakeCase:str=>join(str,"_"),kebabCase:str=>join(str,"-"),sentenceCase:str=>upperFirst(join(str," ")),titleCase:str=>words(str).map(upperFirst).join(" ")}},"./node_modules/toposort/index.js":module=>{function toposort(nodes,edges){var cursor=nodes.length,sorted=new Array(cursor),visited={},i=cursor,outgoingEdges=function makeOutgoingEdges(arr){for(var edges=new Map,i=0,len=arr.length;i<len;i++){var edge=arr[i];edges.has(edge[0])||edges.set(edge[0],new Set),edges.has(edge[1])||edges.set(edge[1],new Set),edges.get(edge[0]).add(edge[1])}return edges}(edges),nodesHash=function makeNodesHash(arr){for(var res=new Map,i=0,len=arr.length;i<len;i++)res.set(arr[i],i);return res}(nodes);for(edges.forEach((function(edge){if(!nodesHash.has(edge[0])||!nodesHash.has(edge[1]))throw new Error("Unknown node. There is an unknown node in the supplied edges.")}));i--;)visited[i]||visit(nodes[i],i,new Set);return sorted;function visit(node,i,predecessors){if(predecessors.has(node)){var nodeRep;try{nodeRep=", node was:"+JSON.stringify(node)}catch(e){nodeRep=""}throw new Error("Cyclic dependency"+nodeRep)}if(!nodesHash.has(node))throw new Error("Found unknown node. Make sure to provided all involved nodes. Unknown node: "+JSON.stringify(node));if(!visited[i]){visited[i]=!0;var outgoing=outgoingEdges.get(node)||new Set;if(i=(outgoing=Array.from(outgoing)).length){predecessors.add(node);do{var child=outgoing[--i];visit(child,nodesHash.get(child),predecessors)}while(i);predecessors.delete(node)}sorted[--cursor]=node}}}module.exports=function(edges){return toposort(function uniqueNodes(arr){for(var res=new Set,i=0,len=arr.length;i<len;i++){var edge=arr[i];res.add(edge[0]),res.add(edge[1])}return Array.from(res)}(edges),edges)},module.exports.array=toposort},"./node_modules/vitest/dist/chunks/vi.nSCvwQ7l.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{a:()=>globalExpect});var process=__webpack_require__("./node_modules/process/browser.js"),h=Object.entries({reset:[0,0],bold:[1,22,"[22m[1m"],dim:[2,22,"[22m[2m"],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]});function a(n){return String(n)}a.open="",a.close="";var s=function p(n=!1){let e=function C(n=!1){let e=void 0!==process?process:void 0,i=(null==e?void 0:e.env)||{},g=(null==e?void 0:e.argv)||[];return!("NO_COLOR"in i||g.includes("--no-color"))&&("FORCE_COLOR"in i||g.includes("--color")||"win32"===(null==e?void 0:e.platform)||n&&"dumb"!==i.TERM||"CI"in i)||"undefined"!=typeof window&&!!window.chrome}(n),g=(r,t,c=r)=>{let o=l=>{let s=String(l),b=s.indexOf(t,r.length);return~b?r+((r,t,c,o)=>{let l="",s=0;do{l+=r.substring(s,o)+c,s=o+t.length,o=r.indexOf(t,s)}while(~o);return l+r.substring(s)})(s,t,c,b)+t:r+s+t};return o.open=r,o.close=t,o},u={isColorSupported:e},d=r=>`[${r}m`;for(let[r,t]of h)u[r]=e?g(d(t[0]),d(t[1]),t[2]):a;return u}();function _mergeNamespaces(n,m){return m.forEach((function(e){e&&"string"!=typeof e&&!Array.isArray(e)&&Object.keys(e).forEach((function(k){if("default"!==k&&!(k in n)){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}}))})),Object.freeze(n)}function printIteratorEntries(iterator,config,indentation,depth,refs,printer,separator=": "){let result="",width=0,current=iterator.next();if(!current.done){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(;!current.done;){if(result+=indentationNext,width++===config.maxWidth){result+="…";break}result+=printer(current.value[0],config,indentationNext,depth,refs)+separator+printer(current.value[1],config,indentationNext,depth,refs),current=iterator.next(),current.done?config.min||(result+=","):result+=`,${config.spacingInner}`}result+=config.spacingOuter+indentation}return result}function printIteratorValues(iterator,config,indentation,depth,refs,printer){let result="",width=0,current=iterator.next();if(!current.done){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(;!current.done;){if(result+=indentationNext,width++===config.maxWidth){result+="…";break}result+=printer(current.value,config,indentationNext,depth,refs),current=iterator.next(),current.done?config.min||(result+=","):result+=`,${config.spacingInner}`}result+=config.spacingOuter+indentation}return result}function printListItems(list,config,indentation,depth,refs,printer){let result="";const isDataView=l=>l instanceof DataView,length=isDataView(list=list instanceof ArrayBuffer?new DataView(list):list)?list.byteLength:list.length;if(length>0){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(let i=0;i<length;i++){if(result+=indentationNext,i===config.maxWidth){result+="…";break}(isDataView(list)||i in list)&&(result+=printer(isDataView(list)?list.getInt8(i):list[i],config,indentationNext,depth,refs)),i<length-1?result+=`,${config.spacingInner}`:config.min||(result+=",")}result+=config.spacingOuter+indentation}return result}function printObjectProperties(val,config,indentation,depth,refs,printer){let result="";const keys=function getKeysOfEnumerableProperties(object,compareKeys){const rawKeys=Object.keys(object),keys=null===compareKeys?rawKeys:rawKeys.sort(compareKeys);if(Object.getOwnPropertySymbols)for(const symbol of Object.getOwnPropertySymbols(object))Object.getOwnPropertyDescriptor(object,symbol).enumerable&&keys.push(symbol);return keys}(val,config.compareKeys);if(keys.length>0){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(let i=0;i<keys.length;i++){const key=keys[i];result+=`${indentationNext+printer(key,config,indentationNext,depth,refs)}: ${printer(val[key],config,indentationNext,depth,refs)}`,i<keys.length-1?result+=`,${config.spacingInner}`:config.min||(result+=",")}result+=config.spacingOuter+indentation}return result}const asymmetricMatcher="function"==typeof Symbol&&Symbol.for?Symbol.for("jest.asymmetricMatcher"):1267621,plugin$5={serialize:(val,config,indentation,depth,refs,printer)=>{const stringedValue=val.toString();if("ArrayContaining"===stringedValue||"ArrayNotContaining"===stringedValue)return++depth>config.maxDepth?`[${stringedValue}]`:`${stringedValue+" "}[${printListItems(val.sample,config,indentation,depth,refs,printer)}]`;if("ObjectContaining"===stringedValue||"ObjectNotContaining"===stringedValue)return++depth>config.maxDepth?`[${stringedValue}]`:`${stringedValue+" "}{${printObjectProperties(val.sample,config,indentation,depth,refs,printer)}}`;if("StringMatching"===stringedValue||"StringNotMatching"===stringedValue)return stringedValue+" "+printer(val.sample,config,indentation,depth,refs);if("StringContaining"===stringedValue||"StringNotContaining"===stringedValue)return stringedValue+" "+printer(val.sample,config,indentation,depth,refs);if("function"!=typeof val.toAsymmetricMatcher)throw new TypeError(`Asymmetric matcher ${val.constructor.name} does not implement toAsymmetricMatcher()`);return val.toAsymmetricMatcher()},test:val=>val&&val.$$typeof===asymmetricMatcher},OBJECT_NAMES=new Set(["DOMStringMap","NamedNodeMap"]),ARRAY_REGEXP=/^(?:HTML\w*Collection|NodeList)$/;const plugin$4={serialize:(collection,config,indentation,depth,refs,printer)=>{const name=collection.constructor.name;return++depth>config.maxDepth?`[${name}]`:(config.min?"":name+" ")+(OBJECT_NAMES.has(name)?`{${printObjectProperties(function isNamedNodeMap(collection){return"NamedNodeMap"===collection.constructor.name}(collection)?[...collection].reduce(((props,attribute)=>(props[attribute.name]=attribute.value,props)),{}):{...collection},config,indentation,depth,refs,printer)}}`:`[${printListItems([...collection],config,indentation,depth,refs,printer)}]`)},test:val=>val&&val.constructor&&!!val.constructor.name&&function testName(name){return OBJECT_NAMES.has(name)||ARRAY_REGEXP.test(name)}(val.constructor.name)};function escapeHTML(str){return str.replaceAll("<","&lt;").replaceAll(">","&gt;")}function printProps(keys,props,config,indentation,depth,refs,printer){const indentationNext=indentation+config.indent,colors=config.colors;return keys.map((key=>{const value=props[key];let printed=printer(value,config,indentationNext,depth,refs);return"string"!=typeof value&&(printed.includes("\n")&&(printed=config.spacingOuter+indentationNext+printed+config.spacingOuter+indentation),printed=`{${printed}}`),`${config.spacingInner+indentation+colors.prop.open+key+colors.prop.close}=${colors.value.open}${printed}${colors.value.close}`})).join("")}function printChildren(children,config,indentation,depth,refs,printer){return children.map((child=>config.spacingOuter+indentation+("string"==typeof child?printText(child,config):printer(child,config,indentation,depth,refs)))).join("")}function printText(text,config){const contentColor=config.colors.content;return contentColor.open+escapeHTML(text)+contentColor.close}function printElement(type,printedProps,printedChildren,config,indentation){const tagColor=config.colors.tag;return`${tagColor.open}<${type}${printedProps&&tagColor.close+printedProps+config.spacingOuter+indentation+tagColor.open}${printedChildren?`>${tagColor.close}${printedChildren}${config.spacingOuter}${indentation}${tagColor.open}</${type}`:(printedProps&&!config.min?"":" ")+"/"}>${tagColor.close}`}function printElementAsLeaf(type,config){const tagColor=config.colors.tag;return`${tagColor.open}<${type}${tagColor.close} …${tagColor.open} />${tagColor.close}`}const ELEMENT_REGEXP=/^(?:(?:HTML|SVG)\w*)?Element$/;function nodeIsFragment(node){return 11===node.nodeType}const plugin$3={serialize:(node,config,indentation,depth,refs,printer)=>{if(function nodeIsText(node){return 3===node.nodeType}(node))return printText(node.data,config);if(function nodeIsComment(node){return 8===node.nodeType}(node))return function printComment(comment,config){const commentColor=config.colors.comment;return`${commentColor.open}\x3c!--${escapeHTML(comment)}--\x3e${commentColor.close}`}(node.data,config);const type=nodeIsFragment(node)?"DocumentFragment":node.tagName.toLowerCase();return++depth>config.maxDepth?printElementAsLeaf(type,config):printElement(type,printProps(nodeIsFragment(node)?[]:Array.from(node.attributes,(attr=>attr.name)).sort(),nodeIsFragment(node)?{}:[...node.attributes].reduce(((props,attribute)=>(props[attribute.name]=attribute.value,props)),{}),config,indentation+config.indent,depth,refs,printer),printChildren(Array.prototype.slice.call(node.childNodes||node.children),config,indentation+config.indent,depth,refs,printer),config,indentation)},test:val=>{var _a;return(null==(_a=null==val?void 0:val.constructor)?void 0:_a.name)&&function testNode(val){const constructorName=val.constructor.name,{nodeType,tagName}=val,isCustomElement="string"==typeof tagName&&tagName.includes("-")||function testHasAttribute(val){try{return"function"==typeof val.hasAttribute&&val.hasAttribute("is")}catch{return!1}}(val);return 1===nodeType&&(ELEMENT_REGEXP.test(constructorName)||isCustomElement)||3===nodeType&&"Text"===constructorName||8===nodeType&&"Comment"===constructorName||11===nodeType&&"DocumentFragment"===constructorName}(val)}},getImmutableName=name=>`Immutable.${name}`,printAsLeaf=name=>`[${name}]`;function printImmutableValues(val,config,indentation,depth,refs,printer,type){return++depth>config.maxDepth?printAsLeaf(getImmutableName(type)):`${getImmutableName(type)+" "}[${printIteratorValues(val.values(),config,indentation,depth,refs,printer)}]`}const plugin$2={serialize:(val,config,indentation,depth,refs,printer)=>val["@@__IMMUTABLE_MAP__@@"]?function printImmutableEntries(val,config,indentation,depth,refs,printer,type){return++depth>config.maxDepth?printAsLeaf(getImmutableName(type)):`${getImmutableName(type)+" "}{${printIteratorEntries(val.entries(),config,indentation,depth,refs,printer)}}`}(val,config,indentation,depth,refs,printer,val["@@__IMMUTABLE_ORDERED__@@"]?"OrderedMap":"Map"):val["@@__IMMUTABLE_LIST__@@"]?printImmutableValues(val,config,indentation,depth,refs,printer,"List"):val["@@__IMMUTABLE_SET__@@"]?printImmutableValues(val,config,indentation,depth,refs,printer,val["@@__IMMUTABLE_ORDERED__@@"]?"OrderedSet":"Set"):val["@@__IMMUTABLE_STACK__@@"]?printImmutableValues(val,config,indentation,depth,refs,printer,"Stack"):val["@@__IMMUTABLE_SEQ__@@"]?function printImmutableSeq(val,config,indentation,depth,refs,printer){const name=getImmutableName("Seq");return++depth>config.maxDepth?printAsLeaf(name):val["@@__IMMUTABLE_KEYED__@@"]?`${name+" "}{${val._iter||val._object?printIteratorEntries(val.entries(),config,indentation,depth,refs,printer):"…"}}`:`${name+" "}[${val._iter||val._array||val._collection||val._iterable?printIteratorValues(val.values(),config,indentation,depth,refs,printer):"…"}]`}(val,config,indentation,depth,refs,printer):function printImmutableRecord(val,config,indentation,depth,refs,printer){const name=getImmutableName(val._name||"Record");return++depth>config.maxDepth?printAsLeaf(name):`${name+" "}{${printIteratorEntries(function getRecordEntries(val){let i=0;return{next(){if(i<val._keys.length){const key=val._keys[i++];return{done:!1,value:[key,val.get(key)]}}return{done:!0,value:void 0}}}}(val),config,indentation,depth,refs,printer)}}`}(val,config,indentation,depth,refs,printer),test:val=>val&&(!0===val["@@__IMMUTABLE_ITERABLE__@@"]||!0===val["@@__IMMUTABLE_RECORD__@@"])};function dist_getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var hasRequiredReactIs_production,reactIs$1={exports:{}},reactIs_production={};var hasRequiredReactIs$1;function requireReactIs$1(){return hasRequiredReactIs$1||(hasRequiredReactIs$1=1,reactIs$1.exports=function requireReactIs_production(){if(hasRequiredReactIs_production)return reactIs_production;hasRequiredReactIs_production=1;var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_PORTAL_TYPE=Symbol.for("react.portal"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment"),REACT_STRICT_MODE_TYPE=Symbol.for("react.strict_mode"),REACT_PROFILER_TYPE=Symbol.for("react.profiler"),REACT_CONSUMER_TYPE=Symbol.for("react.consumer"),REACT_CONTEXT_TYPE=Symbol.for("react.context"),REACT_FORWARD_REF_TYPE=Symbol.for("react.forward_ref"),REACT_SUSPENSE_TYPE=Symbol.for("react.suspense"),REACT_SUSPENSE_LIST_TYPE=Symbol.for("react.suspense_list"),REACT_MEMO_TYPE=Symbol.for("react.memo"),REACT_LAZY_TYPE=Symbol.for("react.lazy"),REACT_OFFSCREEN_TYPE=Symbol.for("react.offscreen"),REACT_CLIENT_REFERENCE=Symbol.for("react.client.reference");function typeOf(object){if("object"==typeof object&&null!==object){var $$typeof=object.$$typeof;switch($$typeof){case REACT_ELEMENT_TYPE:switch(object=object.type){case REACT_FRAGMENT_TYPE:case REACT_PROFILER_TYPE:case REACT_STRICT_MODE_TYPE:case REACT_SUSPENSE_TYPE:case REACT_SUSPENSE_LIST_TYPE:return object;default:switch(object=object&&object.$$typeof){case REACT_CONTEXT_TYPE:case REACT_FORWARD_REF_TYPE:case REACT_LAZY_TYPE:case REACT_MEMO_TYPE:case REACT_CONSUMER_TYPE:return object;default:return $$typeof}}case REACT_PORTAL_TYPE:return $$typeof}}}return reactIs_production.ContextConsumer=REACT_CONSUMER_TYPE,reactIs_production.ContextProvider=REACT_CONTEXT_TYPE,reactIs_production.Element=REACT_ELEMENT_TYPE,reactIs_production.ForwardRef=REACT_FORWARD_REF_TYPE,reactIs_production.Fragment=REACT_FRAGMENT_TYPE,reactIs_production.Lazy=REACT_LAZY_TYPE,reactIs_production.Memo=REACT_MEMO_TYPE,reactIs_production.Portal=REACT_PORTAL_TYPE,reactIs_production.Profiler=REACT_PROFILER_TYPE,reactIs_production.StrictMode=REACT_STRICT_MODE_TYPE,reactIs_production.Suspense=REACT_SUSPENSE_TYPE,reactIs_production.SuspenseList=REACT_SUSPENSE_LIST_TYPE,reactIs_production.isContextConsumer=function(object){return typeOf(object)===REACT_CONSUMER_TYPE},reactIs_production.isContextProvider=function(object){return typeOf(object)===REACT_CONTEXT_TYPE},reactIs_production.isElement=function(object){return"object"==typeof object&&null!==object&&object.$$typeof===REACT_ELEMENT_TYPE},reactIs_production.isForwardRef=function(object){return typeOf(object)===REACT_FORWARD_REF_TYPE},reactIs_production.isFragment=function(object){return typeOf(object)===REACT_FRAGMENT_TYPE},reactIs_production.isLazy=function(object){return typeOf(object)===REACT_LAZY_TYPE},reactIs_production.isMemo=function(object){return typeOf(object)===REACT_MEMO_TYPE},reactIs_production.isPortal=function(object){return typeOf(object)===REACT_PORTAL_TYPE},reactIs_production.isProfiler=function(object){return typeOf(object)===REACT_PROFILER_TYPE},reactIs_production.isStrictMode=function(object){return typeOf(object)===REACT_STRICT_MODE_TYPE},reactIs_production.isSuspense=function(object){return typeOf(object)===REACT_SUSPENSE_TYPE},reactIs_production.isSuspenseList=function(object){return typeOf(object)===REACT_SUSPENSE_LIST_TYPE},reactIs_production.isValidElementType=function(type){return"string"==typeof type||"function"==typeof type||type===REACT_FRAGMENT_TYPE||type===REACT_PROFILER_TYPE||type===REACT_STRICT_MODE_TYPE||type===REACT_SUSPENSE_TYPE||type===REACT_SUSPENSE_LIST_TYPE||type===REACT_OFFSCREEN_TYPE||"object"==typeof type&&null!==type&&(type.$$typeof===REACT_LAZY_TYPE||type.$$typeof===REACT_MEMO_TYPE||type.$$typeof===REACT_CONTEXT_TYPE||type.$$typeof===REACT_CONSUMER_TYPE||type.$$typeof===REACT_FORWARD_REF_TYPE||type.$$typeof===REACT_CLIENT_REFERENCE||void 0!==type.getModuleId)},reactIs_production.typeOf=typeOf,reactIs_production}()),reactIs$1.exports}var hasRequiredReactIs_production_min,reactIsExports$1=requireReactIs$1(),ReactIs19=_mergeNamespaces({__proto__:null,default:dist_getDefaultExportFromCjs(reactIsExports$1)},[reactIsExports$1]),reactIs={exports:{}},reactIs_production_min={};var hasRequiredReactIs;var reactIsExports=function requireReactIs(){return hasRequiredReactIs||(hasRequiredReactIs=1,reactIs.exports=function requireReactIs_production_min(){if(hasRequiredReactIs_production_min)return reactIs_production_min;hasRequiredReactIs_production_min=1;var u,b=Symbol.for("react.element"),c=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),e=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),h=Symbol.for("react.context"),k=Symbol.for("react.server_context"),l=Symbol.for("react.forward_ref"),m=Symbol.for("react.suspense"),n=Symbol.for("react.suspense_list"),p=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),t=Symbol.for("react.offscreen");function v(a){if("object"==typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}return u=Symbol.for("react.module.reference"),reactIs_production_min.ContextConsumer=h,reactIs_production_min.ContextProvider=g,reactIs_production_min.Element=b,reactIs_production_min.ForwardRef=l,reactIs_production_min.Fragment=d,reactIs_production_min.Lazy=q,reactIs_production_min.Memo=p,reactIs_production_min.Portal=c,reactIs_production_min.Profiler=f,reactIs_production_min.StrictMode=e,reactIs_production_min.Suspense=m,reactIs_production_min.SuspenseList=n,reactIs_production_min.isAsyncMode=function(){return!1},reactIs_production_min.isConcurrentMode=function(){return!1},reactIs_production_min.isContextConsumer=function(a){return v(a)===h},reactIs_production_min.isContextProvider=function(a){return v(a)===g},reactIs_production_min.isElement=function(a){return"object"==typeof a&&null!==a&&a.$$typeof===b},reactIs_production_min.isForwardRef=function(a){return v(a)===l},reactIs_production_min.isFragment=function(a){return v(a)===d},reactIs_production_min.isLazy=function(a){return v(a)===q},reactIs_production_min.isMemo=function(a){return v(a)===p},reactIs_production_min.isPortal=function(a){return v(a)===c},reactIs_production_min.isProfiler=function(a){return v(a)===f},reactIs_production_min.isStrictMode=function(a){return v(a)===e},reactIs_production_min.isSuspense=function(a){return v(a)===m},reactIs_production_min.isSuspenseList=function(a){return v(a)===n},reactIs_production_min.isValidElementType=function(a){return"string"==typeof a||"function"==typeof a||a===d||a===f||a===e||a===m||a===n||a===t||"object"==typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)},reactIs_production_min.typeOf=v,reactIs_production_min}()),reactIs.exports}(),ReactIs18=_mergeNamespaces({__proto__:null,default:dist_getDefaultExportFromCjs(reactIsExports)},[reactIsExports]);const ReactIs=Object.fromEntries(["isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType"].map((m=>[m,v=>ReactIs18[m](v)||ReactIs19[m](v)])));function getChildren(arg,children=[]){if(Array.isArray(arg))for(const item of arg)getChildren(item,children);else null!=arg&&!1!==arg&&""!==arg&&children.push(arg);return children}function getType(element){const type=element.type;if("string"==typeof type)return type;if("function"==typeof type)return type.displayName||type.name||"Unknown";if(ReactIs.isFragment(element))return"React.Fragment";if(ReactIs.isSuspense(element))return"React.Suspense";if("object"==typeof type&&null!==type){if(ReactIs.isContextProvider(element))return"Context.Provider";if(ReactIs.isContextConsumer(element))return"Context.Consumer";if(ReactIs.isForwardRef(element)){if(type.displayName)return type.displayName;const functionName=type.render.displayName||type.render.name||"";return""===functionName?"ForwardRef":`ForwardRef(${functionName})`}if(ReactIs.isMemo(element)){const functionName=type.displayName||type.type.displayName||type.type.name||"";return""===functionName?"Memo":`Memo(${functionName})`}}return"UNDEFINED"}const plugin$1={serialize:(element,config,indentation,depth,refs,printer)=>++depth>config.maxDepth?printElementAsLeaf(getType(element),config):printElement(getType(element),printProps(function getPropKeys$1(element){const{props}=element;return Object.keys(props).filter((key=>"children"!==key&&void 0!==props[key])).sort()}(element),element.props,config,indentation+config.indent,depth,refs,printer),printChildren(getChildren(element.props.children),config,indentation+config.indent,depth,refs,printer),config,indentation),test:val=>null!=val&&ReactIs.isElement(val)},testSymbol="function"==typeof Symbol&&Symbol.for?Symbol.for("react.test.json"):245830487;const dist_plugin={serialize:(object,config,indentation,depth,refs,printer)=>++depth>config.maxDepth?printElementAsLeaf(object.type,config):printElement(object.type,object.props?printProps(function getPropKeys(object){const{props}=object;return props?Object.keys(props).filter((key=>void 0!==props[key])).sort():[]}(object),object.props,config,indentation+config.indent,depth,refs,printer):"",object.children?printChildren(object.children,config,indentation+config.indent,depth,refs,printer):"",config,indentation),test:val=>val&&val.$$typeof===testSymbol},dist_toString=Object.prototype.toString,toISOString=Date.prototype.toISOString,errorToString=Error.prototype.toString,regExpToString=RegExp.prototype.toString;function getConstructorName(val){return"function"==typeof val.constructor&&val.constructor.name||"Object"}const SYMBOL_REGEXP=/^Symbol\((.*)\)(.*)$/,NEWLINE_REGEXP=/\n/g;class PrettyFormatPluginError extends Error{constructor(message,stack){super(message),this.stack=stack,this.name=this.constructor.name}}function printFunction(val,printFunctionName){return printFunctionName?`[Function ${val.name||"anonymous"}]`:"[Function]"}function printSymbol(val){return String(val).replace(SYMBOL_REGEXP,"Symbol($1)")}function printError(val){return`[${errorToString.call(val)}]`}function printBasicValue(val,printFunctionName,escapeRegex,escapeString){if(!0===val||!1===val)return`${val}`;if(void 0===val)return"undefined";if(null===val)return"null";const typeOf=typeof val;if("number"===typeOf)return function printNumber(val){return Object.is(val,-0)?"-0":String(val)}(val);if("bigint"===typeOf)return function printBigInt(val){return String(`${val}n`)}(val);if("string"===typeOf)return escapeString?`"${val.replaceAll(/"|\\/g,"\\$&")}"`:`"${val}"`;if("function"===typeOf)return printFunction(val,printFunctionName);if("symbol"===typeOf)return printSymbol(val);const toStringed=dist_toString.call(val);return"[object WeakMap]"===toStringed?"WeakMap {}":"[object WeakSet]"===toStringed?"WeakSet {}":"[object Function]"===toStringed||"[object GeneratorFunction]"===toStringed?printFunction(val,printFunctionName):"[object Symbol]"===toStringed?printSymbol(val):"[object Date]"===toStringed?Number.isNaN(+val)?"Date { NaN }":toISOString.call(val):"[object Error]"===toStringed?printError(val):"[object RegExp]"===toStringed?escapeRegex?regExpToString.call(val).replaceAll(/[$()*+.?[\\\]^{|}]/g,"\\$&"):regExpToString.call(val):val instanceof Error?printError(val):null}function printComplexValue(val,config,indentation,depth,refs,hasCalledToJSON){if(refs.includes(val))return"[Circular]";(refs=[...refs]).push(val);const hitMaxDepth=++depth>config.maxDepth,min=config.min;if(config.callToJSON&&!hitMaxDepth&&val.toJSON&&"function"==typeof val.toJSON&&!hasCalledToJSON)return printer(val.toJSON(),config,indentation,depth,refs,!0);const toStringed=dist_toString.call(val);return"[object Arguments]"===toStringed?hitMaxDepth?"[Arguments]":`${min?"":"Arguments "}[${printListItems(val,config,indentation,depth,refs,printer)}]`:function isToStringedArrayType(toStringed){return"[object Array]"===toStringed||"[object ArrayBuffer]"===toStringed||"[object DataView]"===toStringed||"[object Float32Array]"===toStringed||"[object Float64Array]"===toStringed||"[object Int8Array]"===toStringed||"[object Int16Array]"===toStringed||"[object Int32Array]"===toStringed||"[object Uint8Array]"===toStringed||"[object Uint8ClampedArray]"===toStringed||"[object Uint16Array]"===toStringed||"[object Uint32Array]"===toStringed}(toStringed)?hitMaxDepth?`[${val.constructor.name}]`:`${min?"":config.printBasicPrototype||"Array"!==val.constructor.name?`${val.constructor.name} `:""}[${printListItems(val,config,indentation,depth,refs,printer)}]`:"[object Map]"===toStringed?hitMaxDepth?"[Map]":`Map {${printIteratorEntries(val.entries(),config,indentation,depth,refs,printer," => ")}}`:"[object Set]"===toStringed?hitMaxDepth?"[Set]":`Set {${printIteratorValues(val.values(),config,indentation,depth,refs,printer)}}`:hitMaxDepth||function isWindow(val){return"undefined"!=typeof window&&val===window}(val)?`[${getConstructorName(val)}]`:`${min?"":config.printBasicPrototype||"Object"!==getConstructorName(val)?`${getConstructorName(val)} `:""}{${printObjectProperties(val,config,indentation,depth,refs,printer)}}`}const ErrorPlugin={test:val=>val&&val instanceof Error,serialize(val,config,indentation,depth,refs,printer2){if(refs.includes(val))return"[Circular]";refs=[...refs,val];const hitMaxDepth=++depth>config.maxDepth,{message,cause,...rest}=val,entries={message,...void 0!==cause?{cause}:{},...val instanceof AggregateError?{errors:val.errors}:{},...rest},name="Error"!==val.name?val.name:getConstructorName(val);return hitMaxDepth?`[${name}]`:`${name} {${printIteratorEntries(Object.entries(entries).values(),config,indentation,depth,refs,printer2)}}`}};function printPlugin(plugin,val,config,indentation,depth,refs){let printed;try{printed=function isNewPlugin(plugin){return null!=plugin.serialize}(plugin)?plugin.serialize(val,config,indentation,depth,refs,printer):plugin.print(val,(valChild=>printer(valChild,config,indentation,depth,refs)),(str=>{const indentationNext=indentation+config.indent;return indentationNext+str.replaceAll(NEWLINE_REGEXP,`\n${indentationNext}`)}),{edgeSpacing:config.spacingOuter,min:config.min,spacing:config.spacingInner},config.colors)}catch(error){throw new PrettyFormatPluginError(error.message,error.stack)}if("string"!=typeof printed)throw new TypeError(`pretty-format: Plugin must return type "string" but instead returned "${typeof printed}".`);return printed}function findPlugin(plugins2,val){for(const plugin of plugins2)try{if(plugin.test(val))return plugin}catch(error){throw new PrettyFormatPluginError(error.message,error.stack)}return null}function printer(val,config,indentation,depth,refs,hasCalledToJSON){const plugin=findPlugin(config.plugins,val);if(null!==plugin)return printPlugin(plugin,val,config,indentation,depth,refs);const basicResult=printBasicValue(val,config.printFunctionName,config.escapeRegex,config.escapeString);return null!==basicResult?basicResult:printComplexValue(val,config,indentation,depth,refs,hasCalledToJSON)}const DEFAULT_THEME={comment:"gray",content:"reset",prop:"yellow",tag:"cyan",value:"green"},DEFAULT_THEME_KEYS=Object.keys(DEFAULT_THEME),DEFAULT_OPTIONS={callToJSON:!0,compareKeys:void 0,escapeRegex:!1,escapeString:!0,highlight:!1,indent:2,maxDepth:Number.POSITIVE_INFINITY,maxWidth:Number.POSITIVE_INFINITY,min:!1,plugins:[],printBasicPrototype:!0,printFunctionName:!0,theme:DEFAULT_THEME};function getPrintFunctionName(options){return(null==options?void 0:options.printFunctionName)??DEFAULT_OPTIONS.printFunctionName}function getEscapeRegex(options){return(null==options?void 0:options.escapeRegex)??DEFAULT_OPTIONS.escapeRegex}function getEscapeString(options){return(null==options?void 0:options.escapeString)??DEFAULT_OPTIONS.escapeString}function getConfig(options){return{callToJSON:(null==options?void 0:options.callToJSON)??DEFAULT_OPTIONS.callToJSON,colors:(null==options?void 0:options.highlight)?DEFAULT_THEME_KEYS.reduce(((colors,key)=>{const value=DEFAULT_THEME[key],color=value&&s[value];if(!color||"string"!=typeof color.close||"string"!=typeof color.open)throw new Error(`pretty-format: Option "theme" has a key "${key}" whose value "${value}" is undefined in ansi-styles.`);return colors[key]=color,colors}),Object.create(null)):DEFAULT_THEME_KEYS.reduce(((colors,key)=>(colors[key]={close:"",open:""},colors)),Object.create(null)),compareKeys:"function"==typeof(null==options?void 0:options.compareKeys)||null===(null==options?void 0:options.compareKeys)?options.compareKeys:DEFAULT_OPTIONS.compareKeys,escapeRegex:getEscapeRegex(options),escapeString:getEscapeString(options),indent:(null==options?void 0:options.min)?"":(indent=(null==options?void 0:options.indent)??DEFAULT_OPTIONS.indent,Array.from({length:indent+1}).join(" ")),maxDepth:(null==options?void 0:options.maxDepth)??DEFAULT_OPTIONS.maxDepth,maxWidth:(null==options?void 0:options.maxWidth)??DEFAULT_OPTIONS.maxWidth,min:(null==options?void 0:options.min)??DEFAULT_OPTIONS.min,plugins:(null==options?void 0:options.plugins)??DEFAULT_OPTIONS.plugins,printBasicPrototype:(null==options?void 0:options.printBasicPrototype)??!0,printFunctionName:getPrintFunctionName(options),spacingInner:(null==options?void 0:options.min)?" ":"\n",spacingOuter:(null==options?void 0:options.min)?"":"\n"};var indent}function format(val,options){if(options&&(function validateOptions(options){for(const key of Object.keys(options))if(!Object.prototype.hasOwnProperty.call(DEFAULT_OPTIONS,key))throw new Error(`pretty-format: Unknown option "${key}".`);if(options.min&&void 0!==options.indent&&0!==options.indent)throw new Error('pretty-format: Options "min" and "indent" cannot be used together.')}(options),options.plugins)){const plugin=findPlugin(options.plugins,val);if(null!==plugin)return printPlugin(plugin,val,getConfig(options),"",0,[])}const basicResult=printBasicValue(val,getPrintFunctionName(options),getEscapeRegex(options),getEscapeString(options));return null!==basicResult?basicResult:printComplexValue(val,getConfig(options),"",0,[])}const plugins={AsymmetricMatcher:plugin$5,DOMCollection:plugin$4,DOMElement:plugin$3,Immutable:plugin$2,ReactElement:plugin$1,ReactTestComponent:dist_plugin,Error:ErrorPlugin},ansiColors={bold:["1","22"],dim:["2","22"],italic:["3","23"],underline:["4","24"],inverse:["7","27"],hidden:["8","28"],strike:["9","29"],black:["30","39"],red:["31","39"],green:["32","39"],yellow:["33","39"],blue:["34","39"],magenta:["35","39"],cyan:["36","39"],white:["37","39"],brightblack:["30;1","39"],brightred:["31;1","39"],brightgreen:["32;1","39"],brightyellow:["33;1","39"],brightblue:["34;1","39"],brightmagenta:["35;1","39"],brightcyan:["36;1","39"],brightwhite:["37;1","39"],grey:["90","39"]},helpers_styles={special:"cyan",number:"yellow",bigint:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",symbol:"green",date:"magenta",regexp:"red"},truncator="…";function colorise(value,styleType){const color=ansiColors[helpers_styles[styleType]]||ansiColors[styleType]||"";return color?`[${color[0]}m${String(value)}[${color[1]}m`:String(value)}function truncate(string,length,tail=truncator){string=String(string);const tailLength=tail.length,stringLength=string.length;if(tailLength>length&&stringLength>tailLength)return tail;if(stringLength>length&&stringLength>tailLength){let end=length-tailLength;return end>0&&function isHighSurrogate(char){return char>="\ud800"&&char<="\udbff"}(string[end-1])&&(end-=1),`${string.slice(0,end)}${tail}`}return string}function inspectList(list,options,inspectItem,separator=", "){inspectItem=inspectItem||options.inspect;const size=list.length;if(0===size)return"";const originalLength=options.truncate;let output="",peek="",truncated="";for(let i=0;i<size;i+=1){const last=i+1===list.length,secondToLast=i+2===list.length;truncated=`${truncator}(${list.length-i})`;const value=list[i];options.truncate=originalLength-output.length-(last?0:separator.length);const string=peek||inspectItem(value,options)+(last?"":separator),nextLength=output.length+string.length,truncatedLength=nextLength+truncated.length;if(last&&nextLength>originalLength&&output.length+truncated.length<=originalLength)break;if(!last&&!secondToLast&&truncatedLength>originalLength)break;if(peek=last?"":inspectItem(list[i+1],options)+(secondToLast?"":separator),!last&&secondToLast&&truncatedLength>originalLength&&nextLength+peek.length>originalLength)break;if(output+=string,!last&&!secondToLast&&nextLength+peek.length>=originalLength){truncated=`${truncator}(${list.length-i-1})`;break}truncated=""}return`${output}${truncated}`}function inspectProperty([key,value],options){return options.truncate-=2,"string"==typeof key?key=function quoteComplexKey(key){return key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)?key:JSON.stringify(key).replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'")}(key):"number"!=typeof key&&(key=`[${options.inspect(key,options)}]`),options.truncate-=key.length,`${key}: ${value=options.inspect(value,options)}`}var Buffer=__webpack_require__("./node_modules/buffer/index.js").Buffer;function inspectTypedArray(array,options){const name=(array=>"function"==typeof Buffer&&array instanceof Buffer?"Buffer":array[Symbol.toStringTag]?array[Symbol.toStringTag]:array.constructor.name)(array);options.truncate-=name.length+4;const nonIndexProperties=Object.keys(array).slice(array.length);if(!array.length&&!nonIndexProperties.length)return`${name}[]`;let output="";for(let i=0;i<array.length;i++){const string=`${options.stylize(truncate(array[i],options.truncate),"number")}${i===array.length-1?"":", "}`;if(options.truncate-=string.length,array[i]!==array.length&&options.truncate<=3){output+=`${truncator}(${array.length-array[i]+1})`;break}output+=string}let propertyContents="";return nonIndexProperties.length&&(propertyContents=inspectList(nonIndexProperties.map((key=>[key,array[key]])),options,inspectProperty)),`${name}[ ${output}${propertyContents?`, ${propertyContents}`:""} ]`}function inspectFunction(func,options){const functionType=func[Symbol.toStringTag]||"Function",name=func.name;return name?options.stylize(`[${functionType} ${truncate(name,options.truncate-11)}]`,"special"):options.stylize(`[${functionType}]`,"special")}function inspectMapEntry([key,value],options){return options.truncate-=4,key=options.inspect(key,options),options.truncate-=key.length,`${key} => ${value=options.inspect(value,options)}`}const number_isNaN=Number.isNaN||(i=>i!=i);function inspectNumber(number,options){return number_isNaN(number)?options.stylize("NaN","number"):number===1/0?options.stylize("Infinity","number"):number===-1/0?options.stylize("-Infinity","number"):0===number?options.stylize(1/number==1/0?"+0":"-0","number"):options.stylize(truncate(String(number),options.truncate),"number")}function inspectBigInt(number,options){let nums=truncate(number.toString(),options.truncate-1);return nums!==truncator&&(nums+="n"),options.stylize(nums,"bigint")}const stringEscapeChars=new RegExp("['\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]","g"),escapeCharacters={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r","'":"\\'","\\":"\\\\"},hex=16,unicodeLength=4;function string_escape(char){return escapeCharacters[char]||`\\u${`0000${char.charCodeAt(0).toString(hex)}`.slice(-unicodeLength)}`}function inspectString(string,options){return stringEscapeChars.test(string)&&(string=string.replace(stringEscapeChars,string_escape)),options.stylize(`'${truncate(string,options.truncate-2)}'`,"string")}function inspectSymbol(value){return"description"in Symbol.prototype?value.description?`Symbol(${value.description})`:"Symbol()":value.toString()}var promise_process=__webpack_require__("./node_modules/process/browser.js");let getPromiseValue=()=>"Promise{…}";try{const{getPromiseDetails,kPending,kRejected}=promise_process.binding("util");Array.isArray(getPromiseDetails(Promise.resolve()))&&(getPromiseValue=(value,options)=>{const[state,innerValue]=getPromiseDetails(value);return state===kPending?"Promise{<pending>}":`Promise${state===kRejected?"!":""}{${options.inspect(innerValue,options)}}`})}catch(notNode){}const promise=getPromiseValue;function inspectObject(object,options){const properties=Object.getOwnPropertyNames(object),symbols=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(object):[];if(0===properties.length&&0===symbols.length)return"{}";if(options.truncate-=4,options.seen=options.seen||[],options.seen.includes(object))return"[Circular]";options.seen.push(object);const propertyContents=inspectList(properties.map((key=>[key,object[key]])),options,inspectProperty),symbolContents=inspectList(symbols.map((key=>[key,object[key]])),options,inspectProperty);options.seen.pop();let sep="";return propertyContents&&symbolContents&&(sep=", "),`{ ${propertyContents}${sep}${symbolContents} }`}const toStringTag=!("undefined"==typeof Symbol||!Symbol.toStringTag)&&Symbol.toStringTag;const errorKeys=["stack","line","column","name","message","fileName","lineNumber","columnNumber","number","description","cause"];function inspectAttribute([key,value],options){return options.truncate-=3,value?`${options.stylize(String(key),"yellow")}=${options.stylize(`"${value}"`,"string")}`:`${options.stylize(String(key),"yellow")}`}function inspectHTMLCollection(collection,options){return inspectList(collection,options,inspectHTML,"\n")}function inspectHTML(element,options){const properties=element.getAttributeNames(),name=element.tagName.toLowerCase(),head=options.stylize(`<${name}`,"special"),headClose=options.stylize(">","special"),tail=options.stylize(`</${name}>`,"special");options.truncate-=2*name.length+5;let propertyContents="";properties.length>0&&(propertyContents+=" ",propertyContents+=inspectList(properties.map((key=>[key,element.getAttribute(key)])),options,inspectAttribute," ")),options.truncate-=propertyContents.length;const truncate=options.truncate;let children=inspectHTMLCollection(element.children,options);return children&&children.length>truncate&&(children=`${truncator}(${element.children.length})`),`${head}${propertyContents}${headClose}${children}${tail}`}const chaiInspect="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("chai/inspect"):"@@chai/inspect";let nodeInspect=!1;try{const nodeUtil=__webpack_require__("?cc9d");nodeInspect=!!nodeUtil.inspect&&nodeUtil.inspect.custom}catch(noNodeInspect){nodeInspect=!1}const constructorMap=new WeakMap,stringTagMap={},baseTypesMap={undefined:(value,options)=>options.stylize("undefined","undefined"),null:(value,options)=>options.stylize("null","null"),boolean:(value,options)=>options.stylize(String(value),"boolean"),Boolean:(value,options)=>options.stylize(String(value),"boolean"),number:inspectNumber,Number:inspectNumber,bigint:inspectBigInt,BigInt:inspectBigInt,string:inspectString,String:inspectString,function:inspectFunction,Function:inspectFunction,symbol:inspectSymbol,Symbol:inspectSymbol,Array:function inspectArray(array,options){const nonIndexProperties=Object.keys(array).slice(array.length);if(!array.length&&!nonIndexProperties.length)return"[]";options.truncate-=4;const listContents=inspectList(array,options);options.truncate-=listContents.length;let propertyContents="";return nonIndexProperties.length&&(propertyContents=inspectList(nonIndexProperties.map((key=>[key,array[key]])),options,inspectProperty)),`[ ${listContents}${propertyContents?`, ${propertyContents}`:""} ]`},Date:function inspectDate(dateObject,options){const stringRepresentation=dateObject.toJSON();if(null===stringRepresentation)return"Invalid Date";const split=stringRepresentation.split("T"),date=split[0];return options.stylize(`${date}T${truncate(split[1],options.truncate-date.length-1)}`,"date")},Map:function inspectMap(map,options){return 0===map.size?"Map{}":(options.truncate-=7,`Map{ ${inspectList(function mapToEntries(map){const entries=[];return map.forEach(((value,key)=>{entries.push([key,value])})),entries}(map),options,inspectMapEntry)} }`)},Set:function inspectSet(set,options){return 0===set.size?"Set{}":(options.truncate-=7,`Set{ ${inspectList(function arrayFromSet(set){const values=[];return set.forEach((value=>{values.push(value)})),values}(set),options)} }`)},RegExp:function inspectRegExp(value,options){const flags=value.toString().split("/")[2],sourceLength=options.truncate-(2+flags.length),source=value.source;return options.stylize(`/${truncate(source,sourceLength)}/${flags}`,"regexp")},Promise:promise,WeakSet:(value,options)=>options.stylize("WeakSet{…}","special"),WeakMap:(value,options)=>options.stylize("WeakMap{…}","special"),Arguments:function inspectArguments(args,options){return 0===args.length?"Arguments[]":(options.truncate-=13,`Arguments[ ${inspectList(args,options)} ]`)},Int8Array:inspectTypedArray,Uint8Array:inspectTypedArray,Uint8ClampedArray:inspectTypedArray,Int16Array:inspectTypedArray,Uint16Array:inspectTypedArray,Int32Array:inspectTypedArray,Uint32Array:inspectTypedArray,Float32Array:inspectTypedArray,Float64Array:inspectTypedArray,Generator:()=>"",DataView:()=>"",ArrayBuffer:()=>"",Error:function error_inspectObject(error,options){const properties=Object.getOwnPropertyNames(error).filter((key=>-1===errorKeys.indexOf(key))),name=error.name;options.truncate-=name.length;let message="";if("string"==typeof error.message?message=truncate(error.message,options.truncate):properties.unshift("message"),message=message?`: ${message}`:"",options.truncate-=message.length+5,options.seen=options.seen||[],options.seen.includes(error))return"[Circular]";options.seen.push(error);const propertyContents=inspectList(properties.map((key=>[key,error[key]])),options,inspectProperty);return`${name}${message}${propertyContents?` { ${propertyContents} }`:""}`},HTMLCollection:inspectHTMLCollection,NodeList:inspectHTMLCollection},inspectCustom=(value,options,type)=>chaiInspect in value&&"function"==typeof value[chaiInspect]?value[chaiInspect](options):nodeInspect&&nodeInspect in value&&"function"==typeof value[nodeInspect]?value[nodeInspect](options.depth,options):"inspect"in value&&"function"==typeof value.inspect?value.inspect(options.depth,options):"constructor"in value&&constructorMap.has(value.constructor)?constructorMap.get(value.constructor)(value,options):stringTagMap[type]?stringTagMap[type](value,options):"",lib_toString=Object.prototype.toString;function inspect(value,opts={}){const options=function normaliseOptions({showHidden=!1,depth=2,colors=!1,customInspect=!0,showProxy=!1,maxArrayLength=1/0,breakLength=1/0,seen=[],truncate=1/0,stylize=String}={},inspect){const options={showHidden:Boolean(showHidden),depth:Number(depth),colors:Boolean(colors),customInspect:Boolean(customInspect),showProxy:Boolean(showProxy),maxArrayLength:Number(maxArrayLength),breakLength:Number(breakLength),truncate:Number(truncate),seen,inspect,stylize};return options.colors&&(options.stylize=colorise),options}(opts,inspect),{customInspect}=options;let type=null===value?"null":typeof value;if("object"===type&&(type=lib_toString.call(value).slice(8,-1)),type in baseTypesMap)return baseTypesMap[type](value,options);if(customInspect&&value){const output=inspectCustom(value,options,type);if(output)return"string"==typeof output?output:inspect(output,options)}const proto=!!value&&Object.getPrototypeOf(value);return proto===Object.prototype||null===proto?inspectObject(value,options):value&&"function"==typeof HTMLElement&&value instanceof HTMLElement?inspectHTML(value,options):"constructor"in value?value.constructor!==Object?function inspectClass(value,options){let name="";return toStringTag&&toStringTag in value&&(name=value[toStringTag]),name=name||value.constructor.name,name&&"_class"!==name||(name="<Anonymous Class>"),options.truncate-=name.length,`${name}${inspectObject(value,options)}`}(value,options):inspectObject(value,options):value===Object(value)?inspectObject(value,options):options.stylize(String(value),type)}const{AsymmetricMatcher,DOMCollection,DOMElement,Immutable,ReactElement,ReactTestComponent}=plugins,PLUGINS=[ReactTestComponent,ReactElement,DOMElement,DOMCollection,Immutable,AsymmetricMatcher];function stringify(object,maxDepth=10,{maxLength,...options}={}){const MAX_LENGTH=maxLength??1e4;let result;try{result=format(object,{maxDepth,escapeString:!1,plugins:PLUGINS,...options})}catch{result=format(object,{callToJSON:!1,maxDepth,escapeString:!1,plugins:PLUGINS,...options})}return result.length>=MAX_LENGTH&&maxDepth>1?stringify(object,Math.floor(Math.min(maxDepth,Number.MAX_SAFE_INTEGER)/2),{maxLength,...options}):result}const formatRegExp=/%[sdjifoOc%]/g;function chunk_commonjsHelpers_inspect(obj,options={}){return 0===options.truncate&&(options.truncate=Number.POSITIVE_INFINITY),inspect(obj,options)}function chunk_commonjsHelpers_getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}function helpers_assertTypes(value,name,types){const receivedType=typeof value;if(!types.includes(receivedType))throw new TypeError(`${name} value must be ${types.join(" or ")}, received "${receivedType}"`)}function helpers_isObject(item){return null!=item&&"object"==typeof item&&!Array.isArray(item)}function helpers_getType(value){return Object.prototype.toString.apply(value).slice(8,-1)}function getOwnProperties(obj){const ownProps=new Set;return function isFinalObj(obj){return obj===Object.prototype||obj===Function.prototype||obj===RegExp.prototype}(obj)?[]:(function collectOwnProperties(obj,collector){const collect="function"==typeof collector?collector:key=>collector.add(key);Object.getOwnPropertyNames(obj).forEach(collect),Object.getOwnPropertySymbols(obj).forEach(collect)}(obj,ownProps),Array.from(ownProps))}const defaultCloneOptions={forceWritable:!1};function deepClone(val,options=defaultCloneOptions){return clone(val,new WeakMap,options)}function clone(val,seen,options=defaultCloneOptions){let k,out;if(seen.has(val))return seen.get(val);if(Array.isArray(val)){for(out=Array.from({length:k=val.length}),seen.set(val,out);k--;)out[k]=clone(val[k],seen,options);return out}if("[object Object]"===Object.prototype.toString.call(val)){out=Object.create(Object.getPrototypeOf(val)),seen.set(val,out);const props=getOwnProperties(val);for(const k2 of props){const descriptor=Object.getOwnPropertyDescriptor(val,k2);if(!descriptor)continue;const cloned=clone(val[k2],seen,options);options.forceWritable?Object.defineProperty(out,k2,{enumerable:descriptor.enumerable,configurable:!0,writable:!0,value:cloned}):"get"in descriptor?Object.defineProperty(out,k2,{...descriptor,get:()=>cloned}):Object.defineProperty(out,k2,{...descriptor,value:cloned})}return out}return val}const DIFF_DELETE=-1,DIFF_INSERT=1,DIFF_EQUAL=0;class Diff{0;1;constructor(op,text){this[0]=op,this[1]=text}}function diff_commonPrefix(text1,text2){if(!text1||!text2||text1.charAt(0)!==text2.charAt(0))return 0;let pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerstart=0;for(;pointermin<pointermid;)text1.substring(pointerstart,pointermid)===text2.substring(pointerstart,pointermid)?(pointermin=pointermid,pointerstart=pointermin):pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid}function diff_commonSuffix(text1,text2){if(!text1||!text2||text1.charAt(text1.length-1)!==text2.charAt(text2.length-1))return 0;let pointermin=0,pointermax=Math.min(text1.length,text2.length),pointermid=pointermax,pointerend=0;for(;pointermin<pointermid;)text1.substring(text1.length-pointermid,text1.length-pointerend)===text2.substring(text2.length-pointermid,text2.length-pointerend)?(pointermin=pointermid,pointerend=pointermin):pointermax=pointermid,pointermid=Math.floor((pointermax-pointermin)/2+pointermin);return pointermid}function diff_commonOverlap_(text1,text2){const text1_length=text1.length,text2_length=text2.length;if(0===text1_length||0===text2_length)return 0;text1_length>text2_length?text1=text1.substring(text1_length-text2_length):text1_length<text2_length&&(text2=text2.substring(0,text1_length));const text_length=Math.min(text1_length,text2_length);if(text1===text2)return text_length;let best=0,length=1;for(;;){const pattern=text1.substring(text_length-length),found=text2.indexOf(pattern);if(-1===found)return best;length+=found,0!==found&&text1.substring(text_length-length)!==text2.substring(0,length)||(best=length,length++)}}function diff_cleanupSemantic(diffs){let changes=!1;const equalities=[];let equalitiesLength=0,lastEquality=null,pointer=0,length_insertions1=0,length_deletions1=0,length_insertions2=0,length_deletions2=0;for(;pointer<diffs.length;)diffs[pointer][0]===DIFF_EQUAL?(equalities[equalitiesLength++]=pointer,length_insertions1=length_insertions2,length_deletions1=length_deletions2,length_insertions2=0,length_deletions2=0,lastEquality=diffs[pointer][1]):(diffs[pointer][0]===DIFF_INSERT?length_insertions2+=diffs[pointer][1].length:length_deletions2+=diffs[pointer][1].length,lastEquality&&lastEquality.length<=Math.max(length_insertions1,length_deletions1)&&lastEquality.length<=Math.max(length_insertions2,length_deletions2)&&(diffs.splice(equalities[equalitiesLength-1],0,new Diff(DIFF_DELETE,lastEquality)),diffs[equalities[equalitiesLength-1]+1][0]=DIFF_INSERT,equalitiesLength--,equalitiesLength--,pointer=equalitiesLength>0?equalities[equalitiesLength-1]:-1,length_insertions1=0,length_deletions1=0,length_insertions2=0,length_deletions2=0,lastEquality=null,changes=!0)),pointer++;for(changes&&diff_cleanupMerge(diffs),function diff_cleanupSemanticLossless(diffs){let pointer=1;for(;pointer<diffs.length-1;){if(diffs[pointer-1][0]===DIFF_EQUAL&&diffs[pointer+1][0]===DIFF_EQUAL){let equality1=diffs[pointer-1][1],edit=diffs[pointer][1],equality2=diffs[pointer+1][1];const commonOffset=diff_commonSuffix(equality1,edit);if(commonOffset){const commonString=edit.substring(edit.length-commonOffset);equality1=equality1.substring(0,equality1.length-commonOffset),edit=commonString+edit.substring(0,edit.length-commonOffset),equality2=commonString+equality2}let bestEquality1=equality1,bestEdit=edit,bestEquality2=equality2,bestScore=diff_cleanupSemanticScore_(equality1,edit)+diff_cleanupSemanticScore_(edit,equality2);for(;edit.charAt(0)===equality2.charAt(0);){equality1+=edit.charAt(0),edit=edit.substring(1)+equality2.charAt(0),equality2=equality2.substring(1);const score=diff_cleanupSemanticScore_(equality1,edit)+diff_cleanupSemanticScore_(edit,equality2);score>=bestScore&&(bestScore=score,bestEquality1=equality1,bestEdit=edit,bestEquality2=equality2)}diffs[pointer-1][1]!==bestEquality1&&(bestEquality1?diffs[pointer-1][1]=bestEquality1:(diffs.splice(pointer-1,1),pointer--),diffs[pointer][1]=bestEdit,bestEquality2?diffs[pointer+1][1]=bestEquality2:(diffs.splice(pointer+1,1),pointer--))}pointer++}}(diffs),pointer=1;pointer<diffs.length;){if(diffs[pointer-1][0]===DIFF_DELETE&&diffs[pointer][0]===DIFF_INSERT){const deletion=diffs[pointer-1][1],insertion=diffs[pointer][1],overlap_length1=diff_commonOverlap_(deletion,insertion),overlap_length2=diff_commonOverlap_(insertion,deletion);overlap_length1>=overlap_length2?(overlap_length1>=deletion.length/2||overlap_length1>=insertion.length/2)&&(diffs.splice(pointer,0,new Diff(DIFF_EQUAL,insertion.substring(0,overlap_length1))),diffs[pointer-1][1]=deletion.substring(0,deletion.length-overlap_length1),diffs[pointer+1][1]=insertion.substring(overlap_length1),pointer++):(overlap_length2>=deletion.length/2||overlap_length2>=insertion.length/2)&&(diffs.splice(pointer,0,new Diff(DIFF_EQUAL,deletion.substring(0,overlap_length2))),diffs[pointer-1][0]=DIFF_INSERT,diffs[pointer-1][1]=insertion.substring(0,insertion.length-overlap_length2),diffs[pointer+1][0]=DIFF_DELETE,diffs[pointer+1][1]=deletion.substring(overlap_length2),pointer++),pointer++}pointer++}}const nonAlphaNumericRegex_=/[^a-z0-9]/i,whitespaceRegex_=/\s/,linebreakRegex_=/[\r\n]/,blanklineEndRegex_=/\n\r?\n$/,blanklineStartRegex_=/^\r?\n\r?\n/;function diff_cleanupMerge(diffs){diffs.push(new Diff(DIFF_EQUAL,""));let commonlength,pointer=0,count_delete=0,count_insert=0,text_delete="",text_insert="";for(;pointer<diffs.length;)switch(diffs[pointer][0]){case DIFF_INSERT:count_insert++,text_insert+=diffs[pointer][1],pointer++;break;case DIFF_DELETE:count_delete++,text_delete+=diffs[pointer][1],pointer++;break;case DIFF_EQUAL:count_delete+count_insert>1?(0!==count_delete&&0!==count_insert&&(commonlength=diff_commonPrefix(text_insert,text_delete),0!==commonlength&&(pointer-count_delete-count_insert>0&&diffs[pointer-count_delete-count_insert-1][0]===DIFF_EQUAL?diffs[pointer-count_delete-count_insert-1][1]+=text_insert.substring(0,commonlength):(diffs.splice(0,0,new Diff(DIFF_EQUAL,text_insert.substring(0,commonlength))),pointer++),text_insert=text_insert.substring(commonlength),text_delete=text_delete.substring(commonlength)),commonlength=diff_commonSuffix(text_insert,text_delete),0!==commonlength&&(diffs[pointer][1]=text_insert.substring(text_insert.length-commonlength)+diffs[pointer][1],text_insert=text_insert.substring(0,text_insert.length-commonlength),text_delete=text_delete.substring(0,text_delete.length-commonlength))),pointer-=count_delete+count_insert,diffs.splice(pointer,count_delete+count_insert),text_delete.length&&(diffs.splice(pointer,0,new Diff(DIFF_DELETE,text_delete)),pointer++),text_insert.length&&(diffs.splice(pointer,0,new Diff(DIFF_INSERT,text_insert)),pointer++),pointer++):0!==pointer&&diffs[pointer-1][0]===DIFF_EQUAL?(diffs[pointer-1][1]+=diffs[pointer][1],diffs.splice(pointer,1)):pointer++,count_insert=0,count_delete=0,text_delete="",text_insert=""}""===diffs[diffs.length-1][1]&&diffs.pop();let changes=!1;for(pointer=1;pointer<diffs.length-1;)diffs[pointer-1][0]===DIFF_EQUAL&&diffs[pointer+1][0]===DIFF_EQUAL&&(diffs[pointer][1].substring(diffs[pointer][1].length-diffs[pointer-1][1].length)===diffs[pointer-1][1]?(diffs[pointer][1]=diffs[pointer-1][1]+diffs[pointer][1].substring(0,diffs[pointer][1].length-diffs[pointer-1][1].length),diffs[pointer+1][1]=diffs[pointer-1][1]+diffs[pointer+1][1],diffs.splice(pointer-1,1),changes=!0):diffs[pointer][1].substring(0,diffs[pointer+1][1].length)===diffs[pointer+1][1]&&(diffs[pointer-1][1]+=diffs[pointer+1][1],diffs[pointer][1]=diffs[pointer][1].substring(diffs[pointer+1][1].length)+diffs[pointer+1][1],diffs.splice(pointer+1,1),changes=!0)),pointer++;changes&&diff_cleanupMerge(diffs)}function diff_cleanupSemanticScore_(one,two){if(!one||!two)return 6;const char1=one.charAt(one.length-1),char2=two.charAt(0),nonAlphaNumeric1=char1.match(nonAlphaNumericRegex_),nonAlphaNumeric2=char2.match(nonAlphaNumericRegex_),whitespace1=nonAlphaNumeric1&&char1.match(whitespaceRegex_),whitespace2=nonAlphaNumeric2&&char2.match(whitespaceRegex_),lineBreak1=whitespace1&&char1.match(linebreakRegex_),lineBreak2=whitespace2&&char2.match(linebreakRegex_),blankLine1=lineBreak1&&one.match(blanklineEndRegex_),blankLine2=lineBreak2&&two.match(blanklineStartRegex_);return blankLine1||blankLine2?5:lineBreak1||lineBreak2?4:nonAlphaNumeric1&&!whitespace1&&whitespace2?3:whitespace1||whitespace2?2:nonAlphaNumeric1||nonAlphaNumeric2?1:0}const NO_DIFF_MESSAGE="Compared values have no visual difference.",SIMILAR_MESSAGE="Compared values serialize to the same structure.\nPrinting internal object structure without calling `toJSON` instead.";var hasRequiredBuild,build={};var buildExports=function requireBuild(){if(hasRequiredBuild)return build;hasRequiredBuild=1,Object.defineProperty(build,"__esModule",{value:!0}),build.default=function diffSequence(aLength,bLength,isCommon,foundSubsequence){validateLength("aLength",aLength),validateLength("bLength",bLength),validateCallback("isCommon",isCommon),validateCallback("foundSubsequence",foundSubsequence);const nCommonF=countCommonItemsF(0,aLength,0,bLength,isCommon);0!==nCommonF&&foundSubsequence(nCommonF,0,0);if(aLength!==nCommonF||bLength!==nCommonF){const aStart=nCommonF,bStart=nCommonF,nCommonR=countCommonItemsR(aStart,aLength-1,bStart,bLength-1,isCommon),aEnd=aLength-nCommonR,bEnd=bLength-nCommonR,nCommonFR=nCommonF+nCommonR;if(aLength!==nCommonFR&&bLength!==nCommonFR){findSubsequences(0,aStart,aEnd,bStart,bEnd,!1,[{foundSubsequence,isCommon}],[NOT_YET_SET],[NOT_YET_SET],{aCommonFollowing:NOT_YET_SET,aCommonPreceding:NOT_YET_SET,aEndPreceding:NOT_YET_SET,aStartFollowing:NOT_YET_SET,bCommonFollowing:NOT_YET_SET,bCommonPreceding:NOT_YET_SET,bEndPreceding:NOT_YET_SET,bStartFollowing:NOT_YET_SET,nChangeFollowing:NOT_YET_SET,nChangePreceding:NOT_YET_SET,nCommonFollowing:NOT_YET_SET,nCommonPreceding:NOT_YET_SET})}0!==nCommonR&&foundSubsequence(nCommonR,aEnd,bEnd)}};const pkg="diff-sequences",NOT_YET_SET=0,countCommonItemsF=(aIndex,aEnd,bIndex,bEnd,isCommon)=>{let nCommon=0;for(;aIndex<aEnd&&bIndex<bEnd&&isCommon(aIndex,bIndex);)aIndex+=1,bIndex+=1,nCommon+=1;return nCommon},countCommonItemsR=(aStart,aIndex,bStart,bIndex,isCommon)=>{let nCommon=0;for(;aStart<=aIndex&&bStart<=bIndex&&isCommon(aIndex,bIndex);)aIndex-=1,bIndex-=1,nCommon+=1;return nCommon},extendPathsF=(d,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF)=>{let iF=0,kF=-d,aFirst=aIndexesF[iF],aIndexPrev1=aFirst;aIndexesF[iF]+=countCommonItemsF(aFirst+1,aEnd,bF+aFirst-kF+1,bEnd,isCommon);const nF=d<iMaxF?d:iMaxF;for(iF+=1,kF+=2;iF<=nF;iF+=1,kF+=2){if(iF!==d&&aIndexPrev1<aIndexesF[iF])aFirst=aIndexesF[iF];else if(aFirst=aIndexPrev1+1,aEnd<=aFirst)return iF-1;aIndexPrev1=aIndexesF[iF],aIndexesF[iF]=aFirst+countCommonItemsF(aFirst+1,aEnd,bF+aFirst-kF+1,bEnd,isCommon)}return iMaxF},extendPathsR=(d,aStart,bStart,bR,isCommon,aIndexesR,iMaxR)=>{let iR=0,kR=d,aFirst=aIndexesR[iR],aIndexPrev1=aFirst;aIndexesR[iR]-=countCommonItemsR(aStart,aFirst-1,bStart,bR+aFirst-kR-1,isCommon);const nR=d<iMaxR?d:iMaxR;for(iR+=1,kR-=2;iR<=nR;iR+=1,kR-=2){if(iR!==d&&aIndexesR[iR]<aIndexPrev1)aFirst=aIndexesR[iR];else if(aFirst=aIndexPrev1-1,aFirst<aStart)return iR-1;aIndexPrev1=aIndexesR[iR],aIndexesR[iR]=aFirst-countCommonItemsR(aStart,aFirst-1,bStart,bR+aFirst-kR-1,isCommon)}return iMaxR},extendOverlappablePathsF=(d,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division)=>{const bF=bStart-aStart,baDeltaLength=bEnd-bStart-(aEnd-aStart),kMinOverlapF=-baDeltaLength-(d-1),kMaxOverlapF=d-1-baDeltaLength;let aIndexPrev1=NOT_YET_SET;const nF=d<iMaxF?d:iMaxF;for(let iF=0,kF=-d;iF<=nF;iF+=1,kF+=2){const insert=0===iF||iF!==d&&aIndexPrev1<aIndexesF[iF],aLastPrev=insert?aIndexesF[iF]:aIndexPrev1,aFirst=insert?aLastPrev:aLastPrev+1,bFirst=bF+aFirst-kF,nCommonF=countCommonItemsF(aFirst+1,aEnd,bFirst+1,bEnd,isCommon),aLast=aFirst+nCommonF;if(aIndexPrev1=aIndexesF[iF],aIndexesF[iF]=aLast,kMinOverlapF<=kF&&kF<=kMaxOverlapF){const iR=(d-1-(kF+baDeltaLength))/2;if(iR<=iMaxR&&aIndexesR[iR]-1<=aLast){const bLastPrev=bF+aLastPrev-(insert?kF+1:kF-1),nCommonR=countCommonItemsR(aStart,aLastPrev,bStart,bLastPrev,isCommon),aEndPreceding=aLastPrev-nCommonR+1,bEndPreceding=bLastPrev-nCommonR+1;division.nChangePreceding=d-1,d-1==aEndPreceding+bEndPreceding-aStart-bStart?(division.aEndPreceding=aStart,division.bEndPreceding=bStart):(division.aEndPreceding=aEndPreceding,division.bEndPreceding=bEndPreceding),division.nCommonPreceding=nCommonR,0!==nCommonR&&(division.aCommonPreceding=aEndPreceding,division.bCommonPreceding=bEndPreceding),division.nCommonFollowing=nCommonF,0!==nCommonF&&(division.aCommonFollowing=aFirst+1,division.bCommonFollowing=bFirst+1);const aStartFollowing=aLast+1,bStartFollowing=bFirst+nCommonF+1;return division.nChangeFollowing=d-1,d-1==aEnd+bEnd-aStartFollowing-bStartFollowing?(division.aStartFollowing=aEnd,division.bStartFollowing=bEnd):(division.aStartFollowing=aStartFollowing,division.bStartFollowing=bStartFollowing),!0}}}return!1},extendOverlappablePathsR=(d,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division)=>{const bR=bEnd-aEnd,baDeltaLength=bEnd-bStart-(aEnd-aStart),kMinOverlapR=baDeltaLength-d,kMaxOverlapR=baDeltaLength+d;let aIndexPrev1=NOT_YET_SET;const nR=d<iMaxR?d:iMaxR;for(let iR=0,kR=d;iR<=nR;iR+=1,kR-=2){const insert=0===iR||iR!==d&&aIndexesR[iR]<aIndexPrev1,aLastPrev=insert?aIndexesR[iR]:aIndexPrev1,aFirst=insert?aLastPrev:aLastPrev-1,bFirst=bR+aFirst-kR,nCommonR=countCommonItemsR(aStart,aFirst-1,bStart,bFirst-1,isCommon),aLast=aFirst-nCommonR;if(aIndexPrev1=aIndexesR[iR],aIndexesR[iR]=aLast,kMinOverlapR<=kR&&kR<=kMaxOverlapR){const iF=(d+(kR-baDeltaLength))/2;if(iF<=iMaxF&&aLast-1<=aIndexesF[iF]){const bLast=bFirst-nCommonR;if(division.nChangePreceding=d,d===aLast+bLast-aStart-bStart?(division.aEndPreceding=aStart,division.bEndPreceding=bStart):(division.aEndPreceding=aLast,division.bEndPreceding=bLast),division.nCommonPreceding=nCommonR,0!==nCommonR&&(division.aCommonPreceding=aLast,division.bCommonPreceding=bLast),division.nChangeFollowing=d-1,1===d)division.nCommonFollowing=0,division.aStartFollowing=aEnd,division.bStartFollowing=bEnd;else{const bLastPrev=bR+aLastPrev-(insert?kR-1:kR+1),nCommonF=countCommonItemsF(aLastPrev,aEnd,bLastPrev,bEnd,isCommon);division.nCommonFollowing=nCommonF,0!==nCommonF&&(division.aCommonFollowing=aLastPrev,division.bCommonFollowing=bLastPrev);const aStartFollowing=aLastPrev+nCommonF,bStartFollowing=bLastPrev+nCommonF;d-1==aEnd+bEnd-aStartFollowing-bStartFollowing?(division.aStartFollowing=aEnd,division.bStartFollowing=bEnd):(division.aStartFollowing=aStartFollowing,division.bStartFollowing=bStartFollowing)}return!0}}}return!1},findSubsequences=(nChange,aStart,aEnd,bStart,bEnd,transposed,callbacks,aIndexesF,aIndexesR,division)=>{if(bEnd-bStart<aEnd-aStart){if((transposed=!transposed)&&1===callbacks.length){const{foundSubsequence,isCommon}=callbacks[0];callbacks[1]={foundSubsequence:(nCommon,bCommon,aCommon)=>{foundSubsequence(nCommon,aCommon,bCommon)},isCommon:(bIndex,aIndex)=>isCommon(aIndex,bIndex)}}const tStart=aStart,tEnd=aEnd;aStart=bStart,aEnd=bEnd,bStart=tStart,bEnd=tEnd}const{foundSubsequence,isCommon}=callbacks[transposed?1:0];((nChange,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,aIndexesR,division)=>{const bF=bStart-aStart,bR=bEnd-aEnd,aLength=aEnd-aStart,bLength=bEnd-bStart,baDeltaLength=bLength-aLength;let iMaxF=aLength,iMaxR=aLength;if(aIndexesF[0]=aStart-1,aIndexesR[0]=aEnd,baDeltaLength%2==0){const dMin=(nChange||baDeltaLength)/2,dMax=(aLength+bLength)/2;for(let d=1;d<=dMax;d+=1)if(iMaxF=extendPathsF(d,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF),d<dMin)iMaxR=extendPathsR(d,aStart,bStart,bR,isCommon,aIndexesR,iMaxR);else if(extendOverlappablePathsR(d,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division))return}else{const dMin=((nChange||baDeltaLength)+1)/2,dMax=(aLength+bLength+1)/2;let d=1;for(iMaxF=extendPathsF(d,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF),d+=1;d<=dMax;d+=1)if(iMaxR=extendPathsR(d-1,aStart,bStart,bR,isCommon,aIndexesR,iMaxR),d<dMin)iMaxF=extendPathsF(d,aEnd,bEnd,bF,isCommon,aIndexesF,iMaxF);else if(extendOverlappablePathsF(d,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,iMaxF,aIndexesR,iMaxR,division))return}throw new Error(`${pkg}: no overlap aStart=${aStart} aEnd=${aEnd} bStart=${bStart} bEnd=${bEnd}`)})(nChange,aStart,aEnd,bStart,bEnd,isCommon,aIndexesF,aIndexesR,division);const{nChangePreceding,aEndPreceding,bEndPreceding,nCommonPreceding,aCommonPreceding,bCommonPreceding,nCommonFollowing,aCommonFollowing,bCommonFollowing,nChangeFollowing,aStartFollowing,bStartFollowing}=division;aStart<aEndPreceding&&bStart<bEndPreceding&&findSubsequences(nChangePreceding,aStart,aEndPreceding,bStart,bEndPreceding,transposed,callbacks,aIndexesF,aIndexesR,division),0!==nCommonPreceding&&foundSubsequence(nCommonPreceding,aCommonPreceding,bCommonPreceding),0!==nCommonFollowing&&foundSubsequence(nCommonFollowing,aCommonFollowing,bCommonFollowing),aStartFollowing<aEnd&&bStartFollowing<bEnd&&findSubsequences(nChangeFollowing,aStartFollowing,aEnd,bStartFollowing,bEnd,transposed,callbacks,aIndexesF,aIndexesR,division)},validateLength=(name,arg)=>{if("number"!=typeof arg)throw new TypeError(`${pkg}: ${name} typeof ${typeof arg} is not a number`);if(!Number.isSafeInteger(arg))throw new RangeError(`${pkg}: ${name} value ${arg} is not a safe integer`);if(arg<0)throw new RangeError(`${pkg}: ${name} value ${arg} is a negative integer`)},validateCallback=(name,arg)=>{const type=typeof arg;if("function"!==type)throw new TypeError(`${pkg}: ${name} typeof ${type} is not a function`)};return build}(),diffSequences=chunk_commonjsHelpers_getDefaultExportFromCjs(buildExports);function printDiffLine(line,isFirstOrLast,color,indicator,trailingSpaceFormatter,emptyFirstOrLastLinePlaceholder){return 0!==line.length?color(`${indicator} ${function formatTrailingSpaces(line,trailingSpaceFormatter){return line.replace(/\s+$/,(match=>trailingSpaceFormatter(match)))}(line,trailingSpaceFormatter)}`):" "!==indicator?color(indicator):isFirstOrLast&&0!==emptyFirstOrLastLinePlaceholder.length?color(`${indicator} ${emptyFirstOrLastLinePlaceholder}`):""}function printDeleteLine(line,isFirstOrLast,{aColor,aIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder}){return printDiffLine(line,isFirstOrLast,aColor,aIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder)}function printInsertLine(line,isFirstOrLast,{bColor,bIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder}){return printDiffLine(line,isFirstOrLast,bColor,bIndicator,changeLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder)}function printCommonLine(line,isFirstOrLast,{commonColor,commonIndicator,commonLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder}){return printDiffLine(line,isFirstOrLast,commonColor,commonIndicator,commonLineTrailingSpaceColor,emptyFirstOrLastLinePlaceholder)}function createPatchMark(aStart,aEnd,bStart,bEnd,{patchColor}){return patchColor(`@@ -${aStart+1},${aEnd-aStart} +${bStart+1},${bEnd-bStart} @@`)}const noColor=string=>string,DIFF_CONTEXT_DEFAULT=5,DIFF_TRUNCATE_THRESHOLD_DEFAULT=0;function normalizeDiffOptions(options={}){return{aAnnotation:"Expected",aColor:s.green,aIndicator:"-",bAnnotation:"Received",bColor:s.red,bIndicator:"+",changeColor:s.inverse,changeLineTrailingSpaceColor:noColor,commonColor:s.dim,commonIndicator:" ",commonLineTrailingSpaceColor:noColor,compareKeys:void 0,contextLines:DIFF_CONTEXT_DEFAULT,emptyFirstOrLastLinePlaceholder:"",expand:!0,includeChangeCounts:!1,omitAnnotationLines:!1,patchColor:s.yellow,printBasicPrototype:!1,truncateThreshold:DIFF_TRUNCATE_THRESHOLD_DEFAULT,truncateAnnotation:"... Diff result is truncated",truncateAnnotationColor:noColor,...options,compareKeys:(compareKeys=options.compareKeys,compareKeys&&"function"==typeof compareKeys?compareKeys:void 0),contextLines:(contextLines=options.contextLines,"number"==typeof contextLines&&Number.isSafeInteger(contextLines)&&contextLines>=0?contextLines:DIFF_CONTEXT_DEFAULT)};var contextLines,compareKeys}function isEmptyString(lines){return 1===lines.length&&0===lines[0].length}function printDiffLines(diffs,truncated,options){return function printAnnotation({aAnnotation,aColor,aIndicator,bAnnotation,bColor,bIndicator,includeChangeCounts,omitAnnotationLines},changeCounts){if(omitAnnotationLines)return"";let aRest="",bRest="";if(includeChangeCounts){const aCount=String(changeCounts.a),bCount=String(changeCounts.b),baAnnotationLengthDiff=bAnnotation.length-aAnnotation.length,aAnnotationPadding=" ".repeat(Math.max(0,baAnnotationLengthDiff)),bAnnotationPadding=" ".repeat(Math.max(0,-baAnnotationLengthDiff)),baCountLengthDiff=bCount.length-aCount.length;aRest=`${aAnnotationPadding}  ${aIndicator} ${" ".repeat(Math.max(0,baCountLengthDiff))}${aCount}`,bRest=`${bAnnotationPadding}  ${bIndicator} ${" ".repeat(Math.max(0,-baCountLengthDiff))}${bCount}`}const b=`${bIndicator} ${bAnnotation}${bRest}`;return`${aColor(`${aIndicator} ${aAnnotation}${aRest}`)}\n${bColor(b)}\n\n`}(options,function countChanges(diffs){let a=0,b=0;return diffs.forEach((diff=>{switch(diff[0]){case DIFF_DELETE:a+=1;break;case DIFF_INSERT:b+=1}})),{a,b}}(diffs))+(options.expand?function joinAlignedDiffsExpand(diffs,options){return diffs.map(((diff,i,diffs2)=>{const line=diff[1],isFirstOrLast=0===i||i===diffs2.length-1;switch(diff[0]){case DIFF_DELETE:return printDeleteLine(line,isFirstOrLast,options);case DIFF_INSERT:return printInsertLine(line,isFirstOrLast,options);default:return printCommonLine(line,isFirstOrLast,options)}})).join("\n")}(diffs,options):function joinAlignedDiffsNoExpand(diffs,options){const iLength=diffs.length,nContextLines=options.contextLines,nContextLines2=nContextLines+nContextLines;let jLength=iLength,hasExcessAtStartOrEnd=!1,nExcessesBetweenChanges=0,i=0;for(;i!==iLength;){const iStart=i;for(;i!==iLength&&diffs[i][0]===DIFF_EQUAL;)i+=1;if(iStart!==i)if(0===iStart)i>nContextLines&&(jLength-=i-nContextLines,hasExcessAtStartOrEnd=!0);else if(i===iLength){const n=i-iStart;n>nContextLines&&(jLength-=n-nContextLines,hasExcessAtStartOrEnd=!0)}else{const n=i-iStart;n>nContextLines2&&(jLength-=n-nContextLines2,nExcessesBetweenChanges+=1)}for(;i!==iLength&&diffs[i][0]!==DIFF_EQUAL;)i+=1}const hasPatch=0!==nExcessesBetweenChanges||hasExcessAtStartOrEnd;0!==nExcessesBetweenChanges?jLength+=nExcessesBetweenChanges+1:hasExcessAtStartOrEnd&&(jLength+=1);const jLast=jLength-1,lines=[];let jPatchMark=0;hasPatch&&lines.push("");let aStart=0,bStart=0,aEnd=0,bEnd=0;const pushCommonLine=line=>{const j=lines.length;lines.push(printCommonLine(line,0===j||j===jLast,options)),aEnd+=1,bEnd+=1},pushDeleteLine=line=>{const j=lines.length;lines.push(printDeleteLine(line,0===j||j===jLast,options)),aEnd+=1},pushInsertLine=line=>{const j=lines.length;lines.push(printInsertLine(line,0===j||j===jLast,options)),bEnd+=1};for(i=0;i!==iLength;){let iStart=i;for(;i!==iLength&&diffs[i][0]===DIFF_EQUAL;)i+=1;if(iStart!==i)if(0===iStart){i>nContextLines&&(iStart=i-nContextLines,aStart=iStart,bStart=iStart,aEnd=aStart,bEnd=bStart);for(let iCommon=iStart;iCommon!==i;iCommon+=1)pushCommonLine(diffs[iCommon][1])}else if(i===iLength){const iEnd=i-iStart>nContextLines?iStart+nContextLines:i;for(let iCommon=iStart;iCommon!==iEnd;iCommon+=1)pushCommonLine(diffs[iCommon][1])}else{const nCommon=i-iStart;if(nCommon>nContextLines2){const iEnd=iStart+nContextLines;for(let iCommon=iStart;iCommon!==iEnd;iCommon+=1)pushCommonLine(diffs[iCommon][1]);lines[jPatchMark]=createPatchMark(aStart,aEnd,bStart,bEnd,options),jPatchMark=lines.length,lines.push("");const nOmit=nCommon-nContextLines2;aStart=aEnd+nOmit,bStart=bEnd+nOmit,aEnd=aStart,bEnd=bStart;for(let iCommon=i-nContextLines;iCommon!==i;iCommon+=1)pushCommonLine(diffs[iCommon][1])}else for(let iCommon=iStart;iCommon!==i;iCommon+=1)pushCommonLine(diffs[iCommon][1])}for(;i!==iLength&&diffs[i][0]===DIFF_DELETE;)pushDeleteLine(diffs[i][1]),i+=1;for(;i!==iLength&&diffs[i][0]===DIFF_INSERT;)pushInsertLine(diffs[i][1]),i+=1}return hasPatch&&(lines[jPatchMark]=createPatchMark(aStart,aEnd,bStart,bEnd,options)),lines.join("\n")}(diffs,options))+(truncated?options.truncateAnnotationColor(`\n${options.truncateAnnotation}`):"")}function diffLinesUnified(aLines,bLines,options){const normalizedOptions=normalizeDiffOptions(options),[diffs,truncated]=diffLinesRaw(isEmptyString(aLines)?[]:aLines,isEmptyString(bLines)?[]:bLines,normalizedOptions);return printDiffLines(diffs,truncated,normalizedOptions)}function diffLinesRaw(aLines,bLines,options){const truncate=(null==options?void 0:options.truncateThreshold)??!1,truncateThreshold=Math.max(Math.floor((null==options?void 0:options.truncateThreshold)??0),0),aLength=truncate?Math.min(aLines.length,truncateThreshold):aLines.length,bLength=truncate?Math.min(bLines.length,truncateThreshold):bLines.length,truncated=aLength!==aLines.length||bLength!==bLines.length,diffs=[];let aIndex=0,bIndex=0;for(diffSequences(aLength,bLength,((aIndex2,bIndex2)=>aLines[aIndex2]===bLines[bIndex2]),((nCommon,aCommon,bCommon)=>{for(;aIndex!==aCommon;aIndex+=1)diffs.push(new Diff(DIFF_DELETE,aLines[aIndex]));for(;bIndex!==bCommon;bIndex+=1)diffs.push(new Diff(DIFF_INSERT,bLines[bIndex]));for(;0!==nCommon;nCommon-=1,aIndex+=1,bIndex+=1)diffs.push(new Diff(DIFF_EQUAL,bLines[bIndex]))}));aIndex!==aLength;aIndex+=1)diffs.push(new Diff(DIFF_DELETE,aLines[aIndex]));for(;bIndex!==bLength;bIndex+=1)diffs.push(new Diff(DIFF_INSERT,bLines[bIndex]));return[diffs,truncated]}function diff_getType(value){if(void 0===value)return"undefined";if(null===value)return"null";if(Array.isArray(value))return"array";if("boolean"==typeof value)return"boolean";if("function"==typeof value)return"function";if("number"==typeof value)return"number";if("string"==typeof value)return"string";if("bigint"==typeof value)return"bigint";if("object"==typeof value){if(null!=value){if(value.constructor===RegExp)return"regexp";if(value.constructor===Map)return"map";if(value.constructor===Set)return"set";if(value.constructor===Date)return"date"}return"object"}if("symbol"==typeof value)return"symbol";throw new Error(`value of unknown type: ${value}`)}function getNewLineSymbol(string){return string.includes("\r\n")?"\r\n":"\n"}class ChangeBuffer{op;line;lines;changeColor;constructor(op,changeColor){this.op=op,this.line=[],this.lines=[],this.changeColor=changeColor}pushSubstring(substring){this.pushDiff(new Diff(this.op,substring))}pushLine(){this.lines.push(1!==this.line.length?new Diff(this.op,function concatenateRelevantDiffs(op,diffs,changeColor){return diffs.reduce(((reduced,diff)=>reduced+(diff[0]===DIFF_EQUAL?diff[1]:diff[0]===op&&0!==diff[1].length?changeColor(diff[1]):"")),"")}(this.op,this.line,this.changeColor)):this.line[0][0]===this.op?this.line[0]:new Diff(this.op,this.line[0][1])),this.line.length=0}isLineEmpty(){return 0===this.line.length}pushDiff(diff){this.line.push(diff)}align(diff){const string=diff[1];if(string.includes("\n")){const substrings=string.split("\n"),iLast=substrings.length-1;substrings.forEach(((substring,i)=>{i<iLast?(this.pushSubstring(substring),this.pushLine()):0!==substring.length&&this.pushSubstring(substring)}))}else this.pushDiff(diff)}moveLinesTo(lines){this.isLineEmpty()||this.pushLine(),lines.push(...this.lines),this.lines.length=0}}class CommonBuffer{deleteBuffer;insertBuffer;lines;constructor(deleteBuffer,insertBuffer){this.deleteBuffer=deleteBuffer,this.insertBuffer=insertBuffer,this.lines=[]}pushDiffCommonLine(diff){this.lines.push(diff)}pushDiffChangeLines(diff){const isDiffEmpty=0===diff[1].length;isDiffEmpty&&!this.deleteBuffer.isLineEmpty()||this.deleteBuffer.pushDiff(diff),isDiffEmpty&&!this.insertBuffer.isLineEmpty()||this.insertBuffer.pushDiff(diff)}flushChangeLines(){this.deleteBuffer.moveLinesTo(this.lines),this.insertBuffer.moveLinesTo(this.lines)}align(diff){const op=diff[0],string=diff[1];if(string.includes("\n")){const substrings=string.split("\n"),iLast=substrings.length-1;substrings.forEach(((substring,i)=>{if(0===i){const subdiff=new Diff(op,substring);this.deleteBuffer.isLineEmpty()&&this.insertBuffer.isLineEmpty()?(this.flushChangeLines(),this.pushDiffCommonLine(subdiff)):(this.pushDiffChangeLines(subdiff),this.flushChangeLines())}else i<iLast?this.pushDiffCommonLine(new Diff(op,substring)):0!==substring.length&&this.pushDiffChangeLines(new Diff(op,substring))}))}else this.pushDiffChangeLines(diff)}getLines(){return this.flushChangeLines(),this.lines}}function diffStringsUnified(a,b,options){if(a!==b&&0!==a.length&&0!==b.length){const isMultiline=a.includes("\n")||b.includes("\n"),[diffs,truncated]=diffStringsRaw(isMultiline?`${a}\n`:a,isMultiline?`${b}\n`:b,!0,options);if(function hasCommonDiff(diffs,isMultiline){if(isMultiline){const iLast=diffs.length-1;return diffs.some(((diff,i)=>diff[0]===DIFF_EQUAL&&(i!==iLast||"\n"!==diff[1])))}return diffs.some((diff=>diff[0]===DIFF_EQUAL))}(diffs,isMultiline)){const optionsNormalized=normalizeDiffOptions(options),lines=function getAlignedDiffs(diffs,changeColor){const deleteBuffer=new ChangeBuffer(DIFF_DELETE,changeColor),insertBuffer=new ChangeBuffer(DIFF_INSERT,changeColor),commonBuffer=new CommonBuffer(deleteBuffer,insertBuffer);return diffs.forEach((diff=>{switch(diff[0]){case DIFF_DELETE:deleteBuffer.align(diff);break;case DIFF_INSERT:insertBuffer.align(diff);break;default:commonBuffer.align(diff)}})),commonBuffer.getLines()}(diffs,optionsNormalized.changeColor);return printDiffLines(lines,truncated,optionsNormalized)}}return diffLinesUnified(a.split("\n"),b.split("\n"),options)}function diffStringsRaw(a,b,cleanup,options){const[diffs,truncated]=function diffStrings(a,b,options){const truncate=(null==options?void 0:options.truncateThreshold)??!1,truncateThreshold=Math.max(Math.floor((null==options?void 0:options.truncateThreshold)??0),0);let aLength=a.length,bLength=b.length;if(truncate){const aMultipleLines=a.includes("\n"),bMultipleLines=b.includes("\n"),aNewLineSymbol=getNewLineSymbol(a),bNewLineSymbol=getNewLineSymbol(b),_a=aMultipleLines?`${a.split(aNewLineSymbol,truncateThreshold).join(aNewLineSymbol)}\n`:a,_b=bMultipleLines?`${b.split(bNewLineSymbol,truncateThreshold).join(bNewLineSymbol)}\n`:b;aLength=_a.length,bLength=_b.length}const truncated=aLength!==a.length||bLength!==b.length;let aIndex=0,bIndex=0;const diffs=[];return diffSequences(aLength,bLength,((aIndex2,bIndex2)=>a[aIndex2]===b[bIndex2]),((nCommon,aCommon,bCommon)=>{aIndex!==aCommon&&diffs.push(new Diff(DIFF_DELETE,a.slice(aIndex,aCommon))),bIndex!==bCommon&&diffs.push(new Diff(DIFF_INSERT,b.slice(bIndex,bCommon))),aIndex=aCommon+nCommon,bIndex=bCommon+nCommon,diffs.push(new Diff(DIFF_EQUAL,b.slice(bCommon,bIndex)))})),aIndex!==aLength&&diffs.push(new Diff(DIFF_DELETE,a.slice(aIndex))),bIndex!==bLength&&diffs.push(new Diff(DIFF_INSERT,b.slice(bIndex))),[diffs,truncated]}(a,b,options);return cleanup&&diff_cleanupSemantic(diffs),[diffs,truncated]}function getCommonMessage(message,options){const{commonColor}=normalizeDiffOptions(options);return commonColor(message)}const{AsymmetricMatcher:diff_AsymmetricMatcher,DOMCollection:diff_DOMCollection,DOMElement:diff_DOMElement,Immutable:diff_Immutable,ReactElement:diff_ReactElement,ReactTestComponent:diff_ReactTestComponent}=plugins,diff_PLUGINS=[diff_ReactTestComponent,diff_ReactElement,diff_DOMElement,diff_DOMCollection,diff_Immutable,diff_AsymmetricMatcher,plugins.Error],FORMAT_OPTIONS={plugins:diff_PLUGINS},FALLBACK_FORMAT_OPTIONS={callToJSON:!1,maxDepth:8,plugins:diff_PLUGINS};function diff(a,b,options){if(Object.is(a,b))return"";const aType=diff_getType(a);let expectedType=aType,omitDifference=!1;if("object"===aType&&"function"==typeof a.asymmetricMatch){if(a.$$typeof!==Symbol.for("jest.asymmetricMatcher"))return;if("function"!=typeof a.getExpectedType)return;expectedType=a.getExpectedType(),omitDifference="string"===expectedType}if(expectedType!==diff_getType(b)){let truncate2=function(s){return s.length<=MAX_LENGTH?s:`${s.slice(0,MAX_LENGTH)}...`};const{aAnnotation,aColor,aIndicator,bAnnotation,bColor,bIndicator}=normalizeDiffOptions(options),formatOptions=getFormatOptions(FALLBACK_FORMAT_OPTIONS,options);let aDisplay=format(a,formatOptions),bDisplay=format(b,formatOptions);const MAX_LENGTH=1e5;aDisplay=truncate2(aDisplay),bDisplay=truncate2(bDisplay);return`${`${aColor(`${aIndicator} ${aAnnotation}:`)} \n${aDisplay}`}\n\n${`${bColor(`${bIndicator} ${bAnnotation}:`)} \n${bDisplay}`}`}if(!omitDifference)switch(aType){case"string":return diffLinesUnified(a.split("\n"),b.split("\n"),options);case"boolean":case"number":return function comparePrimitive(a,b,options){const aFormat=format(a,FORMAT_OPTIONS),bFormat=format(b,FORMAT_OPTIONS);return aFormat===bFormat?"":diffLinesUnified(aFormat.split("\n"),bFormat.split("\n"),options)}(a,b,options);case"map":return compareObjects(sortMap(a),sortMap(b),options);case"set":return compareObjects(sortSet(a),sortSet(b),options);default:return compareObjects(a,b,options)}}function sortMap(map){return new Map(Array.from(map.entries()).sort())}function sortSet(set){return new Set(Array.from(set.values()).sort())}function compareObjects(a,b,options){let difference,hasThrown=!1;try{difference=getObjectsDifference(a,b,getFormatOptions(FORMAT_OPTIONS,options),options)}catch{hasThrown=!0}const noDiffMessage=getCommonMessage(NO_DIFF_MESSAGE,options);if(void 0===difference||difference===noDiffMessage){difference=getObjectsDifference(a,b,getFormatOptions(FALLBACK_FORMAT_OPTIONS,options),options),difference===noDiffMessage||hasThrown||(difference=`${getCommonMessage(SIMILAR_MESSAGE,options)}\n\n${difference}`)}return difference}function getFormatOptions(formatOptions,options){const{compareKeys,printBasicPrototype}=normalizeDiffOptions(options);return{...formatOptions,compareKeys,printBasicPrototype}}function getObjectsDifference(a,b,formatOptions,options){const formatOptionsZeroIndent={...formatOptions,indent:0},aCompare=format(a,formatOptionsZeroIndent),bCompare=format(b,formatOptionsZeroIndent);if(aCompare===bCompare)return getCommonMessage(NO_DIFF_MESSAGE,options);{const aDisplay=format(a,formatOptions),bDisplay=format(b,formatOptions);return function diffLinesUnified2(aLinesDisplay,bLinesDisplay,aLinesCompare,bLinesCompare,options){if(isEmptyString(aLinesDisplay)&&isEmptyString(aLinesCompare)&&(aLinesDisplay=[],aLinesCompare=[]),isEmptyString(bLinesDisplay)&&isEmptyString(bLinesCompare)&&(bLinesDisplay=[],bLinesCompare=[]),aLinesDisplay.length!==aLinesCompare.length||bLinesDisplay.length!==bLinesCompare.length)return diffLinesUnified(aLinesDisplay,bLinesDisplay,options);const[diffs,truncated]=diffLinesRaw(aLinesCompare,bLinesCompare,options);let aIndex=0,bIndex=0;return diffs.forEach((diff=>{switch(diff[0]){case DIFF_DELETE:diff[1]=aLinesDisplay[aIndex],aIndex+=1;break;case DIFF_INSERT:diff[1]=bLinesDisplay[bIndex],bIndex+=1;break;default:diff[1]=bLinesDisplay[bIndex],aIndex+=1,bIndex+=1}})),printDiffLines(diffs,truncated,normalizeDiffOptions(options))}(aDisplay.split("\n"),bDisplay.split("\n"),aCompare.split("\n"),bCompare.split("\n"),options)}}const MAX_DIFF_STRING_LENGTH=2e4;function isAsymmetricMatcher(data){return"Object"===helpers_getType(data)&&"function"==typeof data.asymmetricMatch}function isReplaceable(obj1,obj2){const obj1Type=helpers_getType(obj1);return obj1Type===helpers_getType(obj2)&&("Object"===obj1Type||"Array"===obj1Type)}function printDiffOrStringify(received,expected,options){const{aAnnotation,bAnnotation}=normalizeDiffOptions(options);if("string"==typeof expected&&"string"==typeof received&&expected.length>0&&received.length>0&&expected.length<=MAX_DIFF_STRING_LENGTH&&received.length<=MAX_DIFF_STRING_LENGTH&&expected!==received){if(expected.includes("\n")||received.includes("\n"))return diffStringsUnified(expected,received,options);const[diffs]=diffStringsRaw(expected,received,!0),hasCommonDiff=diffs.some((diff2=>diff2[0]===DIFF_EQUAL)),printLabel=function getLabelPrinter(...strings){const maxLength=strings.reduce(((max,string)=>string.length>max?string.length:max),0);return string=>`${string}: ${" ".repeat(maxLength-string.length)}`}(aAnnotation,bAnnotation),expectedLine=printLabel(aAnnotation)+function printExpected(value){return s.green(replaceTrailingSpaces(stringify(value)))}(getCommonAndChangedSubstrings(diffs,DIFF_DELETE,hasCommonDiff)),receivedLine=printLabel(bAnnotation)+function printReceived(object){return s.red(replaceTrailingSpaces(stringify(object)))}(getCommonAndChangedSubstrings(diffs,DIFF_INSERT,hasCommonDiff));return`${expectedLine}\n${receivedLine}`}const clonedExpected=deepClone(expected,{forceWritable:!0}),clonedReceived=deepClone(received,{forceWritable:!0}),{replacedExpected,replacedActual}=replaceAsymmetricMatcher(clonedReceived,clonedExpected);return diff(replacedExpected,replacedActual,options)}function replaceAsymmetricMatcher(actual,expected,actualReplaced=new WeakSet,expectedReplaced=new WeakSet){return actual instanceof Error&&expected instanceof Error&&void 0!==actual.cause&&void 0===expected.cause?(delete actual.cause,{replacedActual:actual,replacedExpected:expected}):isReplaceable(actual,expected)?(actualReplaced.has(actual)||expectedReplaced.has(expected)||(actualReplaced.add(actual),expectedReplaced.add(expected),getOwnProperties(expected).forEach((key=>{const expectedValue=expected[key],actualValue=actual[key];if(isAsymmetricMatcher(expectedValue))expectedValue.asymmetricMatch(actualValue)&&(actual[key]=expectedValue);else if(isAsymmetricMatcher(actualValue))actualValue.asymmetricMatch(expectedValue)&&(expected[key]=actualValue);else if(isReplaceable(actualValue,expectedValue)){const replaced=replaceAsymmetricMatcher(actualValue,expectedValue,actualReplaced,expectedReplaced);actual[key]=replaced.replacedActual,expected[key]=replaced.replacedExpected}}))),{replacedActual:actual,replacedExpected:expected}):{replacedActual:actual,replacedExpected:expected}}const SPACE_SYMBOL="·";function replaceTrailingSpaces(text){return text.replace(/\s+$/gm,(spaces=>SPACE_SYMBOL.repeat(spaces.length)))}function getCommonAndChangedSubstrings(diffs,op,hasCommonDiff){return diffs.reduce(((reduced,diff2)=>reduced+(diff2[0]===DIFF_EQUAL?diff2[1]:diff2[0]===op?hasCommonDiff?s.inverse(diff2[1]):diff2[1]:"")),"")}function d(e,t){if(!e)throw new Error(t)}function y(e,t){return typeof t===e}function dist_f(e,t,n){Object.defineProperty(e,t,n)}function l(e,t,n){Object.defineProperty(e,t,{value:n})}var u=Symbol.for("tinyspy:spy"),x=new Set,T=e=>e[u]||(e=>(dist_f(e,u,{value:{reset:()=>(e=>{e.called=!1,e.callCount=0,e.calls=[],e.results=[],e.resolves=[],e.next=[]})(e[u])}}),e[u]))(e);function dist_m(e){d(y("function",e)||y("undefined",e),"cannot spy on a non-function value");let t=function(...s){let r=T(t);r.called=!0,r.callCount++,r.calls.push(s);let S=r.next.shift();if(S){r.results.push(S);let[o,g]=S;if("ok"===o)return g;throw g}let p,c="ok",a=r.results.length;if(r.impl)try{p=new.target?Reflect.construct(r.impl,s,new.target):r.impl.apply(this,s),c="ok"}catch(o){throw p=o,c="error",r.results.push([c,o]),o}let R=[c,p];return function w(e){return e instanceof Promise}(p)&&p.then((o=>r.resolves[a]=["ok",o]),(o=>r.resolves[a]=["error",o])),r.results.push(R),p};l(t,"_isMockFunction",!0),l(t,"length",e?e.length:0),l(t,"name",e&&e.name||"spy");let n=T(t);return n.reset(),n.impl=e,t}var k=(e,t)=>Object.getOwnPropertyDescriptor(e,t),O=(e,t)=>{null!=t&&"function"==typeof t&&null!=t.prototype&&Object.setPrototypeOf(e.prototype,t.prototype)};function dist_C(e,t,n){d(!y("undefined",e),"spyOn could not find an object to spy upon"),d(y("object",e)||y("function",e),"cannot spyOn on a primitive value");let[s,r]=(()=>{if(!y("object",t))return[t,"value"];if("getter"in t&&"setter"in t)throw new Error("cannot spy on both getter and setter");if("getter"in t)return[t.getter,"get"];if("setter"in t)return[t.setter,"set"];throw new Error("specify getter or setter to spy on")})(),S=k(e,s),p=Object.getPrototypeOf(e),c=p&&k(p,s),a=S||c;d(a||s in e,`${String(s)} does not exist`);let o,R=!1;"value"===r&&a&&!a.value&&a.get&&(r="get",R=!0,n=a.get()),o=a?a[r]:"value"!==r?()=>e[s]:e[s];let g=v=>{let{value:M,...h}=a||{configurable:!0,writable:!0};"value"!==r&&delete h.writable,h[r]=v,dist_f(e,s,h)};n||(n=o);let i=dist_m(n);"value"===r&&O(i,o);let I=i[u];return l(I,"restore",(()=>a?dist_f(e,s,a):g(o))),l(I,"getOriginal",(()=>R?o():o)),l(I,"willCall",(v=>(I.impl=v,i))),g(R?()=>(O(i,n),i):i),x.add(i),i}const mocks=new Set;function isMockFunction(fn2){return"function"==typeof fn2&&"_isMockFunction"in fn2&&fn2._isMockFunction}function spyOn(obj,method,accessType){return enhanceSpy(dist_C(obj,accessType?{[{get:"getter",set:"setter"}[accessType]]:method}:method))}let callOrder=0;function enhanceSpy(spy){const stub=spy;let implementation,instances=[],contexts=[],invocations=[];const state=T(spy),mockContext={get calls(){return state.calls},get contexts(){return contexts},get instances(){return instances},get invocationCallOrder(){return invocations},get results(){return state.results.map((([callType,value])=>({type:"error"===callType?"throw":"return",value})))},get settledResults(){return state.resolves.map((([callType,value])=>({type:"error"===callType?"rejected":"fulfilled",value})))},get lastCall(){return state.calls[state.calls.length-1]}};let onceImplementations=[],implementationChangedTemporarily=!1;function mockCall(...args){instances.push(this),contexts.push(this),invocations.push(++callOrder);return(implementationChangedTemporarily?implementation:onceImplementations.shift()||implementation||state.getOriginal()||(()=>{})).apply(this,args)}let name=stub.name;return stub.getMockName=()=>name||"vi.fn()",stub.mockName=n=>(name=n,stub),stub.mockClear=()=>(state.reset(),instances=[],contexts=[],invocations=[],stub),stub.mockReset=()=>(stub.mockClear(),implementation=void 0,onceImplementations=[],stub),stub.mockRestore=()=>(stub.mockReset(),state.restore(),stub),stub.getMockImplementation=()=>implementationChangedTemporarily?implementation:onceImplementations.at(0)||implementation,stub.mockImplementation=fn2=>(implementation=fn2,state.willCall(mockCall),stub),stub.mockImplementationOnce=fn2=>(onceImplementations.push(fn2),stub),stub.withImplementation=function withImplementation(fn2,cb){const originalImplementation=implementation;implementation=fn2,state.willCall(mockCall),implementationChangedTemporarily=!0;const reset=()=>{implementation=originalImplementation,implementationChangedTemporarily=!1},result=cb();return result instanceof Promise?result.then((()=>(reset(),stub))):(reset(),stub)},stub.mockReturnThis=()=>stub.mockImplementation((function(){return this})),stub.mockReturnValue=val=>stub.mockImplementation((()=>val)),stub.mockReturnValueOnce=val=>stub.mockImplementationOnce((()=>val)),stub.mockResolvedValue=val=>stub.mockImplementation((()=>Promise.resolve(val))),stub.mockResolvedValueOnce=val=>stub.mockImplementationOnce((()=>Promise.resolve(val))),stub.mockRejectedValue=val=>stub.mockImplementation((()=>Promise.reject(val))),stub.mockRejectedValueOnce=val=>stub.mockImplementationOnce((()=>Promise.reject(val))),Object.defineProperty(stub,"mock",{get:()=>mockContext}),state.willCall(mockCall),mocks.add(stub),stub}function fn(implementation){const enhancedSpy=enhanceSpy(dist_C({spy:implementation||function(){}},"spy"));return implementation&&enhancedSpy.mockImplementation(implementation),enhancedSpy}const IS_RECORD_SYMBOL="@@__IMMUTABLE_RECORD__@@",IS_COLLECTION_SYMBOL="@@__IMMUTABLE_ITERABLE__@@";const OBJECT_PROTO=Object.getPrototypeOf({});function getUnserializableMessage(err){return err instanceof Error?`<unserializable>: ${err.message}`:"string"==typeof err?`<unserializable>: ${err}`:"<unserializable>"}function serializeValue(val,seen=new WeakMap){if(!val||"string"==typeof val)return val;if("function"==typeof val)return`Function<${val.name||"anonymous"}>`;if("symbol"==typeof val)return val.toString();if("object"!=typeof val)return val;if(function isImmutable(v){return v&&(v[IS_COLLECTION_SYMBOL]||v[IS_RECORD_SYMBOL])}(val))return serializeValue(val.toJSON(),seen);if(val instanceof Promise||val.constructor&&"AsyncFunction"===val.constructor.prototype)return"Promise";if("undefined"!=typeof Element&&val instanceof Element)return val.tagName;if("function"==typeof val.asymmetricMatch)return`${val.toString()} ${function chunk_commonjsHelpers_format(...args){if("string"!=typeof args[0]){const objects=[];for(let i2=0;i2<args.length;i2++)objects.push(chunk_commonjsHelpers_inspect(args[i2],{depth:0,colors:!1}));return objects.join(" ")}const len=args.length;let i=1;const template=args[0];let str=String(template).replace(formatRegExp,(x=>{if("%%"===x)return"%";if(i>=len)return x;switch(x){case"%s":{const value=args[i++];return"bigint"==typeof value?`${value.toString()}n`:"number"==typeof value&&0===value&&1/value<0?"-0":"object"==typeof value&&null!==value?"function"==typeof value.toString&&value.toString!==Object.prototype.toString?value.toString():chunk_commonjsHelpers_inspect(value,{depth:0,colors:!1}):String(value)}case"%d":{const value=args[i++];return"bigint"==typeof value?`${value.toString()}n`:Number(value).toString()}case"%i":{const value=args[i++];return"bigint"==typeof value?`${value.toString()}n`:Number.parseInt(String(value)).toString()}case"%f":return Number.parseFloat(String(args[i++])).toString();case"%o":return chunk_commonjsHelpers_inspect(args[i++],{showHidden:!0,showProxy:!0});case"%O":return chunk_commonjsHelpers_inspect(args[i++]);case"%c":return i++,"";case"%j":try{return JSON.stringify(args[i++])}catch(err){const m=err.message;if(m.includes("circular structure")||m.includes("cyclic structures")||m.includes("cyclic object"))return"[Circular]";throw err}default:return x}}));for(let x=args[i];i<len;x=args[++i])str+=null===x||"object"!=typeof x?` ${x}`:` ${chunk_commonjsHelpers_inspect(x)}`;return str}(val.sample)}`;if("function"==typeof val.toJSON)return serializeValue(val.toJSON(),seen);if(seen.has(val))return seen.get(val);if(Array.isArray(val)){const clone=new Array(val.length);return seen.set(val,clone),val.forEach(((e,i)=>{try{clone[i]=serializeValue(e,seen)}catch(err){clone[i]=getUnserializableMessage(err)}})),clone}{const clone=Object.create(null);seen.set(val,clone);let obj=val;for(;obj&&obj!==OBJECT_PROTO;)Object.getOwnPropertyNames(obj).forEach((key=>{if(!(key in clone))try{clone[key]=serializeValue(val[key],seen)}catch(err){delete clone[key],clone[key]=getUnserializableMessage(err)}})),obj=Object.getPrototypeOf(obj);return clone}}function error_processError(_err,diffOptions,seen=new WeakSet){if(!_err||"object"!=typeof _err)return{message:String(_err)};const err=_err;err.stack&&(err.stackStr=String(err.stack)),err.name&&(err.nameStr=String(err.name)),(err.showDiff||void 0===err.showDiff&&void 0!==err.expected&&void 0!==err.actual)&&(err.diff=printDiffOrStringify(err.actual,err.expected,{...diffOptions,...err.diffOptions})),"string"!=typeof err.expected&&(err.expected=stringify(err.expected,10)),"string"!=typeof err.actual&&(err.actual=stringify(err.actual,10));try{"string"==typeof err.message&&(err.message=function normalizeErrorMessage(message){return message.replace(/__(vite_ssr_import|vi_import)_\d+__\./g,"")}(err.message))}catch{}try{seen.has(err)||"object"!=typeof err.cause||(seen.add(err),err.cause=error_processError(err.cause,diffOptions,seen))}catch{}try{return serializeValue(err)}catch(e){return serializeValue(new Error(`Failed to fully serialize error: ${null==e?void 0:e.message}\nInner error message: ${null==err?void 0:err.message}`))}}var cb,mod,chai_Buffer=__webpack_require__("./node_modules/buffer/index.js").Buffer,chai_process=__webpack_require__("./node_modules/process/browser.js"),console=__webpack_require__("./node_modules/console-browserify/index.js"),__defProp=Object.defineProperty,__getOwnPropNames=Object.getOwnPropertyNames,__name=(target,value)=>__defProp(target,"name",{value,configurable:!0}),__export=(target,all)=>{for(var name in all)__defProp(target,name,{get:all[name],enumerable:!0})},require_util=(cb={"(disabled):util"(){}},function __require(){return mod||(0,cb[__getOwnPropNames(cb)[0]])((mod={exports:{}}).exports,mod),mod.exports}),utils_exports={};__export(utils_exports,{addChainableMethod:()=>addChainableMethod,addLengthGuard:()=>addLengthGuard,addMethod:()=>addMethod,addProperty:()=>addProperty,checkError:()=>check_error_exports,compareByInspect:()=>compareByInspect,eql:()=>deep_eql_default,expectTypes:()=>expectTypes,flag:()=>flag,getActual:()=>getActual,getMessage:()=>getMessage2,getName:()=>getName,getOperator:()=>getOperator,getOwnEnumerableProperties:()=>getOwnEnumerableProperties,getOwnEnumerablePropertySymbols:()=>getOwnEnumerablePropertySymbols,getPathInfo:()=>getPathInfo,hasProperty:()=>hasProperty,inspect:()=>inspect2,isNaN:()=>isNaN2,isNumeric:()=>isNumeric,isProxyEnabled:()=>isProxyEnabled,isRegExp:()=>isRegExp2,objDisplay:()=>chai_objDisplay,overwriteChainableMethod:()=>overwriteChainableMethod,overwriteMethod:()=>overwriteMethod,overwriteProperty:()=>overwriteProperty,proxify:()=>proxify,test:()=>chai_test,transferFlags:()=>transferFlags,type:()=>type});var check_error_exports={};function isErrorInstance(obj){return obj instanceof Error||"[object Error]"===Object.prototype.toString.call(obj)}function isRegExp(obj){return"[object RegExp]"===Object.prototype.toString.call(obj)}function compatibleInstance(thrown,errorLike){return isErrorInstance(errorLike)&&thrown===errorLike}function compatibleConstructor(thrown,errorLike){return isErrorInstance(errorLike)?thrown.constructor===errorLike.constructor||thrown instanceof errorLike.constructor:!("object"!=typeof errorLike&&"function"!=typeof errorLike||!errorLike.prototype)&&(thrown.constructor===errorLike||thrown instanceof errorLike)}function compatibleMessage(thrown,errMatcher){const comparisonString="string"==typeof thrown?thrown:thrown.message;return isRegExp(errMatcher)?errMatcher.test(comparisonString):"string"==typeof errMatcher&&-1!==comparisonString.indexOf(errMatcher)}function chai_getConstructorName(errorLike){let constructorName=errorLike;if(isErrorInstance(errorLike))constructorName=errorLike.constructor.name;else if("function"==typeof errorLike&&(constructorName=errorLike.name,""===constructorName)){constructorName=(new errorLike).name||constructorName}return constructorName}function getMessage(errorLike){let msg="";return errorLike&&errorLike.message?msg=errorLike.message:"string"==typeof errorLike&&(msg=errorLike),msg}function flag(obj,key,value){var flags=obj.__flags||(obj.__flags=Object.create(null));if(3!==arguments.length)return flags[key];flags[key]=value}function chai_test(obj,args){var negate=flag(obj,"negate"),expr=args[0];return negate?!expr:expr}function type(obj){if(void 0===obj)return"undefined";if(null===obj)return"null";const stringTag=obj[Symbol.toStringTag];if("string"==typeof stringTag)return stringTag;return Object.prototype.toString.call(obj).slice(8,-1)}__export(check_error_exports,{compatibleConstructor:()=>compatibleConstructor,compatibleInstance:()=>compatibleInstance,compatibleMessage:()=>compatibleMessage,getConstructorName:()=>chai_getConstructorName,getMessage:()=>getMessage}),__name(isErrorInstance,"isErrorInstance"),__name(isRegExp,"isRegExp"),__name(compatibleInstance,"compatibleInstance"),__name(compatibleConstructor,"compatibleConstructor"),__name(compatibleMessage,"compatibleMessage"),__name(chai_getConstructorName,"getConstructorName"),__name(getMessage,"getMessage"),__name(flag,"flag"),__name(chai_test,"test"),__name(type,"type");var canElideFrames="captureStackTrace"in Error,AssertionError=class _AssertionError extends Error{static{__name(this,"AssertionError")}message;get name(){return"AssertionError"}get ok(){return!1}constructor(message="Unspecified AssertionError",props,ssf){super(message),this.message=message,canElideFrames&&Error.captureStackTrace(this,ssf||_AssertionError);for(const key in props)key in this||(this[key]=props[key])}toJSON(stack){return{...this,name:this.name,message:this.message,ok:!1,stack:!1!==stack?this.stack:void 0}}};function expectTypes(obj,types){var flagMsg=flag(obj,"message"),ssfi=flag(obj,"ssfi");flagMsg=flagMsg?flagMsg+": ":"",obj=flag(obj,"object"),(types=types.map((function(t){return t.toLowerCase()}))).sort();var str=types.map((function(t,index){var art=~["a","e","i","o","u"].indexOf(t.charAt(0))?"an":"a";return(types.length>1&&index===types.length-1?"or ":"")+art+" "+t})).join(", "),objType=type(obj).toLowerCase();if(!types.some((function(expected){return objType===expected})))throw new AssertionError(flagMsg+"object tested must be "+str+", but "+objType+" given",void 0,ssfi)}function getActual(obj,args){return args.length>4?args[4]:obj._obj}__name(expectTypes,"expectTypes"),__name(getActual,"getActual");var chai_ansiColors={bold:["1","22"],dim:["2","22"],italic:["3","23"],underline:["4","24"],inverse:["7","27"],hidden:["8","28"],strike:["9","29"],black:["30","39"],red:["31","39"],green:["32","39"],yellow:["33","39"],blue:["34","39"],magenta:["35","39"],cyan:["36","39"],white:["37","39"],brightblack:["30;1","39"],brightred:["31;1","39"],brightgreen:["32;1","39"],brightyellow:["33;1","39"],brightblue:["34;1","39"],brightmagenta:["35;1","39"],brightcyan:["36;1","39"],brightwhite:["37;1","39"],grey:["90","39"]},chai_styles={special:"cyan",number:"yellow",bigint:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",symbol:"green",date:"magenta",regexp:"red"},chai_truncator="…";function chai_colorise(value,styleType){const color=chai_ansiColors[chai_styles[styleType]]||chai_ansiColors[styleType]||"";return color?`[${color[0]}m${String(value)}[${color[1]}m`:String(value)}function chai_normaliseOptions({showHidden=!1,depth=2,colors=!1,customInspect=!0,showProxy=!1,maxArrayLength=1/0,breakLength=1/0,seen=[],truncate:truncate2=1/0,stylize=String}={},inspect3){const options={showHidden:Boolean(showHidden),depth:Number(depth),colors:Boolean(colors),customInspect:Boolean(customInspect),showProxy:Boolean(showProxy),maxArrayLength:Number(maxArrayLength),breakLength:Number(breakLength),truncate:Number(truncate2),seen,inspect:inspect3,stylize};return options.colors&&(options.stylize=chai_colorise),options}function chai_isHighSurrogate(char){return char>="\ud800"&&char<="\udbff"}function chai_truncate(string,length,tail=chai_truncator){string=String(string);const tailLength=tail.length,stringLength=string.length;if(tailLength>length&&stringLength>tailLength)return tail;if(stringLength>length&&stringLength>tailLength){let end=length-tailLength;return end>0&&chai_isHighSurrogate(string[end-1])&&(end-=1),`${string.slice(0,end)}${tail}`}return string}function chai_inspectList(list,options,inspectItem,separator=", "){inspectItem=inspectItem||options.inspect;const size=list.length;if(0===size)return"";const originalLength=options.truncate;let output="",peek="",truncated="";for(let i=0;i<size;i+=1){const last=i+1===list.length,secondToLast=i+2===list.length;truncated=`${chai_truncator}(${list.length-i})`;const value=list[i];options.truncate=originalLength-output.length-(last?0:separator.length);const string=peek||inspectItem(value,options)+(last?"":separator),nextLength=output.length+string.length,truncatedLength=nextLength+truncated.length;if(last&&nextLength>originalLength&&output.length+truncated.length<=originalLength)break;if(!last&&!secondToLast&&truncatedLength>originalLength)break;if(peek=last?"":inspectItem(list[i+1],options)+(secondToLast?"":separator),!last&&secondToLast&&truncatedLength>originalLength&&nextLength+peek.length>originalLength)break;if(output+=string,!last&&!secondToLast&&nextLength+peek.length>=originalLength){truncated=`${chai_truncator}(${list.length-i-1})`;break}truncated=""}return`${output}${truncated}`}function chai_quoteComplexKey(key){return key.match(/^[a-zA-Z_][a-zA-Z_0-9]*$/)?key:JSON.stringify(key).replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'")}function chai_inspectProperty([key,value],options){return options.truncate-=2,"string"==typeof key?key=chai_quoteComplexKey(key):"number"!=typeof key&&(key=`[${options.inspect(key,options)}]`),options.truncate-=key.length,`${key}: ${value=options.inspect(value,options)}`}function chai_inspectArray(array,options){const nonIndexProperties=Object.keys(array).slice(array.length);if(!array.length&&!nonIndexProperties.length)return"[]";options.truncate-=4;const listContents=chai_inspectList(array,options);options.truncate-=listContents.length;let propertyContents="";return nonIndexProperties.length&&(propertyContents=chai_inspectList(nonIndexProperties.map((key=>[key,array[key]])),options,chai_inspectProperty)),`[ ${listContents}${propertyContents?`, ${propertyContents}`:""} ]`}__name(chai_colorise,"colorise"),__name(chai_normaliseOptions,"normaliseOptions"),__name(chai_isHighSurrogate,"isHighSurrogate"),__name(chai_truncate,"truncate"),__name(chai_inspectList,"inspectList"),__name(chai_quoteComplexKey,"quoteComplexKey"),__name(chai_inspectProperty,"inspectProperty"),__name(chai_inspectArray,"inspectArray");var chai_getArrayName=__name((array=>"function"==typeof chai_Buffer&&array instanceof chai_Buffer?"Buffer":array[Symbol.toStringTag]?array[Symbol.toStringTag]:array.constructor.name),"getArrayName");function chai_inspectTypedArray(array,options){const name=chai_getArrayName(array);options.truncate-=name.length+4;const nonIndexProperties=Object.keys(array).slice(array.length);if(!array.length&&!nonIndexProperties.length)return`${name}[]`;let output="";for(let i=0;i<array.length;i++){const string=`${options.stylize(chai_truncate(array[i],options.truncate),"number")}${i===array.length-1?"":", "}`;if(options.truncate-=string.length,array[i]!==array.length&&options.truncate<=3){output+=`${chai_truncator}(${array.length-array[i]+1})`;break}output+=string}let propertyContents="";return nonIndexProperties.length&&(propertyContents=chai_inspectList(nonIndexProperties.map((key=>[key,array[key]])),options,chai_inspectProperty)),`${name}[ ${output}${propertyContents?`, ${propertyContents}`:""} ]`}function chai_inspectDate(dateObject,options){const stringRepresentation=dateObject.toJSON();if(null===stringRepresentation)return"Invalid Date";const split=stringRepresentation.split("T"),date=split[0];return options.stylize(`${date}T${chai_truncate(split[1],options.truncate-date.length-1)}`,"date")}function chai_inspectFunction(func,options){const functionType=func[Symbol.toStringTag]||"Function",name=func.name;return name?options.stylize(`[${functionType} ${chai_truncate(name,options.truncate-11)}]`,"special"):options.stylize(`[${functionType}]`,"special")}function chai_inspectMapEntry([key,value],options){return options.truncate-=4,key=options.inspect(key,options),options.truncate-=key.length,`${key} => ${value=options.inspect(value,options)}`}function chai_mapToEntries(map){const entries=[];return map.forEach(((value,key)=>{entries.push([key,value])})),entries}function chai_inspectMap(map,options){return map.size-1<=0?"Map{}":(options.truncate-=7,`Map{ ${chai_inspectList(chai_mapToEntries(map),options,chai_inspectMapEntry)} }`)}__name(chai_inspectTypedArray,"inspectTypedArray"),__name(chai_inspectDate,"inspectDate"),__name(chai_inspectFunction,"inspectFunction"),__name(chai_inspectMapEntry,"inspectMapEntry"),__name(chai_mapToEntries,"mapToEntries"),__name(chai_inspectMap,"inspectMap");var chai_isNaN=Number.isNaN||(i=>i!=i);function chai_inspectNumber(number,options){return chai_isNaN(number)?options.stylize("NaN","number"):number===1/0?options.stylize("Infinity","number"):number===-1/0?options.stylize("-Infinity","number"):0===number?options.stylize(1/number==1/0?"+0":"-0","number"):options.stylize(chai_truncate(String(number),options.truncate),"number")}function chai_inspectBigInt(number,options){let nums=chai_truncate(number.toString(),options.truncate-1);return nums!==chai_truncator&&(nums+="n"),options.stylize(nums,"bigint")}function chai_inspectRegExp(value,options){const flags=value.toString().split("/")[2],sourceLength=options.truncate-(2+flags.length),source=value.source;return options.stylize(`/${chai_truncate(source,sourceLength)}/${flags}`,"regexp")}function chai_arrayFromSet(set2){const values=[];return set2.forEach((value=>{values.push(value)})),values}function chai_inspectSet(set2,options){return 0===set2.size?"Set{}":(options.truncate-=7,`Set{ ${chai_inspectList(chai_arrayFromSet(set2),options)} }`)}__name(chai_inspectNumber,"inspectNumber"),__name(chai_inspectBigInt,"inspectBigInt"),__name(chai_inspectRegExp,"inspectRegExp"),__name(chai_arrayFromSet,"arrayFromSet"),__name(chai_inspectSet,"inspectSet");var chai_stringEscapeChars=new RegExp("['\\u0000-\\u001f\\u007f-\\u009f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]","g"),chai_escapeCharacters={"\b":"\\b","\t":"\\t","\n":"\\n","\f":"\\f","\r":"\\r","'":"\\'","\\":"\\\\"},chai_hex=16,chai_unicodeLength=4;function chai_escape(char){return chai_escapeCharacters[char]||`\\u${`0000${char.charCodeAt(0).toString(chai_hex)}`.slice(-chai_unicodeLength)}`}function chai_inspectString(string,options){return chai_stringEscapeChars.test(string)&&(string=string.replace(chai_stringEscapeChars,chai_escape)),options.stylize(`'${chai_truncate(string,options.truncate-2)}'`,"string")}function chai_inspectSymbol(value){return"description"in Symbol.prototype?value.description?`Symbol(${value.description})`:"Symbol()":value.toString()}__name(chai_escape,"escape"),__name(chai_inspectString,"inspectString"),__name(chai_inspectSymbol,"inspectSymbol");var chai_getPromiseValue=__name((()=>"Promise{…}"),"getPromiseValue");try{const{getPromiseDetails,kPending,kRejected}=chai_process.binding("util");Array.isArray(getPromiseDetails(Promise.resolve()))&&(chai_getPromiseValue=__name(((value,options)=>{const[state,innerValue]=getPromiseDetails(value);return state===kPending?"Promise{<pending>}":`Promise${state===kRejected?"!":""}{${options.inspect(innerValue,options)}}`}),"getPromiseValue"))}catch(notNode){}var promise_default=chai_getPromiseValue;function chai_inspectObject(object,options){const properties=Object.getOwnPropertyNames(object),symbols=Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(object):[];if(0===properties.length&&0===symbols.length)return"{}";if(options.truncate-=4,options.seen=options.seen||[],options.seen.includes(object))return"[Circular]";options.seen.push(object);const propertyContents=chai_inspectList(properties.map((key=>[key,object[key]])),options,chai_inspectProperty),symbolContents=chai_inspectList(symbols.map((key=>[key,object[key]])),options,chai_inspectProperty);options.seen.pop();let sep="";return propertyContents&&symbolContents&&(sep=", "),`{ ${propertyContents}${sep}${symbolContents} }`}__name(chai_inspectObject,"inspectObject");var chai_toStringTag=!("undefined"==typeof Symbol||!Symbol.toStringTag)&&Symbol.toStringTag;function chai_inspectClass(value,options){let name="";return chai_toStringTag&&chai_toStringTag in value&&(name=value[chai_toStringTag]),name=name||value.constructor.name,name&&"_class"!==name||(name="<Anonymous Class>"),options.truncate-=name.length,`${name}${chai_inspectObject(value,options)}`}function chai_inspectArguments(args,options){return 0===args.length?"Arguments[]":(options.truncate-=13,`Arguments[ ${chai_inspectList(args,options)} ]`)}__name(chai_inspectClass,"inspectClass"),__name(chai_inspectArguments,"inspectArguments");var chai_errorKeys=["stack","line","column","name","message","fileName","lineNumber","columnNumber","number","description","cause"];function inspectObject2(error,options){const properties=Object.getOwnPropertyNames(error).filter((key=>-1===chai_errorKeys.indexOf(key))),name=error.name;options.truncate-=name.length;let message="";if("string"==typeof error.message?message=chai_truncate(error.message,options.truncate):properties.unshift("message"),message=message?`: ${message}`:"",options.truncate-=message.length+5,options.seen=options.seen||[],options.seen.includes(error))return"[Circular]";options.seen.push(error);const propertyContents=chai_inspectList(properties.map((key=>[key,error[key]])),options,chai_inspectProperty);return`${name}${message}${propertyContents?` { ${propertyContents} }`:""}`}function chai_inspectAttribute([key,value],options){return options.truncate-=3,value?`${options.stylize(String(key),"yellow")}=${options.stylize(`"${value}"`,"string")}`:`${options.stylize(String(key),"yellow")}`}function chai_inspectHTMLCollection(collection,options){return chai_inspectList(collection,options,chai_inspectHTML,"\n")}function chai_inspectHTML(element,options){const properties=element.getAttributeNames(),name=element.tagName.toLowerCase(),head=options.stylize(`<${name}`,"special"),headClose=options.stylize(">","special"),tail=options.stylize(`</${name}>`,"special");options.truncate-=2*name.length+5;let propertyContents="";properties.length>0&&(propertyContents+=" ",propertyContents+=chai_inspectList(properties.map((key=>[key,element.getAttribute(key)])),options,chai_inspectAttribute," ")),options.truncate-=propertyContents.length;const truncate2=options.truncate;let children=chai_inspectHTMLCollection(element.children,options);return children&&children.length>truncate2&&(children=`${chai_truncator}(${element.children.length})`),`${head}${propertyContents}${headClose}${children}${tail}`}__name(inspectObject2,"inspectObject"),__name(chai_inspectAttribute,"inspectAttribute"),__name(chai_inspectHTMLCollection,"inspectHTMLCollection"),__name(chai_inspectHTML,"inspectHTML");var chai_chaiInspect="function"==typeof Symbol&&"function"==typeof Symbol.for?Symbol.for("chai/inspect"):"@@chai/inspect",chai_nodeInspect=!1;try{const nodeUtil=require_util();chai_nodeInspect=!!nodeUtil.inspect&&nodeUtil.inspect.custom}catch(noNodeInspect){chai_nodeInspect=!1}var chai_constructorMap=new WeakMap,chai_stringTagMap={},chai_baseTypesMap={undefined:(value,options)=>options.stylize("undefined","undefined"),null:(value,options)=>options.stylize("null","null"),boolean:(value,options)=>options.stylize(String(value),"boolean"),Boolean:(value,options)=>options.stylize(String(value),"boolean"),number:chai_inspectNumber,Number:chai_inspectNumber,bigint:chai_inspectBigInt,BigInt:chai_inspectBigInt,string:chai_inspectString,String:chai_inspectString,function:chai_inspectFunction,Function:chai_inspectFunction,symbol:chai_inspectSymbol,Symbol:chai_inspectSymbol,Array:chai_inspectArray,Date:chai_inspectDate,Map:chai_inspectMap,Set:chai_inspectSet,RegExp:chai_inspectRegExp,Promise:promise_default,WeakSet:(value,options)=>options.stylize("WeakSet{…}","special"),WeakMap:(value,options)=>options.stylize("WeakMap{…}","special"),Arguments:chai_inspectArguments,Int8Array:chai_inspectTypedArray,Uint8Array:chai_inspectTypedArray,Uint8ClampedArray:chai_inspectTypedArray,Int16Array:chai_inspectTypedArray,Uint16Array:chai_inspectTypedArray,Int32Array:chai_inspectTypedArray,Uint32Array:chai_inspectTypedArray,Float32Array:chai_inspectTypedArray,Float64Array:chai_inspectTypedArray,Generator:()=>"",DataView:()=>"",ArrayBuffer:()=>"",Error:inspectObject2,HTMLCollection:chai_inspectHTMLCollection,NodeList:chai_inspectHTMLCollection},chai_inspectCustom=__name(((value,options,type3)=>chai_chaiInspect in value&&"function"==typeof value[chai_chaiInspect]?value[chai_chaiInspect](options):chai_nodeInspect&&chai_nodeInspect in value&&"function"==typeof value[chai_nodeInspect]?value[chai_nodeInspect](options.depth,options):"inspect"in value&&"function"==typeof value.inspect?value.inspect(options.depth,options):"constructor"in value&&chai_constructorMap.has(value.constructor)?chai_constructorMap.get(value.constructor)(value,options):chai_stringTagMap[type3]?chai_stringTagMap[type3](value,options):""),"inspectCustom"),chai_toString=Object.prototype.toString;function chai_inspect(value,opts={}){const options=chai_normaliseOptions(opts,chai_inspect),{customInspect}=options;let type3=null===value?"null":typeof value;if("object"===type3&&(type3=chai_toString.call(value).slice(8,-1)),type3 in chai_baseTypesMap)return chai_baseTypesMap[type3](value,options);if(customInspect&&value){const output=chai_inspectCustom(value,options,type3);if(output)return"string"==typeof output?output:chai_inspect(output,options)}const proto=!!value&&Object.getPrototypeOf(value);return proto===Object.prototype||null===proto?chai_inspectObject(value,options):value&&"function"==typeof HTMLElement&&value instanceof HTMLElement?chai_inspectHTML(value,options):"constructor"in value?value.constructor!==Object?chai_inspectClass(value,options):chai_inspectObject(value,options):value===Object(value)?chai_inspectObject(value,options):options.stylize(String(value),type3)}__name(chai_inspect,"inspect");var config={includeStack:!1,showDiff:!0,truncateThreshold:40,useProxy:!0,proxyExcludedKeys:["then","catch","inspect","toJSON"],deepEqual:null};function inspect2(obj,showHidden,depth,colors){return chai_inspect(obj,{colors,depth:void 0===depth?2:depth,showHidden,truncate:config.truncateThreshold?config.truncateThreshold:1/0})}function chai_objDisplay(obj){var str=inspect2(obj),type3=Object.prototype.toString.call(obj);if(config.truncateThreshold&&str.length>=config.truncateThreshold){if("[object Function]"===type3)return obj.name&&""!==obj.name?"[Function: "+obj.name+"]":"[Function]";if("[object Array]"===type3)return"[ Array("+obj.length+") ]";if("[object Object]"===type3){var keys=Object.keys(obj);return"{ Object ("+(keys.length>2?keys.splice(0,2).join(", ")+", ...":keys.join(", "))+") }"}return str}return str}function getMessage2(obj,args){var negate=flag(obj,"negate"),val=flag(obj,"object"),expected=args[3],actual=getActual(obj,args),msg=negate?args[2]:args[1],flagMsg=flag(obj,"message");return"function"==typeof msg&&(msg=msg()),msg=(msg=msg||"").replace(/#\{this\}/g,(function(){return chai_objDisplay(val)})).replace(/#\{act\}/g,(function(){return chai_objDisplay(actual)})).replace(/#\{exp\}/g,(function(){return chai_objDisplay(expected)})),flagMsg?flagMsg+": "+msg:msg}function transferFlags(assertion,object,includeAll){var flags=assertion.__flags||(assertion.__flags=Object.create(null));for(var flag3 in object.__flags||(object.__flags=Object.create(null)),includeAll=3!==arguments.length||includeAll,flags)(includeAll||"object"!==flag3&&"ssfi"!==flag3&&"lockSsfi"!==flag3&&"message"!=flag3)&&(object.__flags[flag3]=flags[flag3])}function type2(obj){if(void 0===obj)return"undefined";if(null===obj)return"null";const stringTag=obj[Symbol.toStringTag];if("string"==typeof stringTag)return stringTag;return Object.prototype.toString.call(obj).slice(8,-1)}function FakeMap(){this._key="chai/deep-eql__"+Math.random()+Date.now()}__name(inspect2,"inspect"),__name(chai_objDisplay,"objDisplay"),__name(getMessage2,"getMessage"),__name(transferFlags,"transferFlags"),__name(type2,"type"),__name(FakeMap,"FakeMap"),FakeMap.prototype={get:__name((function get(key){return key[this._key]}),"get"),set:__name((function set(key,value){Object.isExtensible(key)&&Object.defineProperty(key,this._key,{value,configurable:!0})}),"set")};var MemoizeMap="function"==typeof WeakMap?WeakMap:FakeMap;function memoizeCompare(leftHandOperand,rightHandOperand,memoizeMap){if(!memoizeMap||chai_isPrimitive(leftHandOperand)||chai_isPrimitive(rightHandOperand))return null;var leftHandMap=memoizeMap.get(leftHandOperand);if(leftHandMap){var result=leftHandMap.get(rightHandOperand);if("boolean"==typeof result)return result}return null}function memoizeSet(leftHandOperand,rightHandOperand,memoizeMap,result){if(memoizeMap&&!chai_isPrimitive(leftHandOperand)&&!chai_isPrimitive(rightHandOperand)){var leftHandMap=memoizeMap.get(leftHandOperand);leftHandMap?leftHandMap.set(rightHandOperand,result):((leftHandMap=new MemoizeMap).set(rightHandOperand,result),memoizeMap.set(leftHandOperand,leftHandMap))}}__name(memoizeCompare,"memoizeCompare"),__name(memoizeSet,"memoizeSet");var deep_eql_default=deepEqual;function deepEqual(leftHandOperand,rightHandOperand,options){if(options&&options.comparator)return extensiveDeepEqual(leftHandOperand,rightHandOperand,options);var simpleResult=simpleEqual(leftHandOperand,rightHandOperand);return null!==simpleResult?simpleResult:extensiveDeepEqual(leftHandOperand,rightHandOperand,options)}function simpleEqual(leftHandOperand,rightHandOperand){return leftHandOperand===rightHandOperand?0!==leftHandOperand||1/leftHandOperand==1/rightHandOperand:leftHandOperand!=leftHandOperand&&rightHandOperand!=rightHandOperand||!chai_isPrimitive(leftHandOperand)&&!chai_isPrimitive(rightHandOperand)&&null}function extensiveDeepEqual(leftHandOperand,rightHandOperand,options){(options=options||{}).memoize=!1!==options.memoize&&(options.memoize||new MemoizeMap);var comparator=options&&options.comparator,memoizeResultLeft=memoizeCompare(leftHandOperand,rightHandOperand,options.memoize);if(null!==memoizeResultLeft)return memoizeResultLeft;var memoizeResultRight=memoizeCompare(rightHandOperand,leftHandOperand,options.memoize);if(null!==memoizeResultRight)return memoizeResultRight;if(comparator){var comparatorResult=comparator(leftHandOperand,rightHandOperand);if(!1===comparatorResult||!0===comparatorResult)return memoizeSet(leftHandOperand,rightHandOperand,options.memoize,comparatorResult),comparatorResult;var simpleResult=simpleEqual(leftHandOperand,rightHandOperand);if(null!==simpleResult)return simpleResult}var leftHandType=type2(leftHandOperand);if(leftHandType!==type2(rightHandOperand))return memoizeSet(leftHandOperand,rightHandOperand,options.memoize,!1),!1;memoizeSet(leftHandOperand,rightHandOperand,options.memoize,!0);var result=extensiveDeepEqualByType(leftHandOperand,rightHandOperand,leftHandType,options);return memoizeSet(leftHandOperand,rightHandOperand,options.memoize,result),result}function extensiveDeepEqualByType(leftHandOperand,rightHandOperand,leftHandType,options){switch(leftHandType){case"String":case"Number":case"Boolean":case"Date":return deepEqual(leftHandOperand.valueOf(),rightHandOperand.valueOf());case"Promise":case"Symbol":case"function":case"WeakMap":case"WeakSet":return leftHandOperand===rightHandOperand;case"Error":return keysEqual(leftHandOperand,rightHandOperand,["name","message","code"],options);case"Arguments":case"Int8Array":case"Uint8Array":case"Uint8ClampedArray":case"Int16Array":case"Uint16Array":case"Int32Array":case"Uint32Array":case"Float32Array":case"Float64Array":case"Array":return iterableEqual(leftHandOperand,rightHandOperand,options);case"RegExp":return regexpEqual(leftHandOperand,rightHandOperand);case"Generator":return generatorEqual(leftHandOperand,rightHandOperand,options);case"DataView":return iterableEqual(new Uint8Array(leftHandOperand.buffer),new Uint8Array(rightHandOperand.buffer),options);case"ArrayBuffer":return iterableEqual(new Uint8Array(leftHandOperand),new Uint8Array(rightHandOperand),options);case"Set":case"Map":return entriesEqual(leftHandOperand,rightHandOperand,options);case"Temporal.PlainDate":case"Temporal.PlainTime":case"Temporal.PlainDateTime":case"Temporal.Instant":case"Temporal.ZonedDateTime":case"Temporal.PlainYearMonth":case"Temporal.PlainMonthDay":return leftHandOperand.equals(rightHandOperand);case"Temporal.Duration":return leftHandOperand.total("nanoseconds")===rightHandOperand.total("nanoseconds");case"Temporal.TimeZone":case"Temporal.Calendar":return leftHandOperand.toString()===rightHandOperand.toString();default:return objectEqual(leftHandOperand,rightHandOperand,options)}}function regexpEqual(leftHandOperand,rightHandOperand){return leftHandOperand.toString()===rightHandOperand.toString()}function entriesEqual(leftHandOperand,rightHandOperand,options){try{if(leftHandOperand.size!==rightHandOperand.size)return!1;if(0===leftHandOperand.size)return!0}catch(sizeError){return!1}var leftHandItems=[],rightHandItems=[];return leftHandOperand.forEach(__name((function gatherEntries(key,value){leftHandItems.push([key,value])}),"gatherEntries")),rightHandOperand.forEach(__name((function gatherEntries(key,value){rightHandItems.push([key,value])}),"gatherEntries")),iterableEqual(leftHandItems.sort(),rightHandItems.sort(),options)}function iterableEqual(leftHandOperand,rightHandOperand,options){var length=leftHandOperand.length;if(length!==rightHandOperand.length)return!1;if(0===length)return!0;for(var index=-1;++index<length;)if(!1===deepEqual(leftHandOperand[index],rightHandOperand[index],options))return!1;return!0}function generatorEqual(leftHandOperand,rightHandOperand,options){return iterableEqual(getGeneratorEntries(leftHandOperand),getGeneratorEntries(rightHandOperand),options)}function hasIteratorFunction(target){return"undefined"!=typeof Symbol&&"object"==typeof target&&void 0!==Symbol.iterator&&"function"==typeof target[Symbol.iterator]}function getIteratorEntries(target){if(hasIteratorFunction(target))try{return getGeneratorEntries(target[Symbol.iterator]())}catch(iteratorError){return[]}return[]}function getGeneratorEntries(generator){for(var generatorResult=generator.next(),accumulator=[generatorResult.value];!1===generatorResult.done;)generatorResult=generator.next(),accumulator.push(generatorResult.value);return accumulator}function getEnumerableKeys(target){var keys=[];for(var key in target)keys.push(key);return keys}function getEnumerableSymbols(target){for(var keys=[],allKeys=Object.getOwnPropertySymbols(target),i=0;i<allKeys.length;i+=1){var key=allKeys[i];Object.getOwnPropertyDescriptor(target,key).enumerable&&keys.push(key)}return keys}function keysEqual(leftHandOperand,rightHandOperand,keys,options){var length=keys.length;if(0===length)return!0;for(var i=0;i<length;i+=1)if(!1===deepEqual(leftHandOperand[keys[i]],rightHandOperand[keys[i]],options))return!1;return!0}function objectEqual(leftHandOperand,rightHandOperand,options){var leftHandKeys=getEnumerableKeys(leftHandOperand),rightHandKeys=getEnumerableKeys(rightHandOperand),leftHandSymbols=getEnumerableSymbols(leftHandOperand),rightHandSymbols=getEnumerableSymbols(rightHandOperand);if(leftHandKeys=leftHandKeys.concat(leftHandSymbols),rightHandKeys=rightHandKeys.concat(rightHandSymbols),leftHandKeys.length&&leftHandKeys.length===rightHandKeys.length)return!1!==iterableEqual(mapSymbols(leftHandKeys).sort(),mapSymbols(rightHandKeys).sort())&&keysEqual(leftHandOperand,rightHandOperand,leftHandKeys,options);var leftHandEntries=getIteratorEntries(leftHandOperand),rightHandEntries=getIteratorEntries(rightHandOperand);return leftHandEntries.length&&leftHandEntries.length===rightHandEntries.length?(leftHandEntries.sort(),rightHandEntries.sort(),iterableEqual(leftHandEntries,rightHandEntries,options)):0===leftHandKeys.length&&0===leftHandEntries.length&&0===rightHandKeys.length&&0===rightHandEntries.length}function chai_isPrimitive(value){return null===value||"object"!=typeof value}function mapSymbols(arr){return arr.map(__name((function mapSymbol(entry){return"symbol"==typeof entry?entry.toString():entry}),"mapSymbol"))}function hasProperty(obj,name){return null!=obj&&name in Object(obj)}function parsePath(path){return path.replace(/([^\\])\[/g,"$1.[").match(/(\\\.|[^.]+?)+/g).map((value=>{if("constructor"===value||"__proto__"===value||"prototype"===value)return{};const mArr=/^\[(\d+)\]$/.exec(value);let parsed=null;return parsed=mArr?{i:parseFloat(mArr[1])}:{p:value.replace(/\\([.[\]])/g,"$1")},parsed}))}function internalGetPathValue(obj,parsed,pathDepth){let temporaryValue=obj,res=null;pathDepth=void 0===pathDepth?parsed.length:pathDepth;for(let i=0;i<pathDepth;i++){const part=parsed[i];temporaryValue&&(temporaryValue=void 0===part.p?temporaryValue[part.i]:temporaryValue[part.p],i===pathDepth-1&&(res=temporaryValue))}return res}function getPathInfo(obj,path){const parsed=parsePath(path),last=parsed[parsed.length-1],info={parent:parsed.length>1?internalGetPathValue(obj,parsed,parsed.length-1):obj,name:last.p||last.i,value:internalGetPathValue(obj,parsed)};return info.exists=hasProperty(info.parent,info.name),info}function Assertion(obj,msg,ssfi,lockSsfi){return flag(this,"ssfi",ssfi||Assertion),flag(this,"lockSsfi",lockSsfi),flag(this,"object",obj),flag(this,"message",msg),flag(this,"eql",config.deepEqual||deep_eql_default),proxify(this)}function isProxyEnabled(){return config.useProxy&&"undefined"!=typeof Proxy&&"undefined"!=typeof Reflect}function addProperty(ctx,name,getter){getter=void 0===getter?function(){}:getter,Object.defineProperty(ctx,name,{get:__name((function propertyGetter(){isProxyEnabled()||flag(this,"lockSsfi")||flag(this,"ssfi",propertyGetter);var result=getter.call(this);if(void 0!==result)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion}),"propertyGetter"),configurable:!0})}__name(deepEqual,"deepEqual"),__name(simpleEqual,"simpleEqual"),__name(extensiveDeepEqual,"extensiveDeepEqual"),__name(extensiveDeepEqualByType,"extensiveDeepEqualByType"),__name(regexpEqual,"regexpEqual"),__name(entriesEqual,"entriesEqual"),__name(iterableEqual,"iterableEqual"),__name(generatorEqual,"generatorEqual"),__name(hasIteratorFunction,"hasIteratorFunction"),__name(getIteratorEntries,"getIteratorEntries"),__name(getGeneratorEntries,"getGeneratorEntries"),__name(getEnumerableKeys,"getEnumerableKeys"),__name(getEnumerableSymbols,"getEnumerableSymbols"),__name(keysEqual,"keysEqual"),__name(objectEqual,"objectEqual"),__name(chai_isPrimitive,"isPrimitive"),__name(mapSymbols,"mapSymbols"),__name(hasProperty,"hasProperty"),__name(parsePath,"parsePath"),__name(internalGetPathValue,"internalGetPathValue"),__name(getPathInfo,"getPathInfo"),__name(Assertion,"Assertion"),Object.defineProperty(Assertion,"includeStack",{get:function(){return console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),config.includeStack},set:function(value){console.warn("Assertion.includeStack is deprecated, use chai.config.includeStack instead."),config.includeStack=value}}),Object.defineProperty(Assertion,"showDiff",{get:function(){return console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),config.showDiff},set:function(value){console.warn("Assertion.showDiff is deprecated, use chai.config.showDiff instead."),config.showDiff=value}}),Assertion.addProperty=function(name,fn){addProperty(this.prototype,name,fn)},Assertion.addMethod=function(name,fn){addMethod(this.prototype,name,fn)},Assertion.addChainableMethod=function(name,fn,chainingBehavior){addChainableMethod(this.prototype,name,fn,chainingBehavior)},Assertion.overwriteProperty=function(name,fn){overwriteProperty(this.prototype,name,fn)},Assertion.overwriteMethod=function(name,fn){overwriteMethod(this.prototype,name,fn)},Assertion.overwriteChainableMethod=function(name,fn,chainingBehavior){overwriteChainableMethod(this.prototype,name,fn,chainingBehavior)},Assertion.prototype.assert=function(expr,msg,negateMsg,expected,_actual,showDiff){var ok=chai_test(this,arguments);if(!1!==showDiff&&(showDiff=!0),void 0===expected&&void 0===_actual&&(showDiff=!1),!0!==config.showDiff&&(showDiff=!1),!ok){msg=getMessage2(this,arguments);var assertionErrorObjectProperties={actual:getActual(this,arguments),expected,showDiff},operator=getOperator(this,arguments);throw operator&&(assertionErrorObjectProperties.operator=operator),new AssertionError(msg,assertionErrorObjectProperties,config.includeStack?this.assert:flag(this,"ssfi"))}},Object.defineProperty(Assertion.prototype,"_obj",{get:function(){return flag(this,"object")},set:function(val){flag(this,"object",val)}}),__name(isProxyEnabled,"isProxyEnabled"),__name(addProperty,"addProperty");var fnLengthDesc=Object.getOwnPropertyDescriptor((function(){}),"length");function addLengthGuard(fn,assertionName,isChainable){return fnLengthDesc.configurable?(Object.defineProperty(fn,"length",{get:function(){if(isChainable)throw Error("Invalid Chai property: "+assertionName+'.length. Due to a compatibility issue, "length" cannot directly follow "'+assertionName+'". Use "'+assertionName+'.lengthOf" instead.');throw Error("Invalid Chai property: "+assertionName+'.length. See docs for proper usage of "'+assertionName+'".')}}),fn):fn}function getProperties(object){var result=Object.getOwnPropertyNames(object);function addProperty2(property){-1===result.indexOf(property)&&result.push(property)}__name(addProperty2,"addProperty");for(var proto=Object.getPrototypeOf(object);null!==proto;)Object.getOwnPropertyNames(proto).forEach(addProperty2),proto=Object.getPrototypeOf(proto);return result}__name(addLengthGuard,"addLengthGuard"),__name(getProperties,"getProperties");var builtins=["__flags","__methods","_obj","assert"];function proxify(obj,nonChainableMethodName){return isProxyEnabled()?new Proxy(obj,{get:__name((function proxyGetter(target,property){if("string"==typeof property&&-1===config.proxyExcludedKeys.indexOf(property)&&!Reflect.has(target,property)){if(nonChainableMethodName)throw Error("Invalid Chai property: "+nonChainableMethodName+"."+property+'. See docs for proper usage of "'+nonChainableMethodName+'".');var suggestion=null,suggestionDistance=4;throw getProperties(target).forEach((function(prop){if(!Object.prototype.hasOwnProperty(prop)&&-1===builtins.indexOf(prop)){var dist=stringDistanceCapped(property,prop,suggestionDistance);dist<suggestionDistance&&(suggestion=prop,suggestionDistance=dist)}})),null!==suggestion?Error("Invalid Chai property: "+property+'. Did you mean "'+suggestion+'"?'):Error("Invalid Chai property: "+property)}return-1!==builtins.indexOf(property)||flag(target,"lockSsfi")||flag(target,"ssfi",proxyGetter),Reflect.get(target,property)}),"proxyGetter")}):obj}function stringDistanceCapped(strA,strB,cap){if(Math.abs(strA.length-strB.length)>=cap)return cap;var memo=[];for(let i=0;i<=strA.length;i++)memo[i]=Array(strB.length+1).fill(0),memo[i][0]=i;for(let j=0;j<strB.length;j++)memo[0][j]=j;for(let i=1;i<=strA.length;i++){var ch=strA.charCodeAt(i-1);for(let j=1;j<=strB.length;j++)Math.abs(i-j)>=cap?memo[i][j]=cap:memo[i][j]=Math.min(memo[i-1][j]+1,memo[i][j-1]+1,memo[i-1][j-1]+(ch===strB.charCodeAt(j-1)?0:1))}return memo[strA.length][strB.length]}function addMethod(ctx,name,method){var methodWrapper=__name((function(){flag(this,"lockSsfi")||flag(this,"ssfi",methodWrapper);var result=method.apply(this,arguments);if(void 0!==result)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion}),"methodWrapper");addLengthGuard(methodWrapper,name,!1),ctx[name]=proxify(methodWrapper,name)}function overwriteProperty(ctx,name,getter){var _get=Object.getOwnPropertyDescriptor(ctx,name),_super=__name((function(){}),"_super");_get&&"function"==typeof _get.get&&(_super=_get.get),Object.defineProperty(ctx,name,{get:__name((function overwritingPropertyGetter(){isProxyEnabled()||flag(this,"lockSsfi")||flag(this,"ssfi",overwritingPropertyGetter);var origLockSsfi=flag(this,"lockSsfi");flag(this,"lockSsfi",!0);var result=getter(_super).call(this);if(flag(this,"lockSsfi",origLockSsfi),void 0!==result)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion}),"overwritingPropertyGetter"),configurable:!0})}function overwriteMethod(ctx,name,method){var _method=ctx[name],_super=__name((function(){throw new Error(name+" is not a function")}),"_super");_method&&"function"==typeof _method&&(_super=_method);var overwritingMethodWrapper=__name((function(){flag(this,"lockSsfi")||flag(this,"ssfi",overwritingMethodWrapper);var origLockSsfi=flag(this,"lockSsfi");flag(this,"lockSsfi",!0);var result=method(_super).apply(this,arguments);if(flag(this,"lockSsfi",origLockSsfi),void 0!==result)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion}),"overwritingMethodWrapper");addLengthGuard(overwritingMethodWrapper,name,!1),ctx[name]=proxify(overwritingMethodWrapper,name)}__name(proxify,"proxify"),__name(stringDistanceCapped,"stringDistanceCapped"),__name(addMethod,"addMethod"),__name(overwriteProperty,"overwriteProperty"),__name(overwriteMethod,"overwriteMethod");var canSetPrototype="function"==typeof Object.setPrototypeOf,testFn=__name((function(){}),"testFn"),excludeNames=Object.getOwnPropertyNames(testFn).filter((function(name){var propDesc=Object.getOwnPropertyDescriptor(testFn,name);return"object"!=typeof propDesc||!propDesc.configurable})),call=Function.prototype.call,apply=Function.prototype.apply;function addChainableMethod(ctx,name,method,chainingBehavior){"function"!=typeof chainingBehavior&&(chainingBehavior=__name((function(){}),"chainingBehavior"));var chainableBehavior={method,chainingBehavior};ctx.__methods||(ctx.__methods={}),ctx.__methods[name]=chainableBehavior,Object.defineProperty(ctx,name,{get:__name((function chainableMethodGetter(){chainableBehavior.chainingBehavior.call(this);var chainableMethodWrapper=__name((function(){flag(this,"lockSsfi")||flag(this,"ssfi",chainableMethodWrapper);var result=chainableBehavior.method.apply(this,arguments);if(void 0!==result)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion}),"chainableMethodWrapper");if(addLengthGuard(chainableMethodWrapper,name,!0),canSetPrototype){var prototype=Object.create(this);prototype.call=call,prototype.apply=apply,Object.setPrototypeOf(chainableMethodWrapper,prototype)}else{Object.getOwnPropertyNames(ctx).forEach((function(asserterName){if(-1===excludeNames.indexOf(asserterName)){var pd=Object.getOwnPropertyDescriptor(ctx,asserterName);Object.defineProperty(chainableMethodWrapper,asserterName,pd)}}))}return transferFlags(this,chainableMethodWrapper),proxify(chainableMethodWrapper)}),"chainableMethodGetter"),configurable:!0})}function overwriteChainableMethod(ctx,name,method,chainingBehavior){var chainableBehavior=ctx.__methods[name],_chainingBehavior=chainableBehavior.chainingBehavior;chainableBehavior.chainingBehavior=__name((function overwritingChainableMethodGetter(){var result=chainingBehavior(_chainingBehavior).call(this);if(void 0!==result)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion}),"overwritingChainableMethodGetter");var _method=chainableBehavior.method;chainableBehavior.method=__name((function overwritingChainableMethodWrapper(){var result=method(_method).apply(this,arguments);if(void 0!==result)return result;var newAssertion=new Assertion;return transferFlags(this,newAssertion),newAssertion}),"overwritingChainableMethodWrapper")}function compareByInspect(a,b){return inspect2(a)<inspect2(b)?-1:1}function getOwnEnumerablePropertySymbols(obj){return"function"!=typeof Object.getOwnPropertySymbols?[]:Object.getOwnPropertySymbols(obj).filter((function(sym){return Object.getOwnPropertyDescriptor(obj,sym).enumerable}))}function getOwnEnumerableProperties(obj){return Object.keys(obj).concat(getOwnEnumerablePropertySymbols(obj))}__name(addChainableMethod,"addChainableMethod"),__name(overwriteChainableMethod,"overwriteChainableMethod"),__name(compareByInspect,"compareByInspect"),__name(getOwnEnumerablePropertySymbols,"getOwnEnumerablePropertySymbols"),__name(getOwnEnumerableProperties,"getOwnEnumerableProperties");var isNaN2=Number.isNaN;function isObjectType(obj){var objectType=type(obj);return-1!==["Array","Object","Function"].indexOf(objectType)}function getOperator(obj,args){var operator=flag(obj,"operator"),negate=flag(obj,"negate"),expected=args[3],msg=negate?args[2]:args[1];if(operator)return operator;if("function"==typeof msg&&(msg=msg()),(msg=msg||"")&&!/\shave\s/.test(msg)){var isObject=isObjectType(expected);return/\snot\s/.test(msg)?isObject?"notDeepStrictEqual":"notStrictEqual":isObject?"deepStrictEqual":"strictEqual"}}function getName(fn){return fn.name}function isRegExp2(obj){return"[object RegExp]"===Object.prototype.toString.call(obj)}function isNumeric(obj){return["Number","BigInt"].includes(type(obj))}__name(isObjectType,"isObjectType"),__name(getOperator,"getOperator"),__name(getName,"getName"),__name(isRegExp2,"isRegExp"),__name(isNumeric,"isNumeric");var{flag:flag2}=utils_exports;["to","be","been","is","and","has","have","with","that","which","at","of","same","but","does","still","also"].forEach((function(chain){Assertion.addProperty(chain)})),Assertion.addProperty("not",(function(){flag2(this,"negate",!0)})),Assertion.addProperty("deep",(function(){flag2(this,"deep",!0)})),Assertion.addProperty("nested",(function(){flag2(this,"nested",!0)})),Assertion.addProperty("own",(function(){flag2(this,"own",!0)})),Assertion.addProperty("ordered",(function(){flag2(this,"ordered",!0)})),Assertion.addProperty("any",(function(){flag2(this,"any",!0),flag2(this,"all",!1)})),Assertion.addProperty("all",(function(){flag2(this,"all",!0),flag2(this,"any",!1)}));var functionTypes={function:["function","asyncfunction","generatorfunction","asyncgeneratorfunction"],asyncfunction:["asyncfunction","asyncgeneratorfunction"],generatorfunction:["generatorfunction","asyncgeneratorfunction"],asyncgeneratorfunction:["asyncgeneratorfunction"]};function an(type3,msg){msg&&flag2(this,"message",msg),type3=type3.toLowerCase();var obj=flag2(this,"object"),article=~["a","e","i","o","u"].indexOf(type3.charAt(0))?"an ":"a ";const detectedType=type(obj).toLowerCase();functionTypes.function.includes(type3)?this.assert(functionTypes[type3].includes(detectedType),"expected #{this} to be "+article+type3,"expected #{this} not to be "+article+type3):this.assert(type3===detectedType,"expected #{this} to be "+article+type3,"expected #{this} not to be "+article+type3)}function SameValueZero(a,b){return isNaN2(a)&&isNaN2(b)||a===b}function includeChainingBehavior(){flag2(this,"contains",!0)}function include(val,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),objType=type(obj).toLowerCase(),flagMsg=flag2(this,"message"),negate=flag2(this,"negate"),ssfi=flag2(this,"ssfi"),isDeep=flag2(this,"deep"),descriptor=isDeep?"deep ":"",isEql=isDeep?flag2(this,"eql"):SameValueZero;flagMsg=flagMsg?flagMsg+": ":"";var included=!1;switch(objType){case"string":included=-1!==obj.indexOf(val);break;case"weakset":if(isDeep)throw new AssertionError(flagMsg+"unable to use .deep.include with WeakSet",void 0,ssfi);included=obj.has(val);break;case"map":obj.forEach((function(item){included=included||isEql(item,val)}));break;case"set":isDeep?obj.forEach((function(item){included=included||isEql(item,val)})):included=obj.has(val);break;case"array":included=isDeep?obj.some((function(item){return isEql(item,val)})):-1!==obj.indexOf(val);break;default:if(val!==Object(val))throw new AssertionError(flagMsg+"the given combination of arguments ("+objType+" and "+type(val).toLowerCase()+") is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a "+type(val).toLowerCase(),void 0,ssfi);var props=Object.keys(val),firstErr=null,numErrs=0;if(props.forEach((function(prop){var propAssertion=new Assertion(obj);if(transferFlags(this,propAssertion,!0),flag2(propAssertion,"lockSsfi",!0),negate&&1!==props.length)try{propAssertion.property(prop,val[prop])}catch(err){if(!check_error_exports.compatibleConstructor(err,AssertionError))throw err;null===firstErr&&(firstErr=err),numErrs++}else propAssertion.property(prop,val[prop])}),this),negate&&props.length>1&&numErrs===props.length)throw firstErr;return}this.assert(included,"expected #{this} to "+descriptor+"include "+inspect2(val),"expected #{this} to not "+descriptor+"include "+inspect2(val))}function assertExist(){var val=flag2(this,"object");this.assert(null!=val,"expected #{this} to exist","expected #{this} to not exist")}function checkArguments(){var type3=type(flag2(this,"object"));this.assert("Arguments"===type3,"expected #{this} to be arguments but got "+type3,"expected #{this} to not be arguments")}function assertEqual(val,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object");if(flag2(this,"deep")){var prevLockSsfi=flag2(this,"lockSsfi");flag2(this,"lockSsfi",!0),this.eql(val),flag2(this,"lockSsfi",prevLockSsfi)}else this.assert(val===obj,"expected #{this} to equal #{exp}","expected #{this} to not equal #{exp}",val,this._obj,!0)}function assertEql(obj,msg){msg&&flag2(this,"message",msg);var eql=flag2(this,"eql");this.assert(eql(obj,flag2(this,"object")),"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",obj,this._obj,!0)}function assertAbove(n,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),doLength=flag2(this,"doLength"),flagMsg=flag2(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag2(this,"ssfi"),objType=type(obj).toLowerCase(),nType=type(n).toLowerCase();if(doLength&&"map"!==objType&&"set"!==objType&&new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),!doLength&&"date"===objType&&"date"!==nType)throw new AssertionError(msgPrefix+"the argument to above must be a date",void 0,ssfi);if(!isNumeric(n)&&(doLength||isNumeric(obj)))throw new AssertionError(msgPrefix+"the argument to above must be a number",void 0,ssfi);if(!doLength&&"date"!==objType&&!isNumeric(obj))throw new AssertionError(msgPrefix+"expected "+("string"===objType?"'"+obj+"'":obj)+" to be a number or a date",void 0,ssfi);if(doLength){var itemsCount,descriptor="length";"map"===objType||"set"===objType?(descriptor="size",itemsCount=obj.size):itemsCount=obj.length,this.assert(itemsCount>n,"expected #{this} to have a "+descriptor+" above #{exp} but got #{act}","expected #{this} to not have a "+descriptor+" above #{exp}",n,itemsCount)}else this.assert(obj>n,"expected #{this} to be above #{exp}","expected #{this} to be at most #{exp}",n)}function assertLeast(n,msg){msg&&flag2(this,"message",msg);var errorMessage,obj=flag2(this,"object"),doLength=flag2(this,"doLength"),flagMsg=flag2(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag2(this,"ssfi"),objType=type(obj).toLowerCase(),nType=type(n).toLowerCase(),shouldThrow=!0;if(doLength&&"map"!==objType&&"set"!==objType&&new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),doLength||"date"!==objType||"date"===nType)if(isNumeric(n)||!doLength&&!isNumeric(obj))if(doLength||"date"===objType||isNumeric(obj))shouldThrow=!1;else{errorMessage=msgPrefix+"expected "+("string"===objType?"'"+obj+"'":obj)+" to be a number or a date"}else errorMessage=msgPrefix+"the argument to least must be a number";else errorMessage=msgPrefix+"the argument to least must be a date";if(shouldThrow)throw new AssertionError(errorMessage,void 0,ssfi);if(doLength){var itemsCount,descriptor="length";"map"===objType||"set"===objType?(descriptor="size",itemsCount=obj.size):itemsCount=obj.length,this.assert(itemsCount>=n,"expected #{this} to have a "+descriptor+" at least #{exp} but got #{act}","expected #{this} to have a "+descriptor+" below #{exp}",n,itemsCount)}else this.assert(obj>=n,"expected #{this} to be at least #{exp}","expected #{this} to be below #{exp}",n)}function assertBelow(n,msg){msg&&flag2(this,"message",msg);var errorMessage,obj=flag2(this,"object"),doLength=flag2(this,"doLength"),flagMsg=flag2(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag2(this,"ssfi"),objType=type(obj).toLowerCase(),nType=type(n).toLowerCase(),shouldThrow=!0;if(doLength&&"map"!==objType&&"set"!==objType&&new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),doLength||"date"!==objType||"date"===nType)if(isNumeric(n)||!doLength&&!isNumeric(obj))if(doLength||"date"===objType||isNumeric(obj))shouldThrow=!1;else{errorMessage=msgPrefix+"expected "+("string"===objType?"'"+obj+"'":obj)+" to be a number or a date"}else errorMessage=msgPrefix+"the argument to below must be a number";else errorMessage=msgPrefix+"the argument to below must be a date";if(shouldThrow)throw new AssertionError(errorMessage,void 0,ssfi);if(doLength){var itemsCount,descriptor="length";"map"===objType||"set"===objType?(descriptor="size",itemsCount=obj.size):itemsCount=obj.length,this.assert(itemsCount<n,"expected #{this} to have a "+descriptor+" below #{exp} but got #{act}","expected #{this} to not have a "+descriptor+" below #{exp}",n,itemsCount)}else this.assert(obj<n,"expected #{this} to be below #{exp}","expected #{this} to be at least #{exp}",n)}function assertMost(n,msg){msg&&flag2(this,"message",msg);var errorMessage,obj=flag2(this,"object"),doLength=flag2(this,"doLength"),flagMsg=flag2(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag2(this,"ssfi"),objType=type(obj).toLowerCase(),nType=type(n).toLowerCase(),shouldThrow=!0;if(doLength&&"map"!==objType&&"set"!==objType&&new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),doLength||"date"!==objType||"date"===nType)if(isNumeric(n)||!doLength&&!isNumeric(obj))if(doLength||"date"===objType||isNumeric(obj))shouldThrow=!1;else{errorMessage=msgPrefix+"expected "+("string"===objType?"'"+obj+"'":obj)+" to be a number or a date"}else errorMessage=msgPrefix+"the argument to most must be a number";else errorMessage=msgPrefix+"the argument to most must be a date";if(shouldThrow)throw new AssertionError(errorMessage,void 0,ssfi);if(doLength){var itemsCount,descriptor="length";"map"===objType||"set"===objType?(descriptor="size",itemsCount=obj.size):itemsCount=obj.length,this.assert(itemsCount<=n,"expected #{this} to have a "+descriptor+" at most #{exp} but got #{act}","expected #{this} to have a "+descriptor+" above #{exp}",n,itemsCount)}else this.assert(obj<=n,"expected #{this} to be at most #{exp}","expected #{this} to be above #{exp}",n)}function assertInstanceOf(constructor,msg){msg&&flag2(this,"message",msg);var target=flag2(this,"object"),ssfi=flag2(this,"ssfi"),flagMsg=flag2(this,"message");try{var isInstanceOf=target instanceof constructor}catch(err){if(err instanceof TypeError)throw new AssertionError((flagMsg=flagMsg?flagMsg+": ":"")+"The instanceof assertion needs a constructor but "+type(constructor)+" was given.",void 0,ssfi);throw err}var name=getName(constructor);null==name&&(name="an unnamed constructor"),this.assert(isInstanceOf,"expected #{this} to be an instance of "+name,"expected #{this} to not be an instance of "+name)}function assertProperty(name,val,msg){msg&&flag2(this,"message",msg);var isNested=flag2(this,"nested"),isOwn=flag2(this,"own"),flagMsg=flag2(this,"message"),obj=flag2(this,"object"),ssfi=flag2(this,"ssfi"),nameType=typeof name;if(flagMsg=flagMsg?flagMsg+": ":"",isNested){if("string"!==nameType)throw new AssertionError(flagMsg+"the argument to property must be a string when using nested syntax",void 0,ssfi)}else if("string"!==nameType&&"number"!==nameType&&"symbol"!==nameType)throw new AssertionError(flagMsg+"the argument to property must be a string, number, or symbol",void 0,ssfi);if(isNested&&isOwn)throw new AssertionError(flagMsg+'The "nested" and "own" flags cannot be combined.',void 0,ssfi);if(null==obj)throw new AssertionError(flagMsg+"Target cannot be null or undefined.",void 0,ssfi);var hasProperty2,isDeep=flag2(this,"deep"),negate=flag2(this,"negate"),pathInfo=isNested?getPathInfo(obj,name):null,value=isNested?pathInfo.value:obj[name],isEql=isDeep?flag2(this,"eql"):(val1,val2)=>val1===val2,descriptor="";isDeep&&(descriptor+="deep "),isOwn&&(descriptor+="own "),isNested&&(descriptor+="nested "),descriptor+="property ",hasProperty2=isOwn?Object.prototype.hasOwnProperty.call(obj,name):isNested?pathInfo.exists:hasProperty(obj,name),negate&&1!==arguments.length||this.assert(hasProperty2,"expected #{this} to have "+descriptor+inspect2(name),"expected #{this} to not have "+descriptor+inspect2(name)),arguments.length>1&&this.assert(hasProperty2&&isEql(val,value),"expected #{this} to have "+descriptor+inspect2(name)+" of #{exp}, but got #{act}","expected #{this} to not have "+descriptor+inspect2(name)+" of #{act}",val,value),flag2(this,"object",value)}function assertOwnProperty(_name,_value,_msg){flag2(this,"own",!0),assertProperty.apply(this,arguments)}function assertOwnPropertyDescriptor(name,descriptor,msg){"string"==typeof descriptor&&(msg=descriptor,descriptor=null),msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),actualDescriptor=Object.getOwnPropertyDescriptor(Object(obj),name),eql=flag2(this,"eql");actualDescriptor&&descriptor?this.assert(eql(descriptor,actualDescriptor),"expected the own property descriptor for "+inspect2(name)+" on #{this} to match "+inspect2(descriptor)+", got "+inspect2(actualDescriptor),"expected the own property descriptor for "+inspect2(name)+" on #{this} to not match "+inspect2(descriptor),descriptor,actualDescriptor,!0):this.assert(actualDescriptor,"expected #{this} to have an own property descriptor for "+inspect2(name),"expected #{this} to not have an own property descriptor for "+inspect2(name)),flag2(this,"object",actualDescriptor)}function assertLengthChain(){flag2(this,"doLength",!0)}function assertLength(n,msg){msg&&flag2(this,"message",msg);var itemsCount,obj=flag2(this,"object"),objType=type(obj).toLowerCase(),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi"),descriptor="length";switch(objType){case"map":case"set":descriptor="size",itemsCount=obj.size;break;default:new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),itemsCount=obj.length}this.assert(itemsCount==n,"expected #{this} to have a "+descriptor+" of #{exp} but got #{act}","expected #{this} to not have a "+descriptor+" of #{act}",n,itemsCount)}function assertMatch(re,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object");this.assert(re.exec(obj),"expected #{this} to match "+re,"expected #{this} not to match "+re)}function assertKeys(keys){var str,actual,obj=flag2(this,"object"),objType=type(obj),keysType=type(keys),ssfi=flag2(this,"ssfi"),isDeep=flag2(this,"deep"),deepStr="",ok=!0,flagMsg=flag2(this,"message"),mixedArgsMsg=(flagMsg=flagMsg?flagMsg+": ":"")+"when testing keys against an object or an array you must give a single Array|Object|String argument or multiple String arguments";if("Map"===objType||"Set"===objType)deepStr=isDeep?"deeply ":"",actual=[],obj.forEach((function(val,key){actual.push(key)})),"Array"!==keysType&&(keys=Array.prototype.slice.call(arguments));else{switch(actual=getOwnEnumerableProperties(obj),keysType){case"Array":if(arguments.length>1)throw new AssertionError(mixedArgsMsg,void 0,ssfi);break;case"Object":if(arguments.length>1)throw new AssertionError(mixedArgsMsg,void 0,ssfi);keys=Object.keys(keys);break;default:keys=Array.prototype.slice.call(arguments)}keys=keys.map((function(val){return"symbol"==typeof val?val:String(val)}))}if(!keys.length)throw new AssertionError(flagMsg+"keys required",void 0,ssfi);var len=keys.length,any=flag2(this,"any"),all=flag2(this,"all"),expected=keys,isEql=isDeep?flag2(this,"eql"):(val1,val2)=>val1===val2;if(any||all||(all=!0),any&&(ok=expected.some((function(expectedKey){return actual.some((function(actualKey){return isEql(expectedKey,actualKey)}))}))),all&&(ok=expected.every((function(expectedKey){return actual.some((function(actualKey){return isEql(expectedKey,actualKey)}))})),flag2(this,"contains")||(ok=ok&&keys.length==actual.length)),len>1){var last=(keys=keys.map((function(key){return inspect2(key)}))).pop();all&&(str=keys.join(", ")+", and "+last),any&&(str=keys.join(", ")+", or "+last)}else str=inspect2(keys[0]);str=(len>1?"keys ":"key ")+str,str=(flag2(this,"contains")?"contain ":"have ")+str,this.assert(ok,"expected #{this} to "+deepStr+str,"expected #{this} to not "+deepStr+str,expected.slice(0).sort(compareByInspect),actual.sort(compareByInspect),!0)}function assertThrows(errorLike,errMsgMatcher,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),ssfi=flag2(this,"ssfi"),flagMsg=flag2(this,"message"),negate=flag2(this,"negate")||!1;let caughtErr;new Assertion(obj,flagMsg,ssfi,!0).is.a("function"),(isRegExp2(errorLike)||"string"==typeof errorLike)&&(errMsgMatcher=errorLike,errorLike=null);let errorWasThrown=!1;try{obj()}catch(err){errorWasThrown=!0,caughtErr=err}var everyArgIsUndefined=void 0===errorLike&&void 0===errMsgMatcher,everyArgIsDefined=Boolean(errorLike&&errMsgMatcher),errorLikeFail=!1,errMsgMatcherFail=!1;if(everyArgIsUndefined||!everyArgIsUndefined&&!negate){var errorLikeString="an error";errorLike instanceof Error?errorLikeString="#{exp}":errorLike&&(errorLikeString=check_error_exports.getConstructorName(errorLike));let actual=caughtErr;if(caughtErr instanceof Error)actual=caughtErr.toString();else if("string"==typeof caughtErr)actual=caughtErr;else if(caughtErr&&("object"==typeof caughtErr||"function"==typeof caughtErr))try{actual=check_error_exports.getConstructorName(caughtErr)}catch(_err){}this.assert(errorWasThrown,"expected #{this} to throw "+errorLikeString,"expected #{this} to not throw an error but #{act} was thrown",errorLike&&errorLike.toString(),actual)}if(errorLike&&caughtErr){if(errorLike instanceof Error)check_error_exports.compatibleInstance(caughtErr,errorLike)===negate&&(everyArgIsDefined&&negate?errorLikeFail=!0:this.assert(negate,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(caughtErr&&!negate?" but #{act} was thrown":""),errorLike.toString(),caughtErr.toString()));check_error_exports.compatibleConstructor(caughtErr,errorLike)===negate&&(everyArgIsDefined&&negate?errorLikeFail=!0:this.assert(negate,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(caughtErr?" but #{act} was thrown":""),errorLike instanceof Error?errorLike.toString():errorLike&&check_error_exports.getConstructorName(errorLike),caughtErr instanceof Error?caughtErr.toString():caughtErr&&check_error_exports.getConstructorName(caughtErr)))}if(caughtErr&&null!=errMsgMatcher){var placeholder="including";isRegExp2(errMsgMatcher)&&(placeholder="matching"),check_error_exports.compatibleMessage(caughtErr,errMsgMatcher)===negate&&(everyArgIsDefined&&negate?errMsgMatcherFail=!0:this.assert(negate,"expected #{this} to throw error "+placeholder+" #{exp} but got #{act}","expected #{this} to throw error not "+placeholder+" #{exp}",errMsgMatcher,check_error_exports.getMessage(caughtErr)))}errorLikeFail&&errMsgMatcherFail&&this.assert(negate,"expected #{this} to throw #{exp} but #{act} was thrown","expected #{this} to not throw #{exp}"+(caughtErr?" but #{act} was thrown":""),errorLike instanceof Error?errorLike.toString():errorLike&&check_error_exports.getConstructorName(errorLike),caughtErr instanceof Error?caughtErr.toString():caughtErr&&check_error_exports.getConstructorName(caughtErr)),flag2(this,"object",caughtErr)}function respondTo(method,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),itself=flag2(this,"itself"),context="function"!=typeof obj||itself?obj[method]:obj.prototype[method];this.assert("function"==typeof context,"expected #{this} to respond to "+inspect2(method),"expected #{this} to not respond to "+inspect2(method))}function satisfy(matcher,msg){msg&&flag2(this,"message",msg);var result=matcher(flag2(this,"object"));this.assert(result,"expected #{this} to satisfy "+chai_objDisplay(matcher),"expected #{this} to not satisfy"+chai_objDisplay(matcher),!flag2(this,"negate"),result)}function closeTo(expected,delta,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(obj,flagMsg,ssfi,!0).is.numeric;let message="A `delta` value is required for `closeTo`";if(null==delta)throw new AssertionError(flagMsg?`${flagMsg}: ${message}`:message,void 0,ssfi);if(new Assertion(delta,flagMsg,ssfi,!0).is.numeric,message="A `expected` value is required for `closeTo`",null==expected)throw new AssertionError(flagMsg?`${flagMsg}: ${message}`:message,void 0,ssfi);new Assertion(expected,flagMsg,ssfi,!0).is.numeric;const abs=__name((x=>x<0n?-x:x),"abs"),strip=__name((number=>parseFloat(parseFloat(number).toPrecision(12))),"strip");this.assert(strip(abs(obj-expected))<=delta,"expected #{this} to be close to "+expected+" +/- "+delta,"expected #{this} not to be close to "+expected+" +/- "+delta)}function isSubsetOf(_subset,_superset,cmp,contains,ordered){let superset=Array.from(_superset),subset=Array.from(_subset);if(!contains){if(subset.length!==superset.length)return!1;superset=superset.slice()}return subset.every((function(elem,idx){if(ordered)return cmp?cmp(elem,superset[idx]):elem===superset[idx];if(!cmp){var matchIdx=superset.indexOf(elem);return-1!==matchIdx&&(contains||superset.splice(matchIdx,1),!0)}return superset.some((function(elem2,matchIdx2){return!!cmp(elem,elem2)&&(contains||superset.splice(matchIdx2,1),!0)}))}))}function oneOf(list,msg){msg&&flag2(this,"message",msg);var expected=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi"),contains=flag2(this,"contains"),isDeep=flag2(this,"deep"),eql=flag2(this,"eql");new Assertion(list,flagMsg,ssfi,!0).to.be.an("array"),contains?this.assert(list.some((function(possibility){return expected.indexOf(possibility)>-1})),"expected #{this} to contain one of #{exp}","expected #{this} to not contain one of #{exp}",list,expected):isDeep?this.assert(list.some((function(possibility){return eql(expected,possibility)})),"expected #{this} to deeply equal one of #{exp}","expected #{this} to deeply equal one of #{exp}",list,expected):this.assert(list.indexOf(expected)>-1,"expected #{this} to be one of #{exp}","expected #{this} to not be one of #{exp}",list,expected)}function assertChanges(subject,prop,msg){msg&&flag2(this,"message",msg);var initial,fn=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(fn,flagMsg,ssfi,!0).is.a("function"),prop?(new Assertion(subject,flagMsg,ssfi,!0).to.have.property(prop),initial=subject[prop]):(new Assertion(subject,flagMsg,ssfi,!0).is.a("function"),initial=subject()),fn();var final=null==prop?subject():subject[prop],msgObj=null==prop?initial:"."+prop;flag2(this,"deltaMsgObj",msgObj),flag2(this,"initialDeltaValue",initial),flag2(this,"finalDeltaValue",final),flag2(this,"deltaBehavior","change"),flag2(this,"realDelta",final!==initial),this.assert(initial!==final,"expected "+msgObj+" to change","expected "+msgObj+" to not change")}function assertIncreases(subject,prop,msg){msg&&flag2(this,"message",msg);var initial,fn=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(fn,flagMsg,ssfi,!0).is.a("function"),prop?(new Assertion(subject,flagMsg,ssfi,!0).to.have.property(prop),initial=subject[prop]):(new Assertion(subject,flagMsg,ssfi,!0).is.a("function"),initial=subject()),new Assertion(initial,flagMsg,ssfi,!0).is.a("number"),fn();var final=null==prop?subject():subject[prop],msgObj=null==prop?initial:"."+prop;flag2(this,"deltaMsgObj",msgObj),flag2(this,"initialDeltaValue",initial),flag2(this,"finalDeltaValue",final),flag2(this,"deltaBehavior","increase"),flag2(this,"realDelta",final-initial),this.assert(final-initial>0,"expected "+msgObj+" to increase","expected "+msgObj+" to not increase")}function assertDecreases(subject,prop,msg){msg&&flag2(this,"message",msg);var initial,fn=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(fn,flagMsg,ssfi,!0).is.a("function"),prop?(new Assertion(subject,flagMsg,ssfi,!0).to.have.property(prop),initial=subject[prop]):(new Assertion(subject,flagMsg,ssfi,!0).is.a("function"),initial=subject()),new Assertion(initial,flagMsg,ssfi,!0).is.a("number"),fn();var final=null==prop?subject():subject[prop],msgObj=null==prop?initial:"."+prop;flag2(this,"deltaMsgObj",msgObj),flag2(this,"initialDeltaValue",initial),flag2(this,"finalDeltaValue",final),flag2(this,"deltaBehavior","decrease"),flag2(this,"realDelta",initial-final),this.assert(final-initial<0,"expected "+msgObj+" to decrease","expected "+msgObj+" to not decrease")}function assertDelta(delta,msg){msg&&flag2(this,"message",msg);var expression,msgObj=flag2(this,"deltaMsgObj"),initial=flag2(this,"initialDeltaValue"),final=flag2(this,"finalDeltaValue"),behavior=flag2(this,"deltaBehavior"),realDelta=flag2(this,"realDelta");expression="change"===behavior?Math.abs(final-initial)===Math.abs(delta):realDelta===Math.abs(delta),this.assert(expression,"expected "+msgObj+" to "+behavior+" by "+delta,"expected "+msgObj+" to not "+behavior+" by "+delta)}function compareSubset(expected,actual){return expected===actual||typeof actual==typeof expected&&("object"!=typeof expected||null===expected?expected===actual:!!actual&&(Array.isArray(expected)?!!Array.isArray(actual)&&expected.every((function(exp){return actual.some((function(act){return compareSubset(exp,act)}))})):expected instanceof Date?actual instanceof Date&&expected.getTime()===actual.getTime():Object.keys(expected).every((function(key){var expectedValue=expected[key],actualValue=actual[key];return"object"==typeof expectedValue&&null!==expectedValue&&null!==actualValue?compareSubset(expectedValue,actualValue):"function"==typeof expectedValue?expectedValue(actualValue):actualValue===expectedValue}))))}function chai_expect(val,message){return new Assertion(val,message)}__name(an,"an"),Assertion.addChainableMethod("an",an),Assertion.addChainableMethod("a",an),__name(SameValueZero,"SameValueZero"),__name(includeChainingBehavior,"includeChainingBehavior"),__name(include,"include"),Assertion.addChainableMethod("include",include,includeChainingBehavior),Assertion.addChainableMethod("contain",include,includeChainingBehavior),Assertion.addChainableMethod("contains",include,includeChainingBehavior),Assertion.addChainableMethod("includes",include,includeChainingBehavior),Assertion.addProperty("ok",(function(){this.assert(flag2(this,"object"),"expected #{this} to be truthy","expected #{this} to be falsy")})),Assertion.addProperty("true",(function(){this.assert(!0===flag2(this,"object"),"expected #{this} to be true","expected #{this} to be false",!flag2(this,"negate"))})),Assertion.addProperty("numeric",(function(){const object=flag2(this,"object");this.assert(["Number","BigInt"].includes(type(object)),"expected #{this} to be numeric","expected #{this} to not be numeric",!flag2(this,"negate"))})),Assertion.addProperty("callable",(function(){const val=flag2(this,"object"),ssfi=flag2(this,"ssfi"),message=flag2(this,"message"),msg=message?`${message}: `:"",negate=flag2(this,"negate"),assertionMessage=negate?`${msg}expected ${inspect2(val)} not to be a callable function`:`${msg}expected ${inspect2(val)} to be a callable function`,isCallable=["Function","AsyncFunction","GeneratorFunction","AsyncGeneratorFunction"].includes(type(val));if(isCallable&&negate||!isCallable&&!negate)throw new AssertionError(assertionMessage,void 0,ssfi)})),Assertion.addProperty("false",(function(){this.assert(!1===flag2(this,"object"),"expected #{this} to be false","expected #{this} to be true",!!flag2(this,"negate"))})),Assertion.addProperty("null",(function(){this.assert(null===flag2(this,"object"),"expected #{this} to be null","expected #{this} not to be null")})),Assertion.addProperty("undefined",(function(){this.assert(void 0===flag2(this,"object"),"expected #{this} to be undefined","expected #{this} not to be undefined")})),Assertion.addProperty("NaN",(function(){this.assert(isNaN2(flag2(this,"object")),"expected #{this} to be NaN","expected #{this} not to be NaN")})),__name(assertExist,"assertExist"),Assertion.addProperty("exist",assertExist),Assertion.addProperty("exists",assertExist),Assertion.addProperty("empty",(function(){var itemsCount,val=flag2(this,"object"),ssfi=flag2(this,"ssfi"),flagMsg=flag2(this,"message");switch(flagMsg=flagMsg?flagMsg+": ":"",type(val).toLowerCase()){case"array":case"string":itemsCount=val.length;break;case"map":case"set":itemsCount=val.size;break;case"weakmap":case"weakset":throw new AssertionError(flagMsg+".empty was passed a weak collection",void 0,ssfi);case"function":var msg=flagMsg+".empty was passed a function "+getName(val);throw new AssertionError(msg.trim(),void 0,ssfi);default:if(val!==Object(val))throw new AssertionError(flagMsg+".empty was passed non-string primitive "+inspect2(val),void 0,ssfi);itemsCount=Object.keys(val).length}this.assert(0===itemsCount,"expected #{this} to be empty","expected #{this} not to be empty")})),__name(checkArguments,"checkArguments"),Assertion.addProperty("arguments",checkArguments),Assertion.addProperty("Arguments",checkArguments),__name(assertEqual,"assertEqual"),Assertion.addMethod("equal",assertEqual),Assertion.addMethod("equals",assertEqual),Assertion.addMethod("eq",assertEqual),__name(assertEql,"assertEql"),Assertion.addMethod("eql",assertEql),Assertion.addMethod("eqls",assertEql),__name(assertAbove,"assertAbove"),Assertion.addMethod("above",assertAbove),Assertion.addMethod("gt",assertAbove),Assertion.addMethod("greaterThan",assertAbove),__name(assertLeast,"assertLeast"),Assertion.addMethod("least",assertLeast),Assertion.addMethod("gte",assertLeast),Assertion.addMethod("greaterThanOrEqual",assertLeast),__name(assertBelow,"assertBelow"),Assertion.addMethod("below",assertBelow),Assertion.addMethod("lt",assertBelow),Assertion.addMethod("lessThan",assertBelow),__name(assertMost,"assertMost"),Assertion.addMethod("most",assertMost),Assertion.addMethod("lte",assertMost),Assertion.addMethod("lessThanOrEqual",assertMost),Assertion.addMethod("within",(function(start,finish,msg){msg&&flag2(this,"message",msg);var errorMessage,obj=flag2(this,"object"),doLength=flag2(this,"doLength"),flagMsg=flag2(this,"message"),msgPrefix=flagMsg?flagMsg+": ":"",ssfi=flag2(this,"ssfi"),objType=type(obj).toLowerCase(),startType=type(start).toLowerCase(),finishType=type(finish).toLowerCase(),shouldThrow=!0,range="date"===startType&&"date"===finishType?start.toISOString()+".."+finish.toISOString():start+".."+finish;if(doLength&&"map"!==objType&&"set"!==objType&&new Assertion(obj,flagMsg,ssfi,!0).to.have.property("length"),doLength||"date"!==objType||"date"===startType&&"date"===finishType)if(isNumeric(start)&&isNumeric(finish)||!doLength&&!isNumeric(obj))if(doLength||"date"===objType||isNumeric(obj))shouldThrow=!1;else{errorMessage=msgPrefix+"expected "+("string"===objType?"'"+obj+"'":obj)+" to be a number or a date"}else errorMessage=msgPrefix+"the arguments to within must be numbers";else errorMessage=msgPrefix+"the arguments to within must be dates";if(shouldThrow)throw new AssertionError(errorMessage,void 0,ssfi);if(doLength){var itemsCount,descriptor="length";"map"===objType||"set"===objType?(descriptor="size",itemsCount=obj.size):itemsCount=obj.length,this.assert(itemsCount>=start&&itemsCount<=finish,"expected #{this} to have a "+descriptor+" within "+range,"expected #{this} to not have a "+descriptor+" within "+range)}else this.assert(obj>=start&&obj<=finish,"expected #{this} to be within "+range,"expected #{this} to not be within "+range)})),__name(assertInstanceOf,"assertInstanceOf"),Assertion.addMethod("instanceof",assertInstanceOf),Assertion.addMethod("instanceOf",assertInstanceOf),__name(assertProperty,"assertProperty"),Assertion.addMethod("property",assertProperty),__name(assertOwnProperty,"assertOwnProperty"),Assertion.addMethod("ownProperty",assertOwnProperty),Assertion.addMethod("haveOwnProperty",assertOwnProperty),__name(assertOwnPropertyDescriptor,"assertOwnPropertyDescriptor"),Assertion.addMethod("ownPropertyDescriptor",assertOwnPropertyDescriptor),Assertion.addMethod("haveOwnPropertyDescriptor",assertOwnPropertyDescriptor),__name(assertLengthChain,"assertLengthChain"),__name(assertLength,"assertLength"),Assertion.addChainableMethod("length",assertLength,assertLengthChain),Assertion.addChainableMethod("lengthOf",assertLength,assertLengthChain),__name(assertMatch,"assertMatch"),Assertion.addMethod("match",assertMatch),Assertion.addMethod("matches",assertMatch),Assertion.addMethod("string",(function(str,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object");new Assertion(obj,flag2(this,"message"),flag2(this,"ssfi"),!0).is.a("string"),this.assert(~obj.indexOf(str),"expected #{this} to contain "+inspect2(str),"expected #{this} to not contain "+inspect2(str))})),__name(assertKeys,"assertKeys"),Assertion.addMethod("keys",assertKeys),Assertion.addMethod("key",assertKeys),__name(assertThrows,"assertThrows"),Assertion.addMethod("throw",assertThrows),Assertion.addMethod("throws",assertThrows),Assertion.addMethod("Throw",assertThrows),__name(respondTo,"respondTo"),Assertion.addMethod("respondTo",respondTo),Assertion.addMethod("respondsTo",respondTo),Assertion.addProperty("itself",(function(){flag2(this,"itself",!0)})),__name(satisfy,"satisfy"),Assertion.addMethod("satisfy",satisfy),Assertion.addMethod("satisfies",satisfy),__name(closeTo,"closeTo"),Assertion.addMethod("closeTo",closeTo),Assertion.addMethod("approximately",closeTo),__name(isSubsetOf,"isSubsetOf"),Assertion.addMethod("members",(function(subset,msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object"),flagMsg=flag2(this,"message"),ssfi=flag2(this,"ssfi");new Assertion(obj,flagMsg,ssfi,!0).to.be.iterable,new Assertion(subset,flagMsg,ssfi,!0).to.be.iterable;var subject,failMsg,failNegateMsg,contains=flag2(this,"contains"),ordered=flag2(this,"ordered");contains?(failMsg="expected #{this} to be "+(subject=ordered?"an ordered superset":"a superset")+" of #{exp}",failNegateMsg="expected #{this} to not be "+subject+" of #{exp}"):(failMsg="expected #{this} to have the same "+(subject=ordered?"ordered members":"members")+" as #{exp}",failNegateMsg="expected #{this} to not have the same "+subject+" as #{exp}");var cmp=flag2(this,"deep")?flag2(this,"eql"):void 0;this.assert(isSubsetOf(subset,obj,cmp,contains,ordered),failMsg,failNegateMsg,subset,obj,!0)})),Assertion.addProperty("iterable",(function(msg){msg&&flag2(this,"message",msg);var obj=flag2(this,"object");this.assert(null!=obj&&obj[Symbol.iterator],"expected #{this} to be an iterable","expected #{this} to not be an iterable",obj)})),__name(oneOf,"oneOf"),Assertion.addMethod("oneOf",oneOf),__name(assertChanges,"assertChanges"),Assertion.addMethod("change",assertChanges),Assertion.addMethod("changes",assertChanges),__name(assertIncreases,"assertIncreases"),Assertion.addMethod("increase",assertIncreases),Assertion.addMethod("increases",assertIncreases),__name(assertDecreases,"assertDecreases"),Assertion.addMethod("decrease",assertDecreases),Assertion.addMethod("decreases",assertDecreases),__name(assertDelta,"assertDelta"),Assertion.addMethod("by",assertDelta),Assertion.addProperty("extensible",(function(){var obj=flag2(this,"object"),isExtensible=obj===Object(obj)&&Object.isExtensible(obj);this.assert(isExtensible,"expected #{this} to be extensible","expected #{this} to not be extensible")})),Assertion.addProperty("sealed",(function(){var obj=flag2(this,"object"),isSealed=obj!==Object(obj)||Object.isSealed(obj);this.assert(isSealed,"expected #{this} to be sealed","expected #{this} to not be sealed")})),Assertion.addProperty("frozen",(function(){var obj=flag2(this,"object"),isFrozen=obj!==Object(obj)||Object.isFrozen(obj);this.assert(isFrozen,"expected #{this} to be frozen","expected #{this} to not be frozen")})),Assertion.addProperty("finite",(function(_msg){var obj=flag2(this,"object");this.assert("number"==typeof obj&&isFinite(obj),"expected #{this} to be a finite number","expected #{this} to not be a finite number")})),__name(compareSubset,"compareSubset"),Assertion.addMethod("containSubset",(function(expected){const actual=flag(this,"object"),showDiff=config.showDiff;this.assert(compareSubset(expected,actual),"expected #{act} to contain subset #{exp}","expected #{act} to not contain subset #{exp}",expected,actual,showDiff)})),__name(chai_expect,"expect"),chai_expect.fail=function(actual,expected,message,operator){throw arguments.length<2&&(message=actual,actual=void 0),new AssertionError(message=message||"expect.fail()",{actual,expected,operator},chai_expect.fail)};var should_exports={};function loadShould(){function shouldGetter(){return this instanceof String||this instanceof Number||this instanceof Boolean||"function"==typeof Symbol&&this instanceof Symbol||"function"==typeof BigInt&&this instanceof BigInt?new Assertion(this.valueOf(),null,shouldGetter):new Assertion(this,null,shouldGetter)}function shouldSetter(value){Object.defineProperty(this,"should",{value,enumerable:!0,configurable:!0,writable:!0})}__name(shouldGetter,"shouldGetter"),__name(shouldSetter,"shouldSetter"),Object.defineProperty(Object.prototype,"should",{set:shouldSetter,get:shouldGetter,configurable:!0});var should2={fail:function(actual,expected,message,operator){throw arguments.length<2&&(message=actual,actual=void 0),new AssertionError(message=message||"should.fail()",{actual,expected,operator},should2.fail)},equal:function(actual,expected,message){new Assertion(actual,message).to.equal(expected)},Throw:function(fn,errt,errs,msg){new Assertion(fn,msg).to.Throw(errt,errs)},exist:function(val,msg){new Assertion(val,msg).to.exist},not:{}};return should2.not.equal=function(actual,expected,msg){new Assertion(actual,msg).to.not.equal(expected)},should2.not.Throw=function(fn,errt,errs,msg){new Assertion(fn,msg).to.not.Throw(errt,errs)},should2.not.exist=function(val,msg){new Assertion(val,msg).to.not.exist},should2.throw=should2.Throw,should2.not.throw=should2.not.Throw,should2}__export(should_exports,{Should:()=>Should,should:()=>should}),__name(loadShould,"loadShould");var should=loadShould,Should=loadShould;function assert(express,errmsg){new Assertion(null,null,assert,!0).assert(express,errmsg,"[ negation message unavailable ]")}__name(assert,"assert"),assert.fail=function(actual,expected,message,operator){throw arguments.length<2&&(message=actual,actual=void 0),new AssertionError(message=message||"assert.fail()",{actual,expected,operator},assert.fail)},assert.isOk=function(val,msg){new Assertion(val,msg,assert.isOk,!0).is.ok},assert.isNotOk=function(val,msg){new Assertion(val,msg,assert.isNotOk,!0).is.not.ok},assert.equal=function(act,exp,msg){var test2=new Assertion(act,msg,assert.equal,!0);test2.assert(exp==flag(test2,"object"),"expected #{this} to equal #{exp}","expected #{this} to not equal #{act}",exp,act,!0)},assert.notEqual=function(act,exp,msg){var test2=new Assertion(act,msg,assert.notEqual,!0);test2.assert(exp!=flag(test2,"object"),"expected #{this} to not equal #{exp}","expected #{this} to equal #{act}",exp,act,!0)},assert.strictEqual=function(act,exp,msg){new Assertion(act,msg,assert.strictEqual,!0).to.equal(exp)},assert.notStrictEqual=function(act,exp,msg){new Assertion(act,msg,assert.notStrictEqual,!0).to.not.equal(exp)},assert.deepEqual=assert.deepStrictEqual=function(act,exp,msg){new Assertion(act,msg,assert.deepEqual,!0).to.eql(exp)},assert.notDeepEqual=function(act,exp,msg){new Assertion(act,msg,assert.notDeepEqual,!0).to.not.eql(exp)},assert.isAbove=function(val,abv,msg){new Assertion(val,msg,assert.isAbove,!0).to.be.above(abv)},assert.isAtLeast=function(val,atlst,msg){new Assertion(val,msg,assert.isAtLeast,!0).to.be.least(atlst)},assert.isBelow=function(val,blw,msg){new Assertion(val,msg,assert.isBelow,!0).to.be.below(blw)},assert.isAtMost=function(val,atmst,msg){new Assertion(val,msg,assert.isAtMost,!0).to.be.most(atmst)},assert.isTrue=function(val,msg){new Assertion(val,msg,assert.isTrue,!0).is.true},assert.isNotTrue=function(val,msg){new Assertion(val,msg,assert.isNotTrue,!0).to.not.equal(!0)},assert.isFalse=function(val,msg){new Assertion(val,msg,assert.isFalse,!0).is.false},assert.isNotFalse=function(val,msg){new Assertion(val,msg,assert.isNotFalse,!0).to.not.equal(!1)},assert.isNull=function(val,msg){new Assertion(val,msg,assert.isNull,!0).to.equal(null)},assert.isNotNull=function(val,msg){new Assertion(val,msg,assert.isNotNull,!0).to.not.equal(null)},assert.isNaN=function(val,msg){new Assertion(val,msg,assert.isNaN,!0).to.be.NaN},assert.isNotNaN=function(value,message){new Assertion(value,message,assert.isNotNaN,!0).not.to.be.NaN},assert.exists=function(val,msg){new Assertion(val,msg,assert.exists,!0).to.exist},assert.notExists=function(val,msg){new Assertion(val,msg,assert.notExists,!0).to.not.exist},assert.isUndefined=function(val,msg){new Assertion(val,msg,assert.isUndefined,!0).to.equal(void 0)},assert.isDefined=function(val,msg){new Assertion(val,msg,assert.isDefined,!0).to.not.equal(void 0)},assert.isCallable=function(value,message){new Assertion(value,message,assert.isCallable,!0).is.callable},assert.isNotCallable=function(value,message){new Assertion(value,message,assert.isNotCallable,!0).is.not.callable},assert.isObject=function(val,msg){new Assertion(val,msg,assert.isObject,!0).to.be.a("object")},assert.isNotObject=function(val,msg){new Assertion(val,msg,assert.isNotObject,!0).to.not.be.a("object")},assert.isArray=function(val,msg){new Assertion(val,msg,assert.isArray,!0).to.be.an("array")},assert.isNotArray=function(val,msg){new Assertion(val,msg,assert.isNotArray,!0).to.not.be.an("array")},assert.isString=function(val,msg){new Assertion(val,msg,assert.isString,!0).to.be.a("string")},assert.isNotString=function(val,msg){new Assertion(val,msg,assert.isNotString,!0).to.not.be.a("string")},assert.isNumber=function(val,msg){new Assertion(val,msg,assert.isNumber,!0).to.be.a("number")},assert.isNotNumber=function(val,msg){new Assertion(val,msg,assert.isNotNumber,!0).to.not.be.a("number")},assert.isNumeric=function(val,msg){new Assertion(val,msg,assert.isNumeric,!0).is.numeric},assert.isNotNumeric=function(val,msg){new Assertion(val,msg,assert.isNotNumeric,!0).is.not.numeric},assert.isFinite=function(val,msg){new Assertion(val,msg,assert.isFinite,!0).to.be.finite},assert.isBoolean=function(val,msg){new Assertion(val,msg,assert.isBoolean,!0).to.be.a("boolean")},assert.isNotBoolean=function(val,msg){new Assertion(val,msg,assert.isNotBoolean,!0).to.not.be.a("boolean")},assert.typeOf=function(val,type3,msg){new Assertion(val,msg,assert.typeOf,!0).to.be.a(type3)},assert.notTypeOf=function(value,type3,message){new Assertion(value,message,assert.notTypeOf,!0).to.not.be.a(type3)},assert.instanceOf=function(val,type3,msg){new Assertion(val,msg,assert.instanceOf,!0).to.be.instanceOf(type3)},assert.notInstanceOf=function(val,type3,msg){new Assertion(val,msg,assert.notInstanceOf,!0).to.not.be.instanceOf(type3)},assert.include=function(exp,inc,msg){new Assertion(exp,msg,assert.include,!0).include(inc)},assert.notInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notInclude,!0).not.include(inc)},assert.deepInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.deepInclude,!0).deep.include(inc)},assert.notDeepInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notDeepInclude,!0).not.deep.include(inc)},assert.nestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.nestedInclude,!0).nested.include(inc)},assert.notNestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notNestedInclude,!0).not.nested.include(inc)},assert.deepNestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.deepNestedInclude,!0).deep.nested.include(inc)},assert.notDeepNestedInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notDeepNestedInclude,!0).not.deep.nested.include(inc)},assert.ownInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.ownInclude,!0).own.include(inc)},assert.notOwnInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notOwnInclude,!0).not.own.include(inc)},assert.deepOwnInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.deepOwnInclude,!0).deep.own.include(inc)},assert.notDeepOwnInclude=function(exp,inc,msg){new Assertion(exp,msg,assert.notDeepOwnInclude,!0).not.deep.own.include(inc)},assert.match=function(exp,re,msg){new Assertion(exp,msg,assert.match,!0).to.match(re)},assert.notMatch=function(exp,re,msg){new Assertion(exp,msg,assert.notMatch,!0).to.not.match(re)},assert.property=function(obj,prop,msg){new Assertion(obj,msg,assert.property,!0).to.have.property(prop)},assert.notProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.notProperty,!0).to.not.have.property(prop)},assert.propertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.propertyVal,!0).to.have.property(prop,val)},assert.notPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notPropertyVal,!0).to.not.have.property(prop,val)},assert.deepPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.deepPropertyVal,!0).to.have.deep.property(prop,val)},assert.notDeepPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notDeepPropertyVal,!0).to.not.have.deep.property(prop,val)},assert.ownProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.ownProperty,!0).to.have.own.property(prop)},assert.notOwnProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.notOwnProperty,!0).to.not.have.own.property(prop)},assert.ownPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.ownPropertyVal,!0).to.have.own.property(prop,value)},assert.notOwnPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.notOwnPropertyVal,!0).to.not.have.own.property(prop,value)},assert.deepOwnPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.deepOwnPropertyVal,!0).to.have.deep.own.property(prop,value)},assert.notDeepOwnPropertyVal=function(obj,prop,value,msg){new Assertion(obj,msg,assert.notDeepOwnPropertyVal,!0).to.not.have.deep.own.property(prop,value)},assert.nestedProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.nestedProperty,!0).to.have.nested.property(prop)},assert.notNestedProperty=function(obj,prop,msg){new Assertion(obj,msg,assert.notNestedProperty,!0).to.not.have.nested.property(prop)},assert.nestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.nestedPropertyVal,!0).to.have.nested.property(prop,val)},assert.notNestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notNestedPropertyVal,!0).to.not.have.nested.property(prop,val)},assert.deepNestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.deepNestedPropertyVal,!0).to.have.deep.nested.property(prop,val)},assert.notDeepNestedPropertyVal=function(obj,prop,val,msg){new Assertion(obj,msg,assert.notDeepNestedPropertyVal,!0).to.not.have.deep.nested.property(prop,val)},assert.lengthOf=function(exp,len,msg){new Assertion(exp,msg,assert.lengthOf,!0).to.have.lengthOf(len)},assert.hasAnyKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.hasAnyKeys,!0).to.have.any.keys(keys)},assert.hasAllKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.hasAllKeys,!0).to.have.all.keys(keys)},assert.containsAllKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.containsAllKeys,!0).to.contain.all.keys(keys)},assert.doesNotHaveAnyKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.doesNotHaveAnyKeys,!0).to.not.have.any.keys(keys)},assert.doesNotHaveAllKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.doesNotHaveAllKeys,!0).to.not.have.all.keys(keys)},assert.hasAnyDeepKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.hasAnyDeepKeys,!0).to.have.any.deep.keys(keys)},assert.hasAllDeepKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.hasAllDeepKeys,!0).to.have.all.deep.keys(keys)},assert.containsAllDeepKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.containsAllDeepKeys,!0).to.contain.all.deep.keys(keys)},assert.doesNotHaveAnyDeepKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.doesNotHaveAnyDeepKeys,!0).to.not.have.any.deep.keys(keys)},assert.doesNotHaveAllDeepKeys=function(obj,keys,msg){new Assertion(obj,msg,assert.doesNotHaveAllDeepKeys,!0).to.not.have.all.deep.keys(keys)},assert.throws=function(fn,errorLike,errMsgMatcher,msg){return("string"==typeof errorLike||errorLike instanceof RegExp)&&(errMsgMatcher=errorLike,errorLike=null),flag(new Assertion(fn,msg,assert.throws,!0).to.throw(errorLike,errMsgMatcher),"object")},assert.doesNotThrow=function(fn,errorLike,errMsgMatcher,message){("string"==typeof errorLike||errorLike instanceof RegExp)&&(errMsgMatcher=errorLike,errorLike=null),new Assertion(fn,message,assert.doesNotThrow,!0).to.not.throw(errorLike,errMsgMatcher)},assert.operator=function(val,operator,val2,msg){var ok;switch(operator){case"==":ok=val==val2;break;case"===":ok=val===val2;break;case">":ok=val>val2;break;case">=":ok=val>=val2;break;case"<":ok=val<val2;break;case"<=":ok=val<=val2;break;case"!=":ok=val!=val2;break;case"!==":ok=val!==val2;break;default:throw new AssertionError((msg=msg?msg+": ":msg)+'Invalid operator "'+operator+'"',void 0,assert.operator)}var test2=new Assertion(ok,msg,assert.operator,!0);test2.assert(!0===flag(test2,"object"),"expected "+inspect2(val)+" to be "+operator+" "+inspect2(val2),"expected "+inspect2(val)+" to not be "+operator+" "+inspect2(val2))},assert.closeTo=function(act,exp,delta,msg){new Assertion(act,msg,assert.closeTo,!0).to.be.closeTo(exp,delta)},assert.approximately=function(act,exp,delta,msg){new Assertion(act,msg,assert.approximately,!0).to.be.approximately(exp,delta)},assert.sameMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameMembers,!0).to.have.same.members(set2)},assert.notSameMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameMembers,!0).to.not.have.same.members(set2)},assert.sameDeepMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameDeepMembers,!0).to.have.same.deep.members(set2)},assert.notSameDeepMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameDeepMembers,!0).to.not.have.same.deep.members(set2)},assert.sameOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameOrderedMembers,!0).to.have.same.ordered.members(set2)},assert.notSameOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameOrderedMembers,!0).to.not.have.same.ordered.members(set2)},assert.sameDeepOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.sameDeepOrderedMembers,!0).to.have.same.deep.ordered.members(set2)},assert.notSameDeepOrderedMembers=function(set1,set2,msg){new Assertion(set1,msg,assert.notSameDeepOrderedMembers,!0).to.not.have.same.deep.ordered.members(set2)},assert.includeMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeMembers,!0).to.include.members(subset)},assert.notIncludeMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeMembers,!0).to.not.include.members(subset)},assert.includeDeepMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeDeepMembers,!0).to.include.deep.members(subset)},assert.notIncludeDeepMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeDeepMembers,!0).to.not.include.deep.members(subset)},assert.includeOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeOrderedMembers,!0).to.include.ordered.members(subset)},assert.notIncludeOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeOrderedMembers,!0).to.not.include.ordered.members(subset)},assert.includeDeepOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.includeDeepOrderedMembers,!0).to.include.deep.ordered.members(subset)},assert.notIncludeDeepOrderedMembers=function(superset,subset,msg){new Assertion(superset,msg,assert.notIncludeDeepOrderedMembers,!0).to.not.include.deep.ordered.members(subset)},assert.oneOf=function(inList,list,msg){new Assertion(inList,msg,assert.oneOf,!0).to.be.oneOf(list)},assert.isIterable=function(obj,msg){if(null==obj||!obj[Symbol.iterator])throw msg=msg?`${msg} expected ${inspect2(obj)} to be an iterable`:`expected ${inspect2(obj)} to be an iterable`,new AssertionError(msg,void 0,assert.isIterable)},assert.changes=function(fn,obj,prop,msg){3===arguments.length&&"function"==typeof obj&&(msg=prop,prop=null),new Assertion(fn,msg,assert.changes,!0).to.change(obj,prop)},assert.changesBy=function(fn,obj,prop,delta,msg){if(4===arguments.length&&"function"==typeof obj){var tmpMsg=delta;delta=prop,msg=tmpMsg}else 3===arguments.length&&(delta=prop,prop=null);new Assertion(fn,msg,assert.changesBy,!0).to.change(obj,prop).by(delta)},assert.doesNotChange=function(fn,obj,prop,msg){return 3===arguments.length&&"function"==typeof obj&&(msg=prop,prop=null),new Assertion(fn,msg,assert.doesNotChange,!0).to.not.change(obj,prop)},assert.changesButNotBy=function(fn,obj,prop,delta,msg){if(4===arguments.length&&"function"==typeof obj){var tmpMsg=delta;delta=prop,msg=tmpMsg}else 3===arguments.length&&(delta=prop,prop=null);new Assertion(fn,msg,assert.changesButNotBy,!0).to.change(obj,prop).but.not.by(delta)},assert.increases=function(fn,obj,prop,msg){return 3===arguments.length&&"function"==typeof obj&&(msg=prop,prop=null),new Assertion(fn,msg,assert.increases,!0).to.increase(obj,prop)},assert.increasesBy=function(fn,obj,prop,delta,msg){if(4===arguments.length&&"function"==typeof obj){var tmpMsg=delta;delta=prop,msg=tmpMsg}else 3===arguments.length&&(delta=prop,prop=null);new Assertion(fn,msg,assert.increasesBy,!0).to.increase(obj,prop).by(delta)},assert.doesNotIncrease=function(fn,obj,prop,msg){return 3===arguments.length&&"function"==typeof obj&&(msg=prop,prop=null),new Assertion(fn,msg,assert.doesNotIncrease,!0).to.not.increase(obj,prop)},assert.increasesButNotBy=function(fn,obj,prop,delta,msg){if(4===arguments.length&&"function"==typeof obj){var tmpMsg=delta;delta=prop,msg=tmpMsg}else 3===arguments.length&&(delta=prop,prop=null);new Assertion(fn,msg,assert.increasesButNotBy,!0).to.increase(obj,prop).but.not.by(delta)},assert.decreases=function(fn,obj,prop,msg){return 3===arguments.length&&"function"==typeof obj&&(msg=prop,prop=null),new Assertion(fn,msg,assert.decreases,!0).to.decrease(obj,prop)},assert.decreasesBy=function(fn,obj,prop,delta,msg){if(4===arguments.length&&"function"==typeof obj){var tmpMsg=delta;delta=prop,msg=tmpMsg}else 3===arguments.length&&(delta=prop,prop=null);new Assertion(fn,msg,assert.decreasesBy,!0).to.decrease(obj,prop).by(delta)},assert.doesNotDecrease=function(fn,obj,prop,msg){return 3===arguments.length&&"function"==typeof obj&&(msg=prop,prop=null),new Assertion(fn,msg,assert.doesNotDecrease,!0).to.not.decrease(obj,prop)},assert.doesNotDecreaseBy=function(fn,obj,prop,delta,msg){if(4===arguments.length&&"function"==typeof obj){var tmpMsg=delta;delta=prop,msg=tmpMsg}else 3===arguments.length&&(delta=prop,prop=null);return new Assertion(fn,msg,assert.doesNotDecreaseBy,!0).to.not.decrease(obj,prop).by(delta)},assert.decreasesButNotBy=function(fn,obj,prop,delta,msg){if(4===arguments.length&&"function"==typeof obj){var tmpMsg=delta;delta=prop,msg=tmpMsg}else 3===arguments.length&&(delta=prop,prop=null);new Assertion(fn,msg,assert.decreasesButNotBy,!0).to.decrease(obj,prop).but.not.by(delta)},assert.ifError=function(val){if(val)throw val},assert.isExtensible=function(obj,msg){new Assertion(obj,msg,assert.isExtensible,!0).to.be.extensible},assert.isNotExtensible=function(obj,msg){new Assertion(obj,msg,assert.isNotExtensible,!0).to.not.be.extensible},assert.isSealed=function(obj,msg){new Assertion(obj,msg,assert.isSealed,!0).to.be.sealed},assert.isNotSealed=function(obj,msg){new Assertion(obj,msg,assert.isNotSealed,!0).to.not.be.sealed},assert.isFrozen=function(obj,msg){new Assertion(obj,msg,assert.isFrozen,!0).to.be.frozen},assert.isNotFrozen=function(obj,msg){new Assertion(obj,msg,assert.isNotFrozen,!0).to.not.be.frozen},assert.isEmpty=function(val,msg){new Assertion(val,msg,assert.isEmpty,!0).to.be.empty},assert.isNotEmpty=function(val,msg){new Assertion(val,msg,assert.isNotEmpty,!0).to.not.be.empty},assert.containsSubset=function(val,exp,msg){new Assertion(val,msg).to.containSubset(exp)},assert.doesNotContainSubset=function(val,exp,msg){new Assertion(val,msg).to.not.containSubset(exp)};for(const[name,as]of[["isOk","ok"],["isNotOk","notOk"],["throws","throw"],["throws","Throw"],["isExtensible","extensible"],["isNotExtensible","notExtensible"],["isSealed","sealed"],["isNotSealed","notSealed"],["isFrozen","frozen"],["isNotFrozen","notFrozen"],["isEmpty","empty"],["isNotEmpty","notEmpty"],["isCallable","isFunction"],["isNotCallable","isNotFunction"],["containsSubset","containSubset"]])assert[as]=assert[name];var used=[];function use(fn){const exports={use,AssertionError,util:utils_exports,config,expect:chai_expect,assert,Assertion,...should_exports};return~used.indexOf(fn)||(fn(exports,utils_exports),used.push(fn)),exports}__name(use,"use");var dist_console=__webpack_require__("./node_modules/console-browserify/index.js");const MATCHERS_OBJECT=Symbol.for("matchers-object"),JEST_MATCHERS_OBJECT=Symbol.for("$$jest-matchers-object"),GLOBAL_EXPECT=Symbol.for("expect-global"),ASYMMETRIC_MATCHERS_OBJECT=Symbol.for("asymmetric-matchers-object"),customMatchers={toSatisfy(actual,expected,message){const{printReceived,printExpected,matcherHint}=this.utils,pass=expected(actual);return{pass,message:()=>pass?`${matcherHint(".not.toSatisfy","received","")}\n\nExpected value to not satisfy:\n${message||printExpected(expected)}\nReceived:\n${printReceived(actual)}`:`${matcherHint(".toSatisfy","received","")}\n\nExpected value to satisfy:\n${message||printExpected(expected)}\n\nReceived:\n${printReceived(actual)}`}},toBeOneOf(actual,expected){const{equals,customTesters}=this,{printReceived,printExpected,matcherHint}=this.utils;if(!Array.isArray(expected))throw new TypeError(`You must provide an array to ${matcherHint(".toBeOneOf")}, not '${typeof expected}'.`);const pass=0===expected.length||expected.some((item=>equals(item,actual,customTesters)));return{pass,message:()=>pass?`${matcherHint(".not.toBeOneOf","received","")}\n\nExpected value to not be one of:\n${printExpected(expected)}\nReceived:\n${printReceived(actual)}`:`${matcherHint(".toBeOneOf","received","")}\n\nExpected value to be one of:\n${printExpected(expected)}\n\nReceived:\n${printReceived(actual)}`}}},EXPECTED_COLOR=s.green,RECEIVED_COLOR=s.red,INVERTED_COLOR=s.inverse,BOLD_WEIGHT=s.bold,DIM_COLOR=s.dim;function matcherHint(matcherName,received="received",expected="expected",options={}){const{comment="",isDirectExpectCall=!1,isNot=!1,promise="",secondArgument="",expectedColor=EXPECTED_COLOR,receivedColor=RECEIVED_COLOR,secondArgumentColor=EXPECTED_COLOR}=options;let hint="",dimString="expect";return isDirectExpectCall||""===received||(hint+=DIM_COLOR(`${dimString}(`)+receivedColor(received),dimString=")"),""!==promise&&(hint+=DIM_COLOR(`${dimString}.`)+promise,dimString=""),isNot&&(hint+=`${DIM_COLOR(`${dimString}.`)}not`,dimString=""),matcherName.includes(".")?dimString+=matcherName:(hint+=DIM_COLOR(`${dimString}.`)+matcherName,dimString=""),""===expected?dimString+="()":(hint+=DIM_COLOR(`${dimString}(`)+expectedColor(expected),secondArgument&&(hint+=DIM_COLOR(", ")+secondArgumentColor(secondArgument)),dimString=")"),""!==comment&&(dimString+=` // ${comment}`),""!==dimString&&(hint+=DIM_COLOR(dimString)),hint}const dist_SPACE_SYMBOL="·";function dist_replaceTrailingSpaces(text){return text.replace(/\s+$/gm,(spaces=>dist_SPACE_SYMBOL.repeat(spaces.length)))}function dist_printReceived(object){return RECEIVED_COLOR(dist_replaceTrailingSpaces(stringify(object)))}function dist_printExpected(value){return EXPECTED_COLOR(dist_replaceTrailingSpaces(stringify(value)))}function getMatcherUtils(){return{EXPECTED_COLOR,RECEIVED_COLOR,INVERTED_COLOR,BOLD_WEIGHT,DIM_COLOR,diff,matcherHint,printReceived:dist_printReceived,printExpected:dist_printExpected,printDiffOrStringify}}function getCustomEqualityTesters(){return globalThis[JEST_MATCHERS_OBJECT].customEqualityTesters}function equals(a,b,customTesters,strictCheck){return eq(a,b,[],[],customTesters=customTesters||[],strictCheck?hasKey:hasDefinedKey)}Function.prototype.toString;function isAsymmetric(obj){return!!obj&&"object"==typeof obj&&"asymmetricMatch"in obj&&isA("Function",obj.asymmetricMatch)}function eq(a,b,aStack,bStack,customTesters,hasKey2){let result=!0;const asymmetricResult=function asymmetricMatch(a,b){const asymmetricA=isAsymmetric(a),asymmetricB=isAsymmetric(b);if(!asymmetricA||!asymmetricB)return asymmetricA?a.asymmetricMatch(b):asymmetricB?b.asymmetricMatch(a):void 0}(a,b);if(void 0!==asymmetricResult)return asymmetricResult;const testerContext={equals};for(let i=0;i<customTesters.length;i++){const customTesterResult=customTesters[i].call(testerContext,a,b,customTesters);if(void 0!==customTesterResult)return customTesterResult}if("function"==typeof URL&&a instanceof URL&&b instanceof URL)return a.href===b.href;if(Object.is(a,b))return!0;if(null===a||null===b)return a===b;const className=Object.prototype.toString.call(a);if(className!==Object.prototype.toString.call(b))return!1;switch(className){case"[object Boolean]":case"[object String]":case"[object Number]":return typeof a==typeof b&&("object"!=typeof a&&"object"!=typeof b?Object.is(a,b):Object.is(a.valueOf(),b.valueOf()));case"[object Date]":{const numA=+a,numB=+b;return numA===numB||Number.isNaN(numA)&&Number.isNaN(numB)}case"[object RegExp]":return a.source===b.source&&a.flags===b.flags}if("object"!=typeof a||"object"!=typeof b)return!1;if(isDomNode(a)&&isDomNode(b))return a.isEqualNode(b);let length=aStack.length;for(;length--;){if(aStack[length]===a)return bStack[length]===b;if(bStack[length]===b)return!1}if(aStack.push(a),bStack.push(b),"[object Array]"===className&&a.length!==b.length)return!1;if(a instanceof Error&&b instanceof Error)try{return function isErrorEqual(a,b,aStack,bStack,customTesters,hasKey2){let result=Object.getPrototypeOf(a)===Object.getPrototypeOf(b)&&a.name===b.name&&a.message===b.message;void 0!==b.cause&&result&&(result=eq(a.cause,b.cause,aStack,bStack,customTesters,hasKey2));a instanceof AggregateError&&b instanceof AggregateError&&result&&(result=eq(a.errors,b.errors,aStack,bStack,customTesters,hasKey2));return result&&(result=eq({...a},{...b},aStack,bStack,customTesters,hasKey2)),result}(a,b,aStack,bStack,customTesters,hasKey2)}finally{aStack.pop(),bStack.pop()}const aKeys=keys(a,hasKey2);let key,size=aKeys.length;if(keys(b,hasKey2).length!==size)return!1;for(;size--;)if(key=aKeys[size],result=hasKey2(b,key)&&eq(a[key],b[key],aStack,bStack,customTesters,hasKey2),!result)return!1;return aStack.pop(),bStack.pop(),result}function keys(obj,hasKey2){const keys2=[];for(const key in obj)hasKey2(obj,key)&&keys2.push(key);return keys2.concat(Object.getOwnPropertySymbols(obj).filter((symbol=>Object.getOwnPropertyDescriptor(obj,symbol).enumerable)))}function hasDefinedKey(obj,key){return hasKey(obj,key)&&void 0!==obj[key]}function hasKey(obj,key){return Object.prototype.hasOwnProperty.call(obj,key)}function isA(typeName,value){return Object.prototype.toString.apply(value)===`[object ${typeName}]`}function isDomNode(obj){return null!==obj&&"object"==typeof obj&&"nodeType"in obj&&"number"==typeof obj.nodeType&&"nodeName"in obj&&"string"==typeof obj.nodeName&&"isEqualNode"in obj&&"function"==typeof obj.isEqualNode}const dist_IS_KEYED_SENTINEL="@@__IMMUTABLE_KEYED__@@",dist_IS_SET_SENTINEL="@@__IMMUTABLE_SET__@@",dist_IS_LIST_SENTINEL="@@__IMMUTABLE_LIST__@@",dist_IS_ORDERED_SENTINEL="@@__IMMUTABLE_ORDERED__@@",dist_IS_RECORD_SYMBOL="@@__IMMUTABLE_RECORD__@@";function isObjectLiteral(source){return null!=source&&"object"==typeof source&&!Array.isArray(source)}const IteratorSymbol=Symbol.iterator;function hasIterator(object){return!(null==object||!object[IteratorSymbol])}function iterableEquality(a,b,customTesters=[],aStack=[],bStack=[]){if("object"!=typeof a||"object"!=typeof b||Array.isArray(a)||Array.isArray(b)||!hasIterator(a)||!hasIterator(b))return;if(a.constructor!==b.constructor)return!1;let length=aStack.length;for(;length--;)if(aStack[length]===a)return bStack[length]===b;aStack.push(a),bStack.push(b);const filteredCustomTesters=[...customTesters.filter((t=>t!==iterableEquality)),function iterableEqualityWithStack(a2,b2){return iterableEquality(a2,b2,[...customTesters],[...aStack],[...bStack])}];if(void 0!==a.size){if(a.size!==b.size)return!1;if(isA("Set",a)||function isImmutableUnorderedSet(maybeSet){return!(!maybeSet||!maybeSet[dist_IS_SET_SENTINEL]||maybeSet[dist_IS_ORDERED_SENTINEL])}(a)){let allFound=!0;for(const aValue of a)if(!b.has(aValue)){let has=!1;for(const bValue of b){!0===equals(aValue,bValue,filteredCustomTesters)&&(has=!0)}if(!1===has){allFound=!1;break}}return aStack.pop(),bStack.pop(),allFound}if(isA("Map",a)||function isImmutableUnorderedKeyed(maybeKeyed){return!(!maybeKeyed||!maybeKeyed[dist_IS_KEYED_SENTINEL]||maybeKeyed[dist_IS_ORDERED_SENTINEL])}(a)){let allFound=!0;for(const aEntry of a)if(!b.has(aEntry[0])||!equals(aEntry[1],b.get(aEntry[0]),filteredCustomTesters)){let has=!1;for(const bEntry of b){let matchedValue=!1;!0===equals(aEntry[0],bEntry[0],filteredCustomTesters)&&(matchedValue=equals(aEntry[1],bEntry[1],filteredCustomTesters)),!0===matchedValue&&(has=!0)}if(!1===has){allFound=!1;break}}return aStack.pop(),bStack.pop(),allFound}}const bIterator=b[IteratorSymbol]();for(const aValue of a){const nextB=bIterator.next();if(nextB.done||!equals(aValue,nextB.value,filteredCustomTesters))return!1}if(!bIterator.next().done)return!1;if(!(function isImmutableList(source){return Boolean(source&&isObjectLiteral(source)&&source[dist_IS_LIST_SENTINEL])}(a)||function isImmutableOrderedKeyed(source){return Boolean(source&&isObjectLiteral(source)&&source[dist_IS_KEYED_SENTINEL]&&source[dist_IS_ORDERED_SENTINEL])}(a)||function isImmutableOrderedSet(source){return Boolean(source&&isObjectLiteral(source)&&source[dist_IS_SET_SENTINEL]&&source[dist_IS_ORDERED_SENTINEL])}(a)||function isImmutableRecord(source){return Boolean(source&&isObjectLiteral(source)&&source[dist_IS_RECORD_SYMBOL])}(a))){if(!equals(Object.entries(a),Object.entries(b)))return!1}return aStack.pop(),bStack.pop(),!0}function hasPropertyInObject(object,key){return!(!object||"object"!=typeof object||object===Object.prototype)&&(Object.prototype.hasOwnProperty.call(object,key)||hasPropertyInObject(Object.getPrototypeOf(object),key))}function subsetEquality(object,subset,customTesters=[]){const filteredCustomTesters=customTesters.filter((t=>t!==subsetEquality)),subsetEqualityWithContext=(seenReferences=new WeakMap)=>(object2,subset2)=>{if(function isObjectWithKeys(a){return helpers_isObject(a)&&!(a instanceof Error)&&!Array.isArray(a)&&!(a instanceof Date)}(subset2))return Object.keys(subset2).every((key=>{if(null!=subset2[key]&&"object"==typeof subset2[key]){if(seenReferences.has(subset2[key]))return equals(object2[key],subset2[key],filteredCustomTesters);seenReferences.set(subset2[key],!0)}const result=null!=object2&&hasPropertyInObject(object2,key)&&equals(object2[key],subset2[key],[...filteredCustomTesters,subsetEqualityWithContext(seenReferences)]);return seenReferences.delete(subset2[key]),result}))};return subsetEqualityWithContext()(object,subset)}function typeEquality(a,b){if(null!=a&&null!=b&&a.constructor!==b.constructor)return!1}function arrayBufferEquality(a,b){let dataViewA=a,dataViewB=b;if(!(a instanceof DataView&&b instanceof DataView)){if(!(a instanceof ArrayBuffer&&b instanceof ArrayBuffer))return;try{dataViewA=new DataView(a),dataViewB=new DataView(b)}catch{return}}if(dataViewA.byteLength!==dataViewB.byteLength)return!1;for(let i=0;i<dataViewA.byteLength;i++)if(dataViewA.getUint8(i)!==dataViewB.getUint8(i))return!1;return!0}function sparseArrayEquality(a,b,customTesters=[]){if(!Array.isArray(a)||!Array.isArray(b))return;const aKeys=Object.keys(a),bKeys=Object.keys(b);return equals(a,b,customTesters.filter((t=>t!==sparseArrayEquality)),!0)&&equals(aKeys,bKeys)}function getObjectKeys(object){return[...Object.keys(object),...Object.getOwnPropertySymbols(object).filter((s=>{var _a;return null==(_a=Object.getOwnPropertyDescriptor(object,s))?void 0:_a.enumerable}))]}if(!Object.prototype.hasOwnProperty.call(globalThis,MATCHERS_OBJECT)){const globalState=new WeakMap,matchers=Object.create(null),customEqualityTesters=[],asymmetricMatchers=Object.create(null);Object.defineProperty(globalThis,MATCHERS_OBJECT,{get:()=>globalState}),Object.defineProperty(globalThis,JEST_MATCHERS_OBJECT,{configurable:!0,get:()=>({state:globalState.get(globalThis[GLOBAL_EXPECT]),matchers,customEqualityTesters})}),Object.defineProperty(globalThis,ASYMMETRIC_MATCHERS_OBJECT,{get:()=>asymmetricMatchers})}function getState(expect){return globalThis[MATCHERS_OBJECT].get(expect)}function setState(state,expect){const map=globalThis[MATCHERS_OBJECT],current=map.get(expect)||{},results=Object.defineProperties(current,{...Object.getOwnPropertyDescriptors(current),...Object.getOwnPropertyDescriptors(state)});map.set(expect,results)}class dist_AsymmetricMatcher{constructor(sample,inverse=!1){this.sample=sample,this.inverse=inverse}$$typeof=Symbol.for("jest.asymmetricMatcher");getMatcherContext(expect){return{...getState(expect||globalThis[GLOBAL_EXPECT]),equals,isNot:this.inverse,customTesters:getCustomEqualityTesters(),utils:{...getMatcherUtils(),diff,stringify,iterableEquality,subsetEquality}}}}dist_AsymmetricMatcher.prototype[Symbol.for("chai/inspect")]=function(options){const result=stringify(this,options.depth,{min:!0});return result.length<=options.truncate?result:`${this.toString()}{…}`};class StringContaining extends dist_AsymmetricMatcher{constructor(sample,inverse=!1){if(!isA("String",sample))throw new Error("Expected is not a string");super(sample,inverse)}asymmetricMatch(other){const result=isA("String",other)&&other.includes(this.sample);return this.inverse?!result:result}toString(){return`String${this.inverse?"Not":""}Containing`}getExpectedType(){return"string"}}class Anything extends dist_AsymmetricMatcher{asymmetricMatch(other){return null!=other}toString(){return"Anything"}toAsymmetricMatcher(){return"Anything"}}class ObjectContaining extends dist_AsymmetricMatcher{constructor(sample,inverse=!1){super(sample,inverse)}getPrototype(obj){return Object.getPrototypeOf?Object.getPrototypeOf(obj):obj.constructor.prototype===obj?null:obj.constructor.prototype}hasProperty(obj,property){return!!obj&&(!!Object.prototype.hasOwnProperty.call(obj,property)||this.hasProperty(this.getPrototype(obj),property))}asymmetricMatch(other){if("object"!=typeof this.sample)throw new TypeError(`You must provide an object to ${this.toString()}, not '${typeof this.sample}'.`);let result=!0;const matcherContext=this.getMatcherContext();for(const property in this.sample)if(!this.hasProperty(other,property)||!equals(this.sample[property],other[property],matcherContext.customTesters)){result=!1;break}return this.inverse?!result:result}toString(){return`Object${this.inverse?"Not":""}Containing`}getExpectedType(){return"object"}}class ArrayContaining extends dist_AsymmetricMatcher{constructor(sample,inverse=!1){super(sample,inverse)}asymmetricMatch(other){if(!Array.isArray(this.sample))throw new TypeError(`You must provide an array to ${this.toString()}, not '${typeof this.sample}'.`);const matcherContext=this.getMatcherContext(),result=0===this.sample.length||Array.isArray(other)&&this.sample.every((item=>other.some((another=>equals(item,another,matcherContext.customTesters)))));return this.inverse?!result:result}toString(){return`Array${this.inverse?"Not":""}Containing`}getExpectedType(){return"array"}}class Any extends dist_AsymmetricMatcher{constructor(sample){if(void 0===sample)throw new TypeError("any() expects to be passed a constructor function. Please pass one or use anything() to match any object.");super(sample)}fnNameFor(func){if(func.name)return func.name;const matches=Function.prototype.toString.call(func).match(/^(?:async)?\s*function\s*(?:\*\s*)?([\w$]+)\s*\(/);return matches?matches[1]:"<anonymous>"}asymmetricMatch(other){return this.sample===String?"string"==typeof other||other instanceof String:this.sample===Number?"number"==typeof other||other instanceof Number:this.sample===Function?"function"==typeof other||"function"==typeof other:this.sample===Boolean?"boolean"==typeof other||other instanceof Boolean:this.sample===BigInt?"bigint"==typeof other||other instanceof BigInt:this.sample===Symbol?"symbol"==typeof other||other instanceof Symbol:this.sample===Object?"object"==typeof other:other instanceof this.sample}toString(){return"Any"}getExpectedType(){return this.sample===String?"string":this.sample===Number?"number":this.sample===Function?"function":this.sample===Object?"object":this.sample===Boolean?"boolean":this.fnNameFor(this.sample)}toAsymmetricMatcher(){return`Any<${this.fnNameFor(this.sample)}>`}}class StringMatching extends dist_AsymmetricMatcher{constructor(sample,inverse=!1){if(!isA("String",sample)&&!isA("RegExp",sample))throw new Error("Expected is not a String or a RegExp");super(new RegExp(sample),inverse)}asymmetricMatch(other){const result=isA("String",other)&&this.sample.test(other);return this.inverse?!result:result}toString(){return`String${this.inverse?"Not":""}Matching`}getExpectedType(){return"string"}}class CloseTo extends dist_AsymmetricMatcher{precision;constructor(sample,precision=2,inverse=!1){if(!isA("Number",sample))throw new Error("Expected is not a Number");if(!isA("Number",precision))throw new Error("Precision is not a Number");super(sample),this.inverse=inverse,this.precision=precision}asymmetricMatch(other){if(!isA("Number",other))return!1;let result=!1;return result=other===Number.POSITIVE_INFINITY&&this.sample===Number.POSITIVE_INFINITY||(other===Number.NEGATIVE_INFINITY&&this.sample===Number.NEGATIVE_INFINITY||Math.abs(this.sample-other)<10**-this.precision/2),this.inverse?!result:result}toString(){return`Number${this.inverse?"Not":""}CloseTo`}getExpectedType(){return"number"}toAsymmetricMatcher(){return[this.toString(),this.sample,`(${word="digit",count=this.precision,`${count} ${word}${1===count?"":"s"}`})`].join(" ");var word,count}}function createAssertionMessage(util,assertion,hasArgs){const not=util.flag(assertion,"negate")?"not.":"",name=`${util.flag(assertion,"_name")}(${hasArgs?"expected":""})`,promiseName=util.flag(assertion,"promise");return`expect(actual)${promiseName?`.${promiseName}`:""}.${not}${name}`}function recordAsyncExpect(_test,promise,assertion,error){const test=_test;if(test&&promise instanceof Promise){promise=promise.finally((()=>{if(!test.promises)return;const index=test.promises.indexOf(promise);-1!==index&&test.promises.splice(index,1)})),test.promises||(test.promises=[]),test.promises.push(promise);let resolved=!1;return test.onFinished??(test.onFinished=[]),test.onFinished.push((()=>{var _a;if(!resolved){const processor=(null==(_a=globalThis.__vitest_worker__)?void 0:_a.onFilterStackTrace)||(s=>s||""),stack=processor(error.stack);dist_console.warn([`Promise returned by \`${assertion}\` was not awaited. `,"Vitest currently auto-awaits hanging assertions at the end of the test, but this will cause the test to fail in Vitest 3. ","Please remember to await the assertion.\n",stack].join(""))}})),{then:(onFulfilled,onRejected)=>(resolved=!0,promise.then(onFulfilled,onRejected)),catch:onRejected=>promise.catch(onRejected),finally:onFinally=>promise.finally(onFinally),[Symbol.toStringTag]:"Promise"}}return promise}function wrapAssertion(utils,name,fn){return function(...args){var _a;if("withTest"!==name&&utils.flag(this,"_name",name),!utils.flag(this,"soft"))return fn.apply(this,args);const test=utils.flag(this,"vitest-test");if(!test)throw new Error("expect.soft() can only be used inside a test");try{return fn.apply(this,args)}catch(err){test.result||(test.result={state:"fail"}),test.result.state="fail",(_a=test.result).errors||(_a.errors=[]),test.result.errors.push(error_processError(err))}}}function ordinalOf(i){const j=i%10,k=i%100;return 1===j&&11!==k?`${i}st`:2===j&&12!==k?`${i}nd`:3===j&&13!==k?`${i}rd`:`${i}th`}function formatCalls(spy,msg,showActualCall){return spy.mock.calls&&(msg+=s.gray(`\n\nReceived: \n\n${spy.mock.calls.map(((callArg,i)=>{let methodCall=s.bold(`  ${ordinalOf(i+1)} ${spy.getMockName()} call:\n\n`);return methodCall+=showActualCall?diff(showActualCall,callArg,{omitAnnotationLines:!0}):stringify(callArg).split("\n").map((line=>`    ${line}`)).join("\n"),methodCall+="\n",methodCall})).join("\n")}`)),msg+=s.gray(`\n\nNumber of calls: ${s.bold(spy.mock.calls.length)}\n`)}class JestExtendError extends Error{constructor(message,actual,expected){super(message),this.actual=actual,this.expected=expected}}function JestExtendPlugin(c,expect,matchers){return(_,utils)=>{Object.entries(matchers).forEach((([expectAssertionName,expectAssertion])=>{const softWrapper=wrapAssertion(utils,expectAssertionName,(function expectWrapper(...args){const{state,isNot,obj}=function getMatcherState(assertion,expect){const obj=assertion._obj,isNot=utils_exports.flag(assertion,"negate"),promise=utils_exports.flag(assertion,"promise")||"",jestUtils={...getMatcherUtils(),diff,stringify,iterableEquality,subsetEquality};return{state:{...getState(expect),customTesters:getCustomEqualityTesters(),isNot,utils:jestUtils,promise,equals,suppressedErrors:[],soft:utils_exports.flag(assertion,"soft"),poll:utils_exports.flag(assertion,"poll")},isNot,obj}}(this,expect),result=expectAssertion.call(state,obj,...args);if(result&&"object"==typeof result&&result instanceof Promise)return result.then((({pass:pass2,message:message2,actual:actual2,expected:expected2})=>{if(pass2&&isNot||!pass2&&!isNot)throw new JestExtendError(message2(),actual2,expected2)}));const{pass,message,actual,expected}=result;if(pass&&isNot||!pass&&!isNot)throw new JestExtendError(message(),actual,expected)}));utils.addMethod(globalThis[JEST_MATCHERS_OBJECT].matchers,expectAssertionName,softWrapper),utils.addMethod(c.Assertion.prototype,expectAssertionName,softWrapper);class CustomMatcher extends dist_AsymmetricMatcher{constructor(inverse=!1,...sample){super(sample,inverse)}asymmetricMatch(other){const{pass}=expectAssertion.call(this.getMatcherContext(expect),other,...this.sample);return this.inverse?!pass:pass}toString(){return`${this.inverse?"not.":""}${expectAssertionName}`}getExpectedType(){return"any"}toAsymmetricMatcher(){return`${this.toString()}<${this.sample.map((item=>stringify(item))).join(", ")}>`}}const customMatcher=(...sample)=>new CustomMatcher(!1,...sample);Object.defineProperty(expect,expectAssertionName,{configurable:!0,enumerable:!0,value:customMatcher,writable:!0}),Object.defineProperty(expect.not,expectAssertionName,{configurable:!0,enumerable:!0,value:(...sample)=>new CustomMatcher(!0,...sample),writable:!0}),Object.defineProperty(globalThis[ASYMMETRIC_MATCHERS_OBJECT],expectAssertionName,{configurable:!0,enumerable:!0,value:customMatcher,writable:!0})}))}}var chunk_BVHSVHOK_process=__webpack_require__("./node_modules/process/browser.js"),chunk_BVHSVHOK_h=Object.entries({reset:[0,0],bold:[1,22,"[22m[1m"],dim:[2,22,"[22m[2m"],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]});function chunk_BVHSVHOK_a(n){return String(n)}chunk_BVHSVHOK_a.open="",chunk_BVHSVHOK_a.close="";var jsTokens_1,hasRequiredJsTokens;(function chunk_BVHSVHOK_p(n=!1){let e=function chunk_BVHSVHOK_C(n=!1){let e=void 0!==chunk_BVHSVHOK_process?chunk_BVHSVHOK_process:void 0,i=(null==e?void 0:e.env)||{},g=(null==e?void 0:e.argv)||[];return!("NO_COLOR"in i||g.includes("--no-color"))&&("FORCE_COLOR"in i||g.includes("--color")||"win32"===(null==e?void 0:e.platform)||n&&"dumb"!==i.TERM||"CI"in i)||"undefined"!=typeof window&&!!window.chrome}(n),g=(r,t,c=r)=>{let o=l=>{let s=String(l),b=s.indexOf(t,r.length);return~b?r+((r,t,c,o)=>{let l="",s=0;do{l+=r.substring(s,o)+c,s=o+t.length,o=r.indexOf(t,s)}while(~o);return l+r.substring(s)})(s,t,c,b)+t:r+s+t};return o.open=r,o.close=t,o},u={isColorSupported:e},d=r=>`[${r}m`;for(let[r,t]of chunk_BVHSVHOK_h)u[r]=e?g(d(t[0]),d(t[1]),t[2]):chunk_BVHSVHOK_a;return u})();(function requireJsTokens(){return hasRequiredJsTokens?jsTokens_1:(hasRequiredJsTokens=1,RegularExpressionLiteral=/\/(?![*\/])(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\\]).|\\.)*(\/[$_\u200C\u200D\p{ID_Continue}]*|\\)?/uy,Punctuator=/--|\+\+|=>|\.{3}|\??\.(?!\d)|(?:&&|\|\||\?\?|[+\-%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2}|\/(?![\/*]))=?|[?~,:;[\](){}]/y,Identifier=/(\x23?)(?=[$_\p{ID_Start}\\])(?:[$_\u200C\u200D\p{ID_Continue}]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+/uy,StringLiteral=/(['"])(?:(?!\1)[^\\\n\r]|\\(?:\r\n|[^]))*(\1)?/y,NumericLiteral=/(?:0[xX][\da-fA-F](?:_?[\da-fA-F])*|0[oO][0-7](?:_?[0-7])*|0[bB][01](?:_?[01])*)n?|0n|[1-9](?:_?\d)*n|(?:(?:0(?!\d)|0\d*[89]\d*|[1-9](?:_?\d)*)(?:\.(?:\d(?:_?\d)*)?)?|\.\d(?:_?\d)*)(?:[eE][+-]?\d(?:_?\d)*)?|0[0-7]+/y,Template=/[`}](?:[^`\\$]|\\[^]|\$(?!\{))*(`|\$\{)?/y,WhiteSpace=/[\t\v\f\ufeff\p{Zs}]+/uy,LineTerminatorSequence=/\r?\n|[\r\u2028\u2029]/y,MultiLineComment=/\/\*(?:[^*]|\*(?!\/))*(\*\/)?/y,SingleLineComment=/\/\/.*/y,JSXPunctuator=/[<>.:={}]|\/(?![\/*])/y,JSXIdentifier=/[$_\p{ID_Start}][$_\u200C\u200D\p{ID_Continue}-]*/uy,JSXString=/(['"])(?:(?!\1)[^])*(\1)?/y,JSXText=/[^<>{}]+/y,TokensPrecedingExpression=/^(?:[\/+-]|\.{3}|\?(?:InterpolationIn(?:JSX|Template)|NoLineTerminatorHere|NonExpressionParenEnd|UnaryIncDec))?$|[{}([,;<>=*%&|^!~?:]$/,TokensNotPrecedingObjectLiteral=/^(?:=>|[;\]){}]|else|\?(?:NoLineTerminatorHere|NonExpressionParenEnd))?$/,KeywordsWithExpressionAfter=/^(?:await|case|default|delete|do|else|instanceof|new|return|throw|typeof|void|yield)$/,KeywordsWithNoLineTerminatorAfter=/^(?:return|throw|yield)$/,Newline=RegExp(LineTerminatorSequence.source),jsTokens_1=function*(input,{jsx=!1}={}){var braces,firstCodePoint,isExpression,lastIndex,lastSignificantToken,length,match,mode,nextLastIndex,nextLastSignificantToken,parenNesting,postfixIncDec,punctuator,stack;for(({length}=input),lastIndex=0,lastSignificantToken="",stack=[{tag:"JS"}],braces=[],parenNesting=0,postfixIncDec=!1;lastIndex<length;){switch((mode=stack[stack.length-1]).tag){case"JS":case"JSNonExpressionParen":case"InterpolationInTemplate":case"InterpolationInJSX":if("/"===input[lastIndex]&&(TokensPrecedingExpression.test(lastSignificantToken)||KeywordsWithExpressionAfter.test(lastSignificantToken))&&(RegularExpressionLiteral.lastIndex=lastIndex,match=RegularExpressionLiteral.exec(input))){lastIndex=RegularExpressionLiteral.lastIndex,lastSignificantToken=match[0],postfixIncDec=!0,yield{type:"RegularExpressionLiteral",value:match[0],closed:void 0!==match[1]&&"\\"!==match[1]};continue}if(Punctuator.lastIndex=lastIndex,match=Punctuator.exec(input)){switch(punctuator=match[0],nextLastIndex=Punctuator.lastIndex,nextLastSignificantToken=punctuator,punctuator){case"(":"?NonExpressionParenKeyword"===lastSignificantToken&&stack.push({tag:"JSNonExpressionParen",nesting:parenNesting}),parenNesting++,postfixIncDec=!1;break;case")":parenNesting--,postfixIncDec=!0,"JSNonExpressionParen"===mode.tag&&parenNesting===mode.nesting&&(stack.pop(),nextLastSignificantToken="?NonExpressionParenEnd",postfixIncDec=!1);break;case"{":Punctuator.lastIndex=0,isExpression=!TokensNotPrecedingObjectLiteral.test(lastSignificantToken)&&(TokensPrecedingExpression.test(lastSignificantToken)||KeywordsWithExpressionAfter.test(lastSignificantToken)),braces.push(isExpression),postfixIncDec=!1;break;case"}":switch(mode.tag){case"InterpolationInTemplate":if(braces.length===mode.nesting){Template.lastIndex=lastIndex,match=Template.exec(input),lastIndex=Template.lastIndex,lastSignificantToken=match[0],"${"===match[1]?(lastSignificantToken="?InterpolationInTemplate",postfixIncDec=!1,yield{type:"TemplateMiddle",value:match[0]}):(stack.pop(),postfixIncDec=!0,yield{type:"TemplateTail",value:match[0],closed:"`"===match[1]});continue}break;case"InterpolationInJSX":if(braces.length===mode.nesting){stack.pop(),lastIndex+=1,lastSignificantToken="}",yield{type:"JSXPunctuator",value:"}"};continue}}nextLastSignificantToken=(postfixIncDec=braces.pop())?"?ExpressionBraceEnd":"}";break;case"]":postfixIncDec=!0;break;case"++":case"--":nextLastSignificantToken=postfixIncDec?"?PostfixIncDec":"?UnaryIncDec";break;case"<":if(jsx&&(TokensPrecedingExpression.test(lastSignificantToken)||KeywordsWithExpressionAfter.test(lastSignificantToken))){stack.push({tag:"JSXTag"}),lastIndex+=1,lastSignificantToken="<",yield{type:"JSXPunctuator",value:punctuator};continue}postfixIncDec=!1;break;default:postfixIncDec=!1}lastIndex=nextLastIndex,lastSignificantToken=nextLastSignificantToken,yield{type:"Punctuator",value:punctuator};continue}if(Identifier.lastIndex=lastIndex,match=Identifier.exec(input)){switch(lastIndex=Identifier.lastIndex,nextLastSignificantToken=match[0],match[0]){case"for":case"if":case"while":case"with":"."!==lastSignificantToken&&"?."!==lastSignificantToken&&(nextLastSignificantToken="?NonExpressionParenKeyword")}lastSignificantToken=nextLastSignificantToken,postfixIncDec=!KeywordsWithExpressionAfter.test(match[0]),yield{type:"#"===match[1]?"PrivateIdentifier":"IdentifierName",value:match[0]};continue}if(StringLiteral.lastIndex=lastIndex,match=StringLiteral.exec(input)){lastIndex=StringLiteral.lastIndex,lastSignificantToken=match[0],postfixIncDec=!0,yield{type:"StringLiteral",value:match[0],closed:void 0!==match[2]};continue}if(NumericLiteral.lastIndex=lastIndex,match=NumericLiteral.exec(input)){lastIndex=NumericLiteral.lastIndex,lastSignificantToken=match[0],postfixIncDec=!0,yield{type:"NumericLiteral",value:match[0]};continue}if(Template.lastIndex=lastIndex,match=Template.exec(input)){lastIndex=Template.lastIndex,lastSignificantToken=match[0],"${"===match[1]?(lastSignificantToken="?InterpolationInTemplate",stack.push({tag:"InterpolationInTemplate",nesting:braces.length}),postfixIncDec=!1,yield{type:"TemplateHead",value:match[0]}):(postfixIncDec=!0,yield{type:"NoSubstitutionTemplate",value:match[0],closed:"`"===match[1]});continue}break;case"JSXTag":case"JSXTagEnd":if(JSXPunctuator.lastIndex=lastIndex,match=JSXPunctuator.exec(input)){switch(lastIndex=JSXPunctuator.lastIndex,nextLastSignificantToken=match[0],match[0]){case"<":stack.push({tag:"JSXTag"});break;case">":stack.pop(),"/"===lastSignificantToken||"JSXTagEnd"===mode.tag?(nextLastSignificantToken="?JSX",postfixIncDec=!0):stack.push({tag:"JSXChildren"});break;case"{":stack.push({tag:"InterpolationInJSX",nesting:braces.length}),nextLastSignificantToken="?InterpolationInJSX",postfixIncDec=!1;break;case"/":"<"===lastSignificantToken&&(stack.pop(),"JSXChildren"===stack[stack.length-1].tag&&stack.pop(),stack.push({tag:"JSXTagEnd"}))}lastSignificantToken=nextLastSignificantToken,yield{type:"JSXPunctuator",value:match[0]};continue}if(JSXIdentifier.lastIndex=lastIndex,match=JSXIdentifier.exec(input)){lastIndex=JSXIdentifier.lastIndex,lastSignificantToken=match[0],yield{type:"JSXIdentifier",value:match[0]};continue}if(JSXString.lastIndex=lastIndex,match=JSXString.exec(input)){lastIndex=JSXString.lastIndex,lastSignificantToken=match[0],yield{type:"JSXString",value:match[0],closed:void 0!==match[2]};continue}break;case"JSXChildren":if(JSXText.lastIndex=lastIndex,match=JSXText.exec(input)){lastIndex=JSXText.lastIndex,lastSignificantToken=match[0],yield{type:"JSXText",value:match[0]};continue}switch(input[lastIndex]){case"<":stack.push({tag:"JSXTag"}),lastIndex++,lastSignificantToken="<",yield{type:"JSXPunctuator",value:"<"};continue;case"{":stack.push({tag:"InterpolationInJSX",nesting:braces.length}),lastIndex++,lastSignificantToken="?InterpolationInJSX",postfixIncDec=!1,yield{type:"JSXPunctuator",value:"{"};continue}}WhiteSpace.lastIndex=lastIndex,(match=WhiteSpace.exec(input))?(lastIndex=WhiteSpace.lastIndex,yield{type:"WhiteSpace",value:match[0]}):(LineTerminatorSequence.lastIndex=lastIndex,(match=LineTerminatorSequence.exec(input))?(lastIndex=LineTerminatorSequence.lastIndex,postfixIncDec=!1,KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)&&(lastSignificantToken="?NoLineTerminatorHere"),yield{type:"LineTerminatorSequence",value:match[0]}):(MultiLineComment.lastIndex=lastIndex,(match=MultiLineComment.exec(input))?(lastIndex=MultiLineComment.lastIndex,Newline.test(match[0])&&(postfixIncDec=!1,KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)&&(lastSignificantToken="?NoLineTerminatorHere")),yield{type:"MultiLineComment",value:match[0],closed:void 0!==match[1]}):(SingleLineComment.lastIndex=lastIndex,(match=SingleLineComment.exec(input))?(lastIndex=SingleLineComment.lastIndex,postfixIncDec=!1,yield{type:"SingleLineComment",value:match[0]}):(lastIndex+=(firstCodePoint=String.fromCodePoint(input.codePointAt(lastIndex))).length,lastSignificantToken=firstCodePoint,postfixIncDec=!1,yield{type:mode.tag.startsWith("JSX")?"JSXInvalid":"Invalid",value:firstCodePoint}))))}});var Identifier,JSXIdentifier,JSXPunctuator,JSXString,JSXText,KeywordsWithExpressionAfter,KeywordsWithNoLineTerminatorAfter,LineTerminatorSequence,MultiLineComment,Newline,NumericLiteral,Punctuator,RegularExpressionLiteral,SingleLineComment,StringLiteral,Template,TokensNotPrecedingObjectLiteral,TokensPrecedingExpression,WhiteSpace})();var reservedWords_strict=["implements","interface","let","package","private","protected","public","static","yield"];new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),new Set(reservedWords_strict);const SAFE_TIMERS_SYMBOL=Symbol("vitest:SAFE_TIMERS");function dist_helpers_toArray(array){return null==array&&(array=[]),Array.isArray(array)?array:[array]}function dist_helpers_isObject(item){return null!=item&&"object"==typeof item&&!Array.isArray(item)}function helpers_createDefer(){let resolve=null,reject=null;const p=new Promise(((_resolve,_reject)=>{resolve=_resolve,reject=_reject}));return p.resolve=resolve,p.reject=reject,p}function dist_mergeNamespaces(n,m){return m.forEach((function(e){e&&"string"!=typeof e&&!Array.isArray(e)&&Object.keys(e).forEach((function(k){if("default"!==k&&!(k in n)){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}}))})),Object.freeze(n)}function dist_printIteratorEntries(iterator,config,indentation,depth,refs,printer,separator=": "){let result="",width=0,current=iterator.next();if(!current.done){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(;!current.done;){if(result+=indentationNext,width++===config.maxWidth){result+="…";break}result+=printer(current.value[0],config,indentationNext,depth,refs)+separator+printer(current.value[1],config,indentationNext,depth,refs),current=iterator.next(),current.done?config.min||(result+=","):result+=`,${config.spacingInner}`}result+=config.spacingOuter+indentation}return result}function dist_printIteratorValues(iterator,config,indentation,depth,refs,printer){let result="",width=0,current=iterator.next();if(!current.done){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(;!current.done;){if(result+=indentationNext,width++===config.maxWidth){result+="…";break}result+=printer(current.value,config,indentationNext,depth,refs),current=iterator.next(),current.done?config.min||(result+=","):result+=`,${config.spacingInner}`}result+=config.spacingOuter+indentation}return result}function dist_printListItems(list,config,indentation,depth,refs,printer){let result="";const isDataView=l=>l instanceof DataView,length=isDataView(list=list instanceof ArrayBuffer?new DataView(list):list)?list.byteLength:list.length;if(length>0){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(let i=0;i<length;i++){if(result+=indentationNext,i===config.maxWidth){result+="…";break}(isDataView(list)||i in list)&&(result+=printer(isDataView(list)?list.getInt8(i):list[i],config,indentationNext,depth,refs)),i<length-1?result+=`,${config.spacingInner}`:config.min||(result+=",")}result+=config.spacingOuter+indentation}return result}function dist_printObjectProperties(val,config,indentation,depth,refs,printer){let result="";const keys=function dist_getKeysOfEnumerableProperties(object,compareKeys){const rawKeys=Object.keys(object),keys=null===compareKeys?rawKeys:rawKeys.sort(compareKeys);if(Object.getOwnPropertySymbols)for(const symbol of Object.getOwnPropertySymbols(object))Object.getOwnPropertyDescriptor(object,symbol).enumerable&&keys.push(symbol);return keys}(val,config.compareKeys);if(keys.length>0){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(let i=0;i<keys.length;i++){const key=keys[i];result+=`${indentationNext+printer(key,config,indentationNext,depth,refs)}: ${printer(val[key],config,indentationNext,depth,refs)}`,i<keys.length-1?result+=`,${config.spacingInner}`:config.min||(result+=",")}result+=config.spacingOuter+indentation}return result}const dist_asymmetricMatcher="function"==typeof Symbol&&Symbol.for?Symbol.for("jest.asymmetricMatcher"):1267621,dist_plugin$5={serialize:(val,config,indentation,depth,refs,printer)=>{const stringedValue=val.toString();if("ArrayContaining"===stringedValue||"ArrayNotContaining"===stringedValue)return++depth>config.maxDepth?`[${stringedValue}]`:`${stringedValue+" "}[${dist_printListItems(val.sample,config,indentation,depth,refs,printer)}]`;if("ObjectContaining"===stringedValue||"ObjectNotContaining"===stringedValue)return++depth>config.maxDepth?`[${stringedValue}]`:`${stringedValue+" "}{${dist_printObjectProperties(val.sample,config,indentation,depth,refs,printer)}}`;if("StringMatching"===stringedValue||"StringNotMatching"===stringedValue)return stringedValue+" "+printer(val.sample,config,indentation,depth,refs);if("StringContaining"===stringedValue||"StringNotContaining"===stringedValue)return stringedValue+" "+printer(val.sample,config,indentation,depth,refs);if("function"!=typeof val.toAsymmetricMatcher)throw new TypeError(`Asymmetric matcher ${val.constructor.name} does not implement toAsymmetricMatcher()`);return val.toAsymmetricMatcher()},test:val=>val&&val.$$typeof===dist_asymmetricMatcher},dist_OBJECT_NAMES=new Set(["DOMStringMap","NamedNodeMap"]),dist_ARRAY_REGEXP=/^(?:HTML\w*Collection|NodeList)$/;const dist_plugin$4={serialize:(collection,config,indentation,depth,refs,printer)=>{const name=collection.constructor.name;return++depth>config.maxDepth?`[${name}]`:(config.min?"":name+" ")+(dist_OBJECT_NAMES.has(name)?`{${dist_printObjectProperties(function dist_isNamedNodeMap(collection){return"NamedNodeMap"===collection.constructor.name}(collection)?[...collection].reduce(((props,attribute)=>(props[attribute.name]=attribute.value,props)),{}):{...collection},config,indentation,depth,refs,printer)}}`:`[${dist_printListItems([...collection],config,indentation,depth,refs,printer)}]`)},test:val=>val&&val.constructor&&!!val.constructor.name&&function dist_testName(name){return dist_OBJECT_NAMES.has(name)||dist_ARRAY_REGEXP.test(name)}(val.constructor.name)};function dist_escapeHTML(str){return str.replaceAll("<","&lt;").replaceAll(">","&gt;")}function dist_printProps(keys,props,config,indentation,depth,refs,printer){const indentationNext=indentation+config.indent,colors=config.colors;return keys.map((key=>{const value=props[key];let printed=printer(value,config,indentationNext,depth,refs);return"string"!=typeof value&&(printed.includes("\n")&&(printed=config.spacingOuter+indentationNext+printed+config.spacingOuter+indentation),printed=`{${printed}}`),`${config.spacingInner+indentation+colors.prop.open+key+colors.prop.close}=${colors.value.open}${printed}${colors.value.close}`})).join("")}function dist_printChildren(children,config,indentation,depth,refs,printer){return children.map((child=>config.spacingOuter+indentation+("string"==typeof child?dist_printText(child,config):printer(child,config,indentation,depth,refs)))).join("")}function dist_printText(text,config){const contentColor=config.colors.content;return contentColor.open+dist_escapeHTML(text)+contentColor.close}function dist_printElement(type,printedProps,printedChildren,config,indentation){const tagColor=config.colors.tag;return`${tagColor.open}<${type}${printedProps&&tagColor.close+printedProps+config.spacingOuter+indentation+tagColor.open}${printedChildren?`>${tagColor.close}${printedChildren}${config.spacingOuter}${indentation}${tagColor.open}</${type}`:(printedProps&&!config.min?"":" ")+"/"}>${tagColor.close}`}function dist_printElementAsLeaf(type,config){const tagColor=config.colors.tag;return`${tagColor.open}<${type}${tagColor.close} …${tagColor.open} />${tagColor.close}`}const dist_ELEMENT_REGEXP=/^(?:(?:HTML|SVG)\w*)?Element$/;function dist_nodeIsFragment(node){return 11===node.nodeType}const dist_plugin$3={serialize:(node,config,indentation,depth,refs,printer)=>{if(function dist_nodeIsText(node){return 3===node.nodeType}(node))return dist_printText(node.data,config);if(function dist_nodeIsComment(node){return 8===node.nodeType}(node))return function dist_printComment(comment,config){const commentColor=config.colors.comment;return`${commentColor.open}\x3c!--${dist_escapeHTML(comment)}--\x3e${commentColor.close}`}(node.data,config);const type=dist_nodeIsFragment(node)?"DocumentFragment":node.tagName.toLowerCase();return++depth>config.maxDepth?dist_printElementAsLeaf(type,config):dist_printElement(type,dist_printProps(dist_nodeIsFragment(node)?[]:Array.from(node.attributes,(attr=>attr.name)).sort(),dist_nodeIsFragment(node)?{}:[...node.attributes].reduce(((props,attribute)=>(props[attribute.name]=attribute.value,props)),{}),config,indentation+config.indent,depth,refs,printer),dist_printChildren(Array.prototype.slice.call(node.childNodes||node.children),config,indentation+config.indent,depth,refs,printer),config,indentation)},test:val=>{var _a;return(null==(_a=null==val?void 0:val.constructor)?void 0:_a.name)&&function dist_testNode(val){const constructorName=val.constructor.name,{nodeType,tagName}=val,isCustomElement="string"==typeof tagName&&tagName.includes("-")||function dist_testHasAttribute(val){try{return"function"==typeof val.hasAttribute&&val.hasAttribute("is")}catch{return!1}}(val);return 1===nodeType&&(dist_ELEMENT_REGEXP.test(constructorName)||isCustomElement)||3===nodeType&&"Text"===constructorName||8===nodeType&&"Comment"===constructorName||11===nodeType&&"DocumentFragment"===constructorName}(val)}},dist_getImmutableName=name=>`Immutable.${name}`,dist_printAsLeaf=name=>`[${name}]`;function dist_printImmutableValues(val,config,indentation,depth,refs,printer,type){return++depth>config.maxDepth?dist_printAsLeaf(dist_getImmutableName(type)):`${dist_getImmutableName(type)+" "}[${dist_printIteratorValues(val.values(),config,indentation,depth,refs,printer)}]`}const dist_plugin$2={serialize:(val,config,indentation,depth,refs,printer)=>val["@@__IMMUTABLE_MAP__@@"]?function dist_printImmutableEntries(val,config,indentation,depth,refs,printer,type){return++depth>config.maxDepth?dist_printAsLeaf(dist_getImmutableName(type)):`${dist_getImmutableName(type)+" "}{${dist_printIteratorEntries(val.entries(),config,indentation,depth,refs,printer)}}`}(val,config,indentation,depth,refs,printer,val["@@__IMMUTABLE_ORDERED__@@"]?"OrderedMap":"Map"):val["@@__IMMUTABLE_LIST__@@"]?dist_printImmutableValues(val,config,indentation,depth,refs,printer,"List"):val["@@__IMMUTABLE_SET__@@"]?dist_printImmutableValues(val,config,indentation,depth,refs,printer,val["@@__IMMUTABLE_ORDERED__@@"]?"OrderedSet":"Set"):val["@@__IMMUTABLE_STACK__@@"]?dist_printImmutableValues(val,config,indentation,depth,refs,printer,"Stack"):val["@@__IMMUTABLE_SEQ__@@"]?function dist_printImmutableSeq(val,config,indentation,depth,refs,printer){const name=dist_getImmutableName("Seq");return++depth>config.maxDepth?dist_printAsLeaf(name):val["@@__IMMUTABLE_KEYED__@@"]?`${name+" "}{${val._iter||val._object?dist_printIteratorEntries(val.entries(),config,indentation,depth,refs,printer):"…"}}`:`${name+" "}[${val._iter||val._array||val._collection||val._iterable?dist_printIteratorValues(val.values(),config,indentation,depth,refs,printer):"…"}]`}(val,config,indentation,depth,refs,printer):function dist_printImmutableRecord(val,config,indentation,depth,refs,printer){const name=dist_getImmutableName(val._name||"Record");return++depth>config.maxDepth?dist_printAsLeaf(name):`${name+" "}{${dist_printIteratorEntries(function dist_getRecordEntries(val){let i=0;return{next(){if(i<val._keys.length){const key=val._keys[i++];return{done:!1,value:[key,val.get(key)]}}return{done:!0,value:void 0}}}}(val),config,indentation,depth,refs,printer)}}`}(val,config,indentation,depth,refs,printer),test:val=>val&&(!0===val["@@__IMMUTABLE_ITERABLE__@@"]||!0===val["@@__IMMUTABLE_RECORD__@@"])};function pretty_format_dist_getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var dist_hasRequiredReactIs_production,dist_reactIs$1={exports:{}},dist_reactIs_production={};var dist_hasRequiredReactIs$1;function dist_requireReactIs$1(){return dist_hasRequiredReactIs$1||(dist_hasRequiredReactIs$1=1,dist_reactIs$1.exports=function dist_requireReactIs_production(){if(dist_hasRequiredReactIs_production)return dist_reactIs_production;dist_hasRequiredReactIs_production=1;var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_PORTAL_TYPE=Symbol.for("react.portal"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment"),REACT_STRICT_MODE_TYPE=Symbol.for("react.strict_mode"),REACT_PROFILER_TYPE=Symbol.for("react.profiler"),REACT_CONSUMER_TYPE=Symbol.for("react.consumer"),REACT_CONTEXT_TYPE=Symbol.for("react.context"),REACT_FORWARD_REF_TYPE=Symbol.for("react.forward_ref"),REACT_SUSPENSE_TYPE=Symbol.for("react.suspense"),REACT_SUSPENSE_LIST_TYPE=Symbol.for("react.suspense_list"),REACT_MEMO_TYPE=Symbol.for("react.memo"),REACT_LAZY_TYPE=Symbol.for("react.lazy"),REACT_OFFSCREEN_TYPE=Symbol.for("react.offscreen"),REACT_CLIENT_REFERENCE=Symbol.for("react.client.reference");function typeOf(object){if("object"==typeof object&&null!==object){var $$typeof=object.$$typeof;switch($$typeof){case REACT_ELEMENT_TYPE:switch(object=object.type){case REACT_FRAGMENT_TYPE:case REACT_PROFILER_TYPE:case REACT_STRICT_MODE_TYPE:case REACT_SUSPENSE_TYPE:case REACT_SUSPENSE_LIST_TYPE:return object;default:switch(object=object&&object.$$typeof){case REACT_CONTEXT_TYPE:case REACT_FORWARD_REF_TYPE:case REACT_LAZY_TYPE:case REACT_MEMO_TYPE:case REACT_CONSUMER_TYPE:return object;default:return $$typeof}}case REACT_PORTAL_TYPE:return $$typeof}}}return dist_reactIs_production.ContextConsumer=REACT_CONSUMER_TYPE,dist_reactIs_production.ContextProvider=REACT_CONTEXT_TYPE,dist_reactIs_production.Element=REACT_ELEMENT_TYPE,dist_reactIs_production.ForwardRef=REACT_FORWARD_REF_TYPE,dist_reactIs_production.Fragment=REACT_FRAGMENT_TYPE,dist_reactIs_production.Lazy=REACT_LAZY_TYPE,dist_reactIs_production.Memo=REACT_MEMO_TYPE,dist_reactIs_production.Portal=REACT_PORTAL_TYPE,dist_reactIs_production.Profiler=REACT_PROFILER_TYPE,dist_reactIs_production.StrictMode=REACT_STRICT_MODE_TYPE,dist_reactIs_production.Suspense=REACT_SUSPENSE_TYPE,dist_reactIs_production.SuspenseList=REACT_SUSPENSE_LIST_TYPE,dist_reactIs_production.isContextConsumer=function(object){return typeOf(object)===REACT_CONSUMER_TYPE},dist_reactIs_production.isContextProvider=function(object){return typeOf(object)===REACT_CONTEXT_TYPE},dist_reactIs_production.isElement=function(object){return"object"==typeof object&&null!==object&&object.$$typeof===REACT_ELEMENT_TYPE},dist_reactIs_production.isForwardRef=function(object){return typeOf(object)===REACT_FORWARD_REF_TYPE},dist_reactIs_production.isFragment=function(object){return typeOf(object)===REACT_FRAGMENT_TYPE},dist_reactIs_production.isLazy=function(object){return typeOf(object)===REACT_LAZY_TYPE},dist_reactIs_production.isMemo=function(object){return typeOf(object)===REACT_MEMO_TYPE},dist_reactIs_production.isPortal=function(object){return typeOf(object)===REACT_PORTAL_TYPE},dist_reactIs_production.isProfiler=function(object){return typeOf(object)===REACT_PROFILER_TYPE},dist_reactIs_production.isStrictMode=function(object){return typeOf(object)===REACT_STRICT_MODE_TYPE},dist_reactIs_production.isSuspense=function(object){return typeOf(object)===REACT_SUSPENSE_TYPE},dist_reactIs_production.isSuspenseList=function(object){return typeOf(object)===REACT_SUSPENSE_LIST_TYPE},dist_reactIs_production.isValidElementType=function(type){return"string"==typeof type||"function"==typeof type||type===REACT_FRAGMENT_TYPE||type===REACT_PROFILER_TYPE||type===REACT_STRICT_MODE_TYPE||type===REACT_SUSPENSE_TYPE||type===REACT_SUSPENSE_LIST_TYPE||type===REACT_OFFSCREEN_TYPE||"object"==typeof type&&null!==type&&(type.$$typeof===REACT_LAZY_TYPE||type.$$typeof===REACT_MEMO_TYPE||type.$$typeof===REACT_CONTEXT_TYPE||type.$$typeof===REACT_CONSUMER_TYPE||type.$$typeof===REACT_FORWARD_REF_TYPE||type.$$typeof===REACT_CLIENT_REFERENCE||void 0!==type.getModuleId)},dist_reactIs_production.typeOf=typeOf,dist_reactIs_production}()),dist_reactIs$1.exports}var dist_hasRequiredReactIs_production_min,dist_reactIsExports$1=dist_requireReactIs$1(),dist_ReactIs19=dist_mergeNamespaces({__proto__:null,default:pretty_format_dist_getDefaultExportFromCjs(dist_reactIsExports$1)},[dist_reactIsExports$1]),dist_reactIs={exports:{}},dist_reactIs_production_min={};var dist_hasRequiredReactIs;var dist_reactIsExports=function dist_requireReactIs(){return dist_hasRequiredReactIs||(dist_hasRequiredReactIs=1,dist_reactIs.exports=function dist_requireReactIs_production_min(){if(dist_hasRequiredReactIs_production_min)return dist_reactIs_production_min;dist_hasRequiredReactIs_production_min=1;var u,b=Symbol.for("react.element"),c=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),e=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),h=Symbol.for("react.context"),k=Symbol.for("react.server_context"),l=Symbol.for("react.forward_ref"),m=Symbol.for("react.suspense"),n=Symbol.for("react.suspense_list"),p=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),t=Symbol.for("react.offscreen");function v(a){if("object"==typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}return u=Symbol.for("react.module.reference"),dist_reactIs_production_min.ContextConsumer=h,dist_reactIs_production_min.ContextProvider=g,dist_reactIs_production_min.Element=b,dist_reactIs_production_min.ForwardRef=l,dist_reactIs_production_min.Fragment=d,dist_reactIs_production_min.Lazy=q,dist_reactIs_production_min.Memo=p,dist_reactIs_production_min.Portal=c,dist_reactIs_production_min.Profiler=f,dist_reactIs_production_min.StrictMode=e,dist_reactIs_production_min.Suspense=m,dist_reactIs_production_min.SuspenseList=n,dist_reactIs_production_min.isAsyncMode=function(){return!1},dist_reactIs_production_min.isConcurrentMode=function(){return!1},dist_reactIs_production_min.isContextConsumer=function(a){return v(a)===h},dist_reactIs_production_min.isContextProvider=function(a){return v(a)===g},dist_reactIs_production_min.isElement=function(a){return"object"==typeof a&&null!==a&&a.$$typeof===b},dist_reactIs_production_min.isForwardRef=function(a){return v(a)===l},dist_reactIs_production_min.isFragment=function(a){return v(a)===d},dist_reactIs_production_min.isLazy=function(a){return v(a)===q},dist_reactIs_production_min.isMemo=function(a){return v(a)===p},dist_reactIs_production_min.isPortal=function(a){return v(a)===c},dist_reactIs_production_min.isProfiler=function(a){return v(a)===f},dist_reactIs_production_min.isStrictMode=function(a){return v(a)===e},dist_reactIs_production_min.isSuspense=function(a){return v(a)===m},dist_reactIs_production_min.isSuspenseList=function(a){return v(a)===n},dist_reactIs_production_min.isValidElementType=function(a){return"string"==typeof a||"function"==typeof a||a===d||a===f||a===e||a===m||a===n||a===t||"object"==typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)},dist_reactIs_production_min.typeOf=v,dist_reactIs_production_min}()),dist_reactIs.exports}(),dist_ReactIs18=dist_mergeNamespaces({__proto__:null,default:pretty_format_dist_getDefaultExportFromCjs(dist_reactIsExports)},[dist_reactIsExports]);const dist_ReactIs=Object.fromEntries(["isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType"].map((m=>[m,v=>dist_ReactIs18[m](v)||dist_ReactIs19[m](v)])));function dist_getChildren(arg,children=[]){if(Array.isArray(arg))for(const item of arg)dist_getChildren(item,children);else null!=arg&&!1!==arg&&""!==arg&&children.push(arg);return children}function dist_getType(element){const type=element.type;if("string"==typeof type)return type;if("function"==typeof type)return type.displayName||type.name||"Unknown";if(dist_ReactIs.isFragment(element))return"React.Fragment";if(dist_ReactIs.isSuspense(element))return"React.Suspense";if("object"==typeof type&&null!==type){if(dist_ReactIs.isContextProvider(element))return"Context.Provider";if(dist_ReactIs.isContextConsumer(element))return"Context.Consumer";if(dist_ReactIs.isForwardRef(element)){if(type.displayName)return type.displayName;const functionName=type.render.displayName||type.render.name||"";return""===functionName?"ForwardRef":`ForwardRef(${functionName})`}if(dist_ReactIs.isMemo(element)){const functionName=type.displayName||type.type.displayName||type.type.name||"";return""===functionName?"Memo":`Memo(${functionName})`}}return"UNDEFINED"}const dist_plugin$1={serialize:(element,config,indentation,depth,refs,printer)=>++depth>config.maxDepth?dist_printElementAsLeaf(dist_getType(element),config):dist_printElement(dist_getType(element),dist_printProps(function dist_getPropKeys$1(element){const{props}=element;return Object.keys(props).filter((key=>"children"!==key&&void 0!==props[key])).sort()}(element),element.props,config,indentation+config.indent,depth,refs,printer),dist_printChildren(dist_getChildren(element.props.children),config,indentation+config.indent,depth,refs,printer),config,indentation),test:val=>null!=val&&dist_ReactIs.isElement(val)},dist_testSymbol="function"==typeof Symbol&&Symbol.for?Symbol.for("react.test.json"):245830487;const pretty_format_dist_plugin={serialize:(object,config,indentation,depth,refs,printer)=>++depth>config.maxDepth?dist_printElementAsLeaf(object.type,config):dist_printElement(object.type,object.props?dist_printProps(function dist_getPropKeys(object){const{props}=object;return props?Object.keys(props).filter((key=>void 0!==props[key])).sort():[]}(object),object.props,config,indentation+config.indent,depth,refs,printer):"",object.children?dist_printChildren(object.children,config,indentation+config.indent,depth,refs,printer):"",config,indentation),test:val=>val&&val.$$typeof===dist_testSymbol};Object.prototype.toString,Date.prototype.toISOString,Error.prototype.toString,RegExp.prototype.toString;function dist_getConstructorName(val){return"function"==typeof val.constructor&&val.constructor.name||"Object"}Error;const dist_ErrorPlugin={test:val=>val&&val instanceof Error,serialize(val,config,indentation,depth,refs,printer2){if(refs.includes(val))return"[Circular]";refs=[...refs,val];const hitMaxDepth=++depth>config.maxDepth,{message,cause,...rest}=val,entries={message,...void 0!==cause?{cause}:{},...val instanceof AggregateError?{errors:val.errors}:{},...rest},name="Error"!==val.name?val.name:dist_getConstructorName(val);return hitMaxDepth?`[${name}]`:`${name} {${dist_printIteratorEntries(Object.entries(entries).values(),config,indentation,depth,refs,printer2)}}`}};const dist_DEFAULT_THEME={comment:"gray",content:"reset",prop:"yellow",tag:"cyan",value:"green"};Object.keys(dist_DEFAULT_THEME),Number.POSITIVE_INFINITY,Number.POSITIVE_INFINITY;const dist_plugins={AsymmetricMatcher:dist_plugin$5,DOMCollection:dist_plugin$4,DOMElement:dist_plugin$3,Immutable:dist_plugin$2,ReactElement:dist_plugin$1,ReactTestComponent:pretty_format_dist_plugin,Error:dist_ErrorPlugin},{AsymmetricMatcher:chunk_commonjsHelpers_AsymmetricMatcher,DOMCollection:chunk_commonjsHelpers_DOMCollection,DOMElement:chunk_commonjsHelpers_DOMElement,Immutable:chunk_commonjsHelpers_Immutable,ReactElement:chunk_commonjsHelpers_ReactElement,ReactTestComponent:chunk_commonjsHelpers_ReactTestComponent}=dist_plugins;const chunk_commonjsHelpers_formatRegExp=/%[sdjifoOc%]/g;function dist_chunk_commonjsHelpers_inspect(obj,options={}){return 0===options.truncate&&(options.truncate=Number.POSITIVE_INFINITY),inspect(obj,options)}var source_map_process=__webpack_require__("./node_modules/process/browser.js");",".charCodeAt(0);const chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",intToChar=new Uint8Array(64),charToInt=new Uint8Array(128);for(let i=0;i<64;i++){const c=chars.charCodeAt(i);intToChar[i]=c,charToInt[c]=i}var UrlType;!function(UrlType){UrlType[UrlType.Empty=1]="Empty",UrlType[UrlType.Hash=2]="Hash",UrlType[UrlType.Query=3]="Query",UrlType[UrlType.RelativePath=4]="RelativePath",UrlType[UrlType.AbsolutePath=5]="AbsolutePath",UrlType[UrlType.SchemeRelative=6]="SchemeRelative",UrlType[UrlType.Absolute=7]="Absolute"}(UrlType||(UrlType={}));const _DRIVE_LETTER_START_RE=/^[A-Za-z]:\//;const _IS_ABSOLUTE_RE=/^[/\\](?![/\\])|^[/\\]{2}(?!\.)|^[A-Za-z]:[/\\]/;const resolve=function(...arguments_){let resolvedPath="",resolvedAbsolute=!1;for(let index=(arguments_=arguments_.map((argument=>function normalizeWindowsPath(input=""){return input?input.replace(/\\/g,"/").replace(_DRIVE_LETTER_START_RE,(r=>r.toUpperCase())):input}(argument)))).length-1;index>=-1&&!resolvedAbsolute;index--){const path=index>=0?arguments_[index]:void 0!==source_map_process&&"function"==typeof source_map_process.cwd?source_map_process.cwd().replace(/\\/g,"/"):"/";path&&0!==path.length&&(resolvedPath=`${path}/${resolvedPath}`,resolvedAbsolute=isAbsolute(path))}return resolvedPath=function normalizeString(path,allowAboveRoot){let res="",lastSegmentLength=0,lastSlash=-1,dots=0,char=null;for(let index=0;index<=path.length;++index){if(index<path.length)char=path[index];else{if("/"===char)break;char="/"}if("/"===char){if(lastSlash===index-1||1===dots);else if(2===dots){if(res.length<2||2!==lastSegmentLength||"."!==res[res.length-1]||"."!==res[res.length-2]){if(res.length>2){const lastSlashIndex=res.lastIndexOf("/");-1===lastSlashIndex?(res="",lastSegmentLength=0):(res=res.slice(0,lastSlashIndex),lastSegmentLength=res.length-1-res.lastIndexOf("/")),lastSlash=index,dots=0;continue}if(res.length>0){res="",lastSegmentLength=0,lastSlash=index,dots=0;continue}}allowAboveRoot&&(res+=res.length>0?"/..":"..",lastSegmentLength=2)}else res.length>0?res+=`/${path.slice(lastSlash+1,index)}`:res=path.slice(lastSlash+1,index),lastSegmentLength=index-lastSlash-1;lastSlash=index,dots=0}else"."===char&&-1!==dots?++dots:dots=-1}return res}(resolvedPath,!resolvedAbsolute),resolvedAbsolute&&!isAbsolute(resolvedPath)?`/${resolvedPath}`:resolvedPath.length>0?resolvedPath:"."};const isAbsolute=function(p){return _IS_ABSOLUTE_RE.test(p)},CHROME_IE_STACK_REGEXP=/^\s*at .*(?:\S:\d+|\(native\))/m,SAFARI_NATIVE_CODE_REGEXP=/^(?:eval@)?(?:\[native code\])?$/;function extractLocation(urlLike){if(!urlLike.includes(":"))return[urlLike];const parts=/(.+?)(?::(\d+))?(?::(\d+))?$/.exec(urlLike.replace(/^\(|\)$/g,""));if(!parts)return[urlLike];let url=parts[1];if(url.startsWith("async ")&&(url=url.slice(6)),url.startsWith("http:")||url.startsWith("https:")){const urlObj=new URL(url);urlObj.searchParams.delete("import"),urlObj.searchParams.delete("browserv"),url=urlObj.pathname+urlObj.hash+urlObj.search}if(url.startsWith("/@fs/")){const isWindows=/^\/@fs\/[a-zA-Z]:\//.test(url);url=url.slice(isWindows?5:4)}return[url,parts[2]||void 0,parts[3]||void 0]}function parseSingleFFOrSafariStack(raw){let line=raw.trim();if(SAFARI_NATIVE_CODE_REGEXP.test(line))return null;if(line.includes(" > eval")&&(line=line.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,":$1")),!line.includes("@")&&!line.includes(":"))return null;const functionNameRegex=/((.*".+"[^@]*)?[^@]*)(@)/,matches=line.match(functionNameRegex),functionName=matches&&matches[1]?matches[1]:void 0,[url,lineNumber,columnNumber]=extractLocation(line.replace(functionNameRegex,""));return url&&lineNumber&&columnNumber?{file:url,method:functionName||"",line:Number.parseInt(lineNumber),column:Number.parseInt(columnNumber)}:null}function parseSingleStack(raw){const line=raw.trim();return CHROME_IE_STACK_REGEXP.test(line)?parseSingleV8Stack(line):parseSingleFFOrSafariStack(line)}function parseSingleV8Stack(raw){let line=raw.trim();if(!CHROME_IE_STACK_REGEXP.test(line))return null;line.includes("(eval ")&&(line=line.replace(/eval code/g,"eval").replace(/(\(eval at [^()]*)|(,.*$)/g,""));let sanitizedLine=line.replace(/^\s+/,"").replace(/\(eval code/g,"(").replace(/^.*?\s+/,"");const location=sanitizedLine.match(/ (\(.+\)$)/);sanitizedLine=location?sanitizedLine.replace(location[0],""):sanitizedLine;const[url,lineNumber,columnNumber]=extractLocation(location?location[1]:sanitizedLine);let method=location&&sanitizedLine||"",file=url&&["eval","<anonymous>"].includes(url)?void 0:url;return file&&lineNumber&&columnNumber?(method.startsWith("async ")&&(method=method.slice(6)),file.startsWith("file://")&&(file=file.slice(7)),file=file.startsWith("node:")||file.startsWith("internal:")?file:resolve(file),method&&(method=method.replace(/__vite_ssr_import_\d+__\./g,"")),{method,file,line:Number.parseInt(lineNumber),column:Number.parseInt(columnNumber)}):null}function createChainable(keys,fn){const chain=function create(context){const chain2=function(...args){return fn.apply(context,args)};Object.assign(chain2,fn),chain2.withContext=()=>chain2.bind(context),chain2.setContext=(key,value)=>{context[key]=value},chain2.mergeContext=ctx=>{Object.assign(context,ctx)};for(const key of keys)Object.defineProperty(chain2,key,{get:()=>create({...context,[key]:!0})});return chain2}({});return chain.fn=fn,chain}function getNames(task){const names=[task.name];let current=task;for(;null==current?void 0:current.suite;)current=current.suite,(null==current?void 0:current.name)&&names.unshift(current.name);return current!==task.file&&names.unshift(task.file.name),names}function getTestName(task,separator=" > "){return getNames(task).slice(1).join(separator)}var runner_dist_console=__webpack_require__("./node_modules/console-browserify/index.js");class PendingError extends Error{constructor(message,task,note){super(message),this.message=message,this.note=note,this.taskId=task.id}code="VITEST_PENDING";taskId}const now$2=Date.now,collectorContext={tasks:[],currentSuite:null};function withTimeout(fn,timeout,isHook=!1,stackTraceError){if(timeout<=0||timeout===Number.POSITIVE_INFINITY)return fn;const{setTimeout,clearTimeout}=function dist_getSafeTimers(){const{setTimeout:safeSetTimeout,setInterval:safeSetInterval,clearInterval:safeClearInterval,clearTimeout:safeClearTimeout,setImmediate:safeSetImmediate,clearImmediate:safeClearImmediate,queueMicrotask:safeQueueMicrotask}=globalThis[SAFE_TIMERS_SYMBOL]||globalThis,{nextTick:safeNextTick}=globalThis[SAFE_TIMERS_SYMBOL]||globalThis.process||{nextTick:cb=>cb()};return{nextTick:safeNextTick,setTimeout:safeSetTimeout,setInterval:safeSetInterval,clearInterval:safeClearInterval,clearTimeout:safeClearTimeout,setImmediate:safeSetImmediate,clearImmediate:safeClearImmediate,queueMicrotask:safeQueueMicrotask}}();return function runWithTimeout(...args){const startTime=now$2();return new Promise(((resolve_,reject_)=>{var _a;const timer=setTimeout((()=>{clearTimeout(timer),rejectTimeoutError()}),timeout);function rejectTimeoutError(){reject_(function makeTimeoutError(isHook,timeout,stackTraceError){const message=`${isHook?"Hook":"Test"} timed out in ${timeout}ms.\nIf this is a long-running ${isHook?"hook":"test"}, pass a timeout value as the last argument or configure it globally with "${isHook?"hookTimeout":"testTimeout"}".`,error=new Error(message);(null==stackTraceError?void 0:stackTraceError.stack)&&(error.stack=stackTraceError.stack.replace(error.message,stackTraceError.message));return error}(isHook,timeout,stackTraceError))}function resolve(result){clearTimeout(timer),now$2()-startTime>=timeout?rejectTimeoutError():resolve_(result)}function reject(error){clearTimeout(timer),reject_(error)}null==(_a=timer.unref)||_a.call(timer);try{const result=fn(...args);"object"==typeof result&&null!=result&&"function"==typeof result.then?result.then(resolve,reject):resolve(result)}catch(error){reject(error)}}))}}const fnMap=new WeakMap,fixtureMap=new WeakMap,hooksMap=new WeakMap;function setHooks(key,hooks){hooksMap.set(key,hooks)}function getHooks(key){return hooksMap.get(key)}const fixtureValueMaps=new Map,cleanupFnArrayMap=new Map;function withFixtures(fn,testContext){return hookContext=>{const context=hookContext||testContext;if(!context)return fn({});const fixtures=function getFixture(key){return fixtureMap.get(key)}(context);if(!(null==fixtures?void 0:fixtures.length))return fn(context);const usedProps=getUsedProps(fn),hasAutoFixture=fixtures.some((({auto})=>auto));if(!usedProps.length&&!hasAutoFixture)return fn(context);fixtureValueMaps.get(context)||fixtureValueMaps.set(context,new Map);const fixtureValueMap=fixtureValueMaps.get(context);cleanupFnArrayMap.has(context)||cleanupFnArrayMap.set(context,[]);const cleanupFnArray=cleanupFnArrayMap.get(context),pendingFixtures=resolveDeps(fixtures.filter((({prop,auto})=>auto||usedProps.includes(prop))));if(!pendingFixtures.length)return fn(context);return async function resolveFixtures(){for(const fixture of pendingFixtures){if(fixtureValueMap.has(fixture))continue;const resolvedValue=fixture.isFn?await resolveFixtureFunction(fixture.value,context,cleanupFnArray):fixture.value;context[fixture.prop]=resolvedValue,fixtureValueMap.set(fixture,resolvedValue),cleanupFnArray.unshift((()=>{fixtureValueMap.delete(fixture)}))}}().then((()=>fn(context)))}}async function resolveFixtureFunction(fixtureFn,context,cleanupFnArray){const useFnArgPromise=helpers_createDefer();let isUseFnArgResolved=!1;const fixtureReturn=fixtureFn(context,(async useFnArg=>{isUseFnArgResolved=!0,useFnArgPromise.resolve(useFnArg);const useReturnPromise=helpers_createDefer();cleanupFnArray.push((async()=>{useReturnPromise.resolve(),await fixtureReturn})),await useReturnPromise})).catch((e=>{if(isUseFnArgResolved)throw e;useFnArgPromise.reject(e)}));return useFnArgPromise}function resolveDeps(fixtures,depSet=new Set,pendingFixtures=[]){return fixtures.forEach((fixture=>{if(!pendingFixtures.includes(fixture))if(fixture.isFn&&fixture.deps){if(depSet.has(fixture))throw new Error(`Circular fixture dependency detected: ${fixture.prop} <- ${[...depSet].reverse().map((d=>d.prop)).join(" <- ")}`);depSet.add(fixture),resolveDeps(fixture.deps,depSet,pendingFixtures),pendingFixtures.push(fixture),depSet.clear()}else pendingFixtures.push(fixture)})),pendingFixtures}function getUsedProps(fn){let fnString=fn.toString();/__async\(this, (?:null|arguments|\[[_0-9, ]*\]), function\*/.test(fnString)&&(fnString=fnString.split("__async(this,")[1]);const match=fnString.match(/[^(]*\(([^)]*)/);if(!match)return[];const args=splitByComma(match[1]);if(!args.length)return[];let first=args[0];if("__VITEST_FIXTURE_INDEX__"in fn&&(first=args[fn.__VITEST_FIXTURE_INDEX__],!first))return[];if(!first.startsWith("{")||!first.endsWith("}"))throw new Error(`The first argument inside a fixture must use object destructuring pattern, e.g. ({ test } => {}). Instead, received "${first}".`);const props=splitByComma(first.slice(1,-1).replace(/\s/g,"")).map((prop=>prop.replace(/:.*|=.*/g,""))),last=props.at(-1);if(last&&last.startsWith("..."))throw new Error(`Rest parameters are not supported in fixtures, received "${last}".`);return props}function splitByComma(s){const result=[],stack=[];let start=0;for(let i=0;i<s.length;i++)if("{"===s[i]||"["===s[i])stack.push("{"===s[i]?"}":"]");else if(s[i]===stack[stack.length-1])stack.pop();else if(!stack.length&&","===s[i]){const token=s.substring(start,i).trim();token&&result.push(token),start=i+1}const lastToken=s.substring(start).trim();return lastToken&&result.push(lastToken),result}let _test;function getCurrentTest(){return _test}const suite=function createSuite(){function suiteFn(name,factoryOrOptions,optionsOrFactory){var _a;const mode=this.only?"only":this.skip?"skip":this.todo?"todo":"run",currentSuite=collectorContext.currentSuite||defaultSuite;let{options,handler:factory}=parseArguments(factoryOrOptions,optionsOrFactory);const isConcurrentSpecified=options.concurrent||this.concurrent||!1===options.sequential,isSequentialSpecified=options.sequential||this.sequential||!1===options.concurrent;options={...null==currentSuite?void 0:currentSuite.options,...options,shuffle:this.shuffle??options.shuffle??(null==(_a=null==currentSuite?void 0:currentSuite.options)?void 0:_a.shuffle)??(null==runner?void 0:runner.config.sequence.shuffle)};const isConcurrent=isConcurrentSpecified||options.concurrent&&!isSequentialSpecified,isSequential=isSequentialSpecified||options.sequential&&!isConcurrentSpecified;return options.concurrent=isConcurrent&&!isSequential,options.sequential=isSequential&&!isConcurrent,function createSuiteCollector(name,factory=(()=>{}),mode,each,suiteOptions){const tasks=[];let suite2;initSuite(!0);const task=function(name2="",options={}){var _a;const timeout=(null==options?void 0:options.timeout)??runner.config.testTimeout,task2={id:"",name:name2,suite:null==(_a=collectorContext.currentSuite)?void 0:_a.suite,each:options.each,fails:options.fails,context:void 0,type:"test",file:void 0,timeout,retry:options.retry??runner.config.retry,repeats:options.repeats,mode:options.only?"only":options.skip?"skip":options.todo?"todo":"run",meta:options.meta??Object.create(null)},handler=options.handler;(options.concurrent||!options.sequential&&runner.config.sequence.concurrent)&&(task2.concurrent=!0),task2.shuffle=null==suiteOptions?void 0:suiteOptions.shuffle;const context=function createTestContext(test,runner){var _a;const context=function(){throw new Error("done() callback is deprecated, use promise instead")};return context.task=test,context.skip=note=>{throw test.result??(test.result={state:"skip"}),test.result.pending=!0,new PendingError("test is skipped; abort execution",test,note)},context.onTestFailed=(handler,timeout)=>{test.onFailed||(test.onFailed=[]),test.onFailed.push(withTimeout(handler,timeout??runner.config.hookTimeout,!0,new Error("STACK_TRACE_ERROR")))},context.onTestFinished=(handler,timeout)=>{test.onFinished||(test.onFinished=[]),test.onFinished.push(withTimeout(handler,timeout??runner.config.hookTimeout,!0,new Error("STACK_TRACE_ERROR")))},(null==(_a=runner.extendTaskContext)?void 0:_a.call(runner,context))||context}(task2,runner);if(Object.defineProperty(task2,"context",{value:context,enumerable:!1}),function setFixture(key,fixture){fixtureMap.set(key,fixture)}(context,options.fixtures),handler&&function setFn(key,fn){fnMap.set(key,fn)}(task2,withTimeout(function withAwaitAsyncAssertions(fn,task){return async(...args)=>{const fnResult=await fn(...args);if(task.promises){const errors=(await Promise.allSettled(task.promises)).map((r=>"rejected"===r.status?r.reason:void 0)).filter(Boolean);if(errors.length)throw errors}return fnResult}}(withFixtures(handler,context),task2),timeout)),runner.config.includeTaskLocation){const limit=Error.stackTraceLimit;Error.stackTraceLimit=15;const error=new Error("stacktrace").stack;Error.stackTraceLimit=limit;const stack=findTestFileStackTrace(error,task2.each??!1);stack&&(task2.location=stack)}return tasks.push(task2),task2},test2=createTest((function(name2,optionsOrFn,optionsOrTest){let{options,handler}=parseArguments(optionsOrFn,optionsOrTest);"object"==typeof suiteOptions&&(options=Object.assign({},suiteOptions,options)),options.concurrent=this.concurrent||!this.sequential&&(null==options?void 0:options.concurrent),options.sequential=this.sequential||!this.concurrent&&(null==options?void 0:options.sequential);task(formatName(name2),{...this,...options,handler}).type="test"})),collector={type:"collector",name,mode,suite:suite2,options:suiteOptions,test:test2,tasks,collect,task,clear,on:addHook};function addHook(name2,...fn){getHooks(suite2)[name2].push(...fn)}function initSuite(includeLocation){var _a;if("number"==typeof suiteOptions&&(suiteOptions={timeout:suiteOptions}),suite2={id:"",type:"suite",name,suite:null==(_a=collectorContext.currentSuite)?void 0:_a.suite,mode,each,file:void 0,shuffle:null==suiteOptions?void 0:suiteOptions.shuffle,tasks:[],meta:Object.create(null),concurrent:null==suiteOptions?void 0:suiteOptions.concurrent},runner&&includeLocation&&runner.config.includeTaskLocation){const limit=Error.stackTraceLimit;Error.stackTraceLimit=15;const error=new Error("stacktrace").stack;Error.stackTraceLimit=limit;const stack=findTestFileStackTrace(error,suite2.each??!1);stack&&(suite2.location=stack)}setHooks(suite2,{beforeAll:[],afterAll:[],beforeEach:[],afterEach:[]})}function clear(){tasks.length=0,initSuite(!1)}async function collect(file){if(!file)throw new TypeError("File is required to collect tasks.");factory&&await async function runWithSuite(suite,fn){const prev=collectorContext.currentSuite;collectorContext.currentSuite=suite,await fn(),collectorContext.currentSuite=prev}(collector,(()=>factory(test2)));const allChildren=[];for(const i of tasks)allChildren.push("collector"===i.type?await i.collect(file):i);return suite2.file=file,suite2.tasks=allChildren,allChildren.forEach((task2=>{task2.file=file})),suite2}return function collectTask(task){var _a;null==(_a=collectorContext.currentSuite)||_a.tasks.push(task)}(collector),collector}(formatName(name),factory,mode,this.each,options)}return suiteFn.each=function(cases,...args){const suite2=this.withContext();return this.setContext("each",!0),Array.isArray(cases)&&args.length&&(cases=formatTemplateString(cases,args)),(name,optionsOrFn,fnOrOptions)=>{const _name=formatName(name),arrayOnlyCases=cases.every(Array.isArray),{options,handler}=parseArguments(optionsOrFn,fnOrOptions),fnFirst="function"==typeof optionsOrFn&&"object"==typeof fnOrOptions;cases.forEach(((i,idx)=>{const items=Array.isArray(i)?i:[i];fnFirst?suite2(formatTitle(_name,items,idx),arrayOnlyCases?()=>handler(...items):()=>handler(i),options):suite2(formatTitle(_name,items,idx),options,arrayOnlyCases?()=>handler(...items):()=>handler(i))})),this.setContext("each",void 0)}},suiteFn.for=function(cases,...args){return Array.isArray(cases)&&args.length&&(cases=formatTemplateString(cases,args)),(name,optionsOrFn,fnOrOptions)=>{const name_=formatName(name),{options,handler}=parseArguments(optionsOrFn,fnOrOptions);cases.forEach(((item,idx)=>{suite(formatTitle(name_,dist_helpers_toArray(item),idx),options,(()=>handler(item)))}))}},suiteFn.skipIf=condition=>condition?suite.skip:suite,suiteFn.runIf=condition=>condition?suite:suite.skip,createChainable(["concurrent","sequential","shuffle","skip","only","todo"],suiteFn)}();createTest((function(name,optionsOrFn,optionsOrTest){if(getCurrentTest())throw new Error('Calling the test function inside another test function is not allowed. Please put it inside "describe" or "suite" so it can be properly collected.');getCurrentSuite().test.fn.call(this,formatName(name),optionsOrFn,optionsOrTest)}));let runner,defaultSuite,currentTestFilepath;function dist_assert(condition,message){if(!condition)throw new Error(`Vitest failed to find ${message}. This is a bug in Vitest. Please, open an issue with reproduction.`)}function getRunner(){return dist_assert(runner,"the runner"),runner}function getCurrentSuite(){const currentSuite=collectorContext.currentSuite||defaultSuite;return dist_assert(currentSuite,"the current suite"),currentSuite}function parseArguments(optionsOrFn,optionsOrTest){let options={},fn=()=>{};if("object"==typeof optionsOrTest){if("object"==typeof optionsOrFn)throw new TypeError("Cannot use two objects as arguments. Please provide options and a function callback in that order.");runner_dist_console.warn("Using an object as a third argument is deprecated. Vitest 4 will throw an error if the third argument is not a timeout number. Please use the second argument for options. See more at https://vitest.dev/guide/migration"),options=optionsOrTest}else"number"==typeof optionsOrTest?options={timeout:optionsOrTest}:"object"==typeof optionsOrFn&&(options=optionsOrFn);if("function"==typeof optionsOrFn){if("function"==typeof optionsOrTest)throw new TypeError("Cannot use two functions as arguments. Please use the second argument for options.");fn=optionsOrFn}else"function"==typeof optionsOrTest&&(fn=optionsOrTest);return{options,handler:fn}}function createTaskCollector(fn,context){const taskFn=fn;taskFn.each=function(cases,...args){const test2=this.withContext();return this.setContext("each",!0),Array.isArray(cases)&&args.length&&(cases=formatTemplateString(cases,args)),(name,optionsOrFn,fnOrOptions)=>{const _name=formatName(name),arrayOnlyCases=cases.every(Array.isArray),{options,handler}=parseArguments(optionsOrFn,fnOrOptions),fnFirst="function"==typeof optionsOrFn&&"object"==typeof fnOrOptions;cases.forEach(((i,idx)=>{const items=Array.isArray(i)?i:[i];fnFirst?test2(formatTitle(_name,items,idx),arrayOnlyCases?()=>handler(...items):()=>handler(i),options):test2(formatTitle(_name,items,idx),options,arrayOnlyCases?()=>handler(...items):()=>handler(i))})),this.setContext("each",void 0)}},taskFn.for=function(cases,...args){const test2=this.withContext();return Array.isArray(cases)&&args.length&&(cases=formatTemplateString(cases,args)),(name,optionsOrFn,fnOrOptions)=>{const _name=formatName(name),{options,handler}=parseArguments(optionsOrFn,fnOrOptions);cases.forEach(((item,idx)=>{const handlerWrapper=ctx=>handler(item,ctx);handlerWrapper.__VITEST_FIXTURE_INDEX__=1,handlerWrapper.toString=()=>handler.toString(),test2(formatTitle(_name,dist_helpers_toArray(item),idx),options,handlerWrapper)}))}},taskFn.skipIf=function(condition){return condition?this.skip:this},taskFn.runIf=function(condition){return condition?this:this.skip},taskFn.extend=function(fixtures){const _context=function mergeContextFixtures(fixtures,context,inject){const fixtureOptionKeys=["auto","injected"],fixtureArray=Object.entries(fixtures).map((([prop,value])=>{const fixtureItem={value};if(Array.isArray(value)&&value.length>=2&&dist_helpers_isObject(value[1])&&Object.keys(value[1]).some((key=>fixtureOptionKeys.includes(key)))){Object.assign(fixtureItem,value[1]);const userValue=value[0];fixtureItem.value=fixtureItem.injected?inject(prop)??userValue:userValue}return fixtureItem.prop=prop,fixtureItem.isFn="function"==typeof fixtureItem.value,fixtureItem}));return Array.isArray(context.fixtures)?context.fixtures=context.fixtures.concat(fixtureArray):context.fixtures=fixtureArray,fixtureArray.forEach((fixture=>{if(fixture.isFn){const usedProps=getUsedProps(fixture.value);usedProps.length&&(fixture.deps=context.fixtures.filter((({prop})=>prop!==fixture.prop&&usedProps.includes(prop))))}})),context}(fixtures,context||{},(key=>{var _a,_b;return null==(_b=(_a=getRunner()).injectValue)?void 0:_b.call(_a,key)}));return createTest((function fn2(name,optionsOrFn,optionsOrTest){getCurrentSuite().test.fn.call(this,formatName(name),optionsOrFn,optionsOrTest)}),_context)};const _test=createChainable(["concurrent","sequential","skip","only","todo","fails"],taskFn);return context&&_test.mergeContext(context),_test}function createTest(fn,context){return createTaskCollector(fn,context)}function formatName(name){return"string"==typeof name?name:"function"==typeof name?name.name||"<anonymous>":String(name)}function formatTitle(template,items,idx){template.includes("%#")&&(template=template.replace(/%%/g,"__vitest_escaped_%__").replace(/%#/g,`${idx}`).replace(/__vitest_escaped_%__/g,"%%"));const count=template.split("%").length-1;if(template.includes("%f")){(template.match(/%f/g)||[]).forEach(((_,i)=>{if(function helpers_isNegativeNaN(val){if(!Number.isNaN(val))return!1;const f64=new Float64Array(1);return f64[0]=val,new Uint32Array(f64.buffer)[1]>>>31==1}(items[i])||Object.is(items[i],-0)){let occurrence=0;template=template.replace(/%f/g,(match=>(occurrence++,occurrence===i+1?"-%f":match)))}}))}let formatted=function dist_chunk_commonjsHelpers_format(...args){if("string"!=typeof args[0]){const objects=[];for(let i2=0;i2<args.length;i2++)objects.push(dist_chunk_commonjsHelpers_inspect(args[i2],{depth:0,colors:!1}));return objects.join(" ")}const len=args.length;let i=1;const template=args[0];let str=String(template).replace(chunk_commonjsHelpers_formatRegExp,(x=>{if("%%"===x)return"%";if(i>=len)return x;switch(x){case"%s":{const value=args[i++];return"bigint"==typeof value?`${value.toString()}n`:"number"==typeof value&&0===value&&1/value<0?"-0":"object"==typeof value&&null!==value?"function"==typeof value.toString&&value.toString!==Object.prototype.toString?value.toString():dist_chunk_commonjsHelpers_inspect(value,{depth:0,colors:!1}):String(value)}case"%d":{const value=args[i++];return"bigint"==typeof value?`${value.toString()}n`:Number(value).toString()}case"%i":{const value=args[i++];return"bigint"==typeof value?`${value.toString()}n`:Number.parseInt(String(value)).toString()}case"%f":return Number.parseFloat(String(args[i++])).toString();case"%o":return dist_chunk_commonjsHelpers_inspect(args[i++],{showHidden:!0,showProxy:!0});case"%O":return dist_chunk_commonjsHelpers_inspect(args[i++]);case"%c":return i++,"";case"%j":try{return JSON.stringify(args[i++])}catch(err){const m=err.message;if(m.includes("circular structure")||m.includes("cyclic structures")||m.includes("cyclic object"))return"[Circular]";throw err}default:return x}}));for(let x=args[i];i<len;x=args[++i])str+=null===x||"object"!=typeof x?` ${x}`:` ${dist_chunk_commonjsHelpers_inspect(x)}`;return str}(template,...items.slice(0,count));return dist_helpers_isObject(items[0])&&(formatted=formatted.replace(/\$([$\w.]+)/g,((_,key)=>{var _a,_b;return function chunk_commonjsHelpers_objDisplay(obj,options={}){void 0===options.truncate&&(options.truncate=40);const str=dist_chunk_commonjsHelpers_inspect(obj,options),type=Object.prototype.toString.call(obj);if(options.truncate&&str.length>=options.truncate){if("[object Function]"===type){const fn=obj;return fn.name?`[Function: ${fn.name}]`:"[Function]"}if("[object Array]"===type)return`[ Array(${obj.length}) ]`;if("[object Object]"===type){const keys=Object.keys(obj);return`{ Object (${keys.length>2?`${keys.splice(0,2).join(", ")}, ...`:keys.join(", ")}) }`}return str}return str}(function helpers_objectAttr(source,path,defaultValue){const paths=path.replace(/\[(\d+)\]/g,".$1").split(".");let result=source;for(const p of paths)if(result=new Object(result)[p],void 0===result)return defaultValue;return result}(items[0],key),{truncate:null==(_b=null==(_a=null==runner?void 0:runner.config)?void 0:_a.chaiConfig)?void 0:_b.truncateThreshold})}))),formatted}function formatTemplateString(cases,args){const header=cases.join("").trim().replace(/ /g,"").split("\n").map((i=>i.split("|")))[0],res=[];for(let i=0;i<Math.floor(args.length/header.length);i++){const oneCase={};for(let j=0;j<header.length;j++)oneCase[header[j]]=args[i*header.length+j];res.push(oneCase)}return res}function findTestFileStackTrace(error,each){const lines=error.split("\n").slice(1);for(const line of lines){const stack=parseSingleStack(line);if(stack&&stack.file===currentTestFilepath)return{line:stack.line,column:each?stack.column+1:stack.column}}}function getDefaultHookTimeout(){return getRunner().config.hookTimeout}Symbol.for("VITEST_CLEANUP_TIMEOUT"),Symbol.for("VITEST_CLEANUP_STACK_TRACE");createTestHook("onTestFailed",((test,handler,timeout)=>{test.onFailed||(test.onFailed=[]),test.onFailed.push(withTimeout(handler,timeout??getDefaultHookTimeout(),!0,new Error("STACK_TRACE_ERROR")))})),createTestHook("onTestFinished",((test,handler,timeout)=>{test.onFinished||(test.onFinished=[]),test.onFinished.push(withTimeout(handler,timeout??getDefaultHookTimeout(),!0,new Error("STACK_TRACE_ERROR")))}));function createTestHook(name,handler){return(fn,timeout)=>{!function dist_helpers_assertTypes(value,name,types){const receivedType=typeof value;if(!types.includes(receivedType))throw new TypeError(`${name} value must be ${types.join(" or ")}, received "${receivedType}"`)}(fn,`"${name}" callback`,["function"]);const current=getCurrentTest();if(!current)throw new Error(`Hook ${name}() can only be called inside a test`);return handler(current,fn,timeout)}}globalThis.performance?globalThis.performance.now.bind(globalThis.performance):Date.now;globalThis.performance?globalThis.performance.now.bind(globalThis.performance):Date.now,Date.now;var dist_jsTokens_1,dist_hasRequiredJsTokens;(function dist_requireJsTokens(){return dist_hasRequiredJsTokens?dist_jsTokens_1:(dist_hasRequiredJsTokens=1,RegularExpressionLiteral=/\/(?![*\/])(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\\]).|\\.)*(\/[$_\u200C\u200D\p{ID_Continue}]*|\\)?/uy,Punctuator=/--|\+\+|=>|\.{3}|\??\.(?!\d)|(?:&&|\|\||\?\?|[+\-%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2}|\/(?![\/*]))=?|[?~,:;[\](){}]/y,Identifier=/(\x23?)(?=[$_\p{ID_Start}\\])(?:[$_\u200C\u200D\p{ID_Continue}]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+/uy,StringLiteral=/(['"])(?:(?!\1)[^\\\n\r]|\\(?:\r\n|[^]))*(\1)?/y,NumericLiteral=/(?:0[xX][\da-fA-F](?:_?[\da-fA-F])*|0[oO][0-7](?:_?[0-7])*|0[bB][01](?:_?[01])*)n?|0n|[1-9](?:_?\d)*n|(?:(?:0(?!\d)|0\d*[89]\d*|[1-9](?:_?\d)*)(?:\.(?:\d(?:_?\d)*)?)?|\.\d(?:_?\d)*)(?:[eE][+-]?\d(?:_?\d)*)?|0[0-7]+/y,Template=/[`}](?:[^`\\$]|\\[^]|\$(?!\{))*(`|\$\{)?/y,WhiteSpace=/[\t\v\f\ufeff\p{Zs}]+/uy,LineTerminatorSequence=/\r?\n|[\r\u2028\u2029]/y,MultiLineComment=/\/\*(?:[^*]|\*(?!\/))*(\*\/)?/y,SingleLineComment=/\/\/.*/y,JSXPunctuator=/[<>.:={}]|\/(?![\/*])/y,JSXIdentifier=/[$_\p{ID_Start}][$_\u200C\u200D\p{ID_Continue}-]*/uy,JSXString=/(['"])(?:(?!\1)[^])*(\1)?/y,JSXText=/[^<>{}]+/y,TokensPrecedingExpression=/^(?:[\/+-]|\.{3}|\?(?:InterpolationIn(?:JSX|Template)|NoLineTerminatorHere|NonExpressionParenEnd|UnaryIncDec))?$|[{}([,;<>=*%&|^!~?:]$/,TokensNotPrecedingObjectLiteral=/^(?:=>|[;\]){}]|else|\?(?:NoLineTerminatorHere|NonExpressionParenEnd))?$/,KeywordsWithExpressionAfter=/^(?:await|case|default|delete|do|else|instanceof|new|return|throw|typeof|void|yield)$/,KeywordsWithNoLineTerminatorAfter=/^(?:return|throw|yield)$/,Newline=RegExp(LineTerminatorSequence.source),dist_jsTokens_1=function*(input,{jsx=!1}={}){var braces,firstCodePoint,isExpression,lastIndex,lastSignificantToken,length,match,mode,nextLastIndex,nextLastSignificantToken,parenNesting,postfixIncDec,punctuator,stack;for(({length}=input),lastIndex=0,lastSignificantToken="",stack=[{tag:"JS"}],braces=[],parenNesting=0,postfixIncDec=!1;lastIndex<length;){switch((mode=stack[stack.length-1]).tag){case"JS":case"JSNonExpressionParen":case"InterpolationInTemplate":case"InterpolationInJSX":if("/"===input[lastIndex]&&(TokensPrecedingExpression.test(lastSignificantToken)||KeywordsWithExpressionAfter.test(lastSignificantToken))&&(RegularExpressionLiteral.lastIndex=lastIndex,match=RegularExpressionLiteral.exec(input))){lastIndex=RegularExpressionLiteral.lastIndex,lastSignificantToken=match[0],postfixIncDec=!0,yield{type:"RegularExpressionLiteral",value:match[0],closed:void 0!==match[1]&&"\\"!==match[1]};continue}if(Punctuator.lastIndex=lastIndex,match=Punctuator.exec(input)){switch(punctuator=match[0],nextLastIndex=Punctuator.lastIndex,nextLastSignificantToken=punctuator,punctuator){case"(":"?NonExpressionParenKeyword"===lastSignificantToken&&stack.push({tag:"JSNonExpressionParen",nesting:parenNesting}),parenNesting++,postfixIncDec=!1;break;case")":parenNesting--,postfixIncDec=!0,"JSNonExpressionParen"===mode.tag&&parenNesting===mode.nesting&&(stack.pop(),nextLastSignificantToken="?NonExpressionParenEnd",postfixIncDec=!1);break;case"{":Punctuator.lastIndex=0,isExpression=!TokensNotPrecedingObjectLiteral.test(lastSignificantToken)&&(TokensPrecedingExpression.test(lastSignificantToken)||KeywordsWithExpressionAfter.test(lastSignificantToken)),braces.push(isExpression),postfixIncDec=!1;break;case"}":switch(mode.tag){case"InterpolationInTemplate":if(braces.length===mode.nesting){Template.lastIndex=lastIndex,match=Template.exec(input),lastIndex=Template.lastIndex,lastSignificantToken=match[0],"${"===match[1]?(lastSignificantToken="?InterpolationInTemplate",postfixIncDec=!1,yield{type:"TemplateMiddle",value:match[0]}):(stack.pop(),postfixIncDec=!0,yield{type:"TemplateTail",value:match[0],closed:"`"===match[1]});continue}break;case"InterpolationInJSX":if(braces.length===mode.nesting){stack.pop(),lastIndex+=1,lastSignificantToken="}",yield{type:"JSXPunctuator",value:"}"};continue}}nextLastSignificantToken=(postfixIncDec=braces.pop())?"?ExpressionBraceEnd":"}";break;case"]":postfixIncDec=!0;break;case"++":case"--":nextLastSignificantToken=postfixIncDec?"?PostfixIncDec":"?UnaryIncDec";break;case"<":if(jsx&&(TokensPrecedingExpression.test(lastSignificantToken)||KeywordsWithExpressionAfter.test(lastSignificantToken))){stack.push({tag:"JSXTag"}),lastIndex+=1,lastSignificantToken="<",yield{type:"JSXPunctuator",value:punctuator};continue}postfixIncDec=!1;break;default:postfixIncDec=!1}lastIndex=nextLastIndex,lastSignificantToken=nextLastSignificantToken,yield{type:"Punctuator",value:punctuator};continue}if(Identifier.lastIndex=lastIndex,match=Identifier.exec(input)){switch(lastIndex=Identifier.lastIndex,nextLastSignificantToken=match[0],match[0]){case"for":case"if":case"while":case"with":"."!==lastSignificantToken&&"?."!==lastSignificantToken&&(nextLastSignificantToken="?NonExpressionParenKeyword")}lastSignificantToken=nextLastSignificantToken,postfixIncDec=!KeywordsWithExpressionAfter.test(match[0]),yield{type:"#"===match[1]?"PrivateIdentifier":"IdentifierName",value:match[0]};continue}if(StringLiteral.lastIndex=lastIndex,match=StringLiteral.exec(input)){lastIndex=StringLiteral.lastIndex,lastSignificantToken=match[0],postfixIncDec=!0,yield{type:"StringLiteral",value:match[0],closed:void 0!==match[2]};continue}if(NumericLiteral.lastIndex=lastIndex,match=NumericLiteral.exec(input)){lastIndex=NumericLiteral.lastIndex,lastSignificantToken=match[0],postfixIncDec=!0,yield{type:"NumericLiteral",value:match[0]};continue}if(Template.lastIndex=lastIndex,match=Template.exec(input)){lastIndex=Template.lastIndex,lastSignificantToken=match[0],"${"===match[1]?(lastSignificantToken="?InterpolationInTemplate",stack.push({tag:"InterpolationInTemplate",nesting:braces.length}),postfixIncDec=!1,yield{type:"TemplateHead",value:match[0]}):(postfixIncDec=!0,yield{type:"NoSubstitutionTemplate",value:match[0],closed:"`"===match[1]});continue}break;case"JSXTag":case"JSXTagEnd":if(JSXPunctuator.lastIndex=lastIndex,match=JSXPunctuator.exec(input)){switch(lastIndex=JSXPunctuator.lastIndex,nextLastSignificantToken=match[0],match[0]){case"<":stack.push({tag:"JSXTag"});break;case">":stack.pop(),"/"===lastSignificantToken||"JSXTagEnd"===mode.tag?(nextLastSignificantToken="?JSX",postfixIncDec=!0):stack.push({tag:"JSXChildren"});break;case"{":stack.push({tag:"InterpolationInJSX",nesting:braces.length}),nextLastSignificantToken="?InterpolationInJSX",postfixIncDec=!1;break;case"/":"<"===lastSignificantToken&&(stack.pop(),"JSXChildren"===stack[stack.length-1].tag&&stack.pop(),stack.push({tag:"JSXTagEnd"}))}lastSignificantToken=nextLastSignificantToken,yield{type:"JSXPunctuator",value:match[0]};continue}if(JSXIdentifier.lastIndex=lastIndex,match=JSXIdentifier.exec(input)){lastIndex=JSXIdentifier.lastIndex,lastSignificantToken=match[0],yield{type:"JSXIdentifier",value:match[0]};continue}if(JSXString.lastIndex=lastIndex,match=JSXString.exec(input)){lastIndex=JSXString.lastIndex,lastSignificantToken=match[0],yield{type:"JSXString",value:match[0],closed:void 0!==match[2]};continue}break;case"JSXChildren":if(JSXText.lastIndex=lastIndex,match=JSXText.exec(input)){lastIndex=JSXText.lastIndex,lastSignificantToken=match[0],yield{type:"JSXText",value:match[0]};continue}switch(input[lastIndex]){case"<":stack.push({tag:"JSXTag"}),lastIndex++,lastSignificantToken="<",yield{type:"JSXPunctuator",value:"<"};continue;case"{":stack.push({tag:"InterpolationInJSX",nesting:braces.length}),lastIndex++,lastSignificantToken="?InterpolationInJSX",postfixIncDec=!1,yield{type:"JSXPunctuator",value:"{"};continue}}WhiteSpace.lastIndex=lastIndex,(match=WhiteSpace.exec(input))?(lastIndex=WhiteSpace.lastIndex,yield{type:"WhiteSpace",value:match[0]}):(LineTerminatorSequence.lastIndex=lastIndex,(match=LineTerminatorSequence.exec(input))?(lastIndex=LineTerminatorSequence.lastIndex,postfixIncDec=!1,KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)&&(lastSignificantToken="?NoLineTerminatorHere"),yield{type:"LineTerminatorSequence",value:match[0]}):(MultiLineComment.lastIndex=lastIndex,(match=MultiLineComment.exec(input))?(lastIndex=MultiLineComment.lastIndex,Newline.test(match[0])&&(postfixIncDec=!1,KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)&&(lastSignificantToken="?NoLineTerminatorHere")),yield{type:"MultiLineComment",value:match[0],closed:void 0!==match[1]}):(SingleLineComment.lastIndex=lastIndex,(match=SingleLineComment.exec(input))?(lastIndex=SingleLineComment.lastIndex,postfixIncDec=!1,yield{type:"SingleLineComment",value:match[0]}):(lastIndex+=(firstCodePoint=String.fromCodePoint(input.codePointAt(lastIndex))).length,lastSignificantToken=firstCodePoint,postfixIncDec=!1,yield{type:mode.tag.startsWith("JSX")?"JSXInvalid":"Invalid",value:firstCodePoint}))))}});var Identifier,JSXIdentifier,JSXPunctuator,JSXString,JSXText,KeywordsWithExpressionAfter,KeywordsWithNoLineTerminatorAfter,LineTerminatorSequence,MultiLineComment,Newline,NumericLiteral,Punctuator,RegularExpressionLiteral,SingleLineComment,StringLiteral,Template,TokensNotPrecedingObjectLiteral,TokensPrecedingExpression,WhiteSpace})();var dist_reservedWords_strict=["implements","interface","let","package","private","protected","public","static","yield"];new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),new Set(dist_reservedWords_strict);const dist_SAFE_TIMERS_SYMBOL=Symbol("vitest:SAFE_TIMERS");function utils_dist_getSafeTimers(){const{setTimeout:safeSetTimeout,setInterval:safeSetInterval,clearInterval:safeClearInterval,clearTimeout:safeClearTimeout,setImmediate:safeSetImmediate,clearImmediate:safeClearImmediate,queueMicrotask:safeQueueMicrotask}=globalThis[dist_SAFE_TIMERS_SYMBOL]||globalThis,{nextTick:safeNextTick}=globalThis[dist_SAFE_TIMERS_SYMBOL]||globalThis.process||{nextTick:cb=>cb()};return{nextTick:safeNextTick,setTimeout:safeSetTimeout,setInterval:safeSetInterval,clearInterval:safeClearInterval,clearTimeout:safeClearTimeout,setImmediate:safeSetImmediate,clearImmediate:safeClearImmediate,queueMicrotask:safeQueueMicrotask}}var utils_C8RiOc4B_process=__webpack_require__("./node_modules/process/browser.js");const NAME_WORKER_STATE="__vitest_worker__";function utils_C8RiOc4B_getWorkerState(){const workerState=globalThis[NAME_WORKER_STATE];if(!workerState){throw new Error('Vitest failed to access its internal state.\n\nOne of the following is possible:\n- "vitest" is imported directly without running "vitest" command\n- "vitest" is imported inside "globalSetup" (to fix this, use "setupFiles" instead, because "globalSetup" runs in a different context)\n- Otherwise, it might be a Vitest bug. Please report it to https://github.com/vitest-dev/vitest/issues\n')}return workerState}function getCurrentEnvironment(){const state=utils_C8RiOc4B_getWorkerState();return state?.environment.name}function isChildProcess(){return void 0!==utils_C8RiOc4B_process&&!!utils_C8RiOc4B_process.send}async function waitForImportsToResolve(){await function waitNextTick(){const{setTimeout}=utils_dist_getSafeTimers();return new Promise((resolve=>setTimeout(resolve,0)))}();const state=utils_C8RiOc4B_getWorkerState(),promises=[];let resolvingCount=0;for(const mod of state.moduleCache.values())mod.promise&&!mod.evaluated&&promises.push(mod.promise),mod.resolving&&resolvingCount++;(promises.length||resolvingCount)&&(await Promise.allSettled(promises),await waitForImportsToResolve())}var commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==__webpack_require__.g?__webpack_require__.g:"undefined"!=typeof self?self:{};function _commonjsHelpers_BFTU3MAI_getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var pathe_M_eThtNZ_process=__webpack_require__("./node_modules/process/browser.js");const pathe_M_eThtNZ_DRIVE_LETTER_START_RE=/^[A-Za-z]:\//;function pathe_M_eThtNZ_normalizeWindowsPath(input=""){return input?input.replace(/\\/g,"/").replace(pathe_M_eThtNZ_DRIVE_LETTER_START_RE,(r=>r.toUpperCase())):input}const pathe_M_eThtNZ_IS_ABSOLUTE_RE=/^[/\\](?![/\\])|^[/\\]{2}(?!\.)|^[A-Za-z]:[/\\]/;const pathe_M_eThtNZ_resolve=function(...arguments_){let resolvedPath="",resolvedAbsolute=!1;for(let index=(arguments_=arguments_.map((argument=>pathe_M_eThtNZ_normalizeWindowsPath(argument)))).length-1;index>=-1&&!resolvedAbsolute;index--){const path=index>=0?arguments_[index]:void 0!==pathe_M_eThtNZ_process&&"function"==typeof pathe_M_eThtNZ_process.cwd?pathe_M_eThtNZ_process.cwd().replace(/\\/g,"/"):"/";path&&0!==path.length&&(resolvedPath=`${path}/${resolvedPath}`,resolvedAbsolute=pathe_M_eThtNZ_isAbsolute(path))}return resolvedPath=pathe_M_eThtNZ_normalizeString(resolvedPath,!resolvedAbsolute),resolvedAbsolute&&!pathe_M_eThtNZ_isAbsolute(resolvedPath)?`/${resolvedPath}`:resolvedPath.length>0?resolvedPath:"."};function pathe_M_eThtNZ_normalizeString(path,allowAboveRoot){let res="",lastSegmentLength=0,lastSlash=-1,dots=0,char=null;for(let index=0;index<=path.length;++index){if(index<path.length)char=path[index];else{if("/"===char)break;char="/"}if("/"===char){if(lastSlash===index-1||1===dots);else if(2===dots){if(res.length<2||2!==lastSegmentLength||"."!==res[res.length-1]||"."!==res[res.length-2]){if(res.length>2){const lastSlashIndex=res.lastIndexOf("/");-1===lastSlashIndex?(res="",lastSegmentLength=0):(res=res.slice(0,lastSlashIndex),lastSegmentLength=res.length-1-res.lastIndexOf("/")),lastSlash=index,dots=0;continue}if(res.length>0){res="",lastSegmentLength=0,lastSlash=index,dots=0;continue}}allowAboveRoot&&(res+=res.length>0?"/..":"..",lastSegmentLength=2)}else res.length>0?res+=`/${path.slice(lastSlash+1,index)}`:res=path.slice(lastSlash+1,index),lastSegmentLength=index-lastSlash-1;lastSlash=index,dots=0}else"."===char&&-1!==dots?++dots:dots=-1}return res}const pathe_M_eThtNZ_isAbsolute=function(p){return pathe_M_eThtNZ_IS_ABSOLUTE_RE.test(p)};var dist_chunk_BVHSVHOK_process=__webpack_require__("./node_modules/process/browser.js"),dist_chunk_BVHSVHOK_h=Object.entries({reset:[0,0],bold:[1,22,"[22m[1m"],dim:[2,22,"[22m[2m"],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]});function dist_chunk_BVHSVHOK_a(n){return String(n)}dist_chunk_BVHSVHOK_a.open="",dist_chunk_BVHSVHOK_a.close="";var dist_browser_s=function dist_chunk_BVHSVHOK_p(n=!1){let e=function dist_chunk_BVHSVHOK_C(n=!1){let e=void 0!==dist_chunk_BVHSVHOK_process?dist_chunk_BVHSVHOK_process:void 0,i=(null==e?void 0:e.env)||{},g=(null==e?void 0:e.argv)||[];return!("NO_COLOR"in i||g.includes("--no-color"))&&("FORCE_COLOR"in i||g.includes("--color")||"win32"===(null==e?void 0:e.platform)||n&&"dumb"!==i.TERM||"CI"in i)||"undefined"!=typeof window&&!!window.chrome}(n),g=(r,t,c=r)=>{let o=l=>{let s=String(l),b=s.indexOf(t,r.length);return~b?r+((r,t,c,o)=>{let l="",s=0;do{l+=r.substring(s,o)+c,s=o+t.length,o=r.indexOf(t,s)}while(~o);return l+r.substring(s)})(s,t,c,b)+t:r+s+t};return o.open=r,o.close=t,o},u={isColorSupported:e},d=r=>`[${r}m`;for(let[r,t]of dist_chunk_BVHSVHOK_h)u[r]=e?g(d(t[0]),d(t[1]),t[2]):dist_chunk_BVHSVHOK_a;return u}();function pretty_format_dist_mergeNamespaces(n,m){return m.forEach((function(e){e&&"string"!=typeof e&&!Array.isArray(e)&&Object.keys(e).forEach((function(k){if("default"!==k&&!(k in n)){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}}))})),Object.freeze(n)}function pretty_format_dist_printIteratorEntries(iterator,config,indentation,depth,refs,printer,separator=": "){let result="",width=0,current=iterator.next();if(!current.done){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(;!current.done;){if(result+=indentationNext,width++===config.maxWidth){result+="…";break}result+=printer(current.value[0],config,indentationNext,depth,refs)+separator+printer(current.value[1],config,indentationNext,depth,refs),current=iterator.next(),current.done?config.min||(result+=","):result+=`,${config.spacingInner}`}result+=config.spacingOuter+indentation}return result}function pretty_format_dist_printIteratorValues(iterator,config,indentation,depth,refs,printer){let result="",width=0,current=iterator.next();if(!current.done){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(;!current.done;){if(result+=indentationNext,width++===config.maxWidth){result+="…";break}result+=printer(current.value,config,indentationNext,depth,refs),current=iterator.next(),current.done?config.min||(result+=","):result+=`,${config.spacingInner}`}result+=config.spacingOuter+indentation}return result}function pretty_format_dist_printListItems(list,config,indentation,depth,refs,printer){let result="";const isDataView=l=>l instanceof DataView,length=isDataView(list=list instanceof ArrayBuffer?new DataView(list):list)?list.byteLength:list.length;if(length>0){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(let i=0;i<length;i++){if(result+=indentationNext,i===config.maxWidth){result+="…";break}(isDataView(list)||i in list)&&(result+=printer(isDataView(list)?list.getInt8(i):list[i],config,indentationNext,depth,refs)),i<length-1?result+=`,${config.spacingInner}`:config.min||(result+=",")}result+=config.spacingOuter+indentation}return result}function pretty_format_dist_printObjectProperties(val,config,indentation,depth,refs,printer){let result="";const keys=function pretty_format_dist_getKeysOfEnumerableProperties(object,compareKeys){const rawKeys=Object.keys(object),keys=null===compareKeys?rawKeys:rawKeys.sort(compareKeys);if(Object.getOwnPropertySymbols)for(const symbol of Object.getOwnPropertySymbols(object))Object.getOwnPropertyDescriptor(object,symbol).enumerable&&keys.push(symbol);return keys}(val,config.compareKeys);if(keys.length>0){result+=config.spacingOuter;const indentationNext=indentation+config.indent;for(let i=0;i<keys.length;i++){const key=keys[i];result+=`${indentationNext+printer(key,config,indentationNext,depth,refs)}: ${printer(val[key],config,indentationNext,depth,refs)}`,i<keys.length-1?result+=`,${config.spacingInner}`:config.min||(result+=",")}result+=config.spacingOuter+indentation}return result}const pretty_format_dist_asymmetricMatcher="function"==typeof Symbol&&Symbol.for?Symbol.for("jest.asymmetricMatcher"):1267621,pretty_format_dist_plugin$5={serialize:(val,config,indentation,depth,refs,printer)=>{const stringedValue=val.toString();if("ArrayContaining"===stringedValue||"ArrayNotContaining"===stringedValue)return++depth>config.maxDepth?`[${stringedValue}]`:`${stringedValue+" "}[${pretty_format_dist_printListItems(val.sample,config,indentation,depth,refs,printer)}]`;if("ObjectContaining"===stringedValue||"ObjectNotContaining"===stringedValue)return++depth>config.maxDepth?`[${stringedValue}]`:`${stringedValue+" "}{${pretty_format_dist_printObjectProperties(val.sample,config,indentation,depth,refs,printer)}}`;if("StringMatching"===stringedValue||"StringNotMatching"===stringedValue)return stringedValue+" "+printer(val.sample,config,indentation,depth,refs);if("StringContaining"===stringedValue||"StringNotContaining"===stringedValue)return stringedValue+" "+printer(val.sample,config,indentation,depth,refs);if("function"!=typeof val.toAsymmetricMatcher)throw new TypeError(`Asymmetric matcher ${val.constructor.name} does not implement toAsymmetricMatcher()`);return val.toAsymmetricMatcher()},test:val=>val&&val.$$typeof===pretty_format_dist_asymmetricMatcher},pretty_format_dist_OBJECT_NAMES=new Set(["DOMStringMap","NamedNodeMap"]),pretty_format_dist_ARRAY_REGEXP=/^(?:HTML\w*Collection|NodeList)$/;const pretty_format_dist_plugin$4={serialize:(collection,config,indentation,depth,refs,printer)=>{const name=collection.constructor.name;return++depth>config.maxDepth?`[${name}]`:(config.min?"":name+" ")+(pretty_format_dist_OBJECT_NAMES.has(name)?`{${pretty_format_dist_printObjectProperties(function pretty_format_dist_isNamedNodeMap(collection){return"NamedNodeMap"===collection.constructor.name}(collection)?[...collection].reduce(((props,attribute)=>(props[attribute.name]=attribute.value,props)),{}):{...collection},config,indentation,depth,refs,printer)}}`:`[${pretty_format_dist_printListItems([...collection],config,indentation,depth,refs,printer)}]`)},test:val=>val&&val.constructor&&!!val.constructor.name&&function pretty_format_dist_testName(name){return pretty_format_dist_OBJECT_NAMES.has(name)||pretty_format_dist_ARRAY_REGEXP.test(name)}(val.constructor.name)};function pretty_format_dist_escapeHTML(str){return str.replaceAll("<","&lt;").replaceAll(">","&gt;")}function pretty_format_dist_printProps(keys,props,config,indentation,depth,refs,printer){const indentationNext=indentation+config.indent,colors=config.colors;return keys.map((key=>{const value=props[key];let printed=printer(value,config,indentationNext,depth,refs);return"string"!=typeof value&&(printed.includes("\n")&&(printed=config.spacingOuter+indentationNext+printed+config.spacingOuter+indentation),printed=`{${printed}}`),`${config.spacingInner+indentation+colors.prop.open+key+colors.prop.close}=${colors.value.open}${printed}${colors.value.close}`})).join("")}function pretty_format_dist_printChildren(children,config,indentation,depth,refs,printer){return children.map((child=>config.spacingOuter+indentation+("string"==typeof child?pretty_format_dist_printText(child,config):printer(child,config,indentation,depth,refs)))).join("")}function pretty_format_dist_printText(text,config){const contentColor=config.colors.content;return contentColor.open+pretty_format_dist_escapeHTML(text)+contentColor.close}function pretty_format_dist_printElement(type,printedProps,printedChildren,config,indentation){const tagColor=config.colors.tag;return`${tagColor.open}<${type}${printedProps&&tagColor.close+printedProps+config.spacingOuter+indentation+tagColor.open}${printedChildren?`>${tagColor.close}${printedChildren}${config.spacingOuter}${indentation}${tagColor.open}</${type}`:(printedProps&&!config.min?"":" ")+"/"}>${tagColor.close}`}function pretty_format_dist_printElementAsLeaf(type,config){const tagColor=config.colors.tag;return`${tagColor.open}<${type}${tagColor.close} …${tagColor.open} />${tagColor.close}`}const pretty_format_dist_ELEMENT_REGEXP=/^(?:(?:HTML|SVG)\w*)?Element$/;function pretty_format_dist_nodeIsFragment(node){return 11===node.nodeType}const pretty_format_dist_plugin$3={serialize:(node,config,indentation,depth,refs,printer)=>{if(function pretty_format_dist_nodeIsText(node){return 3===node.nodeType}(node))return pretty_format_dist_printText(node.data,config);if(function pretty_format_dist_nodeIsComment(node){return 8===node.nodeType}(node))return function pretty_format_dist_printComment(comment,config){const commentColor=config.colors.comment;return`${commentColor.open}\x3c!--${pretty_format_dist_escapeHTML(comment)}--\x3e${commentColor.close}`}(node.data,config);const type=pretty_format_dist_nodeIsFragment(node)?"DocumentFragment":node.tagName.toLowerCase();return++depth>config.maxDepth?pretty_format_dist_printElementAsLeaf(type,config):pretty_format_dist_printElement(type,pretty_format_dist_printProps(pretty_format_dist_nodeIsFragment(node)?[]:Array.from(node.attributes,(attr=>attr.name)).sort(),pretty_format_dist_nodeIsFragment(node)?{}:[...node.attributes].reduce(((props,attribute)=>(props[attribute.name]=attribute.value,props)),{}),config,indentation+config.indent,depth,refs,printer),pretty_format_dist_printChildren(Array.prototype.slice.call(node.childNodes||node.children),config,indentation+config.indent,depth,refs,printer),config,indentation)},test:val=>{var _a;return(null==(_a=null==val?void 0:val.constructor)?void 0:_a.name)&&function pretty_format_dist_testNode(val){const constructorName=val.constructor.name,{nodeType,tagName}=val,isCustomElement="string"==typeof tagName&&tagName.includes("-")||function pretty_format_dist_testHasAttribute(val){try{return"function"==typeof val.hasAttribute&&val.hasAttribute("is")}catch{return!1}}(val);return 1===nodeType&&(pretty_format_dist_ELEMENT_REGEXP.test(constructorName)||isCustomElement)||3===nodeType&&"Text"===constructorName||8===nodeType&&"Comment"===constructorName||11===nodeType&&"DocumentFragment"===constructorName}(val)}},pretty_format_dist_getImmutableName=name=>`Immutable.${name}`,pretty_format_dist_printAsLeaf=name=>`[${name}]`;function pretty_format_dist_printImmutableValues(val,config,indentation,depth,refs,printer,type){return++depth>config.maxDepth?pretty_format_dist_printAsLeaf(pretty_format_dist_getImmutableName(type)):`${pretty_format_dist_getImmutableName(type)+" "}[${pretty_format_dist_printIteratorValues(val.values(),config,indentation,depth,refs,printer)}]`}const pretty_format_dist_plugin$2={serialize:(val,config,indentation,depth,refs,printer)=>val["@@__IMMUTABLE_MAP__@@"]?function pretty_format_dist_printImmutableEntries(val,config,indentation,depth,refs,printer,type){return++depth>config.maxDepth?pretty_format_dist_printAsLeaf(pretty_format_dist_getImmutableName(type)):`${pretty_format_dist_getImmutableName(type)+" "}{${pretty_format_dist_printIteratorEntries(val.entries(),config,indentation,depth,refs,printer)}}`}(val,config,indentation,depth,refs,printer,val["@@__IMMUTABLE_ORDERED__@@"]?"OrderedMap":"Map"):val["@@__IMMUTABLE_LIST__@@"]?pretty_format_dist_printImmutableValues(val,config,indentation,depth,refs,printer,"List"):val["@@__IMMUTABLE_SET__@@"]?pretty_format_dist_printImmutableValues(val,config,indentation,depth,refs,printer,val["@@__IMMUTABLE_ORDERED__@@"]?"OrderedSet":"Set"):val["@@__IMMUTABLE_STACK__@@"]?pretty_format_dist_printImmutableValues(val,config,indentation,depth,refs,printer,"Stack"):val["@@__IMMUTABLE_SEQ__@@"]?function pretty_format_dist_printImmutableSeq(val,config,indentation,depth,refs,printer){const name=pretty_format_dist_getImmutableName("Seq");return++depth>config.maxDepth?pretty_format_dist_printAsLeaf(name):val["@@__IMMUTABLE_KEYED__@@"]?`${name+" "}{${val._iter||val._object?pretty_format_dist_printIteratorEntries(val.entries(),config,indentation,depth,refs,printer):"…"}}`:`${name+" "}[${val._iter||val._array||val._collection||val._iterable?pretty_format_dist_printIteratorValues(val.values(),config,indentation,depth,refs,printer):"…"}]`}(val,config,indentation,depth,refs,printer):function pretty_format_dist_printImmutableRecord(val,config,indentation,depth,refs,printer){const name=pretty_format_dist_getImmutableName(val._name||"Record");return++depth>config.maxDepth?pretty_format_dist_printAsLeaf(name):`${name+" "}{${pretty_format_dist_printIteratorEntries(function pretty_format_dist_getRecordEntries(val){let i=0;return{next(){if(i<val._keys.length){const key=val._keys[i++];return{done:!1,value:[key,val.get(key)]}}return{done:!0,value:void 0}}}}(val),config,indentation,depth,refs,printer)}}`}(val,config,indentation,depth,refs,printer),test:val=>val&&(!0===val["@@__IMMUTABLE_ITERABLE__@@"]||!0===val["@@__IMMUTABLE_RECORD__@@"])};function _vitest_pretty_format_dist_getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var pretty_format_dist_hasRequiredReactIs_production,pretty_format_dist_reactIs$1={exports:{}},pretty_format_dist_reactIs_production={};var pretty_format_dist_hasRequiredReactIs$1;function pretty_format_dist_requireReactIs$1(){return pretty_format_dist_hasRequiredReactIs$1||(pretty_format_dist_hasRequiredReactIs$1=1,pretty_format_dist_reactIs$1.exports=function pretty_format_dist_requireReactIs_production(){if(pretty_format_dist_hasRequiredReactIs_production)return pretty_format_dist_reactIs_production;pretty_format_dist_hasRequiredReactIs_production=1;var REACT_ELEMENT_TYPE=Symbol.for("react.transitional.element"),REACT_PORTAL_TYPE=Symbol.for("react.portal"),REACT_FRAGMENT_TYPE=Symbol.for("react.fragment"),REACT_STRICT_MODE_TYPE=Symbol.for("react.strict_mode"),REACT_PROFILER_TYPE=Symbol.for("react.profiler"),REACT_CONSUMER_TYPE=Symbol.for("react.consumer"),REACT_CONTEXT_TYPE=Symbol.for("react.context"),REACT_FORWARD_REF_TYPE=Symbol.for("react.forward_ref"),REACT_SUSPENSE_TYPE=Symbol.for("react.suspense"),REACT_SUSPENSE_LIST_TYPE=Symbol.for("react.suspense_list"),REACT_MEMO_TYPE=Symbol.for("react.memo"),REACT_LAZY_TYPE=Symbol.for("react.lazy"),REACT_OFFSCREEN_TYPE=Symbol.for("react.offscreen"),REACT_CLIENT_REFERENCE=Symbol.for("react.client.reference");function typeOf(object){if("object"==typeof object&&null!==object){var $$typeof=object.$$typeof;switch($$typeof){case REACT_ELEMENT_TYPE:switch(object=object.type){case REACT_FRAGMENT_TYPE:case REACT_PROFILER_TYPE:case REACT_STRICT_MODE_TYPE:case REACT_SUSPENSE_TYPE:case REACT_SUSPENSE_LIST_TYPE:return object;default:switch(object=object&&object.$$typeof){case REACT_CONTEXT_TYPE:case REACT_FORWARD_REF_TYPE:case REACT_LAZY_TYPE:case REACT_MEMO_TYPE:case REACT_CONSUMER_TYPE:return object;default:return $$typeof}}case REACT_PORTAL_TYPE:return $$typeof}}}return pretty_format_dist_reactIs_production.ContextConsumer=REACT_CONSUMER_TYPE,pretty_format_dist_reactIs_production.ContextProvider=REACT_CONTEXT_TYPE,pretty_format_dist_reactIs_production.Element=REACT_ELEMENT_TYPE,pretty_format_dist_reactIs_production.ForwardRef=REACT_FORWARD_REF_TYPE,pretty_format_dist_reactIs_production.Fragment=REACT_FRAGMENT_TYPE,pretty_format_dist_reactIs_production.Lazy=REACT_LAZY_TYPE,pretty_format_dist_reactIs_production.Memo=REACT_MEMO_TYPE,pretty_format_dist_reactIs_production.Portal=REACT_PORTAL_TYPE,pretty_format_dist_reactIs_production.Profiler=REACT_PROFILER_TYPE,pretty_format_dist_reactIs_production.StrictMode=REACT_STRICT_MODE_TYPE,pretty_format_dist_reactIs_production.Suspense=REACT_SUSPENSE_TYPE,pretty_format_dist_reactIs_production.SuspenseList=REACT_SUSPENSE_LIST_TYPE,pretty_format_dist_reactIs_production.isContextConsumer=function(object){return typeOf(object)===REACT_CONSUMER_TYPE},pretty_format_dist_reactIs_production.isContextProvider=function(object){return typeOf(object)===REACT_CONTEXT_TYPE},pretty_format_dist_reactIs_production.isElement=function(object){return"object"==typeof object&&null!==object&&object.$$typeof===REACT_ELEMENT_TYPE},pretty_format_dist_reactIs_production.isForwardRef=function(object){return typeOf(object)===REACT_FORWARD_REF_TYPE},pretty_format_dist_reactIs_production.isFragment=function(object){return typeOf(object)===REACT_FRAGMENT_TYPE},pretty_format_dist_reactIs_production.isLazy=function(object){return typeOf(object)===REACT_LAZY_TYPE},pretty_format_dist_reactIs_production.isMemo=function(object){return typeOf(object)===REACT_MEMO_TYPE},pretty_format_dist_reactIs_production.isPortal=function(object){return typeOf(object)===REACT_PORTAL_TYPE},pretty_format_dist_reactIs_production.isProfiler=function(object){return typeOf(object)===REACT_PROFILER_TYPE},pretty_format_dist_reactIs_production.isStrictMode=function(object){return typeOf(object)===REACT_STRICT_MODE_TYPE},pretty_format_dist_reactIs_production.isSuspense=function(object){return typeOf(object)===REACT_SUSPENSE_TYPE},pretty_format_dist_reactIs_production.isSuspenseList=function(object){return typeOf(object)===REACT_SUSPENSE_LIST_TYPE},pretty_format_dist_reactIs_production.isValidElementType=function(type){return"string"==typeof type||"function"==typeof type||type===REACT_FRAGMENT_TYPE||type===REACT_PROFILER_TYPE||type===REACT_STRICT_MODE_TYPE||type===REACT_SUSPENSE_TYPE||type===REACT_SUSPENSE_LIST_TYPE||type===REACT_OFFSCREEN_TYPE||"object"==typeof type&&null!==type&&(type.$$typeof===REACT_LAZY_TYPE||type.$$typeof===REACT_MEMO_TYPE||type.$$typeof===REACT_CONTEXT_TYPE||type.$$typeof===REACT_CONSUMER_TYPE||type.$$typeof===REACT_FORWARD_REF_TYPE||type.$$typeof===REACT_CLIENT_REFERENCE||void 0!==type.getModuleId)},pretty_format_dist_reactIs_production.typeOf=typeOf,pretty_format_dist_reactIs_production}()),pretty_format_dist_reactIs$1.exports}var pretty_format_dist_hasRequiredReactIs_production_min,pretty_format_dist_reactIsExports$1=pretty_format_dist_requireReactIs$1(),pretty_format_dist_ReactIs19=pretty_format_dist_mergeNamespaces({__proto__:null,default:_vitest_pretty_format_dist_getDefaultExportFromCjs(pretty_format_dist_reactIsExports$1)},[pretty_format_dist_reactIsExports$1]),pretty_format_dist_reactIs={exports:{}},pretty_format_dist_reactIs_production_min={};var pretty_format_dist_hasRequiredReactIs;var pretty_format_dist_reactIsExports=function pretty_format_dist_requireReactIs(){return pretty_format_dist_hasRequiredReactIs||(pretty_format_dist_hasRequiredReactIs=1,pretty_format_dist_reactIs.exports=function pretty_format_dist_requireReactIs_production_min(){if(pretty_format_dist_hasRequiredReactIs_production_min)return pretty_format_dist_reactIs_production_min;pretty_format_dist_hasRequiredReactIs_production_min=1;var u,b=Symbol.for("react.element"),c=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),e=Symbol.for("react.strict_mode"),f=Symbol.for("react.profiler"),g=Symbol.for("react.provider"),h=Symbol.for("react.context"),k=Symbol.for("react.server_context"),l=Symbol.for("react.forward_ref"),m=Symbol.for("react.suspense"),n=Symbol.for("react.suspense_list"),p=Symbol.for("react.memo"),q=Symbol.for("react.lazy"),t=Symbol.for("react.offscreen");function v(a){if("object"==typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}return u=Symbol.for("react.module.reference"),pretty_format_dist_reactIs_production_min.ContextConsumer=h,pretty_format_dist_reactIs_production_min.ContextProvider=g,pretty_format_dist_reactIs_production_min.Element=b,pretty_format_dist_reactIs_production_min.ForwardRef=l,pretty_format_dist_reactIs_production_min.Fragment=d,pretty_format_dist_reactIs_production_min.Lazy=q,pretty_format_dist_reactIs_production_min.Memo=p,pretty_format_dist_reactIs_production_min.Portal=c,pretty_format_dist_reactIs_production_min.Profiler=f,pretty_format_dist_reactIs_production_min.StrictMode=e,pretty_format_dist_reactIs_production_min.Suspense=m,pretty_format_dist_reactIs_production_min.SuspenseList=n,pretty_format_dist_reactIs_production_min.isAsyncMode=function(){return!1},pretty_format_dist_reactIs_production_min.isConcurrentMode=function(){return!1},pretty_format_dist_reactIs_production_min.isContextConsumer=function(a){return v(a)===h},pretty_format_dist_reactIs_production_min.isContextProvider=function(a){return v(a)===g},pretty_format_dist_reactIs_production_min.isElement=function(a){return"object"==typeof a&&null!==a&&a.$$typeof===b},pretty_format_dist_reactIs_production_min.isForwardRef=function(a){return v(a)===l},pretty_format_dist_reactIs_production_min.isFragment=function(a){return v(a)===d},pretty_format_dist_reactIs_production_min.isLazy=function(a){return v(a)===q},pretty_format_dist_reactIs_production_min.isMemo=function(a){return v(a)===p},pretty_format_dist_reactIs_production_min.isPortal=function(a){return v(a)===c},pretty_format_dist_reactIs_production_min.isProfiler=function(a){return v(a)===f},pretty_format_dist_reactIs_production_min.isStrictMode=function(a){return v(a)===e},pretty_format_dist_reactIs_production_min.isSuspense=function(a){return v(a)===m},pretty_format_dist_reactIs_production_min.isSuspenseList=function(a){return v(a)===n},pretty_format_dist_reactIs_production_min.isValidElementType=function(a){return"string"==typeof a||"function"==typeof a||a===d||a===f||a===e||a===m||a===n||a===t||"object"==typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)},pretty_format_dist_reactIs_production_min.typeOf=v,pretty_format_dist_reactIs_production_min}()),pretty_format_dist_reactIs.exports}(),pretty_format_dist_ReactIs18=pretty_format_dist_mergeNamespaces({__proto__:null,default:_vitest_pretty_format_dist_getDefaultExportFromCjs(pretty_format_dist_reactIsExports)},[pretty_format_dist_reactIsExports]);const pretty_format_dist_ReactIs=Object.fromEntries(["isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType"].map((m=>[m,v=>pretty_format_dist_ReactIs18[m](v)||pretty_format_dist_ReactIs19[m](v)])));function pretty_format_dist_getChildren(arg,children=[]){if(Array.isArray(arg))for(const item of arg)pretty_format_dist_getChildren(item,children);else null!=arg&&!1!==arg&&""!==arg&&children.push(arg);return children}function pretty_format_dist_getType(element){const type=element.type;if("string"==typeof type)return type;if("function"==typeof type)return type.displayName||type.name||"Unknown";if(pretty_format_dist_ReactIs.isFragment(element))return"React.Fragment";if(pretty_format_dist_ReactIs.isSuspense(element))return"React.Suspense";if("object"==typeof type&&null!==type){if(pretty_format_dist_ReactIs.isContextProvider(element))return"Context.Provider";if(pretty_format_dist_ReactIs.isContextConsumer(element))return"Context.Consumer";if(pretty_format_dist_ReactIs.isForwardRef(element)){if(type.displayName)return type.displayName;const functionName=type.render.displayName||type.render.name||"";return""===functionName?"ForwardRef":`ForwardRef(${functionName})`}if(pretty_format_dist_ReactIs.isMemo(element)){const functionName=type.displayName||type.type.displayName||type.type.name||"";return""===functionName?"Memo":`Memo(${functionName})`}}return"UNDEFINED"}const pretty_format_dist_plugin$1={serialize:(element,config,indentation,depth,refs,printer)=>++depth>config.maxDepth?pretty_format_dist_printElementAsLeaf(pretty_format_dist_getType(element),config):pretty_format_dist_printElement(pretty_format_dist_getType(element),pretty_format_dist_printProps(function pretty_format_dist_getPropKeys$1(element){const{props}=element;return Object.keys(props).filter((key=>"children"!==key&&void 0!==props[key])).sort()}(element),element.props,config,indentation+config.indent,depth,refs,printer),pretty_format_dist_printChildren(pretty_format_dist_getChildren(element.props.children),config,indentation+config.indent,depth,refs,printer),config,indentation),test:val=>null!=val&&pretty_format_dist_ReactIs.isElement(val)},pretty_format_dist_testSymbol="function"==typeof Symbol&&Symbol.for?Symbol.for("react.test.json"):245830487;const _vitest_pretty_format_dist_plugin={serialize:(object,config,indentation,depth,refs,printer)=>++depth>config.maxDepth?pretty_format_dist_printElementAsLeaf(object.type,config):pretty_format_dist_printElement(object.type,object.props?pretty_format_dist_printProps(function pretty_format_dist_getPropKeys(object){const{props}=object;return props?Object.keys(props).filter((key=>void 0!==props[key])).sort():[]}(object),object.props,config,indentation+config.indent,depth,refs,printer):"",object.children?pretty_format_dist_printChildren(object.children,config,indentation+config.indent,depth,refs,printer):"",config,indentation),test:val=>val&&val.$$typeof===pretty_format_dist_testSymbol},_vitest_pretty_format_dist_toString=Object.prototype.toString,pretty_format_dist_toISOString=Date.prototype.toISOString,pretty_format_dist_errorToString=Error.prototype.toString,pretty_format_dist_regExpToString=RegExp.prototype.toString;function pretty_format_dist_getConstructorName(val){return"function"==typeof val.constructor&&val.constructor.name||"Object"}const pretty_format_dist_SYMBOL_REGEXP=/^Symbol\((.*)\)(.*)$/,pretty_format_dist_NEWLINE_REGEXP=/\n/g;class pretty_format_dist_PrettyFormatPluginError extends Error{constructor(message,stack){super(message),this.stack=stack,this.name=this.constructor.name}}function pretty_format_dist_printFunction(val,printFunctionName){return printFunctionName?`[Function ${val.name||"anonymous"}]`:"[Function]"}function pretty_format_dist_printSymbol(val){return String(val).replace(pretty_format_dist_SYMBOL_REGEXP,"Symbol($1)")}function pretty_format_dist_printError(val){return`[${pretty_format_dist_errorToString.call(val)}]`}function pretty_format_dist_printBasicValue(val,printFunctionName,escapeRegex,escapeString){if(!0===val||!1===val)return`${val}`;if(void 0===val)return"undefined";if(null===val)return"null";const typeOf=typeof val;if("number"===typeOf)return function pretty_format_dist_printNumber(val){return Object.is(val,-0)?"-0":String(val)}(val);if("bigint"===typeOf)return function pretty_format_dist_printBigInt(val){return String(`${val}n`)}(val);if("string"===typeOf)return escapeString?`"${val.replaceAll(/"|\\/g,"\\$&")}"`:`"${val}"`;if("function"===typeOf)return pretty_format_dist_printFunction(val,printFunctionName);if("symbol"===typeOf)return pretty_format_dist_printSymbol(val);const toStringed=_vitest_pretty_format_dist_toString.call(val);return"[object WeakMap]"===toStringed?"WeakMap {}":"[object WeakSet]"===toStringed?"WeakSet {}":"[object Function]"===toStringed||"[object GeneratorFunction]"===toStringed?pretty_format_dist_printFunction(val,printFunctionName):"[object Symbol]"===toStringed?pretty_format_dist_printSymbol(val):"[object Date]"===toStringed?Number.isNaN(+val)?"Date { NaN }":pretty_format_dist_toISOString.call(val):"[object Error]"===toStringed?pretty_format_dist_printError(val):"[object RegExp]"===toStringed?escapeRegex?pretty_format_dist_regExpToString.call(val).replaceAll(/[$()*+.?[\\\]^{|}]/g,"\\$&"):pretty_format_dist_regExpToString.call(val):val instanceof Error?pretty_format_dist_printError(val):null}function pretty_format_dist_printComplexValue(val,config,indentation,depth,refs,hasCalledToJSON){if(refs.includes(val))return"[Circular]";(refs=[...refs]).push(val);const hitMaxDepth=++depth>config.maxDepth,min=config.min;if(config.callToJSON&&!hitMaxDepth&&val.toJSON&&"function"==typeof val.toJSON&&!hasCalledToJSON)return pretty_format_dist_printer(val.toJSON(),config,indentation,depth,refs,!0);const toStringed=_vitest_pretty_format_dist_toString.call(val);return"[object Arguments]"===toStringed?hitMaxDepth?"[Arguments]":`${min?"":"Arguments "}[${pretty_format_dist_printListItems(val,config,indentation,depth,refs,pretty_format_dist_printer)}]`:function pretty_format_dist_isToStringedArrayType(toStringed){return"[object Array]"===toStringed||"[object ArrayBuffer]"===toStringed||"[object DataView]"===toStringed||"[object Float32Array]"===toStringed||"[object Float64Array]"===toStringed||"[object Int8Array]"===toStringed||"[object Int16Array]"===toStringed||"[object Int32Array]"===toStringed||"[object Uint8Array]"===toStringed||"[object Uint8ClampedArray]"===toStringed||"[object Uint16Array]"===toStringed||"[object Uint32Array]"===toStringed}(toStringed)?hitMaxDepth?`[${val.constructor.name}]`:`${min?"":config.printBasicPrototype||"Array"!==val.constructor.name?`${val.constructor.name} `:""}[${pretty_format_dist_printListItems(val,config,indentation,depth,refs,pretty_format_dist_printer)}]`:"[object Map]"===toStringed?hitMaxDepth?"[Map]":`Map {${pretty_format_dist_printIteratorEntries(val.entries(),config,indentation,depth,refs,pretty_format_dist_printer," => ")}}`:"[object Set]"===toStringed?hitMaxDepth?"[Set]":`Set {${pretty_format_dist_printIteratorValues(val.values(),config,indentation,depth,refs,pretty_format_dist_printer)}}`:hitMaxDepth||function pretty_format_dist_isWindow(val){return"undefined"!=typeof window&&val===window}(val)?`[${pretty_format_dist_getConstructorName(val)}]`:`${min?"":config.printBasicPrototype||"Object"!==pretty_format_dist_getConstructorName(val)?`${pretty_format_dist_getConstructorName(val)} `:""}{${pretty_format_dist_printObjectProperties(val,config,indentation,depth,refs,pretty_format_dist_printer)}}`}const pretty_format_dist_ErrorPlugin={test:val=>val&&val instanceof Error,serialize(val,config,indentation,depth,refs,printer2){if(refs.includes(val))return"[Circular]";refs=[...refs,val];const hitMaxDepth=++depth>config.maxDepth,{message,cause,...rest}=val,entries={message,...void 0!==cause?{cause}:{},...val instanceof AggregateError?{errors:val.errors}:{},...rest},name="Error"!==val.name?val.name:pretty_format_dist_getConstructorName(val);return hitMaxDepth?`[${name}]`:`${name} {${pretty_format_dist_printIteratorEntries(Object.entries(entries).values(),config,indentation,depth,refs,printer2)}}`}};function pretty_format_dist_printPlugin(plugin,val,config,indentation,depth,refs){let printed;try{printed=function pretty_format_dist_isNewPlugin(plugin){return null!=plugin.serialize}(plugin)?plugin.serialize(val,config,indentation,depth,refs,pretty_format_dist_printer):plugin.print(val,(valChild=>pretty_format_dist_printer(valChild,config,indentation,depth,refs)),(str=>{const indentationNext=indentation+config.indent;return indentationNext+str.replaceAll(pretty_format_dist_NEWLINE_REGEXP,`\n${indentationNext}`)}),{edgeSpacing:config.spacingOuter,min:config.min,spacing:config.spacingInner},config.colors)}catch(error){throw new pretty_format_dist_PrettyFormatPluginError(error.message,error.stack)}if("string"!=typeof printed)throw new TypeError(`pretty-format: Plugin must return type "string" but instead returned "${typeof printed}".`);return printed}function pretty_format_dist_findPlugin(plugins2,val){for(const plugin of plugins2)try{if(plugin.test(val))return plugin}catch(error){throw new pretty_format_dist_PrettyFormatPluginError(error.message,error.stack)}return null}function pretty_format_dist_printer(val,config,indentation,depth,refs,hasCalledToJSON){const plugin=pretty_format_dist_findPlugin(config.plugins,val);if(null!==plugin)return pretty_format_dist_printPlugin(plugin,val,config,indentation,depth,refs);const basicResult=pretty_format_dist_printBasicValue(val,config.printFunctionName,config.escapeRegex,config.escapeString);return null!==basicResult?basicResult:pretty_format_dist_printComplexValue(val,config,indentation,depth,refs,hasCalledToJSON)}const pretty_format_dist_DEFAULT_THEME={comment:"gray",content:"reset",prop:"yellow",tag:"cyan",value:"green"},pretty_format_dist_DEFAULT_THEME_KEYS=Object.keys(pretty_format_dist_DEFAULT_THEME),pretty_format_dist_DEFAULT_OPTIONS={callToJSON:!0,compareKeys:void 0,escapeRegex:!1,escapeString:!0,highlight:!1,indent:2,maxDepth:Number.POSITIVE_INFINITY,maxWidth:Number.POSITIVE_INFINITY,min:!1,plugins:[],printBasicPrototype:!0,printFunctionName:!0,theme:pretty_format_dist_DEFAULT_THEME};function pretty_format_dist_getPrintFunctionName(options){return(null==options?void 0:options.printFunctionName)??pretty_format_dist_DEFAULT_OPTIONS.printFunctionName}function pretty_format_dist_getEscapeRegex(options){return(null==options?void 0:options.escapeRegex)??pretty_format_dist_DEFAULT_OPTIONS.escapeRegex}function pretty_format_dist_getEscapeString(options){return(null==options?void 0:options.escapeString)??pretty_format_dist_DEFAULT_OPTIONS.escapeString}function pretty_format_dist_getConfig(options){return{callToJSON:(null==options?void 0:options.callToJSON)??pretty_format_dist_DEFAULT_OPTIONS.callToJSON,colors:(null==options?void 0:options.highlight)?pretty_format_dist_DEFAULT_THEME_KEYS.reduce(((colors,key)=>{const value=pretty_format_dist_DEFAULT_THEME[key],color=value&&dist_browser_s[value];if(!color||"string"!=typeof color.close||"string"!=typeof color.open)throw new Error(`pretty-format: Option "theme" has a key "${key}" whose value "${value}" is undefined in ansi-styles.`);return colors[key]=color,colors}),Object.create(null)):pretty_format_dist_DEFAULT_THEME_KEYS.reduce(((colors,key)=>(colors[key]={close:"",open:""},colors)),Object.create(null)),compareKeys:"function"==typeof(null==options?void 0:options.compareKeys)||null===(null==options?void 0:options.compareKeys)?options.compareKeys:pretty_format_dist_DEFAULT_OPTIONS.compareKeys,escapeRegex:pretty_format_dist_getEscapeRegex(options),escapeString:pretty_format_dist_getEscapeString(options),indent:(null==options?void 0:options.min)?"":(indent=(null==options?void 0:options.indent)??pretty_format_dist_DEFAULT_OPTIONS.indent,Array.from({length:indent+1}).join(" ")),maxDepth:(null==options?void 0:options.maxDepth)??pretty_format_dist_DEFAULT_OPTIONS.maxDepth,maxWidth:(null==options?void 0:options.maxWidth)??pretty_format_dist_DEFAULT_OPTIONS.maxWidth,min:(null==options?void 0:options.min)??pretty_format_dist_DEFAULT_OPTIONS.min,plugins:(null==options?void 0:options.plugins)??pretty_format_dist_DEFAULT_OPTIONS.plugins,printBasicPrototype:(null==options?void 0:options.printBasicPrototype)??!0,printFunctionName:pretty_format_dist_getPrintFunctionName(options),spacingInner:(null==options?void 0:options.min)?" ":"\n",spacingOuter:(null==options?void 0:options.min)?"":"\n"};var indent}function pretty_format_dist_format(val,options){if(options&&(function pretty_format_dist_validateOptions(options){for(const key of Object.keys(options))if(!Object.prototype.hasOwnProperty.call(pretty_format_dist_DEFAULT_OPTIONS,key))throw new Error(`pretty-format: Unknown option "${key}".`);if(options.min&&void 0!==options.indent&&0!==options.indent)throw new Error('pretty-format: Options "min" and "indent" cannot be used together.')}(options),options.plugins)){const plugin=pretty_format_dist_findPlugin(options.plugins,val);if(null!==plugin)return pretty_format_dist_printPlugin(plugin,val,pretty_format_dist_getConfig(options),"",0,[])}const basicResult=pretty_format_dist_printBasicValue(val,pretty_format_dist_getPrintFunctionName(options),pretty_format_dist_getEscapeRegex(options),pretty_format_dist_getEscapeString(options));return null!==basicResult?basicResult:pretty_format_dist_printComplexValue(val,pretty_format_dist_getConfig(options),"",0,[])}const pretty_format_dist_plugins={AsymmetricMatcher:pretty_format_dist_plugin$5,DOMCollection:pretty_format_dist_plugin$4,DOMElement:pretty_format_dist_plugin$3,Immutable:pretty_format_dist_plugin$2,ReactElement:pretty_format_dist_plugin$1,ReactTestComponent:_vitest_pretty_format_dist_plugin,Error:pretty_format_dist_ErrorPlugin};var dist_process=__webpack_require__("./node_modules/process/browser.js");const dist_comma=",".charCodeAt(0),dist_chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",dist_intToChar=new Uint8Array(64),dist_charToInt=new Uint8Array(128);for(let i=0;i<64;i++){const c=dist_chars.charCodeAt(i);dist_intToChar[i]=c,dist_charToInt[c]=i}function dist_decodeInteger(reader,relative){let value=0,shift=0,integer=0;do{const c=reader.next();integer=dist_charToInt[c],value|=(31&integer)<<shift,shift+=5}while(32&integer);const shouldNegate=1&value;return value>>>=1,shouldNegate&&(value=-2147483648|-value),relative+value}function dist_hasMoreVlq(reader,max){return!(reader.pos>=max)&&reader.peek()!==dist_comma}class dist_StringReader{constructor(buffer){this.pos=0,this.buffer=buffer}next(){return this.buffer.charCodeAt(this.pos++)}peek(){return this.buffer.charCodeAt(this.pos)}indexOf(char){const{buffer,pos}=this,idx=buffer.indexOf(char,pos);return-1===idx?buffer.length:idx}}function dist_sort(line){line.sort(dist_sortComparator$1)}function dist_sortComparator$1(a,b){return a[0]-b[0]}const dist_schemeRegex=/^[\w+.-]+:\/\//,dist_urlRegex=/^([\w+.-]+:)\/\/([^@/#?]*@)?([^:/#?]*)(:\d+)?(\/[^#?]*)?(\?[^#]*)?(#.*)?/,dist_fileRegex=/^file:(?:\/\/((?![a-z]:)[^/#?]*)?)?(\/?[^#?]*)(\?[^#]*)?(#.*)?/i;var dist_UrlType;function dist_isAbsolutePath(input){return input.startsWith("/")}function dist_isRelative(input){return/^[.?#]/.test(input)}function dist_parseAbsoluteUrl(input){const match=dist_urlRegex.exec(input);return dist_makeUrl(match[1],match[2]||"",match[3],match[4]||"",match[5]||"/",match[6]||"",match[7]||"")}function dist_makeUrl(scheme,user,host,port,path,query,hash){return{scheme,user,host,port,path,query,hash,type:dist_UrlType.Absolute}}function dist_parseUrl(input){if(function dist_isSchemeRelativeUrl(input){return input.startsWith("//")}(input)){const url=dist_parseAbsoluteUrl("http:"+input);return url.scheme="",url.type=dist_UrlType.SchemeRelative,url}if(dist_isAbsolutePath(input)){const url=dist_parseAbsoluteUrl("http://foo.com"+input);return url.scheme="",url.host="",url.type=dist_UrlType.AbsolutePath,url}if(function dist_isFileUrl(input){return input.startsWith("file:")}(input))return function dist_parseFileUrl(input){const match=dist_fileRegex.exec(input),path=match[2];return dist_makeUrl("file:","",match[1]||"","",dist_isAbsolutePath(path)?path:"/"+path,match[3]||"",match[4]||"")}(input);if(function dist_isAbsoluteUrl(input){return dist_schemeRegex.test(input)}(input))return dist_parseAbsoluteUrl(input);const url=dist_parseAbsoluteUrl("http://foo.com/"+input);return url.scheme="",url.host="",url.type=input?input.startsWith("?")?dist_UrlType.Query:input.startsWith("#")?dist_UrlType.Hash:dist_UrlType.RelativePath:dist_UrlType.Empty,url}function dist_normalizePath(url,type){const rel=type<=dist_UrlType.RelativePath,pieces=url.path.split("/");let pointer=1,positive=0,addTrailingSlash=!1;for(let i=1;i<pieces.length;i++){const piece=pieces[i];piece?(addTrailingSlash=!1,"."!==piece&&(".."!==piece?(pieces[pointer++]=piece,positive++):positive?(addTrailingSlash=!0,positive--,pointer--):rel&&(pieces[pointer++]=piece))):addTrailingSlash=!0}let path="";for(let i=1;i<pointer;i++)path+="/"+pieces[i];(!path||addTrailingSlash&&!path.endsWith("/.."))&&(path+="/"),url.path=path}function dist_resolve$1(input,base){if(!input&&!base)return"";const url=dist_parseUrl(input);let inputType=url.type;if(base&&inputType!==dist_UrlType.Absolute){const baseUrl=dist_parseUrl(base),baseType=baseUrl.type;switch(inputType){case dist_UrlType.Empty:url.hash=baseUrl.hash;case dist_UrlType.Hash:url.query=baseUrl.query;case dist_UrlType.Query:case dist_UrlType.RelativePath:!function dist_mergePaths(url,base){dist_normalizePath(base,base.type),"/"===url.path?url.path=base.path:url.path=function dist_stripPathFilename(path){if(path.endsWith("/.."))return path;const index=path.lastIndexOf("/");return path.slice(0,index+1)}(base.path)+url.path}(url,baseUrl);case dist_UrlType.AbsolutePath:url.user=baseUrl.user,url.host=baseUrl.host,url.port=baseUrl.port;case dist_UrlType.SchemeRelative:url.scheme=baseUrl.scheme}baseType>inputType&&(inputType=baseType)}dist_normalizePath(url,inputType);const queryHash=url.query+url.hash;switch(inputType){case dist_UrlType.Hash:case dist_UrlType.Query:return queryHash;case dist_UrlType.RelativePath:{const path=url.path.slice(1);return path?dist_isRelative(base||input)&&!dist_isRelative(path)?"./"+path+queryHash:path+queryHash:queryHash||"."}case dist_UrlType.AbsolutePath:return url.path+queryHash;default:return url.scheme+"//"+url.user+url.host+url.port+url.path+queryHash}}function dist_resolve(input,base){return base&&!base.endsWith("/")&&(base+="/"),dist_resolve$1(input,base)}!function(UrlType){UrlType[UrlType.Empty=1]="Empty",UrlType[UrlType.Hash=2]="Hash",UrlType[UrlType.Query=3]="Query",UrlType[UrlType.RelativePath=4]="RelativePath",UrlType[UrlType.AbsolutePath=5]="AbsolutePath",UrlType[UrlType.SchemeRelative=6]="SchemeRelative",UrlType[UrlType.Absolute=7]="Absolute"}(dist_UrlType||(dist_UrlType={}));const dist_COLUMN=0,dist_SOURCES_INDEX=1,dist_SOURCE_LINE=2,dist_SOURCE_COLUMN=3,dist_NAMES_INDEX=4;function dist_nextUnsortedSegmentLine(mappings,start){for(let i=start;i<mappings.length;i++)if(!dist_isSorted(mappings[i]))return i;return mappings.length}function dist_isSorted(line){for(let j=1;j<line.length;j++)if(line[j][dist_COLUMN]<line[j-1][dist_COLUMN])return!1;return!0}function dist_sortSegments(line,owned){return owned||(line=line.slice()),line.sort(dist_sortComparator)}function dist_sortComparator(a,b){return a[dist_COLUMN]-b[dist_COLUMN]}let dist_found=!1;function dist_upperBound(haystack,needle,index){for(let i=index+1;i<haystack.length&&haystack[i][dist_COLUMN]===needle;index=i++);return index}function dist_lowerBound(haystack,needle,index){for(let i=index-1;i>=0&&haystack[i][dist_COLUMN]===needle;index=i--);return index}function dist_memoizedBinarySearch(haystack,needle,state,key){const{lastKey,lastNeedle,lastIndex}=state;let low=0,high=haystack.length-1;if(key===lastKey){if(needle===lastNeedle)return dist_found=-1!==lastIndex&&haystack[lastIndex][dist_COLUMN]===needle,lastIndex;needle>=lastNeedle?low=-1===lastIndex?0:lastIndex:high=lastIndex}return state.lastKey=key,state.lastNeedle=needle,state.lastIndex=function dist_binarySearch(haystack,needle,low,high){for(;low<=high;){const mid=low+(high-low>>1),cmp=haystack[mid][dist_COLUMN]-needle;if(0===cmp)return dist_found=!0,mid;cmp<0?low=mid+1:high=mid-1}return dist_found=!1,low-1}(haystack,needle,low,high)}const dist_LINE_GTR_ZERO="`line` must be greater than 0 (lines start at line 1)",dist_COL_GTR_EQ_ZERO="`column` must be greater than or equal to 0 (columns start at column 0)",dist_LEAST_UPPER_BOUND=-1,dist_GREATEST_LOWER_BOUND=1;class dist_TraceMap{constructor(map,mapUrl){const isString="string"==typeof map;if(!isString&&map._decodedMemo)return map;const parsed=isString?JSON.parse(map):map,{version,file,names,sourceRoot,sources,sourcesContent}=parsed;this.version=version,this.file=file,this.names=names||[],this.sourceRoot=sourceRoot,this.sources=sources,this.sourcesContent=sourcesContent,this.ignoreList=parsed.ignoreList||parsed.x_google_ignoreList||void 0;const from=dist_resolve(sourceRoot||"",function dist_stripFilename(path){if(!path)return"";const index=path.lastIndexOf("/");return path.slice(0,index+1)}(mapUrl));this.resolvedSources=sources.map((s=>dist_resolve(s||"",from)));const{mappings}=parsed;"string"==typeof mappings?(this._encoded=mappings,this._decoded=void 0):(this._encoded=void 0,this._decoded=function dist_maybeSort(mappings,owned){const unsortedIndex=dist_nextUnsortedSegmentLine(mappings,0);if(unsortedIndex===mappings.length)return mappings;owned||(mappings=mappings.slice());for(let i=unsortedIndex;i<mappings.length;i=dist_nextUnsortedSegmentLine(mappings,i+1))mappings[i]=dist_sortSegments(mappings[i],owned);return mappings}(mappings,isString)),this._decodedMemo={lastKey:-1,lastNeedle:-1,lastIndex:-1},this._bySources=void 0,this._bySourceMemos=void 0}}function dist_decodedMappings(map){var _a;return(_a=map)._decoded||(_a._decoded=function dist_decode(mappings){const{length}=mappings,reader=new dist_StringReader(mappings),decoded=[];let genColumn=0,sourcesIndex=0,sourceLine=0,sourceColumn=0,namesIndex=0;do{const semi=reader.indexOf(";"),line=[];let sorted=!0,lastCol=0;for(genColumn=0;reader.pos<semi;){let seg;genColumn=dist_decodeInteger(reader,genColumn),genColumn<lastCol&&(sorted=!1),lastCol=genColumn,dist_hasMoreVlq(reader,semi)?(sourcesIndex=dist_decodeInteger(reader,sourcesIndex),sourceLine=dist_decodeInteger(reader,sourceLine),sourceColumn=dist_decodeInteger(reader,sourceColumn),dist_hasMoreVlq(reader,semi)?(namesIndex=dist_decodeInteger(reader,namesIndex),seg=[genColumn,sourcesIndex,sourceLine,sourceColumn,namesIndex]):seg=[genColumn,sourcesIndex,sourceLine,sourceColumn]):seg=[genColumn],line.push(seg),reader.pos++}sorted||dist_sort(line),decoded.push(line),reader.pos=semi+1}while(reader.pos<=length);return decoded}(map._encoded))}function dist_originalPositionFor(map,needle){let{line,column,bias}=needle;if(line--,line<0)throw new Error(dist_LINE_GTR_ZERO);if(column<0)throw new Error(dist_COL_GTR_EQ_ZERO);const decoded=dist_decodedMappings(map);if(line>=decoded.length)return dist_OMapping(null,null,null,null);const segments=decoded[line],index=function dist_traceSegmentInternal(segments,memo,line,column,bias){let index=dist_memoizedBinarySearch(segments,column,memo,line);dist_found?index=(bias===dist_LEAST_UPPER_BOUND?dist_upperBound:dist_lowerBound)(segments,column,index):bias===dist_LEAST_UPPER_BOUND&&index++;return-1===index||index===segments.length?-1:index}(segments,map._decodedMemo,line,column,bias||dist_GREATEST_LOWER_BOUND);if(-1===index)return dist_OMapping(null,null,null,null);const segment=segments[index];if(1===segment.length)return dist_OMapping(null,null,null,null);const{names,resolvedSources}=map;return dist_OMapping(resolvedSources[segment[dist_SOURCES_INDEX]],segment[dist_SOURCE_LINE]+1,segment[dist_SOURCE_COLUMN],5===segment.length?names[segment[dist_NAMES_INDEX]]:null)}function dist_OMapping(source,line,column,name){return{source,line,column,name}}function dist_notNullish(v){return null!=v}function dist_isObject(item){return null!=item&&"object"==typeof item&&!Array.isArray(item)}const dist_CHROME_IE_STACK_REGEXP=/^\s*at .*(?:\S:\d+|\(native\))/m,dist_SAFARI_NATIVE_CODE_REGEXP=/^(?:eval@)?(?:\[native code\])?$/,dist_stackIgnorePatterns=["node:internal",/\/packages\/\w+\/dist\//,/\/@vitest\/\w+\/dist\//,"/vitest/dist/","/vitest/src/","/vite-node/dist/","/vite-node/src/","/node_modules/chai/","/node_modules/tinypool/","/node_modules/tinyspy/","/deps/chunk-","/deps/@vitest","/deps/loupe","/deps/chai",/node:\w+/,/__vitest_test__/,/__vitest_browser__/,/\/deps\/vitest_/];function dist_extractLocation(urlLike){if(!urlLike.includes(":"))return[urlLike];const parts=/(.+?)(?::(\d+))?(?::(\d+))?$/.exec(urlLike.replace(/^\(|\)$/g,""));if(!parts)return[urlLike];let url=parts[1];if(url.startsWith("async ")&&(url=url.slice(6)),url.startsWith("http:")||url.startsWith("https:")){const urlObj=new URL(url);urlObj.searchParams.delete("import"),urlObj.searchParams.delete("browserv"),url=urlObj.pathname+urlObj.hash+urlObj.search}if(url.startsWith("/@fs/")){const isWindows=/^\/@fs\/[a-zA-Z]:\//.test(url);url=url.slice(isWindows?5:4)}return[url,parts[2]||void 0,parts[3]||void 0]}function dist_parseStacktrace(stack,options={}){const{ignoreStackEntries=dist_stackIgnorePatterns}=options,stacks=dist_CHROME_IE_STACK_REGEXP.test(stack)?function dist_parseV8Stacktrace(stack){return stack.split("\n").map((line=>function dist_parseSingleV8Stack(raw){let line=raw.trim();if(!dist_CHROME_IE_STACK_REGEXP.test(line))return null;line.includes("(eval ")&&(line=line.replace(/eval code/g,"eval").replace(/(\(eval at [^()]*)|(,.*$)/g,""));let sanitizedLine=line.replace(/^\s+/,"").replace(/\(eval code/g,"(").replace(/^.*?\s+/,"");const location=sanitizedLine.match(/ (\(.+\)$)/);sanitizedLine=location?sanitizedLine.replace(location[0],""):sanitizedLine;const[url,lineNumber,columnNumber]=dist_extractLocation(location?location[1]:sanitizedLine);let method=location&&sanitizedLine||"",file=url&&["eval","<anonymous>"].includes(url)?void 0:url;return file&&lineNumber&&columnNumber?(method.startsWith("async ")&&(method=method.slice(6)),file.startsWith("file://")&&(file=file.slice(7)),file=file.startsWith("node:")||file.startsWith("internal:")?file:pathe_M_eThtNZ_resolve(file),method&&(method=method.replace(/__vite_ssr_import_\d+__\./g,"")),{method,file,line:Number.parseInt(lineNumber),column:Number.parseInt(columnNumber)}):null}(line))).filter(dist_notNullish)}(stack):function dist_parseFFOrSafariStackTrace(stack){return stack.split("\n").map((line=>function dist_parseSingleFFOrSafariStack(raw){let line=raw.trim();if(dist_SAFARI_NATIVE_CODE_REGEXP.test(line))return null;if(line.includes(" > eval")&&(line=line.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,":$1")),!line.includes("@")&&!line.includes(":"))return null;const functionNameRegex=/((.*".+"[^@]*)?[^@]*)(@)/,matches=line.match(functionNameRegex),functionName=matches&&matches[1]?matches[1]:void 0,[url,lineNumber,columnNumber]=dist_extractLocation(line.replace(functionNameRegex,""));return url&&lineNumber&&columnNumber?{file:url,method:functionName||"",line:Number.parseInt(lineNumber),column:Number.parseInt(columnNumber)}:null}(line))).filter(dist_notNullish)}(stack);return stacks.map((stack2=>{var _a;options.getUrlId&&(stack2.file=options.getUrlId(stack2.file));const map=null==(_a=options.getSourceMap)?void 0:_a.call(options,stack2.file);if(!map||"object"!=typeof map||!map.version)return dist_shouldFilter(ignoreStackEntries,stack2.file)?null:stack2;const traceMap=new dist_TraceMap(map),{line,column,source,name}=dist_originalPositionFor(traceMap,stack2);let file=stack2.file;if(source){const fileUrl=stack2.file.startsWith("file://")?stack2.file:`file://${stack2.file}`,sourceRootUrl=map.sourceRoot?new URL(map.sourceRoot,fileUrl):fileUrl;file=new URL(source,sourceRootUrl).pathname}return dist_shouldFilter(ignoreStackEntries,file)?null:null!=line&&null!=column?{line,column,file,method:name||stack2.method}:stack2})).filter((s=>null!=s))}function dist_shouldFilter(ignoreStackEntries,file){return ignoreStackEntries.some((p=>file.match(p)))}let dist_getPromiseValue=()=>"Promise{…}";try{const{getPromiseDetails,kPending,kRejected}=dist_process.binding("util");Array.isArray(getPromiseDetails(Promise.resolve()))&&((value,options)=>{const[state,innerValue]=getPromiseDetails(value);return state===kPending?"Promise{<pending>}":`Promise${state===kRejected?"!":""}{${options.inspect(innerValue,options)}}`})}catch(notNode){}let dist_nodeInspect=!1;try{const nodeUtil=__webpack_require__("./node_modules/util/util.js");dist_nodeInspect=!!nodeUtil.inspect&&nodeUtil.inspect.custom}catch(noNodeInspect){dist_nodeInspect=!1}const{AsymmetricMatcher:AsymmetricMatcher$1,DOMCollection:DOMCollection$1,DOMElement:DOMElement$1,Immutable:Immutable$1,ReactElement:ReactElement$1,ReactTestComponent:ReactTestComponent$1}=pretty_format_dist_plugins;function snapshot_dist_getDefaultExportFromCjs(x){return x&&x.__esModule&&Object.prototype.hasOwnProperty.call(x,"default")?x.default:x}var snapshot_dist_jsTokens_1,snapshot_dist_hasRequiredJsTokens;!function snapshot_dist_requireJsTokens(){return snapshot_dist_hasRequiredJsTokens?snapshot_dist_jsTokens_1:(snapshot_dist_hasRequiredJsTokens=1,RegularExpressionLiteral=/\/(?![*\/])(?:\[(?:(?![\]\\]).|\\.)*\]|(?![\/\\]).|\\.)*(\/[$_\u200C\u200D\p{ID_Continue}]*|\\)?/uy,Punctuator=/--|\+\+|=>|\.{3}|\??\.(?!\d)|(?:&&|\|\||\?\?|[+\-%&|^]|\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2}|\/(?![\/*]))=?|[?~,:;[\](){}]/y,Identifier=/(\x23?)(?=[$_\p{ID_Start}\\])(?:[$_\u200C\u200D\p{ID_Continue}]|\\u[\da-fA-F]{4}|\\u\{[\da-fA-F]+\})+/uy,StringLiteral=/(['"])(?:(?!\1)[^\\\n\r]|\\(?:\r\n|[^]))*(\1)?/y,NumericLiteral=/(?:0[xX][\da-fA-F](?:_?[\da-fA-F])*|0[oO][0-7](?:_?[0-7])*|0[bB][01](?:_?[01])*)n?|0n|[1-9](?:_?\d)*n|(?:(?:0(?!\d)|0\d*[89]\d*|[1-9](?:_?\d)*)(?:\.(?:\d(?:_?\d)*)?)?|\.\d(?:_?\d)*)(?:[eE][+-]?\d(?:_?\d)*)?|0[0-7]+/y,Template=/[`}](?:[^`\\$]|\\[^]|\$(?!\{))*(`|\$\{)?/y,WhiteSpace=/[\t\v\f\ufeff\p{Zs}]+/uy,LineTerminatorSequence=/\r?\n|[\r\u2028\u2029]/y,MultiLineComment=/\/\*(?:[^*]|\*(?!\/))*(\*\/)?/y,SingleLineComment=/\/\/.*/y,JSXPunctuator=/[<>.:={}]|\/(?![\/*])/y,JSXIdentifier=/[$_\p{ID_Start}][$_\u200C\u200D\p{ID_Continue}-]*/uy,JSXString=/(['"])(?:(?!\1)[^])*(\1)?/y,JSXText=/[^<>{}]+/y,TokensPrecedingExpression=/^(?:[\/+-]|\.{3}|\?(?:InterpolationIn(?:JSX|Template)|NoLineTerminatorHere|NonExpressionParenEnd|UnaryIncDec))?$|[{}([,;<>=*%&|^!~?:]$/,TokensNotPrecedingObjectLiteral=/^(?:=>|[;\]){}]|else|\?(?:NoLineTerminatorHere|NonExpressionParenEnd))?$/,KeywordsWithExpressionAfter=/^(?:await|case|default|delete|do|else|instanceof|new|return|throw|typeof|void|yield)$/,KeywordsWithNoLineTerminatorAfter=/^(?:return|throw|yield)$/,Newline=RegExp(LineTerminatorSequence.source),snapshot_dist_jsTokens_1=function*(input,{jsx=!1}={}){var braces,firstCodePoint,isExpression,lastIndex,lastSignificantToken,length,match,mode,nextLastIndex,nextLastSignificantToken,parenNesting,postfixIncDec,punctuator,stack;for(({length}=input),lastIndex=0,lastSignificantToken="",stack=[{tag:"JS"}],braces=[],parenNesting=0,postfixIncDec=!1;lastIndex<length;){switch((mode=stack[stack.length-1]).tag){case"JS":case"JSNonExpressionParen":case"InterpolationInTemplate":case"InterpolationInJSX":if("/"===input[lastIndex]&&(TokensPrecedingExpression.test(lastSignificantToken)||KeywordsWithExpressionAfter.test(lastSignificantToken))&&(RegularExpressionLiteral.lastIndex=lastIndex,match=RegularExpressionLiteral.exec(input))){lastIndex=RegularExpressionLiteral.lastIndex,lastSignificantToken=match[0],postfixIncDec=!0,yield{type:"RegularExpressionLiteral",value:match[0],closed:void 0!==match[1]&&"\\"!==match[1]};continue}if(Punctuator.lastIndex=lastIndex,match=Punctuator.exec(input)){switch(punctuator=match[0],nextLastIndex=Punctuator.lastIndex,nextLastSignificantToken=punctuator,punctuator){case"(":"?NonExpressionParenKeyword"===lastSignificantToken&&stack.push({tag:"JSNonExpressionParen",nesting:parenNesting}),parenNesting++,postfixIncDec=!1;break;case")":parenNesting--,postfixIncDec=!0,"JSNonExpressionParen"===mode.tag&&parenNesting===mode.nesting&&(stack.pop(),nextLastSignificantToken="?NonExpressionParenEnd",postfixIncDec=!1);break;case"{":Punctuator.lastIndex=0,isExpression=!TokensNotPrecedingObjectLiteral.test(lastSignificantToken)&&(TokensPrecedingExpression.test(lastSignificantToken)||KeywordsWithExpressionAfter.test(lastSignificantToken)),braces.push(isExpression),postfixIncDec=!1;break;case"}":switch(mode.tag){case"InterpolationInTemplate":if(braces.length===mode.nesting){Template.lastIndex=lastIndex,match=Template.exec(input),lastIndex=Template.lastIndex,lastSignificantToken=match[0],"${"===match[1]?(lastSignificantToken="?InterpolationInTemplate",postfixIncDec=!1,yield{type:"TemplateMiddle",value:match[0]}):(stack.pop(),postfixIncDec=!0,yield{type:"TemplateTail",value:match[0],closed:"`"===match[1]});continue}break;case"InterpolationInJSX":if(braces.length===mode.nesting){stack.pop(),lastIndex+=1,lastSignificantToken="}",yield{type:"JSXPunctuator",value:"}"};continue}}nextLastSignificantToken=(postfixIncDec=braces.pop())?"?ExpressionBraceEnd":"}";break;case"]":postfixIncDec=!0;break;case"++":case"--":nextLastSignificantToken=postfixIncDec?"?PostfixIncDec":"?UnaryIncDec";break;case"<":if(jsx&&(TokensPrecedingExpression.test(lastSignificantToken)||KeywordsWithExpressionAfter.test(lastSignificantToken))){stack.push({tag:"JSXTag"}),lastIndex+=1,lastSignificantToken="<",yield{type:"JSXPunctuator",value:punctuator};continue}postfixIncDec=!1;break;default:postfixIncDec=!1}lastIndex=nextLastIndex,lastSignificantToken=nextLastSignificantToken,yield{type:"Punctuator",value:punctuator};continue}if(Identifier.lastIndex=lastIndex,match=Identifier.exec(input)){switch(lastIndex=Identifier.lastIndex,nextLastSignificantToken=match[0],match[0]){case"for":case"if":case"while":case"with":"."!==lastSignificantToken&&"?."!==lastSignificantToken&&(nextLastSignificantToken="?NonExpressionParenKeyword")}lastSignificantToken=nextLastSignificantToken,postfixIncDec=!KeywordsWithExpressionAfter.test(match[0]),yield{type:"#"===match[1]?"PrivateIdentifier":"IdentifierName",value:match[0]};continue}if(StringLiteral.lastIndex=lastIndex,match=StringLiteral.exec(input)){lastIndex=StringLiteral.lastIndex,lastSignificantToken=match[0],postfixIncDec=!0,yield{type:"StringLiteral",value:match[0],closed:void 0!==match[2]};continue}if(NumericLiteral.lastIndex=lastIndex,match=NumericLiteral.exec(input)){lastIndex=NumericLiteral.lastIndex,lastSignificantToken=match[0],postfixIncDec=!0,yield{type:"NumericLiteral",value:match[0]};continue}if(Template.lastIndex=lastIndex,match=Template.exec(input)){lastIndex=Template.lastIndex,lastSignificantToken=match[0],"${"===match[1]?(lastSignificantToken="?InterpolationInTemplate",stack.push({tag:"InterpolationInTemplate",nesting:braces.length}),postfixIncDec=!1,yield{type:"TemplateHead",value:match[0]}):(postfixIncDec=!0,yield{type:"NoSubstitutionTemplate",value:match[0],closed:"`"===match[1]});continue}break;case"JSXTag":case"JSXTagEnd":if(JSXPunctuator.lastIndex=lastIndex,match=JSXPunctuator.exec(input)){switch(lastIndex=JSXPunctuator.lastIndex,nextLastSignificantToken=match[0],match[0]){case"<":stack.push({tag:"JSXTag"});break;case">":stack.pop(),"/"===lastSignificantToken||"JSXTagEnd"===mode.tag?(nextLastSignificantToken="?JSX",postfixIncDec=!0):stack.push({tag:"JSXChildren"});break;case"{":stack.push({tag:"InterpolationInJSX",nesting:braces.length}),nextLastSignificantToken="?InterpolationInJSX",postfixIncDec=!1;break;case"/":"<"===lastSignificantToken&&(stack.pop(),"JSXChildren"===stack[stack.length-1].tag&&stack.pop(),stack.push({tag:"JSXTagEnd"}))}lastSignificantToken=nextLastSignificantToken,yield{type:"JSXPunctuator",value:match[0]};continue}if(JSXIdentifier.lastIndex=lastIndex,match=JSXIdentifier.exec(input)){lastIndex=JSXIdentifier.lastIndex,lastSignificantToken=match[0],yield{type:"JSXIdentifier",value:match[0]};continue}if(JSXString.lastIndex=lastIndex,match=JSXString.exec(input)){lastIndex=JSXString.lastIndex,lastSignificantToken=match[0],yield{type:"JSXString",value:match[0],closed:void 0!==match[2]};continue}break;case"JSXChildren":if(JSXText.lastIndex=lastIndex,match=JSXText.exec(input)){lastIndex=JSXText.lastIndex,lastSignificantToken=match[0],yield{type:"JSXText",value:match[0]};continue}switch(input[lastIndex]){case"<":stack.push({tag:"JSXTag"}),lastIndex++,lastSignificantToken="<",yield{type:"JSXPunctuator",value:"<"};continue;case"{":stack.push({tag:"InterpolationInJSX",nesting:braces.length}),lastIndex++,lastSignificantToken="?InterpolationInJSX",postfixIncDec=!1,yield{type:"JSXPunctuator",value:"{"};continue}}WhiteSpace.lastIndex=lastIndex,(match=WhiteSpace.exec(input))?(lastIndex=WhiteSpace.lastIndex,yield{type:"WhiteSpace",value:match[0]}):(LineTerminatorSequence.lastIndex=lastIndex,(match=LineTerminatorSequence.exec(input))?(lastIndex=LineTerminatorSequence.lastIndex,postfixIncDec=!1,KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)&&(lastSignificantToken="?NoLineTerminatorHere"),yield{type:"LineTerminatorSequence",value:match[0]}):(MultiLineComment.lastIndex=lastIndex,(match=MultiLineComment.exec(input))?(lastIndex=MultiLineComment.lastIndex,Newline.test(match[0])&&(postfixIncDec=!1,KeywordsWithNoLineTerminatorAfter.test(lastSignificantToken)&&(lastSignificantToken="?NoLineTerminatorHere")),yield{type:"MultiLineComment",value:match[0],closed:void 0!==match[1]}):(SingleLineComment.lastIndex=lastIndex,(match=SingleLineComment.exec(input))?(lastIndex=SingleLineComment.lastIndex,postfixIncDec=!1,yield{type:"SingleLineComment",value:match[0]}):(lastIndex+=(firstCodePoint=String.fromCodePoint(input.codePointAt(lastIndex))).length,lastSignificantToken=firstCodePoint,postfixIncDec=!1,yield{type:mode.tag.startsWith("JSX")?"JSXInvalid":"Invalid",value:firstCodePoint}))))}});var Identifier,JSXIdentifier,JSXPunctuator,JSXString,JSXText,KeywordsWithExpressionAfter,KeywordsWithNoLineTerminatorAfter,LineTerminatorSequence,MultiLineComment,Newline,NumericLiteral,Punctuator,RegularExpressionLiteral,SingleLineComment,StringLiteral,Template,TokensNotPrecedingObjectLiteral,TokensPrecedingExpression,WhiteSpace}();var snapshot_dist_reservedWords_strict=["implements","interface","let","package","private","protected","public","static","yield"];new Set(["break","case","catch","continue","debugger","default","do","else","finally","for","function","if","return","switch","throw","try","var","const","while","with","new","this","super","class","extends","export","import","null","true","false","in","instanceof","typeof","void","delete"]),new Set(snapshot_dist_reservedWords_strict);var dist_h=Object.entries({reset:[0,0],bold:[1,22,"[22m[1m"],dim:[2,22,"[22m[2m"],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29],black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],blackBright:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]});function dist_a(n){return String(n)}dist_a.open="",dist_a.close="",function dist_p(n=!1){let e=function snapshot_dist_C(n=!1){let e=void 0!==dist_process?dist_process:void 0,i=(null==e?void 0:e.env)||{},g=(null==e?void 0:e.argv)||[];return!("NO_COLOR"in i||g.includes("--no-color"))&&("FORCE_COLOR"in i||g.includes("--color")||"win32"===(null==e?void 0:e.platform)||n&&"dumb"!==i.TERM||"CI"in i)||"undefined"!=typeof window&&!!window.chrome}(n),g=(r,t,c=r)=>{let o=l=>{let s=String(l),b=s.indexOf(t,r.length);return~b?r+((r,t,c,o)=>{let l="",s=0;do{l+=r.substring(s,o)+c,s=o+t.length,o=r.indexOf(t,s)}while(~o);return l+r.substring(s)})(s,t,c,b)+t:r+s+t};return o.open=r,o.close=t,o},u={isColorSupported:e},d=r=>`[${r}m`;for(let[r,t]of dist_h)u[r]=e?g(d(t[0]),d(t[1]),t[2]):dist_a;return u}();const snapshot_dist_lineSplitRE=/\r?\n/;function snapshot_dist_positionToOffset(source,lineNumber,columnNumber){const lines=source.split(snapshot_dist_lineSplitRE),nl=/\r\n/.test(source)?2:1;let start=0;if(lineNumber>lines.length)return source.length;for(let i=0;i<lineNumber-1;i++)start+=lines[i].length+nl;return start+columnNumber}const startObjectRegex=/(?:toMatchInlineSnapshot|toThrowErrorMatchingInlineSnapshot)\s*\(\s*(?:\/\*[\s\S]*\*\/\s*|\/\/.*(?:[\n\r\u2028\u2029]\s*|[\t\v\f \xA0\u1680\u2000-\u200A\u202F\u205F\u3000\uFEFF]))*\{/;function prepareSnapString(snap,source,index){const lineNumber=function snapshot_dist_offsetToLineNumber(source,offset){if(offset>source.length)throw new Error(`offset is longer than source length! offset ${offset} > length ${source.length}`);const lines=source.split(snapshot_dist_lineSplitRE),nl=/\r\n/.test(source)?2:1;let counted=0,line=0;for(;line<lines.length;line++){const lineLength=lines[line].length+nl;if(counted+lineLength>=offset)break;counted+=lineLength}return line+1}(source,index),indent=source.split(snapshot_dist_lineSplitRE)[lineNumber-1].match(/^\s*/)[0]||"",indentNext=indent.includes("\t")?`${indent}\t`:`${indent}  `,lines=snap.trim().replace(/\\/g,"\\\\").split(/\n/g);return lines.length<=1?`\`${lines.join("\n").replace(/`/g,"\\`").replace(/\$\{/g,"\\${")}\``:`\`\n${lines.map((i=>i?indentNext+i:"")).join("\n").replace(/`/g,"\\`").replace(/\$\{/g,"\\${")}\n${indent}\``}const toMatchInlineName="toMatchInlineSnapshot",toThrowErrorMatchingInlineName="toThrowErrorMatchingInlineSnapshot";const startRegex=/(?:toMatchInlineSnapshot|toThrowErrorMatchingInlineSnapshot)\s*\(\s*(?:\/\*[\s\S]*\*\/\s*|\/\/.*(?:[\n\r\u2028\u2029]\s*|[\t\v\f \xA0\u1680\u2000-\u200A\u202F\u205F\u3000\uFEFF]))*[\w$]*(['"`)])/;function replaceInlineSnap(code,s,currentIndex,newSnap){const{code:codeStartingAtIndex,index}=function getCodeStartingAtIndex(code,index){const indexInline=index-toMatchInlineName.length;if(code.slice(indexInline,index)===toMatchInlineName)return{code:code.slice(indexInline),index:indexInline};const indexThrowInline=index-toThrowErrorMatchingInlineName.length;return code.slice(index-indexThrowInline,index)===toThrowErrorMatchingInlineName?{code:code.slice(index-indexThrowInline),index:index-indexThrowInline}:{code:code.slice(index),index}}(code,currentIndex),startMatch=startRegex.exec(codeStartingAtIndex),firstKeywordMatch=/toMatchInlineSnapshot|toThrowErrorMatchingInlineSnapshot/.exec(codeStartingAtIndex);if(!startMatch||startMatch.index!==(null==firstKeywordMatch?void 0:firstKeywordMatch.index))return function replaceObjectSnap(code,s,index,newSnap){let _code=code.slice(index);const startMatch=startObjectRegex.exec(_code);if(!startMatch)return!1;_code=_code.slice(startMatch.index);let callEnd=function dist_getCallLastIndex(code){let charIndex=-1,inString=null,startedBracers=0,endedBracers=0,beforeChar=null;for(;charIndex<=code.length;){beforeChar=code[charIndex],charIndex++;const char=code[charIndex];if(('"'===char||"'"===char||"`"===char)&&"\\"!==beforeChar&&(inString===char?inString=null:inString||(inString=char)),inString||("("===char&&startedBracers++,")"===char&&endedBracers++),startedBracers&&endedBracers&&startedBracers===endedBracers)return charIndex}return null}(_code);if(null===callEnd)return!1;callEnd+=index+startMatch.index;const shapeEnd=function getObjectShapeEndIndex(code,index){let startBraces=1,endBraces=0;for(;startBraces!==endBraces&&index<code.length;){const s=code[index++];"{"===s?startBraces++:"}"===s&&endBraces++}return index}(code,index+startMatch.index+startMatch[0].length),snap=`, ${prepareSnapString(newSnap,code,index)}`;return shapeEnd===callEnd?s.appendLeft(callEnd,snap):s.overwrite(shapeEnd,callEnd,snap),!0}(code,s,index,newSnap);const quote=startMatch[1],startIndex=index+startMatch.index+startMatch[0].length,snapString=prepareSnapString(newSnap,code,index);if(")"===quote)return s.appendRight(startIndex-1,snapString),!0;const endMatch=new RegExp(`(?:^|[^\\\\])${quote}`).exec(code.slice(startIndex));if(!endMatch)return!1;const endIndex=startIndex+endMatch.index+endMatch[0].length;return s.overwrite(startIndex-1,endIndex,snapString),!0}const INDENTATION_REGEX=/^([^\S\n]*)\S/m;function stripSnapshotIndentation(inlineSnapshot){const match=inlineSnapshot.match(INDENTATION_REGEX);if(!match||!match[1])return inlineSnapshot;const indentation=match[1],lines=inlineSnapshot.split(/\n/g);if(lines.length<=2)return inlineSnapshot;if(""!==lines[0].trim()||""!==lines[lines.length-1].trim())return inlineSnapshot;for(let i=1;i<lines.length-1;i++)if(""!==lines[i]){if(0!==lines[i].indexOf(indentation))return inlineSnapshot;lines[i]=lines[i].substring(indentation.length)}return lines[lines.length-1]="",inlineSnapshot=lines.join("\n")}var hasRequiredNaturalCompare,naturalCompare$1={exports:{}};var naturalCompareExports=function requireNaturalCompare(){if(hasRequiredNaturalCompare)return naturalCompare$1.exports;hasRequiredNaturalCompare=1;var naturalCompare=function(a,b){var i,codeA,codeB=1,posA=0,posB=0,alphabet=String.alphabet;function getCode(str,pos,code){if(code){for(i=pos;(code=getCode(str,i))<76&&code>65;)++i;return+str.slice(pos-1,i)}return(code=alphabet&&alphabet.indexOf(str.charAt(pos)))>-1?code+76:(code=str.charCodeAt(pos)||0)<45||code>127?code:code<46?65:code<48?code-1:code<58?code+18:code<65?code-11:code<91?code+11:code<97?code-37:code<123?code+5:code-63}if((a+="")!=(b+=""))for(;codeB;)if(codeA=getCode(a,posA++),codeB=getCode(b,posB++),codeA<76&&codeB<76&&codeA>66&&codeB>66&&(codeA=getCode(a,posA,posA),codeB=getCode(b,posB,posA=i),posB=i),codeA!=codeB)return codeA<codeB?-1:1;return 0};try{naturalCompare$1.exports=naturalCompare}catch(e){String.naturalCompare=naturalCompare}return naturalCompare$1.exports}(),naturalCompare=snapshot_dist_getDefaultExportFromCjs(naturalCompareExports);const snapshot_dist_plugin={serialize:(val,config,indentation,depth,refs,printer)=>{const name=val.getMockName(),nameString="vi.fn()"===name?"":` ${name}`;let callsString="";if(0!==val.mock.calls.length){const indentationNext=indentation+config.indent;callsString=` {${config.spacingOuter}${indentationNext}"calls": ${printer(val.mock.calls,config,indentationNext,depth,refs)}${config.min?", ":","}${config.spacingOuter}${indentationNext}"results": ${printer(val.mock.results,config,indentationNext,depth,refs)}${config.min?"":","}${config.spacingOuter}${indentation}}`}return`[MockFunction${nameString}]${callsString}`},test:val=>val&&!!val._isMockFunction},{DOMCollection:dist_DOMCollection,DOMElement:dist_DOMElement,Immutable:dist_Immutable,ReactElement:dist_ReactElement,ReactTestComponent:dist_ReactTestComponent,AsymmetricMatcher:snapshot_dist_AsymmetricMatcher}=pretty_format_dist_plugins;let dist_PLUGINS=[dist_ReactTestComponent,dist_ReactElement,dist_DOMElement,dist_DOMCollection,dist_Immutable,snapshot_dist_AsymmetricMatcher,snapshot_dist_plugin];function addSerializer(plugin){dist_PLUGINS=[plugin].concat(dist_PLUGINS)}function keyToTestName(key){if(!/ \d+$/.test(key))throw new Error("Snapshot keys must end with a number.");return key.replace(/ \d+$/,"")}function removeExtraLineBreaks(string){return string.length>2&&string.startsWith("\n")&&string.endsWith("\n")?string.slice(1,-1):string}function printBacktickString(str){return`\`${function escapeBacktickString(str){return str.replace(/`|\\|\$\{/g,"\\$&")}(str)}\``}function normalizeNewlines(string){return string.replace(/\r\n|\r/g,"\n")}function prepareExpected(expected){const startIndent=function findStartIndent(){var _a,_b;const matchObject=/^( +)\}\s+$/m.exec(expected||""),objectIndent=null==(_a=null==matchObject?void 0:matchObject[1])?void 0:_a.length;if(objectIndent)return objectIndent;const matchText=/^\n( +)"/.exec(expected||"");return(null==(_b=null==matchText?void 0:matchText[1])?void 0:_b.length)||0}();let expectedTrimmed=null==expected?void 0:expected.trim();return startIndent&&(expectedTrimmed=null==expectedTrimmed?void 0:expectedTrimmed.replace(new RegExp(`^${" ".repeat(startIndent)}`,"gm"),"").replace(/ +\}$/,"}")),expectedTrimmed}function deepMergeArray(target=[],source=[]){const mergedOutput=Array.from(target);return source.forEach(((sourceElement,index)=>{const targetElement=mergedOutput[index];Array.isArray(target[index])?mergedOutput[index]=deepMergeArray(target[index],sourceElement):dist_isObject(targetElement)?mergedOutput[index]=deepMergeSnapshot(target[index],sourceElement):mergedOutput[index]=sourceElement})),mergedOutput}function deepMergeSnapshot(target,source){if(dist_isObject(target)&&dist_isObject(source)){const mergedOutput={...target};return Object.keys(source).forEach((key=>{dist_isObject(source[key])&&!source[key].$$typeof?key in target?mergedOutput[key]=deepMergeSnapshot(target[key],source[key]):Object.assign(mergedOutput,{[key]:source[key]}):Array.isArray(source[key])?mergedOutput[key]=deepMergeArray(target[key],source[key]):Object.assign(mergedOutput,{[key]:source[key]})})),mergedOutput}return Array.isArray(target)&&Array.isArray(source)?deepMergeArray(target,source):target}class DefaultMap extends Map{constructor(defaultFn,entries){super(entries),this.defaultFn=defaultFn}get(key){return this.has(key)||this.set(key,this.defaultFn(key)),super.get(key)}}class CounterMap extends DefaultMap{constructor(){super((()=>0))}_total;valueOf(){return this._total=this.total()}increment(key){void 0!==this._total&&this._total++,this.set(key,this.get(key)+1)}total(){if(void 0!==this._total)return this._total;let total=0;for(const x of this.values())total+=x;return total}}function isSameStackPosition(x,y){return x.file===y.file&&x.column===y.column&&x.line===y.line}class SnapshotState{constructor(testFilePath,snapshotPath,snapshotContent,options){this.testFilePath=testFilePath,this.snapshotPath=snapshotPath;const{data,dirty}=function getSnapshotData(content,options){const update=options.updateSnapshot,data=Object.create(null);let snapshotContents="",dirty=!1;if(null!=content)try{snapshotContents=content,new Function("exports",snapshotContents)(data)}catch{}return"all"!==update&&"new"!==update||!snapshotContents||(dirty=!0),{data,dirty}}(snapshotContent,options);this._fileExists=null!=snapshotContent,this._initialData={...data},this._snapshotData={...data},this._dirty=dirty,this._inlineSnapshots=[],this._inlineSnapshotStacks=[],this._rawSnapshots=[],this._uncheckedKeys=new Set(Object.keys(this._snapshotData)),this.expand=options.expand||!1,this._updateSnapshot=options.updateSnapshot,this._snapshotFormat={printBasicPrototype:!1,escapeString:!1,...options.snapshotFormat},this._environment=options.snapshotEnvironment}_counters=new CounterMap;_dirty;_updateSnapshot;_snapshotData;_initialData;_inlineSnapshots;_inlineSnapshotStacks;_testIdToKeys=new DefaultMap((()=>[]));_rawSnapshots;_uncheckedKeys;_snapshotFormat;_environment;_fileExists;expand;_added=new CounterMap;_matched=new CounterMap;_unmatched=new CounterMap;_updated=new CounterMap;get added(){return this._added}set added(value){this._added._total=value}get matched(){return this._matched}set matched(value){this._matched._total=value}get unmatched(){return this._unmatched}set unmatched(value){this._unmatched._total=value}get updated(){return this._updated}set updated(value){this._updated._total=value}static async create(testFilePath,options){const snapshotPath=await options.snapshotEnvironment.resolvePath(testFilePath),content=await options.snapshotEnvironment.readSnapshotFile(snapshotPath);return new SnapshotState(testFilePath,snapshotPath,content,options)}get environment(){return this._environment}markSnapshotsAsCheckedForTest(testName){this._uncheckedKeys.forEach((uncheckedKey=>{/ \d+$| > /.test(uncheckedKey.slice(testName.length))&&this._uncheckedKeys.delete(uncheckedKey)}))}clearTest(testId){this._inlineSnapshots=this._inlineSnapshots.filter((s=>s.testId!==testId)),this._inlineSnapshotStacks=this._inlineSnapshotStacks.filter((s=>s.testId!==testId));for(const key of this._testIdToKeys.get(testId)){const name=keyToTestName(key),count=this._counters.get(name);count>0&&((key in this._snapshotData||key in this._initialData)&&(this._snapshotData[key]=this._initialData[key]),this._counters.set(name,count-1))}this._testIdToKeys.delete(testId),this.added.delete(testId),this.updated.delete(testId),this.matched.delete(testId),this.unmatched.delete(testId)}_inferInlineSnapshotStack(stacks){const promiseIndex=stacks.findIndex((i=>i.method.match(/__VITEST_(RESOLVES|REJECTS)__/)));if(-1!==promiseIndex)return stacks[promiseIndex+3];const stackIndex=stacks.findIndex((i=>i.method.includes("__INLINE_SNAPSHOT__")));return-1!==stackIndex?stacks[stackIndex+2]:null}_addSnapshot(key,receivedSerialized,options){this._dirty=!0,options.stack?this._inlineSnapshots.push({snapshot:receivedSerialized,testId:options.testId,...options.stack}):options.rawSnapshot?this._rawSnapshots.push({...options.rawSnapshot,snapshot:receivedSerialized}):this._snapshotData[key]=receivedSerialized}async save(){const hasExternalSnapshots=Object.keys(this._snapshotData).length,hasInlineSnapshots=this._inlineSnapshots.length,hasRawSnapshots=this._rawSnapshots.length,isEmpty=!hasExternalSnapshots&&!hasInlineSnapshots&&!hasRawSnapshots,status={deleted:!1,saved:!1};return!this._dirty&&!this._uncheckedKeys.size||isEmpty?!hasExternalSnapshots&&this._fileExists&&("all"===this._updateSnapshot&&(await this._environment.removeSnapshotFile(this.snapshotPath),this._fileExists=!1),status.deleted=!0):(hasExternalSnapshots&&(await async function saveSnapshotFile(environment,snapshotData,snapshotPath){const snapshots=Object.keys(snapshotData).sort(naturalCompare).map((key=>`exports[${printBacktickString(key)}] = ${printBacktickString(normalizeNewlines(snapshotData[key]))};`)),content=`${environment.getHeader()}\n\n${snapshots.join("\n\n")}\n`,oldContent=await environment.readSnapshotFile(snapshotPath);null!=oldContent&&oldContent===content||await environment.saveSnapshotFile(snapshotPath,content)}(this._environment,this._snapshotData,this.snapshotPath),this._fileExists=!0),hasInlineSnapshots&&await async function saveInlineSnapshots(environment,snapshots){const MagicString=(await __webpack_require__.e(16).then(__webpack_require__.bind(__webpack_require__,"./node_modules/magic-string/dist/magic-string.es.mjs"))).default,files=new Set(snapshots.map((i=>i.file)));await Promise.all(Array.from(files).map((async file=>{const snaps=snapshots.filter((i=>i.file===file)),code=await environment.readSnapshotFile(file),s=new MagicString(code);for(const snap of snaps)replaceInlineSnap(code,s,snapshot_dist_positionToOffset(code,snap.line,snap.column),snap.snapshot);const transformed=s.toString();transformed!==code&&await environment.saveSnapshotFile(file,transformed)})))}(this._environment,this._inlineSnapshots),hasRawSnapshots&&await async function saveRawSnapshots(environment,snapshots){await Promise.all(snapshots.map((async snap=>{snap.readonly||await environment.saveSnapshotFile(snap.file,snap.snapshot)})))}(this._environment,this._rawSnapshots),status.saved=!0),status}getUncheckedCount(){return this._uncheckedKeys.size||0}getUncheckedKeys(){return Array.from(this._uncheckedKeys)}removeUncheckedKeys(){"all"===this._updateSnapshot&&this._uncheckedKeys.size&&(this._dirty=!0,this._uncheckedKeys.forEach((key=>delete this._snapshotData[key])),this._uncheckedKeys.clear())}match({testId,testName,received,key,inlineSnapshot,isInline,error,rawSnapshot}){var _a,_b;this._counters.increment(testName);const count=this._counters.get(testName);key||(key=function testNameToKey(testName,count){return`${testName} ${count}`}(testName,count)),this._testIdToKeys.get(testId).push(key),isInline&&void 0!==this._snapshotData[key]||this._uncheckedKeys.delete(key);let receivedSerialized=rawSnapshot&&"string"==typeof received?received:function snapshot_dist_serialize(val,indent=2,formatOverrides={}){return normalizeNewlines(pretty_format_dist_format(val,{escapeRegex:!0,indent,plugins:dist_PLUGINS,printFunctionName:!1,...formatOverrides}))}(received,void 0,this._snapshotFormat);rawSnapshot||(receivedSerialized=function addExtraLineBreaks(string){return string.includes("\n")?`\n${string}\n`:string}(receivedSerialized)),rawSnapshot&&rawSnapshot.content&&rawSnapshot.content.match(/\r\n/)&&!receivedSerialized.match(/\r\n/)&&(rawSnapshot.content=normalizeNewlines(rawSnapshot.content));const expected=isInline?inlineSnapshot:rawSnapshot?rawSnapshot.content:this._snapshotData[key],expectedTrimmed=rawSnapshot?expected:prepareExpected(expected),pass=expectedTrimmed===(rawSnapshot?receivedSerialized:prepareExpected(receivedSerialized)),hasSnapshot=void 0!==expected,snapshotIsPersisted=isInline||this._fileExists||rawSnapshot&&null!=rawSnapshot.content;let stack;if(!pass||isInline||rawSnapshot||(this._snapshotData[key]=receivedSerialized),isInline){const stacks=function dist_parseErrorStacktrace(e,options={}){if(!e||function dist_isPrimitive(value){return null===value||"function"!=typeof value&&"object"!=typeof value}(e))return[];if(e.stacks)return e.stacks;let stackFrames=dist_parseStacktrace(e.stack||e.stackStr||"",options);return options.frameFilter&&(stackFrames=stackFrames.filter((f=>!1!==options.frameFilter(e,f)))),e.stacks=stackFrames,stackFrames}(error||new Error("snapshot"),{ignoreStackEntries:[]}),_stack=this._inferInlineSnapshotStack(stacks);if(!_stack)throw new Error(`@vitest/snapshot: Couldn't infer stack frame for inline snapshot.\n${JSON.stringify(stacks)}`);stack=(null==(_b=(_a=this.environment).processStackTrace)?void 0:_b.call(_a,_stack))||_stack,stack.column--;const snapshotsWithSameStack=this._inlineSnapshotStacks.filter((s=>isSameStackPosition(s,stack)));if(snapshotsWithSameStack.length>0){this._inlineSnapshots=this._inlineSnapshots.filter((s=>!isSameStackPosition(s,stack)));const differentSnapshot=snapshotsWithSameStack.find((s=>s.snapshot!==receivedSerialized));if(differentSnapshot)throw Object.assign(new Error("toMatchInlineSnapshot with different snapshots cannot be called at the same location"),{actual:receivedSerialized,expected:differentSnapshot.snapshot})}this._inlineSnapshotStacks.push({...stack,testId,snapshot:receivedSerialized})}return hasSnapshot&&"all"===this._updateSnapshot||!(hasSnapshot&&snapshotIsPersisted||"new"!==this._updateSnapshot&&"all"!==this._updateSnapshot)?("all"===this._updateSnapshot?pass?this.matched.increment(testId):(hasSnapshot?this.updated.increment(testId):this.added.increment(testId),this._addSnapshot(key,receivedSerialized,{stack,testId,rawSnapshot})):(this._addSnapshot(key,receivedSerialized,{stack,testId,rawSnapshot}),this.added.increment(testId)),{actual:"",count,expected:"",key,pass:!0}):pass?(this.matched.increment(testId),{actual:"",count,expected:"",key,pass:!0}):(this.unmatched.increment(testId),{actual:rawSnapshot?receivedSerialized:removeExtraLineBreaks(receivedSerialized),count,expected:void 0!==expectedTrimmed?rawSnapshot?expectedTrimmed:removeExtraLineBreaks(expectedTrimmed):void 0,key,pass:!1})}async pack(){const snapshot={filepath:this.testFilePath,added:0,fileDeleted:!1,matched:0,unchecked:0,uncheckedKeys:[],unmatched:0,updated:0},uncheckedCount=this.getUncheckedCount(),uncheckedKeys=this.getUncheckedKeys();uncheckedCount&&this.removeUncheckedKeys();const status=await this.save();return snapshot.fileDeleted=status.deleted,snapshot.added=this.added.total(),snapshot.matched=this.matched.total(),snapshot.unmatched=this.unmatched.total(),snapshot.updated=this.updated.total(),snapshot.unchecked=status.deleted?0:uncheckedCount,snapshot.uncheckedKeys=Array.from(uncheckedKeys),snapshot}}function createMismatchError(message,expand,actual,expected){const error=new Error(message);return Object.defineProperty(error,"actual",{value:actual,enumerable:!0,configurable:!0,writable:!0}),Object.defineProperty(error,"expected",{value:expected,enumerable:!0,configurable:!0,writable:!0}),Object.defineProperty(error,"diffOptions",{value:{expand}}),error}class SnapshotClient{constructor(options={}){this.options=options}snapshotStateMap=new Map;async setup(filepath,options){this.snapshotStateMap.has(filepath)||this.snapshotStateMap.set(filepath,await SnapshotState.create(filepath,options))}async finish(filepath){const state=this.getSnapshotState(filepath),result=await state.pack();return this.snapshotStateMap.delete(filepath),result}skipTest(filepath,testName){this.getSnapshotState(filepath).markSnapshotsAsCheckedForTest(testName)}clearTest(filepath,testId){this.getSnapshotState(filepath).clearTest(testId)}getSnapshotState(filepath){const state=this.snapshotStateMap.get(filepath);if(!state)throw new Error(`The snapshot state for '${filepath}' is not found. Did you call 'SnapshotClient.setup()'?`);return state}assert(options){var _a,_b;const{filepath,name,testId=name,message,isInline=!1,properties,inlineSnapshot,error,errorMessage,rawSnapshot}=options;let{received}=options;if(!filepath)throw new Error("Snapshot cannot be used outside of test");const snapshotState=this.getSnapshotState(filepath);if("object"==typeof properties){if("object"!=typeof received||!received)throw new Error("Received value must be an object when the matcher has properties");try{if(!((null==(_b=(_a=this.options).isEqual)?void 0:_b.call(_a,received,properties))??!1))throw createMismatchError("Snapshot properties mismatched",snapshotState.expand,received,properties);received=deepMergeSnapshot(received,properties)}catch(err){throw err.message=errorMessage||"Snapshot mismatched",err}}const testName=[name,...message?[message]:[]].join(" > "),{actual,expected,key,pass}=snapshotState.match({testId,testName,received,isInline,error,inlineSnapshot,rawSnapshot});if(!pass)throw createMismatchError(`Snapshot \`${key||"unknown"}\` mismatched`,snapshotState.expand,rawSnapshot?actual:null==actual?void 0:actual.trim(),rawSnapshot?expected:null==expected?void 0:expected.trim())}async assertRaw(options){if(!options.rawSnapshot)throw new Error("Raw snapshot is required");const{filepath,rawSnapshot}=options;if(null==rawSnapshot.content){if(!filepath)throw new Error("Snapshot cannot be used outside of test");const snapshotState=this.getSnapshotState(filepath);options.filepath||(options.filepath=filepath),rawSnapshot.file=await snapshotState.environment.resolveRawPath(filepath,rawSnapshot.file),rawSnapshot.content=await snapshotState.environment.readSnapshotFile(rawSnapshot.file)??void 0}return this.assert(options)}clear(){this.snapshotStateMap.clear()}}var dist_source_map_process=__webpack_require__("./node_modules/process/browser.js");",".charCodeAt(0);const source_map_chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",source_map_intToChar=new Uint8Array(64),source_map_charToInt=new Uint8Array(128);for(let i=0;i<64;i++){const c=source_map_chars.charCodeAt(i);source_map_intToChar[i]=c,source_map_charToInt[c]=i}var source_map_UrlType;!function(UrlType){UrlType[UrlType.Empty=1]="Empty",UrlType[UrlType.Hash=2]="Hash",UrlType[UrlType.Query=3]="Query",UrlType[UrlType.RelativePath=4]="RelativePath",UrlType[UrlType.AbsolutePath=5]="AbsolutePath",UrlType[UrlType.SchemeRelative=6]="SchemeRelative",UrlType[UrlType.Absolute=7]="Absolute"}(source_map_UrlType||(source_map_UrlType={}));const source_map_DRIVE_LETTER_START_RE=/^[A-Za-z]:\//;const source_map_IS_ABSOLUTE_RE=/^[/\\](?![/\\])|^[/\\]{2}(?!\.)|^[A-Za-z]:[/\\]/;const source_map_resolve=function(...arguments_){let resolvedPath="",resolvedAbsolute=!1;for(let index=(arguments_=arguments_.map((argument=>function source_map_normalizeWindowsPath(input=""){return input?input.replace(/\\/g,"/").replace(source_map_DRIVE_LETTER_START_RE,(r=>r.toUpperCase())):input}(argument)))).length-1;index>=-1&&!resolvedAbsolute;index--){const path=index>=0?arguments_[index]:void 0!==dist_source_map_process&&"function"==typeof dist_source_map_process.cwd?dist_source_map_process.cwd().replace(/\\/g,"/"):"/";path&&0!==path.length&&(resolvedPath=`${path}/${resolvedPath}`,resolvedAbsolute=source_map_isAbsolute(path))}return resolvedPath=function source_map_normalizeString(path,allowAboveRoot){let res="",lastSegmentLength=0,lastSlash=-1,dots=0,char=null;for(let index=0;index<=path.length;++index){if(index<path.length)char=path[index];else{if("/"===char)break;char="/"}if("/"===char){if(lastSlash===index-1||1===dots);else if(2===dots){if(res.length<2||2!==lastSegmentLength||"."!==res[res.length-1]||"."!==res[res.length-2]){if(res.length>2){const lastSlashIndex=res.lastIndexOf("/");-1===lastSlashIndex?(res="",lastSegmentLength=0):(res=res.slice(0,lastSlashIndex),lastSegmentLength=res.length-1-res.lastIndexOf("/")),lastSlash=index,dots=0;continue}if(res.length>0){res="",lastSegmentLength=0,lastSlash=index,dots=0;continue}}allowAboveRoot&&(res+=res.length>0?"/..":"..",lastSegmentLength=2)}else res.length>0?res+=`/${path.slice(lastSlash+1,index)}`:res=path.slice(lastSlash+1,index),lastSegmentLength=index-lastSlash-1;lastSlash=index,dots=0}else"."===char&&-1!==dots?++dots:dots=-1}return res}(resolvedPath,!resolvedAbsolute),resolvedAbsolute&&!source_map_isAbsolute(resolvedPath)?`/${resolvedPath}`:resolvedPath.length>0?resolvedPath:"."};const source_map_isAbsolute=function(p){return source_map_IS_ABSOLUTE_RE.test(p)},source_map_CHROME_IE_STACK_REGEXP=/^\s*at .*(?:\S:\d+|\(native\))/m,source_map_SAFARI_NATIVE_CODE_REGEXP=/^(?:eval@)?(?:\[native code\])?$/;function source_map_extractLocation(urlLike){if(!urlLike.includes(":"))return[urlLike];const parts=/(.+?)(?::(\d+))?(?::(\d+))?$/.exec(urlLike.replace(/^\(|\)$/g,""));if(!parts)return[urlLike];let url=parts[1];if(url.startsWith("async ")&&(url=url.slice(6)),url.startsWith("http:")||url.startsWith("https:")){const urlObj=new URL(url);urlObj.searchParams.delete("import"),urlObj.searchParams.delete("browserv"),url=urlObj.pathname+urlObj.hash+urlObj.search}if(url.startsWith("/@fs/")){const isWindows=/^\/@fs\/[a-zA-Z]:\//.test(url);url=url.slice(isWindows?5:4)}return[url,parts[2]||void 0,parts[3]||void 0]}function source_map_parseSingleFFOrSafariStack(raw){let line=raw.trim();if(source_map_SAFARI_NATIVE_CODE_REGEXP.test(line))return null;if(line.includes(" > eval")&&(line=line.replace(/ line (\d+)(?: > eval line \d+)* > eval:\d+:\d+/g,":$1")),!line.includes("@")&&!line.includes(":"))return null;const functionNameRegex=/((.*".+"[^@]*)?[^@]*)(@)/,matches=line.match(functionNameRegex),functionName=matches&&matches[1]?matches[1]:void 0,[url,lineNumber,columnNumber]=source_map_extractLocation(line.replace(functionNameRegex,""));return url&&lineNumber&&columnNumber?{file:url,method:functionName||"",line:Number.parseInt(lineNumber),column:Number.parseInt(columnNumber)}:null}function source_map_parseSingleV8Stack(raw){let line=raw.trim();if(!source_map_CHROME_IE_STACK_REGEXP.test(line))return null;line.includes("(eval ")&&(line=line.replace(/eval code/g,"eval").replace(/(\(eval at [^()]*)|(,.*$)/g,""));let sanitizedLine=line.replace(/^\s+/,"").replace(/\(eval code/g,"(").replace(/^.*?\s+/,"");const location=sanitizedLine.match(/ (\(.+\)$)/);sanitizedLine=location?sanitizedLine.replace(location[0],""):sanitizedLine;const[url,lineNumber,columnNumber]=source_map_extractLocation(location?location[1]:sanitizedLine);let method=location&&sanitizedLine||"",file=url&&["eval","<anonymous>"].includes(url)?void 0:url;return file&&lineNumber&&columnNumber?(method.startsWith("async ")&&(method=method.slice(6)),file.startsWith("file://")&&(file=file.slice(7)),file=file.startsWith("node:")||file.startsWith("internal:")?file:source_map_resolve(file),method&&(method=method.replace(/__vite_ssr_import_\d+__\./g,"")),{method,file,line:Number.parseInt(lineNumber),column:Number.parseInt(columnNumber)}):null}const date_W2xKR2qe_RealDate=Date;let date_W2xKR2qe_now=null;class MockDate extends date_W2xKR2qe_RealDate{constructor(y,m,d,h,M,s,ms){let date;switch(super(),arguments.length){case 0:date=null!==date_W2xKR2qe_now?new date_W2xKR2qe_RealDate(date_W2xKR2qe_now.valueOf()):new date_W2xKR2qe_RealDate;break;case 1:date=new date_W2xKR2qe_RealDate(y);break;default:date=new date_W2xKR2qe_RealDate(y,m,d=void 0===d?1:d,h=h||0,M=M||0,s=s||0,ms=ms||0)}return Object.setPrototypeOf(date,MockDate.prototype),date}}MockDate.UTC=date_W2xKR2qe_RealDate.UTC,MockDate.now=function(){return(new MockDate).valueOf()},MockDate.parse=function(dateString){return date_W2xKR2qe_RealDate.parse(dateString)},MockDate.toString=function(){return date_W2xKR2qe_RealDate.toString()};var vi_nSCvwQ7l_console=__webpack_require__("./node_modules/console-browserify/index.js"),vi_nSCvwQ7l_process=__webpack_require__("./node_modules/process/browser.js");const unsupported=["matchSnapshot","toMatchSnapshot","toMatchInlineSnapshot","toThrowErrorMatchingSnapshot","toThrowErrorMatchingInlineSnapshot","throws","Throw","throw","toThrow","toThrowError"];function copyStackTrace$1(target,source){return void 0!==source.stack&&(target.stack=source.stack.replace(source.message,target.message)),target}var hasRequiredChaiSubset,chaiSubset$1={exports:{}},chaiSubset=chaiSubset$1.exports;var chaiSubsetExports=function requireChaiSubset(){return hasRequiredChaiSubset||(hasRequiredChaiSubset=1,module=chaiSubset$1,function(){!function(chaiSubset){module.exports=chaiSubset}((function(chai,utils){var Assertion=chai.Assertion,assertionPrototype=Assertion.prototype;function compare(expected,actual){if(expected===actual)return!0;if(typeof actual!=typeof expected)return!1;if("object"!=typeof expected||null===expected)return expected===actual;if(expected&&!actual)return!1;if(Array.isArray(expected)){if("number"!=typeof actual.length)return!1;var aa=Array.prototype.slice.call(actual);return expected.every((function(exp){return aa.some((function(act){return compare(exp,act)}))}))}return expected instanceof Date?actual instanceof Date&&expected.getTime()===actual.getTime():Object.keys(expected).every((function(key){var eo=expected[key],ao=actual[key];return"object"==typeof eo&&null!==eo&&null!==ao?compare(eo,ao):"function"==typeof eo?eo(ao):ao===eo}))}Assertion.addMethod("containSubset",(function(expected){var actual=utils.flag(this,"object"),showDiff=chai.config.showDiff;assertionPrototype.assert.call(this,compare(expected,actual),"expected #{act} to contain subset #{exp}","expected #{act} to not contain subset #{exp}",expected,actual,showDiff)})),chai.assert.containSubset=function(val,exp,msg){new chai.Assertion(val,msg).to.be.containSubset(exp)}}))}.call(chaiSubset)),chaiSubset$1.exports;var module}(),Subset=_commonjsHelpers_BFTU3MAI_getDefaultExportFromCjs(chaiSubsetExports);let _client;function getSnapshotClient(){return _client||(_client=new SnapshotClient({isEqual:(received,expected)=>equals(received,expected,[iterableEquality,subsetEquality])})),_client}function getError(expected,promise){if("function"!=typeof expected){if(!promise)throw new Error("expected must be a function, received "+typeof expected);return expected}try{expected()}catch(e){return e}throw new Error("snapshot function didn't throw")}function getTestNames(test){return{filepath:test.file.filepath,name:getNames(test).slice(1).join(" > "),testId:test.id}}use(((chai,utils)=>{utils.addMethod(chai.expect,"extend",((expect,expects)=>{use(JestExtendPlugin(chai,expect,expects))}))})),use(((chai,utils)=>{const{AssertionError}=chai,customTesters=getCustomEqualityTesters();function def(name,fn){const addMethod=n=>{const softWrapper=wrapAssertion(utils,n,fn);utils.addMethod(chai.Assertion.prototype,n,softWrapper),utils.addMethod(globalThis[JEST_MATCHERS_OBJECT].matchers,n,softWrapper)};Array.isArray(name)?name.forEach((n=>addMethod(n))):addMethod(name)}function getSpy(assertion){return function assertIsMock(assertion){if(!isMockFunction(assertion._obj))throw new TypeError(`${utils.inspect(assertion._obj)} is not a spy or a call to a spy!`)}(assertion),assertion._obj}function equalsArgumentArray(a,b){return a.length===b.length&&a.every(((aItem,i)=>equals(aItem,b[i],[...customTesters,iterableEquality])))}function isSpyCalledBeforeAnotherSpy(beforeSpy,afterSpy,failIfNoFirstInvocation){const beforeInvocationCallOrder=beforeSpy.mock.invocationCallOrder,afterInvocationCallOrder=afterSpy.mock.invocationCallOrder;return 0===beforeInvocationCallOrder.length?!failIfNoFirstInvocation:0!==afterInvocationCallOrder.length&&beforeInvocationCallOrder[0]<afterInvocationCallOrder[0]}["throw","throws","Throw"].forEach((m=>{utils.overwriteMethod(chai.Assertion.prototype,m,(_super=>function(...args){const promise=utils.flag(this,"promise"),object=utils.flag(this,"object"),isNot=utils.flag(this,"negate");if("rejects"===promise)utils.flag(this,"object",(()=>{throw object}));else if("resolves"===promise&&"function"!=typeof object){if(isNot)return;{const message=utils.flag(this,"message")||"expected promise to throw an error, but it didn't";throw new AssertionError(message,{showDiff:!1},utils.flag(this,"ssfi"))}}_super.apply(this,args)}))})),def("withTest",(function(test){return utils.flag(this,"vitest-test",test),this})),def("toEqual",(function(expected){const actual=utils.flag(this,"object"),equal=equals(actual,expected,[...customTesters,iterableEquality]);return this.assert(equal,"expected #{this} to deeply equal #{exp}","expected #{this} to not deeply equal #{exp}",expected,actual)})),def("toStrictEqual",(function(expected){const obj=utils.flag(this,"object"),equal=equals(obj,expected,[...customTesters,iterableEquality,typeEquality,sparseArrayEquality,arrayBufferEquality],!0);return this.assert(equal,"expected #{this} to strictly equal #{exp}","expected #{this} to not strictly equal #{exp}",expected,obj)})),def("toBe",(function(expected){const actual=this._obj,pass=Object.is(actual,expected);let deepEqualityName="";if(!pass){if(equals(actual,expected,[...customTesters,iterableEquality,typeEquality,sparseArrayEquality,arrayBufferEquality],!0))deepEqualityName="toStrictEqual";else{equals(actual,expected,[...customTesters,iterableEquality])&&(deepEqualityName="toEqual")}}return this.assert(pass,function generateToBeMessage(deepEqualityName,expected="#{this}",actual="#{exp}"){const toBeMessage=`expected ${expected} to be ${actual} // Object.is equality`;return["toStrictEqual","toEqual"].includes(deepEqualityName)?`${toBeMessage}\n\nIf it should pass with deep equality, replace "toBe" with "${deepEqualityName}"\n\nExpected: ${expected}\nReceived: serializes to the same string\n`:toBeMessage}(deepEqualityName),"expected #{this} not to be #{exp} // Object.is equality",expected,actual)})),def("toMatchObject",(function(expected){const actual=this._obj,pass=equals(actual,expected,[...customTesters,iterableEquality,subsetEquality]),isNot=utils.flag(this,"negate"),{subset:actualSubset,stripped}=function getObjectSubset(object,subset,customTesters){let stripped=0;const getObjectSubsetWithContext=(seenReferences=new WeakMap)=>(object2,subset2)=>{if(Array.isArray(object2)){if(Array.isArray(subset2)&&subset2.length===object2.length)return subset2.map(((sub,i)=>getObjectSubsetWithContext(seenReferences)(object2[i],sub)))}else{if(object2 instanceof Date)return object2;if(helpers_isObject(object2)&&helpers_isObject(subset2)){if(equals(object2,subset2,[...customTesters,iterableEquality,subsetEquality]))return subset2;const trimmed={};seenReferences.set(object2,trimmed),"function"==typeof object2.constructor&&"string"==typeof object2.constructor.name&&Object.defineProperty(trimmed,"constructor",{enumerable:!1,value:object2.constructor});for(const key of getObjectKeys(object2))hasPropertyInObject(subset2,key)?trimmed[key]=seenReferences.has(object2[key])?seenReferences.get(object2[key]):getObjectSubsetWithContext(seenReferences)(object2[key],subset2[key]):seenReferences.has(object2[key])||(stripped+=1,helpers_isObject(object2[key])&&(stripped+=getObjectKeys(object2[key]).length),getObjectSubsetWithContext(seenReferences)(object2[key],subset2[key]));if(getObjectKeys(trimmed).length>0)return trimmed}}return object2};return{subset:getObjectSubsetWithContext()(object,subset),stripped}}(actual,expected,customTesters);if(pass&&isNot||!pass&&!isNot){const msg=utils.getMessage(this,[pass,"expected #{this} to match object #{exp}","expected #{this} to not match object #{exp}",expected,actualSubset,!1]);throw new AssertionError(0===stripped?msg:`${msg}\n(${stripped} matching ${1===stripped?"property":"properties"} omitted from actual)`,{showDiff:!0,expected,actual:actualSubset})}})),def("toMatch",(function(expected){const actual=this._obj;if("string"!=typeof actual)throw new TypeError(".toMatch() expects to receive a string, but got "+typeof actual);return this.assert("string"==typeof expected?actual.includes(expected):actual.match(expected),"expected #{this} to match #{exp}","expected #{this} not to match #{exp}",expected,actual)})),def("toContain",(function(item){const actual=this._obj;if("undefined"!=typeof Node&&actual instanceof Node){if(!(item instanceof Node))throw new TypeError("toContain() expected a DOM node as the argument, but got "+typeof item);return this.assert(actual.contains(item),"expected #{this} to contain element #{exp}","expected #{this} not to contain element #{exp}",item,actual)}if("undefined"!=typeof DOMTokenList&&actual instanceof DOMTokenList){helpers_assertTypes(item,"class name",["string"]);const expectedClassList=utils.flag(this,"negate")?actual.value.replace(item,"").trim():`${actual.value} ${item}`;return this.assert(actual.contains(item),`expected "${actual.value}" to contain "${item}"`,`expected "${actual.value}" not to contain "${item}"`,expectedClassList,actual.value)}return"string"==typeof actual&&"string"==typeof item?this.assert(actual.includes(item),"expected #{this} to contain #{exp}","expected #{this} not to contain #{exp}",item,actual):(null!=actual&&"string"!=typeof actual&&utils.flag(this,"object",Array.from(actual)),this.contain(item))})),def("toContainEqual",(function(expected){const obj=utils.flag(this,"object"),index=Array.from(obj).findIndex((item=>equals(item,expected,customTesters)));this.assert(-1!==index,"expected #{this} to deep equally contain #{exp}","expected #{this} to not deep equally contain #{exp}",expected)})),def("toBeTruthy",(function(){const obj=utils.flag(this,"object");this.assert(Boolean(obj),"expected #{this} to be truthy","expected #{this} to not be truthy",!0,obj)})),def("toBeFalsy",(function(){const obj=utils.flag(this,"object");this.assert(!obj,"expected #{this} to be falsy","expected #{this} to not be falsy",!1,obj)})),def("toBeGreaterThan",(function(expected){const actual=this._obj;return helpers_assertTypes(actual,"actual",["number","bigint"]),helpers_assertTypes(expected,"expected",["number","bigint"]),this.assert(actual>expected,`expected ${actual} to be greater than ${expected}`,`expected ${actual} to be not greater than ${expected}`,expected,actual,!1)})),def("toBeGreaterThanOrEqual",(function(expected){const actual=this._obj;return helpers_assertTypes(actual,"actual",["number","bigint"]),helpers_assertTypes(expected,"expected",["number","bigint"]),this.assert(actual>=expected,`expected ${actual} to be greater than or equal to ${expected}`,`expected ${actual} to be not greater than or equal to ${expected}`,expected,actual,!1)})),def("toBeLessThan",(function(expected){const actual=this._obj;return helpers_assertTypes(actual,"actual",["number","bigint"]),helpers_assertTypes(expected,"expected",["number","bigint"]),this.assert(actual<expected,`expected ${actual} to be less than ${expected}`,`expected ${actual} to be not less than ${expected}`,expected,actual,!1)})),def("toBeLessThanOrEqual",(function(expected){const actual=this._obj;return helpers_assertTypes(actual,"actual",["number","bigint"]),helpers_assertTypes(expected,"expected",["number","bigint"]),this.assert(actual<=expected,`expected ${actual} to be less than or equal to ${expected}`,`expected ${actual} to be not less than or equal to ${expected}`,expected,actual,!1)})),def("toBeNaN",(function(){const obj=utils.flag(this,"object");this.assert(Number.isNaN(obj),"expected #{this} to be NaN","expected #{this} not to be NaN",Number.NaN,obj)})),def("toBeUndefined",(function(){const obj=utils.flag(this,"object");this.assert(void 0===obj,"expected #{this} to be undefined","expected #{this} not to be undefined",void 0,obj)})),def("toBeNull",(function(){const obj=utils.flag(this,"object");this.assert(null===obj,"expected #{this} to be null","expected #{this} not to be null",null,obj)})),def("toBeDefined",(function(){const obj=utils.flag(this,"object");this.assert(void 0!==obj,"expected #{this} to be defined","expected #{this} to be undefined",obj)})),def("toBeTypeOf",(function(expected){const actual=typeof this._obj,equal=expected===actual;return this.assert(equal,"expected #{this} to be type of #{exp}","expected #{this} not to be type of #{exp}",expected,actual)})),def("toBeInstanceOf",(function(obj){return this.instanceOf(obj)})),def("toHaveLength",(function(length){return this.have.length(length)})),def("toHaveProperty",(function(...args){Array.isArray(args[0])&&(args[0]=args[0].map((key=>String(key).replace(/([.[\]])/g,"\\$1"))).join("."));const actual=this._obj,[propertyName,expected]=args,{value,exists}=Object.prototype.hasOwnProperty.call(actual,propertyName)?{value:actual[propertyName],exists:!0}:utils.getPathInfo(actual,propertyName),pass=exists&&(1===args.length||equals(expected,value,customTesters)),valueString=1===args.length?"":` with value ${utils.objDisplay(expected)}`;return this.assert(pass,`expected #{this} to have property "${propertyName}"${valueString}`,`expected #{this} to not have property "${propertyName}"${valueString}`,expected,exists?value:void 0)})),def("toBeCloseTo",(function(received,precision=2){const expected=this._obj;let pass=!1,expectedDiff=0,receivedDiff=0;return received===Number.POSITIVE_INFINITY&&expected===Number.POSITIVE_INFINITY||received===Number.NEGATIVE_INFINITY&&expected===Number.NEGATIVE_INFINITY?pass=!0:(expectedDiff=10**-precision/2,receivedDiff=Math.abs(expected-received),pass=receivedDiff<expectedDiff),this.assert(pass,`expected #{this} to be close to #{exp}, received difference is ${receivedDiff}, but expected ${expectedDiff}`,`expected #{this} to not be close to #{exp}, received difference is ${receivedDiff}, but expected ${expectedDiff}`,received,expected,!1)})),def(["toHaveBeenCalledTimes","toBeCalledTimes"],(function(number){const spy=getSpy(this),spyName=spy.getMockName(),callCount=spy.mock.calls.length;return this.assert(callCount===number,`expected "${spyName}" to be called #{exp} times, but got ${callCount} times`,`expected "${spyName}" to not be called #{exp} times`,number,callCount,!1)})),def("toHaveBeenCalledOnce",(function(){const spy=getSpy(this),spyName=spy.getMockName(),callCount=spy.mock.calls.length;return this.assert(1===callCount,`expected "${spyName}" to be called once, but got ${callCount} times`,`expected "${spyName}" to not be called once`,1,callCount,!1)})),def(["toHaveBeenCalled","toBeCalled"],(function(){const spy=getSpy(this),spyName=spy.getMockName(),callCount=spy.mock.calls.length,called=callCount>0,isNot=utils.flag(this,"negate");let msg=utils.getMessage(this,[called,`expected "${spyName}" to be called at least once`,`expected "${spyName}" to not be called at all, but actually been called ${callCount} times`,!0,called]);if(called&&isNot&&(msg=formatCalls(spy,msg)),called&&isNot||!called&&!isNot)throw new AssertionError(msg)})),def(["toHaveBeenCalledWith","toBeCalledWith"],(function(...args){const spy=getSpy(this),spyName=spy.getMockName(),pass=spy.mock.calls.some((callArg=>equalsArgumentArray(callArg,args))),isNot=utils.flag(this,"negate"),msg=utils.getMessage(this,[pass,`expected "${spyName}" to be called with arguments: #{exp}`,`expected "${spyName}" to not be called with arguments: #{exp}`,args]);if(pass&&isNot||!pass&&!isNot)throw new AssertionError(formatCalls(spy,msg,args))})),def("toHaveBeenCalledExactlyOnceWith",(function(...args){const spy=getSpy(this),spyName=spy.getMockName(),callCount=spy.mock.calls.length,pass=spy.mock.calls.some((callArg=>equalsArgumentArray(callArg,args)))&&1===callCount,isNot=utils.flag(this,"negate"),msg=utils.getMessage(this,[pass,`expected "${spyName}" to be called once with arguments: #{exp}`,`expected "${spyName}" to not be called once with arguments: #{exp}`,args]);if(pass&&isNot||!pass&&!isNot)throw new AssertionError(formatCalls(spy,msg,args))})),def(["toHaveBeenNthCalledWith","nthCalledWith"],(function(times,...args){const spy=getSpy(this),spyName=spy.getMockName(),nthCall=spy.mock.calls[times-1],callCount=spy.mock.calls.length,isCalled=times<=callCount;this.assert(nthCall&&equalsArgumentArray(nthCall,args),`expected ${ordinalOf(times)} "${spyName}" call to have been called with #{exp}${isCalled?"":`, but called only ${callCount} times`}`,`expected ${ordinalOf(times)} "${spyName}" call to not have been called with #{exp}`,args,nthCall,isCalled)})),def(["toHaveBeenLastCalledWith","lastCalledWith"],(function(...args){const spy=getSpy(this),spyName=spy.getMockName(),lastCall=spy.mock.calls[spy.mock.calls.length-1];this.assert(lastCall&&equalsArgumentArray(lastCall,args),`expected last "${spyName}" call to have been called with #{exp}`,`expected last "${spyName}" call to not have been called with #{exp}`,args,lastCall)})),def(["toHaveBeenCalledBefore"],(function(resultSpy,failIfNoFirstInvocation=!0){const expectSpy=getSpy(this);if(!isMockFunction(resultSpy))throw new TypeError(`${utils.inspect(resultSpy)} is not a spy or a call to a spy`);this.assert(isSpyCalledBeforeAnotherSpy(expectSpy,resultSpy,failIfNoFirstInvocation),`expected "${expectSpy.getMockName()}" to have been called before "${resultSpy.getMockName()}"`,`expected "${expectSpy.getMockName()}" to not have been called before "${resultSpy.getMockName()}"`,resultSpy,expectSpy)})),def(["toHaveBeenCalledAfter"],(function(resultSpy,failIfNoFirstInvocation=!0){const expectSpy=getSpy(this);if(!isMockFunction(resultSpy))throw new TypeError(`${utils.inspect(resultSpy)} is not a spy or a call to a spy`);this.assert(isSpyCalledBeforeAnotherSpy(resultSpy,expectSpy,failIfNoFirstInvocation),`expected "${expectSpy.getMockName()}" to have been called after "${resultSpy.getMockName()}"`,`expected "${expectSpy.getMockName()}" to not have been called after "${resultSpy.getMockName()}"`,resultSpy,expectSpy)})),def(["toThrow","toThrowError"],(function(expected){if("string"==typeof expected||void 0===expected||expected instanceof RegExp)return this.throws(""===expected?/^$/:expected);const obj=this._obj,promise=utils.flag(this,"promise"),isNot=utils.flag(this,"negate");let thrown=null;if("rejects"===promise)thrown=obj;else{if("resolves"===promise&&"function"!=typeof obj){if(isNot)return;{const message=utils.flag(this,"message")||"expected promise to throw an error, but it didn't";throw new AssertionError(message,{showDiff:!1},utils.flag(this,"ssfi"))}}{let isThrow=!1;try{obj()}catch(err){isThrow=!0,thrown=err}if(!isThrow&&!isNot){const message=utils.flag(this,"message")||"expected function to throw an error, but it didn't";throw new AssertionError(message,{showDiff:!1},utils.flag(this,"ssfi"))}}}if("function"==typeof expected){const name=expected.name||expected.prototype.constructor.name;return this.assert(thrown&&thrown instanceof expected,`expected error to be instance of ${name}`,`expected error not to be instance of ${name}`,expected,thrown)}if(expected instanceof Error){const equal=equals(thrown,expected,[...customTesters,iterableEquality]);return this.assert(equal,"expected a thrown error to be #{exp}","expected a thrown error not to be #{exp}",expected,thrown)}if("object"==typeof expected&&"asymmetricMatch"in expected&&"function"==typeof expected.asymmetricMatch){const matcher=expected;return this.assert(thrown&&matcher.asymmetricMatch(thrown),"expected error to match asymmetric matcher","expected error not to match asymmetric matcher",matcher,thrown)}throw new Error(`"toThrow" expects string, RegExp, function, Error instance or asymmetric matcher, got "${typeof expected}"`)})),[{name:"toHaveResolved",condition:spy=>spy.mock.settledResults.length>0&&spy.mock.settledResults.some((({type})=>"fulfilled"===type)),action:"resolved"},{name:["toHaveReturned","toReturn"],condition:spy=>spy.mock.calls.length>0&&spy.mock.results.some((({type})=>"throw"!==type)),action:"called"}].forEach((({name,condition,action})=>{def(name,(function(){const spy=getSpy(this),spyName=spy.getMockName(),pass=condition(spy);this.assert(pass,`expected "${spyName}" to be successfully ${action} at least once`,`expected "${spyName}" to not be successfully ${action}`,pass,!pass,!1)}))})),[{name:"toHaveResolvedTimes",condition:(spy,times)=>spy.mock.settledResults.reduce(((s,{type})=>"fulfilled"===type?++s:s),0)===times,action:"resolved"},{name:["toHaveReturnedTimes","toReturnTimes"],condition:(spy,times)=>spy.mock.results.reduce(((s,{type})=>"throw"===type?s:++s),0)===times,action:"called"}].forEach((({name,condition,action})=>{def(name,(function(times){const spy=getSpy(this),spyName=spy.getMockName(),pass=condition(spy,times);this.assert(pass,`expected "${spyName}" to be successfully ${action} ${times} times`,`expected "${spyName}" to not be successfully ${action} ${times} times`,`expected resolved times: ${times}`,`received resolved times: ${pass}`,!1)}))})),[{name:"toHaveResolvedWith",condition:(spy,value)=>spy.mock.settledResults.some((({type,value:result})=>"fulfilled"===type&&equals(value,result))),action:"resolve"},{name:["toHaveReturnedWith","toReturnWith"],condition:(spy,value)=>spy.mock.results.some((({type,value:result})=>"return"===type&&equals(value,result))),action:"return"}].forEach((({name,condition,action})=>{def(name,(function(value){const spy=getSpy(this),pass=condition(spy,value),isNot=utils.flag(this,"negate");if(pass&&isNot||!pass&&!isNot){const spyName=spy.getMockName(),msg=utils.getMessage(this,[pass,`expected "${spyName}" to ${action} with: #{exp} at least once`,`expected "${spyName}" to not ${action} with: #{exp}`,value]),results="return"===action?spy.mock.results:spy.mock.settledResults;throw new AssertionError(function formatReturns(spy,results,msg,showActualReturn){return msg+=s.gray(`\n\nReceived: \n\n${results.map(((callReturn,i)=>{let methodCall=s.bold(`  ${ordinalOf(i+1)} ${spy.getMockName()} call return:\n\n`);return methodCall+=showActualReturn?diff(showActualReturn,callReturn.value,{omitAnnotationLines:!0}):stringify(callReturn).split("\n").map((line=>`    ${line}`)).join("\n"),methodCall+="\n",methodCall})).join("\n")}`),msg+=s.gray(`\n\nNumber of calls: ${s.bold(spy.mock.calls.length)}\n`),msg}(spy,results,msg,value))}}))})),[{name:"toHaveLastResolvedWith",condition:(spy,value)=>{const result=spy.mock.settledResults[spy.mock.settledResults.length-1];return result&&"fulfilled"===result.type&&equals(result.value,value)},action:"resolve"},{name:["toHaveLastReturnedWith","lastReturnedWith"],condition:(spy,value)=>{const result=spy.mock.results[spy.mock.results.length-1];return result&&"return"===result.type&&equals(result.value,value)},action:"return"}].forEach((({name,condition,action})=>{def(name,(function(value){const spy=getSpy(this),results="return"===action?spy.mock.results:spy.mock.settledResults,result=results[results.length-1],spyName=spy.getMockName();this.assert(condition(spy,value),`expected last "${spyName}" call to ${action} #{exp}`,`expected last "${spyName}" call to not ${action} #{exp}`,value,null==result?void 0:result.value)}))})),[{name:"toHaveNthResolvedWith",condition:(spy,index,value)=>{const result=spy.mock.settledResults[index-1];return result&&"fulfilled"===result.type&&equals(result.value,value)},action:"resolve"},{name:["toHaveNthReturnedWith","nthReturnedWith"],condition:(spy,index,value)=>{const result=spy.mock.results[index-1];return result&&"return"===result.type&&equals(result.value,value)},action:"return"}].forEach((({name,condition,action})=>{def(name,(function(nthCall,value){const spy=getSpy(this),spyName=spy.getMockName(),result=("return"===action?spy.mock.results:spy.mock.settledResults)[nthCall-1],ordinalCall=`${ordinalOf(nthCall)} call`;this.assert(condition(spy,nthCall,value),`expected ${ordinalCall} "${spyName}" call to ${action} #{exp}`,`expected ${ordinalCall} "${spyName}" call to not ${action} #{exp}`,value,null==result?void 0:result.value)}))})),def("withContext",(function(context){for(const key in context)utils.flag(this,key,context[key]);return this})),utils.addProperty(chai.Assertion.prototype,"resolves",(function __VITEST_RESOLVES__(){const error=new Error("resolves");utils.flag(this,"promise","resolves"),utils.flag(this,"error",error);const test=utils.flag(this,"vitest-test"),obj=utils.flag(this,"object");if(utils.flag(this,"poll"))throw new SyntaxError("expect.poll() is not supported in combination with .resolves");if("function"!=typeof(null==obj?void 0:obj.then))throw new TypeError(`You must provide a Promise to expect() when using .resolves, not '${typeof obj}'.`);const proxy=new Proxy(this,{get:(target,key,receiver)=>{const result=Reflect.get(target,key,receiver);return"function"!=typeof result?result instanceof chai.Assertion?proxy:result:(...args)=>{utils.flag(this,"_name",key);const promise=obj.then((value=>(utils.flag(this,"object",value),result.call(this,...args))),(err=>{const _error=new AssertionError(`promise rejected "${utils.inspect(err)}" instead of resolving`,{showDiff:!1});throw _error.cause=err,_error.stack=error.stack.replace(error.message,_error.message),_error}));return recordAsyncExpect(test,promise,createAssertionMessage(utils,this,!!args.length),error)}}});return proxy})),utils.addProperty(chai.Assertion.prototype,"rejects",(function __VITEST_REJECTS__(){const error=new Error("rejects");utils.flag(this,"promise","rejects"),utils.flag(this,"error",error);const test=utils.flag(this,"vitest-test"),obj=utils.flag(this,"object"),wrapper="function"==typeof obj?obj():obj;if(utils.flag(this,"poll"))throw new SyntaxError("expect.poll() is not supported in combination with .rejects");if("function"!=typeof(null==wrapper?void 0:wrapper.then))throw new TypeError(`You must provide a Promise to expect() when using .rejects, not '${typeof wrapper}'.`);const proxy=new Proxy(this,{get:(target,key,receiver)=>{const result=Reflect.get(target,key,receiver);return"function"!=typeof result?result instanceof chai.Assertion?proxy:result:(...args)=>{utils.flag(this,"_name",key);const promise=wrapper.then((value=>{const _error=new AssertionError(`promise resolved "${utils.inspect(value)}" instead of rejecting`,{showDiff:!0,expected:new Error("rejected promise"),actual:value});throw _error.stack=error.stack.replace(error.message,_error.message),_error}),(err=>(utils.flag(this,"object",err),result.call(this,...args))));return recordAsyncExpect(test,promise,createAssertionMessage(utils,this,!!args.length),error)}}});return proxy}))})),use(Subset),use(((chai,utils)=>{function getTest(assertionName,obj){const test=utils.flag(obj,"vitest-test");if(!test)throw new Error(`'${assertionName}' cannot be used without test context`);return test}for(const key of["matchSnapshot","toMatchSnapshot"])utils.addMethod(chai.Assertion.prototype,key,(function(properties,message){utils.flag(this,"_name",key);if(utils.flag(this,"negate"))throw new Error(`${key} cannot be used with "not"`);const expected=utils.flag(this,"object"),test=getTest(key,this);"string"==typeof properties&&void 0===message&&(message=properties,properties=void 0);const errorMessage=utils.flag(this,"message");getSnapshotClient().assert({received:expected,message,isInline:!1,properties,errorMessage,...getTestNames(test)})}));utils.addMethod(chai.Assertion.prototype,"toMatchFileSnapshot",(function(file,message){utils.flag(this,"_name","toMatchFileSnapshot");if(utils.flag(this,"negate"))throw new Error('toMatchFileSnapshot cannot be used with "not"');const error=new Error("resolves"),expected=utils.flag(this,"object"),test=getTest("toMatchFileSnapshot",this),errorMessage=utils.flag(this,"message");return function vi_nSCvwQ7l_recordAsyncExpect(_test,promise,assertion,error){const test=_test;if(test&&promise instanceof Promise){promise=promise.finally((()=>{if(!test.promises)return;const index=test.promises.indexOf(promise);-1!==index&&test.promises.splice(index,1)})),test.promises||(test.promises=[]),test.promises.push(promise);let resolved=!1;return test.onFinished??=[],test.onFinished.push((()=>{if(!resolved){const processor=globalThis.__vitest_worker__?.onFilterStackTrace||(s=>s||""),stack=processor(error.stack);vi_nSCvwQ7l_console.warn([`Promise returned by \`${assertion}\` was not awaited. `,"Vitest currently auto-awaits hanging assertions at the end of the test, but this will cause the test to fail in Vitest 3. ","Please remember to await the assertion.\n",stack].join(""))}})),{then:(onFulfilled,onRejected)=>(resolved=!0,promise.then(onFulfilled,onRejected)),catch:onRejected=>promise.catch(onRejected),finally:onFinally=>promise.finally(onFinally),[Symbol.toStringTag]:"Promise"}}return promise}(test,getSnapshotClient().assertRaw({received:expected,message,isInline:!1,rawSnapshot:{file},errorMessage,...getTestNames(test)}),function vi_nSCvwQ7l_createAssertionMessage(util,assertion,hasArgs){const not=util.flag(assertion,"negate")?"not.":"",name=`${util.flag(assertion,"_name")}(expected)`,promiseName=util.flag(assertion,"promise");return`expect(actual)${promiseName?`.${promiseName}`:""}.${not}${name}`}(utils,this),error)})),utils.addMethod(chai.Assertion.prototype,"toMatchInlineSnapshot",(function __INLINE_SNAPSHOT__(properties,inlineSnapshot,message){utils.flag(this,"_name","toMatchInlineSnapshot");if(utils.flag(this,"negate"))throw new Error('toMatchInlineSnapshot cannot be used with "not"');const test=getTest("toMatchInlineSnapshot",this);if(test.each||test.suite?.each)throw new Error("InlineSnapshot cannot be used inside of test.each or describe.each");const expected=utils.flag(this,"object"),error=utils.flag(this,"error");"string"==typeof properties&&(message=inlineSnapshot,inlineSnapshot=properties,properties=void 0),inlineSnapshot&&(inlineSnapshot=stripSnapshotIndentation(inlineSnapshot));const errorMessage=utils.flag(this,"message");getSnapshotClient().assert({received:expected,message,isInline:!0,properties,inlineSnapshot,error,errorMessage,...getTestNames(test)})})),utils.addMethod(chai.Assertion.prototype,"toThrowErrorMatchingSnapshot",(function(message){utils.flag(this,"_name","toThrowErrorMatchingSnapshot");if(utils.flag(this,"negate"))throw new Error('toThrowErrorMatchingSnapshot cannot be used with "not"');const expected=utils.flag(this,"object"),test=getTest("toThrowErrorMatchingSnapshot",this),promise=utils.flag(this,"promise"),errorMessage=utils.flag(this,"message");getSnapshotClient().assert({received:getError(expected,promise),message,errorMessage,...getTestNames(test)})})),utils.addMethod(chai.Assertion.prototype,"toThrowErrorMatchingInlineSnapshot",(function __INLINE_SNAPSHOT__(inlineSnapshot,message){if(utils.flag(this,"negate"))throw new Error('toThrowErrorMatchingInlineSnapshot cannot be used with "not"');const test=getTest("toThrowErrorMatchingInlineSnapshot",this);if(test.each||test.suite?.each)throw new Error("InlineSnapshot cannot be used inside of test.each or describe.each");const expected=utils.flag(this,"object"),error=utils.flag(this,"error"),promise=utils.flag(this,"promise"),errorMessage=utils.flag(this,"message");inlineSnapshot&&(inlineSnapshot=stripSnapshotIndentation(inlineSnapshot)),getSnapshotClient().assert({received:getError(expected,promise),message,inlineSnapshot,isInline:!0,error,errorMessage,...getTestNames(test)})})),utils.addMethod(chai.expect,"addSnapshotSerializer",addSerializer)})),use(((chai,utils)=>{utils.addMethod(chai.expect,"anything",(()=>new Anything)),utils.addMethod(chai.expect,"any",(expected=>new Any(expected))),utils.addMethod(chai.expect,"stringContaining",(expected=>new StringContaining(expected))),utils.addMethod(chai.expect,"objectContaining",(expected=>new ObjectContaining(expected))),utils.addMethod(chai.expect,"arrayContaining",(expected=>new ArrayContaining(expected))),utils.addMethod(chai.expect,"stringMatching",(expected=>new StringMatching(expected))),utils.addMethod(chai.expect,"closeTo",((expected,precision)=>new CloseTo(expected,precision))),chai.expect.not={stringContaining:expected=>new StringContaining(expected,!0),objectContaining:expected=>new ObjectContaining(expected,!0),arrayContaining:expected=>new ArrayContaining(expected,!0),stringMatching:expected=>new StringMatching(expected,!0),closeTo:(expected,precision)=>new CloseTo(expected,precision,!0)}}));const globalExpect=function createExpect(test){const expect=(value,message)=>{const{assertionCalls}=getState(expect);setState({assertionCalls:assertionCalls+1},expect);const assert2=chai_expect(value,message),_test=test||getCurrentTest();return _test?assert2.withTest(_test):assert2};Object.assign(expect,chai_expect),Object.assign(expect,globalThis[ASYMMETRIC_MATCHERS_OBJECT]),expect.getState=()=>getState(expect),expect.setState=state=>setState(state,expect);const globalState=getState(globalThis[GLOBAL_EXPECT])||{};return setState({...globalState,assertionCalls:0,isExpectingAssertions:!1,isExpectingAssertionsError:null,expectedAssertionsNumber:null,expectedAssertionsNumberErrorGen:null,environment:getCurrentEnvironment(),get testPath(){return utils_C8RiOc4B_getWorkerState().filepath},currentTestName:test?getTestName(test):globalState.currentTestName},expect),expect.extend=matchers=>chai_expect.extend(expect,matchers),expect.addEqualityTesters=customTesters=>function addCustomEqualityTesters(newTesters){if(!Array.isArray(newTesters))throw new TypeError(`expect.customEqualityTesters: Must be set to an array of Testers. Was given "${helpers_getType(newTesters)}"`);globalThis[JEST_MATCHERS_OBJECT].customEqualityTesters.push(...newTesters)}(customTesters),expect.soft=(...args)=>expect(...args).withContext({soft:!0}),expect.poll=function createExpectPoll(expect){return function poll(fn,options={}){const state=utils_C8RiOc4B_getWorkerState(),defaults=state.config.expect?.poll??{},{interval=defaults.interval??50,timeout=defaults.timeout??1e3,message}=options,assertion=expect(null,message).withContext({poll:!0});fn=fn.bind(assertion);const test=utils_exports.flag(assertion,"vitest-test");if(!test)throw new Error("expect.poll() must be called inside a test");const proxy=new Proxy(assertion,{get(target,key,receiver){const assertionFunction=Reflect.get(target,key,receiver);if("function"!=typeof assertionFunction)return assertionFunction instanceof Assertion?proxy:assertionFunction;if("assert"===key)return assertionFunction;if("string"==typeof key&&unsupported.includes(key))throw new SyntaxError(`expect.poll() is not supported in combination with .${key}(). Use vi.waitFor() if your assertion condition is unstable.`);return function(...args){const STACK_TRACE_ERROR=new Error("STACK_TRACE_ERROR"),promise=()=>new Promise(((resolve,reject)=>{let intervalId,timeoutId,lastError;const{setTimeout,clearTimeout}=utils_dist_getSafeTimers(),check=async()=>{try{utils_exports.flag(assertion,"_name",key);const obj=await fn();utils_exports.flag(assertion,"object",obj),resolve(await assertionFunction.call(assertion,...args)),clearTimeout(intervalId),clearTimeout(timeoutId)}catch(err){lastError=err,utils_exports.flag(assertion,"_isLastPollAttempt")||(intervalId=setTimeout(check,interval))}};timeoutId=setTimeout((()=>{clearTimeout(intervalId),utils_exports.flag(assertion,"_isLastPollAttempt",!0);const rejectWithCause=cause=>{reject(copyStackTrace$1(new Error("Matcher did not succeed in time.",{cause}),STACK_TRACE_ERROR))};check().then((()=>rejectWithCause(lastError))).catch((e=>rejectWithCause(e)))}),timeout),check()}));let resultPromise,awaited=!1;return test.onFinished??=[],test.onFinished.push((()=>{if(!awaited){const negated=utils_exports.flag(assertion,"negate")?"not.":"",assertionString=`expect.${utils_exports.flag(assertion,"_poll.element")?"element(locator)":"poll(assertion)"}.${negated}${String(key)}()`;throw copyStackTrace$1(new Error(`${assertionString} was not awaited. This assertion is asynchronous and must be awaited; otherwise, it is not executed to avoid unhandled rejections:\n\nawait ${assertionString}\n`),STACK_TRACE_ERROR)}})),{then:(onFulfilled,onRejected)=>(awaited=!0,(resultPromise||=promise()).then(onFulfilled,onRejected)),catch:onRejected=>(resultPromise||=promise()).catch(onRejected),finally:onFinally=>(resultPromise||=promise()).finally(onFinally),[Symbol.toStringTag]:"Promise"}}}});return proxy}}(expect),expect.unreachable=message=>{assert.fail(`expected${message?` "${message}" `:" "}not to be reached`)},utils_exports.addMethod(expect,"assertions",(function assertions(expected){const errorGen=()=>new Error(`expected number of assertions to be ${expected}, but got ${expect.getState().assertionCalls}`);Error.captureStackTrace&&Error.captureStackTrace(errorGen(),assertions),expect.setState({expectedAssertionsNumber:expected,expectedAssertionsNumberErrorGen:errorGen})})),utils_exports.addMethod(expect,"hasAssertions",(function hasAssertions(){const error=new Error("expected any number of assertion, but got none");Error.captureStackTrace&&Error.captureStackTrace(error,hasAssertions),expect.setState({isExpectingAssertions:!0,isExpectingAssertionsError:error})})),expect.extend(customMatchers),expect}();Object.defineProperty(globalThis,GLOBAL_EXPECT,{value:globalExpect,writable:!0,configurable:!0});var global,hasRequiredGlobal,throwsOnProto_1,hasRequiredThrowsOnProto,copyPrototypeMethods,hasRequiredCopyPrototypeMethods,array,hasRequiredArray,calledInOrder_1,hasRequiredCalledInOrder,className_1,hasRequiredClassName,fakeTimersSrc={};function requireCopyPrototypeMethods(){if(hasRequiredCopyPrototypeMethods)return copyPrototypeMethods;hasRequiredCopyPrototypeMethods=1;var call=Function.call,throwsOnProto=function requireThrowsOnProto(){if(hasRequiredThrowsOnProto)return throwsOnProto_1;let throwsOnProto;hasRequiredThrowsOnProto=1;try{throwsOnProto=!1}catch(_){throwsOnProto=!0}return throwsOnProto_1=throwsOnProto}(),disallowedProperties=["size","caller","callee","arguments"];return throwsOnProto&&disallowedProperties.push("__proto__"),copyPrototypeMethods=function copyPrototypeMethods(prototype){return Object.getOwnPropertyNames(prototype).reduce((function(result,name){return disallowedProperties.includes(name)||"function"!=typeof prototype[name]||(result[name]=call.bind(prototype[name])),result}),Object.create(null))}}function requireArray(){if(hasRequiredArray)return array;hasRequiredArray=1;var copyPrototype=requireCopyPrototypeMethods();return array=copyPrototype(Array.prototype)}function requireCalledInOrder(){if(hasRequiredCalledInOrder)return calledInOrder_1;hasRequiredCalledInOrder=1;var every=requireArray().every;function checkAdjacentCalls(callMap,spy,index,spies){var calledBeforeNext=!0;return index!==spies.length-1&&(calledBeforeNext=spy.calledBefore(spies[index+1])),!(!function hasCallsLeft(callMap,spy){return void 0===callMap[spy.id]&&(callMap[spy.id]=0),callMap[spy.id]<spy.callCount}(callMap,spy)||!calledBeforeNext)&&(callMap[spy.id]+=1,!0)}return calledInOrder_1=function calledInOrder(spies){return every(arguments.length>1?arguments:spies,checkAdjacentCalls.bind(null,{}))},calledInOrder_1}function requireClassName(){if(hasRequiredClassName)return className_1;return hasRequiredClassName=1,className_1=function className(value){return value.constructor&&value.constructor.name||null}}var hasRequiredDeprecated,every,hasRequiredEvery,functionName,hasRequiredFunctionName,orderByFirstCall_1,hasRequiredOrderByFirstCall,_function,hasRequired_function,map,hasRequiredMap,object,hasRequiredObject,set,hasRequiredSet,string,hasRequiredString,prototypes,hasRequiredPrototypes,deprecated={};function requireOrderByFirstCall(){if(hasRequiredOrderByFirstCall)return orderByFirstCall_1;hasRequiredOrderByFirstCall=1;var sort=requireArray().sort,slice=requireArray().slice;function comparator(a,b){var aCall=a.getCall(0),bCall=b.getCall(0);return(aCall&&aCall.callId||-1)<(bCall&&bCall.callId||-1)?-1:1}return orderByFirstCall_1=function orderByFirstCall(spies){return sort(slice(spies),comparator)}}function require_function(){if(hasRequired_function)return _function;hasRequired_function=1;var copyPrototype=requireCopyPrototypeMethods();return _function=copyPrototype(Function.prototype)}function requireMap(){if(hasRequiredMap)return map;hasRequiredMap=1;var copyPrototype=requireCopyPrototypeMethods();return map=copyPrototype(Map.prototype)}function requireObject(){if(hasRequiredObject)return object;hasRequiredObject=1;var copyPrototype=requireCopyPrototypeMethods();return object=copyPrototype(Object.prototype)}function requireSet(){if(hasRequiredSet)return set;hasRequiredSet=1;var copyPrototype=requireCopyPrototypeMethods();return set=copyPrototype(Set.prototype)}function requireString(){if(hasRequiredString)return string;hasRequiredString=1;var copyPrototype=requireCopyPrototypeMethods();return string=copyPrototype(String.prototype)}var hasRequiredTypeDetect,typeOf,hasRequiredTypeOf,valueToString_1,hasRequiredValueToString,vi_nSCvwQ7l_lib,hasRequiredLib,hasRequiredFakeTimersSrc,typeDetect$1={exports:{}};typeDetect$1.exports;function requireTypeDetect(){return hasRequiredTypeDetect||(hasRequiredTypeDetect=1,typeDetect$1.exports=function(){var promiseExists="function"==typeof Promise,globalObject="object"==typeof self?self:commonjsGlobal,symbolExists="undefined"!=typeof Symbol,mapExists="undefined"!=typeof Map,setExists="undefined"!=typeof Set,weakMapExists="undefined"!=typeof WeakMap,weakSetExists="undefined"!=typeof WeakSet,dataViewExists="undefined"!=typeof DataView,symbolIteratorExists=symbolExists&&void 0!==Symbol.iterator,symbolToStringTagExists=symbolExists&&void 0!==Symbol.toStringTag,setEntriesExists=setExists&&"function"==typeof Set.prototype.entries,mapEntriesExists=mapExists&&"function"==typeof Map.prototype.entries,setIteratorPrototype=setEntriesExists&&Object.getPrototypeOf((new Set).entries()),mapIteratorPrototype=mapEntriesExists&&Object.getPrototypeOf((new Map).entries()),arrayIteratorExists=symbolIteratorExists&&"function"==typeof Array.prototype[Symbol.iterator],arrayIteratorPrototype=arrayIteratorExists&&Object.getPrototypeOf([][Symbol.iterator]()),stringIteratorExists=symbolIteratorExists&&"function"==typeof String.prototype[Symbol.iterator],stringIteratorPrototype=stringIteratorExists&&Object.getPrototypeOf(""[Symbol.iterator]()),toStringLeftSliceLength=8,toStringRightSliceLength=-1;function typeDetect(obj){var typeofObj=typeof obj;if("object"!==typeofObj)return typeofObj;if(null===obj)return"null";if(obj===globalObject)return"global";if(Array.isArray(obj)&&(!1===symbolToStringTagExists||!(Symbol.toStringTag in obj)))return"Array";if("object"==typeof window&&null!==window){if("object"==typeof window.location&&obj===window.location)return"Location";if("object"==typeof window.document&&obj===window.document)return"Document";if("object"==typeof window.navigator){if("object"==typeof window.navigator.mimeTypes&&obj===window.navigator.mimeTypes)return"MimeTypeArray";if("object"==typeof window.navigator.plugins&&obj===window.navigator.plugins)return"PluginArray"}if(("function"==typeof window.HTMLElement||"object"==typeof window.HTMLElement)&&obj instanceof window.HTMLElement){if("BLOCKQUOTE"===obj.tagName)return"HTMLQuoteElement";if("TD"===obj.tagName)return"HTMLTableDataCellElement";if("TH"===obj.tagName)return"HTMLTableHeaderCellElement"}}var stringTag=symbolToStringTagExists&&obj[Symbol.toStringTag];if("string"==typeof stringTag)return stringTag;var objPrototype=Object.getPrototypeOf(obj);return objPrototype===RegExp.prototype?"RegExp":objPrototype===Date.prototype?"Date":promiseExists&&objPrototype===Promise.prototype?"Promise":setExists&&objPrototype===Set.prototype?"Set":mapExists&&objPrototype===Map.prototype?"Map":weakSetExists&&objPrototype===WeakSet.prototype?"WeakSet":weakMapExists&&objPrototype===WeakMap.prototype?"WeakMap":dataViewExists&&objPrototype===DataView.prototype?"DataView":mapExists&&objPrototype===mapIteratorPrototype?"Map Iterator":setExists&&objPrototype===setIteratorPrototype?"Set Iterator":arrayIteratorExists&&objPrototype===arrayIteratorPrototype?"Array Iterator":stringIteratorExists&&objPrototype===stringIteratorPrototype?"String Iterator":null===objPrototype?"Object":Object.prototype.toString.call(obj).slice(toStringLeftSliceLength,toStringRightSliceLength)}return typeDetect}()),typeDetect$1.exports}function requireTypeOf(){if(hasRequiredTypeOf)return typeOf;hasRequiredTypeOf=1;var type=requireTypeDetect();return typeOf=function typeOf(value){return type(value).toLowerCase()}}function requireValueToString(){if(hasRequiredValueToString)return valueToString_1;return hasRequiredValueToString=1,valueToString_1=function valueToString(value){return value&&value.toString?value.toString():String(value)}}var fakeTimersSrcExports=function requireFakeTimersSrc(){if(hasRequiredFakeTimersSrc)return fakeTimersSrc;hasRequiredFakeTimersSrc=1;const globalObject=function requireLib(){return hasRequiredLib||(hasRequiredLib=1,vi_nSCvwQ7l_lib={global:hasRequiredGlobal?global:(hasRequiredGlobal=1,globalObject=void 0!==commonjsGlobal?commonjsGlobal:"undefined"!=typeof window?window:self,global=globalObject),calledInOrder:requireCalledInOrder(),className:requireClassName(),deprecated:(hasRequiredDeprecated||(hasRequiredDeprecated=1,function(exports){exports.wrap=function(func,msg){var wrapped=function(){return exports.printWarning(msg),func.apply(this,arguments)};return func.prototype&&(wrapped.prototype=func.prototype),wrapped},exports.defaultMsg=function(packageName,funcName){return`${packageName}.${funcName} is deprecated and will be removed from the public API in a future version of ${packageName}.`},exports.printWarning=function(msg){"object"==typeof vi_nSCvwQ7l_process&&vi_nSCvwQ7l_process.emitWarning?vi_nSCvwQ7l_process.emitWarning(msg):vi_nSCvwQ7l_console.info?vi_nSCvwQ7l_console.info(msg):vi_nSCvwQ7l_console.log(msg)}}(deprecated)),deprecated),every:(hasRequiredEvery||(hasRequiredEvery=1,every=function every(obj,fn){var pass=!0;try{obj.forEach((function(){if(!fn.apply(this,arguments))throw new Error}))}catch(e){pass=!1}return pass}),every),functionName:hasRequiredFunctionName?functionName:(hasRequiredFunctionName=1,functionName=function functionName(func){if(!func)return"";try{return func.displayName||func.name||(String(func).match(/function ([^\s(]+)/)||[])[1]}catch(e){return""}}),orderByFirstCall:requireOrderByFirstCall(),prototypes:hasRequiredPrototypes?prototypes:(hasRequiredPrototypes=1,prototypes={array:requireArray(),function:require_function(),map:requireMap(),object:requireObject(),set:requireSet(),string:requireString()}),typeOf:requireTypeOf(),valueToString:requireValueToString()}),vi_nSCvwQ7l_lib;var globalObject}().global;let timersModule,timersPromisesModule;if("undefined"!=typeof __vitest_required__){try{timersModule=__vitest_required__.timers}catch(e){}try{timersPromisesModule=__vitest_required__.timersPromises}catch(e){}}function withGlobal(_global){const maxTimeout=Math.pow(2,31)-1,idCounterStart=1e12,NOOP=function(){},NOOP_ARRAY=function(){return[]},isPresent={};let timeoutResult,addTimerReturnsObject=!1;_global.setTimeout&&(isPresent.setTimeout=!0,timeoutResult=_global.setTimeout(NOOP,0),addTimerReturnsObject="object"==typeof timeoutResult),isPresent.clearTimeout=Boolean(_global.clearTimeout),isPresent.setInterval=Boolean(_global.setInterval),isPresent.clearInterval=Boolean(_global.clearInterval),isPresent.hrtime=_global.process&&"function"==typeof _global.process.hrtime,isPresent.hrtimeBigint=isPresent.hrtime&&"function"==typeof _global.process.hrtime.bigint,isPresent.nextTick=_global.process&&"function"==typeof _global.process.nextTick;const utilPromisify=_global.process&&_global.__vitest_required__&&_global.__vitest_required__.util.promisify;isPresent.performance=_global.performance&&"function"==typeof _global.performance.now;const hasPerformancePrototype=_global.Performance&&(typeof _global.Performance).match(/^(function|object)$/),hasPerformanceConstructorPrototype=_global.performance&&_global.performance.constructor&&_global.performance.constructor.prototype;isPresent.queueMicrotask=_global.hasOwnProperty("queueMicrotask"),isPresent.requestAnimationFrame=_global.requestAnimationFrame&&"function"==typeof _global.requestAnimationFrame,isPresent.cancelAnimationFrame=_global.cancelAnimationFrame&&"function"==typeof _global.cancelAnimationFrame,isPresent.requestIdleCallback=_global.requestIdleCallback&&"function"==typeof _global.requestIdleCallback,isPresent.cancelIdleCallbackPresent=_global.cancelIdleCallback&&"function"==typeof _global.cancelIdleCallback,isPresent.setImmediate=_global.setImmediate&&"function"==typeof _global.setImmediate,isPresent.clearImmediate=_global.clearImmediate&&"function"==typeof _global.clearImmediate,isPresent.Intl=_global.Intl&&"object"==typeof _global.Intl,_global.clearTimeout&&_global.clearTimeout(timeoutResult);const NativeDate=_global.Date,NativeIntl=isPresent.Intl?Object.defineProperties(Object.create(null),Object.getOwnPropertyDescriptors(_global.Intl)):void 0;let uniqueTimerId=idCounterStart;if(void 0===NativeDate)throw new Error("The global scope doesn't have a `Date` object (see https://github.com/sinonjs/sinon/issues/1852#issuecomment-419622780)");isPresent.Date=!0;class FakePerformanceEntry{constructor(name,entryType,startTime,duration){this.name=name,this.entryType=entryType,this.startTime=startTime,this.duration=duration}toJSON(){return JSON.stringify({...this})}}let isNearInfiniteLimit=!1;function checkIsNearInfiniteLimit(clock,i){clock.loopLimit&&i===clock.loopLimit-1&&(isNearInfiniteLimit=!0)}function resetIsNearInfiniteLimit(){isNearInfiniteLimit=!1}function parseTime(str){if(!str)return 0;const strings=str.split(":"),l=strings.length;let parsed,i=l,ms=0;if(l>3||!/^(\d\d:){0,2}\d\d?$/.test(str))throw new Error("tick only understands numbers, 'm:s' and 'h:m:s'. Each part must be two digits");for(;i--;){if(parsed=parseInt(strings[i],10),parsed>=60)throw new Error(`Invalid time ${str}`);ms+=parsed*Math.pow(60,l-i-1)}return 1e3*ms}function getEpoch(epoch){if(!epoch)return 0;if("function"==typeof epoch.getTime)return epoch.getTime();if("number"==typeof epoch)return epoch;throw new TypeError("now should be milliseconds since UNIX epoch")}function inRange(from,to,timer){return timer&&timer.callAt>=from&&timer.callAt<=to}function getInfiniteLoopError(clock,job){const infiniteLoopError=new Error(`Aborting after running ${clock.loopLimit} timers, assuming an infinite loop!`);if(!job.error)return infiniteLoopError;const computedTargetPattern=/target\.*[<|(|[].*?[>|\]|)]\s*/;let clockMethodPattern=new RegExp(String(Object.keys(clock).join("|")));addTimerReturnsObject&&(clockMethodPattern=new RegExp(`\\s+at (Object\\.)?(?:${Object.keys(clock).join("|")})\\s+`));let matchedLineIndex=-1;job.error.stack.split("\n").some((function(line,i){if(line.match(computedTargetPattern))return matchedLineIndex=i,!0;return line.match(clockMethodPattern)?(matchedLineIndex=i,!1):matchedLineIndex>=0}));const stack=`${infiniteLoopError}\n${job.type||"Microtask"} - ${job.func.name||"anonymous"}\n${job.error.stack.split("\n").slice(matchedLineIndex+1).join("\n")}`;try{Object.defineProperty(infiniteLoopError,"stack",{value:stack})}catch(e){}return infiniteLoopError}function createDate(){class ClockDate extends NativeDate{constructor(year,month,date,hour,minute,second,ms){0===arguments.length?super(ClockDate.clock.now):super(...arguments),Object.defineProperty(this,"constructor",{value:NativeDate,enumerable:!1})}static[Symbol.hasInstance](instance){return instance instanceof NativeDate}}ClockDate.isFake=!0,NativeDate.now&&(ClockDate.now=function now(){return ClockDate.clock.now}),NativeDate.toSource&&(ClockDate.toSource=function toSource(){return NativeDate.toSource()}),ClockDate.toString=function toString(){return NativeDate.toString()};return new Proxy(ClockDate,{apply(){if(this instanceof ClockDate)throw new TypeError("A Proxy should only capture `new` calls with the `construct` handler. This is not supposed to be possible, so check the logic.");return new NativeDate(ClockDate.clock.now).toString()}})}function runJobs(clock){if(clock.jobs){for(let i=0;i<clock.jobs.length;i++){const job=clock.jobs[i];if(job.func.apply(null,job.args),checkIsNearInfiniteLimit(clock,i),clock.loopLimit&&i>clock.loopLimit)throw getInfiniteLoopError(clock,job)}resetIsNearInfiniteLimit(),clock.jobs=[]}}function addTimer(clock,timer){if(void 0===timer.func)throw new Error("Callback must be provided to timer calls");if(addTimerReturnsObject&&"function"!=typeof timer.func)throw new TypeError(`[ERR_INVALID_CALLBACK]: Callback must be a function. Received ${timer.func} of type ${typeof timer.func}`);if(isNearInfiniteLimit&&(timer.error=new Error),timer.type=timer.immediate?"Immediate":"Timeout",timer.hasOwnProperty("delay")&&("number"!=typeof timer.delay&&(timer.delay=parseInt(timer.delay,10)),function isNumberFinite(num){return Number.isFinite?Number.isFinite(num):isFinite(num)}(timer.delay)||(timer.delay=0),timer.delay=timer.delay>maxTimeout?1:timer.delay,timer.delay=Math.max(0,timer.delay)),timer.hasOwnProperty("interval")&&(timer.type="Interval",timer.interval=timer.interval>maxTimeout?1:timer.interval),timer.hasOwnProperty("animation")&&(timer.type="AnimationFrame",timer.animation=!0),timer.hasOwnProperty("idleCallback")&&(timer.type="IdleCallback",timer.idleCallback=!0),clock.timers||(clock.timers={}),timer.id=uniqueTimerId++,timer.createdAt=clock.now,timer.callAt=clock.now+(parseInt(timer.delay)||(clock.duringTick?1:0)),clock.timers[timer.id]=timer,addTimerReturnsObject){const res={refed:!0,ref:function(){return this.refed=!0,res},unref:function(){return this.refed=!1,res},hasRef:function(){return this.refed},refresh:function(){return timer.callAt=clock.now+(parseInt(timer.delay)||(clock.duringTick?1:0)),clock.timers[timer.id]=timer,res},[Symbol.toPrimitive]:function(){return timer.id}};return res}return timer.id}function compareTimers(a,b){return a.callAt<b.callAt?-1:a.callAt>b.callAt?1:a.immediate&&!b.immediate?-1:!a.immediate&&b.immediate?1:a.createdAt<b.createdAt?-1:a.createdAt>b.createdAt?1:a.id<b.id?-1:a.id>b.id?1:void 0}function firstTimerInRange(clock,from,to){const timers=clock.timers;let id,isInRange,timer=null;for(id in timers)timers.hasOwnProperty(id)&&(isInRange=inRange(from,to,timers[id]),!isInRange||timer&&1!==compareTimers(timer,timers[id])||(timer=timers[id]));return timer}function firstTimer(clock){const timers=clock.timers;let id,timer=null;for(id in timers)timers.hasOwnProperty(id)&&(timer&&1!==compareTimers(timer,timers[id])||(timer=timers[id]));return timer}function lastTimer(clock){const timers=clock.timers;let id,timer=null;for(id in timers)timers.hasOwnProperty(id)&&(timer&&-1!==compareTimers(timer,timers[id])||(timer=timers[id]));return timer}function callTimer(clock,timer){if("number"==typeof timer.interval?clock.timers[timer.id].callAt+=timer.interval:delete clock.timers[timer.id],"function"==typeof timer.func)timer.func.apply(null,timer.args);else{(0,eval)(timer.func)}}function getClearHandler(ttype){return"IdleCallback"===ttype||"AnimationFrame"===ttype?`cancel${ttype}`:`clear${ttype}`}const warnOnce=function createWarnOnce(){let calls=0;return function(msg){!calls++&&vi_nSCvwQ7l_console.warn(msg)}}();function clearTimer(clock,timerId,ttype){if(!timerId)return;clock.timers||(clock.timers={});const id=Number(timerId);if(Number.isNaN(id)||id<idCounterStart){const handlerName=getClearHandler(ttype);if(!0===clock.shouldClearNativeTimers){const nativeHandler=clock[`_${handlerName}`];return"function"==typeof nativeHandler?nativeHandler(timerId):void 0}warnOnce(`FakeTimers: ${handlerName} was invoked to clear a native timer instead of one created by this library.\nTo automatically clean-up native timers, use \`shouldClearNativeTimers\`.`)}if(clock.timers.hasOwnProperty(id)){const timer=clock.timers[id];if(!(timer.type===ttype||"Timeout"===timer.type&&"Interval"===ttype||"Interval"===timer.type&&"Timeout"===ttype)){const clear=getClearHandler(ttype),schedule=function getScheduleHandler(ttype){return"IdleCallback"===ttype||"AnimationFrame"===ttype?`request${ttype}`:`set${ttype}`}(timer.type);throw new Error(`Cannot clear timer: timer created with ${schedule}() but cleared with ${clear}()`)}delete clock.timers[id]}}function hijackMethod(target,method,clock){if(clock[method].hadOwnProperty=Object.prototype.hasOwnProperty.call(target,method),clock[`_${method}`]=target[method],"Date"===method)target[method]=clock[method];else if("Intl"===method)target[method]=clock[method];else if("performance"===method){const originalPerfDescriptor=Object.getOwnPropertyDescriptor(target,method);if(originalPerfDescriptor&&originalPerfDescriptor.get&&!originalPerfDescriptor.set){Object.defineProperty(clock,`_${method}`,originalPerfDescriptor);const perfDescriptor=Object.getOwnPropertyDescriptor(clock,method);Object.defineProperty(target,method,perfDescriptor)}else target[method]=clock[method]}else target[method]=function(){return clock[method].apply(clock,arguments)},Object.defineProperties(target[method],Object.getOwnPropertyDescriptors(clock[method]));target[method].clock=clock}function doIntervalTick(clock,advanceTimeDelta){clock.tick(advanceTimeDelta)}const timers={setTimeout:_global.setTimeout,clearTimeout:_global.clearTimeout,setInterval:_global.setInterval,clearInterval:_global.clearInterval,Date:_global.Date};isPresent.setImmediate&&(timers.setImmediate=_global.setImmediate),isPresent.clearImmediate&&(timers.clearImmediate=_global.clearImmediate),isPresent.hrtime&&(timers.hrtime=_global.process.hrtime),isPresent.nextTick&&(timers.nextTick=_global.process.nextTick),isPresent.performance&&(timers.performance=_global.performance),isPresent.requestAnimationFrame&&(timers.requestAnimationFrame=_global.requestAnimationFrame),isPresent.queueMicrotask&&(timers.queueMicrotask=_global.queueMicrotask),isPresent.cancelAnimationFrame&&(timers.cancelAnimationFrame=_global.cancelAnimationFrame),isPresent.requestIdleCallback&&(timers.requestIdleCallback=_global.requestIdleCallback),isPresent.cancelIdleCallback&&(timers.cancelIdleCallback=_global.cancelIdleCallback),isPresent.Intl&&(timers.Intl=NativeIntl);const originalSetTimeout=_global.setImmediate||_global.setTimeout;function createClock(start,loopLimit){start=Math.floor(getEpoch(start)),loopLimit=loopLimit||1e3;let nanos=0;const adjustedSystemTime=[0,0],clock={now:start,Date:createDate(),loopLimit};function getTimeToNextFrame(){return 16-(clock.now-start)%16}function hrtime(prev){const millisSinceStart=clock.now-adjustedSystemTime[0]-start,secsSinceStart=Math.floor(millisSinceStart/1e3),remainderInNanos=1e6*(millisSinceStart-1e3*secsSinceStart)+nanos-adjustedSystemTime[1];if(Array.isArray(prev)){if(prev[1]>1e9)throw new TypeError("Number of nanoseconds can't exceed a billion");const oldSecs=prev[0];let nanoDiff=remainderInNanos-prev[1],secDiff=secsSinceStart-oldSecs;return nanoDiff<0&&(nanoDiff+=1e9,secDiff-=1),[secDiff,nanoDiff]}return[secsSinceStart,remainderInNanos]}function fakePerformanceNow(){const hrt=hrtime();return 1e3*hrt[0]+hrt[1]/1e6}function doTick(tickValue,isAsync,resolve,reject){const msFloat="number"==typeof tickValue?tickValue:parseTime(tickValue),ms=Math.floor(msFloat),remainder=function nanoRemainder(msFloat){const remainder=1e6*msFloat%1e6,positiveRemainder=remainder<0?remainder+1e6:remainder;return Math.floor(positiveRemainder)}(msFloat);let nanosTotal=nanos+remainder,tickTo=clock.now+ms;if(msFloat<0)throw new TypeError("Negative ticks are not supported");nanosTotal>=1e6&&(tickTo+=1,nanosTotal-=1e6),nanos=nanosTotal;let timer,firstException,oldNow,nextPromiseTick,compensationCheck,postTimerCall,tickFrom=clock.now,previous=clock.now;function doTickInner(){for(timer=firstTimerInRange(clock,tickFrom,tickTo);timer&&tickFrom<=tickTo;){if(clock.timers[timer.id]){tickFrom=timer.callAt,clock.now=timer.callAt,oldNow=clock.now;try{runJobs(clock),callTimer(clock,timer)}catch(e){firstException=firstException||e}if(isAsync)return void originalSetTimeout(nextPromiseTick);compensationCheck()}postTimerCall()}if(oldNow=clock.now,runJobs(clock),oldNow!==clock.now&&(tickFrom+=clock.now-oldNow,tickTo+=clock.now-oldNow),clock.duringTick=!1,timer=firstTimerInRange(clock,tickFrom,tickTo),timer)try{clock.tick(tickTo-clock.now)}catch(e){firstException=firstException||e}else clock.now=tickTo,nanos=nanosTotal;if(firstException)throw firstException;if(!isAsync)return clock.now;resolve(clock.now)}return clock.duringTick=!0,oldNow=clock.now,runJobs(clock),oldNow!==clock.now&&(tickFrom+=clock.now-oldNow,tickTo+=clock.now-oldNow),nextPromiseTick=isAsync&&function(){try{compensationCheck(),postTimerCall(),doTickInner()}catch(e){reject(e)}},compensationCheck=function(){oldNow!==clock.now&&(tickFrom+=clock.now-oldNow,tickTo+=clock.now-oldNow,previous+=clock.now-oldNow)},postTimerCall=function(){timer=firstTimerInRange(clock,previous,tickTo),previous=tickFrom},doTickInner()}return clock.Date.clock=clock,isPresent.hrtimeBigint&&(hrtime.bigint=function(){const parts=hrtime();return BigInt(parts[0])*BigInt(1e9)+BigInt(parts[1])}),isPresent.Intl&&(clock.Intl=function createIntl(){const ClockIntl={};return Object.getOwnPropertyNames(NativeIntl).forEach((property=>ClockIntl[property]=NativeIntl[property])),ClockIntl.DateTimeFormat=function(...args){const realFormatter=new NativeIntl.DateTimeFormat(...args),formatter={};return["formatRange","formatRangeToParts","resolvedOptions"].forEach((method=>{formatter[method]=realFormatter[method].bind(realFormatter)})),["format","formatToParts"].forEach((method=>{formatter[method]=function(date){return realFormatter[method](date||ClockIntl.clock.now)}})),formatter},ClockIntl.DateTimeFormat.prototype=Object.create(NativeIntl.DateTimeFormat.prototype),ClockIntl.DateTimeFormat.supportedLocalesOf=NativeIntl.DateTimeFormat.supportedLocalesOf,ClockIntl}(),clock.Intl.clock=clock),clock.requestIdleCallback=function requestIdleCallback(func,timeout){let timeToNextIdlePeriod=0;clock.countTimers()>0&&(timeToNextIdlePeriod=50);const result=addTimer(clock,{func,args:Array.prototype.slice.call(arguments,2),delay:void 0===timeout?timeToNextIdlePeriod:Math.min(timeout,timeToNextIdlePeriod),idleCallback:!0});return Number(result)},clock.cancelIdleCallback=function cancelIdleCallback(timerId){return clearTimer(clock,timerId,"IdleCallback")},clock.setTimeout=function setTimeout(func,timeout){return addTimer(clock,{func,args:Array.prototype.slice.call(arguments,2),delay:timeout})},void 0!==_global.Promise&&utilPromisify&&(clock.setTimeout[utilPromisify.custom]=function promisifiedSetTimeout(timeout,arg){return new _global.Promise((function setTimeoutExecutor(resolve){addTimer(clock,{func:resolve,args:[arg],delay:timeout})}))}),clock.clearTimeout=function clearTimeout(timerId){return clearTimer(clock,timerId,"Timeout")},clock.nextTick=function nextTick(func){return function enqueueJob(clock,job){clock.jobs||(clock.jobs=[]),clock.jobs.push(job)}(clock,{func,args:Array.prototype.slice.call(arguments,1),error:isNearInfiniteLimit?new Error:null})},clock.queueMicrotask=function queueMicrotask(func){return clock.nextTick(func)},clock.setInterval=function setInterval(func,timeout){return timeout=parseInt(timeout,10),addTimer(clock,{func,args:Array.prototype.slice.call(arguments,2),delay:timeout,interval:timeout})},clock.clearInterval=function clearInterval(timerId){return clearTimer(clock,timerId,"Interval")},isPresent.setImmediate&&(clock.setImmediate=function setImmediate(func){return addTimer(clock,{func,args:Array.prototype.slice.call(arguments,1),immediate:!0})},void 0!==_global.Promise&&utilPromisify&&(clock.setImmediate[utilPromisify.custom]=function promisifiedSetImmediate(arg){return new _global.Promise((function setImmediateExecutor(resolve){addTimer(clock,{func:resolve,args:[arg],immediate:!0})}))}),clock.clearImmediate=function clearImmediate(timerId){return clearTimer(clock,timerId,"Immediate")}),clock.countTimers=function countTimers(){return Object.keys(clock.timers||{}).length+(clock.jobs||[]).length},clock.requestAnimationFrame=function requestAnimationFrame(func){const result=addTimer(clock,{func,delay:getTimeToNextFrame(),get args(){return[fakePerformanceNow()]},animation:!0});return Number(result)},clock.cancelAnimationFrame=function cancelAnimationFrame(timerId){return clearTimer(clock,timerId,"AnimationFrame")},clock.runMicrotasks=function runMicrotasks(){runJobs(clock)},clock.tick=function tick(tickValue){return doTick(tickValue,!1)},void 0!==_global.Promise&&(clock.tickAsync=function tickAsync(tickValue){return new _global.Promise((function(resolve,reject){originalSetTimeout((function(){try{doTick(tickValue,!0,resolve,reject)}catch(e){reject(e)}}))}))}),clock.next=function next(){runJobs(clock);const timer=firstTimer(clock);if(!timer)return clock.now;clock.duringTick=!0;try{return clock.now=timer.callAt,callTimer(clock,timer),runJobs(clock),clock.now}finally{clock.duringTick=!1}},void 0!==_global.Promise&&(clock.nextAsync=function nextAsync(){return new _global.Promise((function(resolve,reject){originalSetTimeout((function(){try{const timer=firstTimer(clock);if(!timer)return void resolve(clock.now);let err;clock.duringTick=!0,clock.now=timer.callAt;try{callTimer(clock,timer)}catch(e){err=e}clock.duringTick=!1,originalSetTimeout((function(){err?reject(err):resolve(clock.now)}))}catch(e){reject(e)}}))}))}),clock.runAll=function runAll(){let numTimers,i;for(runJobs(clock),i=0;i<clock.loopLimit;i++){if(!clock.timers)return resetIsNearInfiniteLimit(),clock.now;if(numTimers=Object.keys(clock.timers).length,0===numTimers)return resetIsNearInfiniteLimit(),clock.now;clock.next(),checkIsNearInfiniteLimit(clock,i)}const excessJob=firstTimer(clock);throw getInfiniteLoopError(clock,excessJob)},clock.runToFrame=function runToFrame(){return clock.tick(getTimeToNextFrame())},void 0!==_global.Promise&&(clock.runAllAsync=function runAllAsync(){return new _global.Promise((function(resolve,reject){let i=0;!function doRun(){originalSetTimeout((function(){try{let numTimers;if(runJobs(clock),i<clock.loopLimit)return clock.timers?(numTimers=Object.keys(clock.timers).length,0===numTimers?(resetIsNearInfiniteLimit(),void resolve(clock.now)):(clock.next(),i++,doRun(),void checkIsNearInfiniteLimit(clock,i))):(resetIsNearInfiniteLimit(),void resolve(clock.now));const excessJob=firstTimer(clock);reject(getInfiniteLoopError(clock,excessJob))}catch(e){reject(e)}}))}()}))}),clock.runToLast=function runToLast(){const timer=lastTimer(clock);return timer?clock.tick(timer.callAt-clock.now):(runJobs(clock),clock.now)},void 0!==_global.Promise&&(clock.runToLastAsync=function runToLastAsync(){return new _global.Promise((function(resolve,reject){originalSetTimeout((function(){try{const timer=lastTimer(clock);timer||(runJobs(clock),resolve(clock.now)),resolve(clock.tickAsync(timer.callAt-clock.now))}catch(e){reject(e)}}))}))}),clock.reset=function reset(){nanos=0,clock.timers={},clock.jobs=[],clock.now=start},clock.setSystemTime=function setSystemTime(systemTime){const newNow=getEpoch(systemTime),difference=newNow-clock.now;let id,timer;for(id in adjustedSystemTime[0]=adjustedSystemTime[0]+difference,adjustedSystemTime[1]=adjustedSystemTime[1]+nanos,clock.now=newNow,nanos=0,clock.timers)clock.timers.hasOwnProperty(id)&&(timer=clock.timers[id],timer.createdAt+=difference,timer.callAt+=difference)},clock.jump=function jump(tickValue){const msFloat="number"==typeof tickValue?tickValue:parseTime(tickValue),ms=Math.floor(msFloat);for(const timer of Object.values(clock.timers))clock.now+ms>timer.callAt&&(timer.callAt=clock.now+ms);clock.tick(ms)},isPresent.performance&&(clock.performance=Object.create(null),clock.performance.now=fakePerformanceNow),isPresent.hrtime&&(clock.hrtime=hrtime),clock}return{timers,createClock,install:function install(config){if(arguments.length>1||config instanceof Date||Array.isArray(config)||"number"==typeof config)throw new TypeError(`FakeTimers.install called with ${String(config)} install requires an object parameter`);if(!0===_global.Date.isFake)throw new TypeError("Can't install fake timers twice on the same global object.");if((config=void 0!==config?config:{}).shouldAdvanceTime=config.shouldAdvanceTime||!1,config.advanceTimeDelta=config.advanceTimeDelta||20,config.shouldClearNativeTimers=config.shouldClearNativeTimers||!1,config.target)throw new TypeError("config.target is no longer supported. Use `withGlobal(target)` instead.");function handleMissingTimer(timer){if(!config.ignoreMissingTimers)throw new ReferenceError(`non-existent timers and/or objects cannot be faked: '${timer}'`)}let i,l;const clock=createClock(config.now,config.loopLimit);if(clock.shouldClearNativeTimers=config.shouldClearNativeTimers,clock.uninstall=function(){return function uninstall(clock,config){let method,i,l;for(i=0,l=clock.methods.length;i<l;i++){if(method=clock.methods[i],"hrtime"===method&&_global.process)_global.process.hrtime=clock._hrtime;else if("nextTick"===method&&_global.process)_global.process.nextTick=clock._nextTick;else if("performance"===method){const originalPerfDescriptor=Object.getOwnPropertyDescriptor(clock,`_${method}`);originalPerfDescriptor&&originalPerfDescriptor.get&&!originalPerfDescriptor.set?Object.defineProperty(_global,method,originalPerfDescriptor):originalPerfDescriptor.configurable&&(_global[method]=clock[`_${method}`])}else if(_global[method]&&_global[method].hadOwnProperty)_global[method]=clock[`_${method}`];else try{delete _global[method]}catch(ignore){}if(void 0!==clock.timersModuleMethods)for(let j=0;j<clock.timersModuleMethods.length;j++){const entry=clock.timersModuleMethods[j];timersModule[entry.methodName]=entry.original}if(void 0!==clock.timersPromisesModuleMethods)for(let j=0;j<clock.timersPromisesModuleMethods.length;j++){const entry=clock.timersPromisesModuleMethods[j];timersPromisesModule[entry.methodName]=entry.original}}!0===config.shouldAdvanceTime&&_global.clearInterval(clock.attachedInterval),clock.methods=[];for(const[listener,signal]of clock.abortListenerMap.entries())signal.removeEventListener("abort",listener),clock.abortListenerMap.delete(listener);return clock.timers?Object.keys(clock.timers).map((function mapper(key){return clock.timers[key]})):[]}(clock,config)},clock.abortListenerMap=new Map,clock.methods=config.toFake||[],0===clock.methods.length&&(clock.methods=Object.keys(timers)),!0===config.shouldAdvanceTime){const intervalTick=doIntervalTick.bind(null,clock,config.advanceTimeDelta),intervalId=_global.setInterval(intervalTick,config.advanceTimeDelta);clock.attachedInterval=intervalId}if(clock.methods.includes("performance")){const proto=hasPerformanceConstructorPrototype?_global.performance.constructor.prototype:hasPerformancePrototype?_global.Performance.prototype:void 0;if(proto)Object.getOwnPropertyNames(proto).forEach((function(name){"now"!==name&&(clock.performance[name]=0===name.indexOf("getEntries")?NOOP_ARRAY:NOOP)})),clock.performance.mark=name=>new FakePerformanceEntry(name,"mark",0,0),clock.performance.measure=name=>new FakePerformanceEntry(name,"measure",0,100),clock.performance.timeOrigin=getEpoch(config.now);else if((config.toFake||[]).includes("performance"))return handleMissingTimer("performance")}for(_global===globalObject&&timersModule&&(clock.timersModuleMethods=[]),_global===globalObject&&timersPromisesModule&&(clock.timersPromisesModuleMethods=[]),i=0,l=clock.methods.length;i<l;i++){const nameOfMethodToReplace=clock.methods[i];if(isPresent[nameOfMethodToReplace]){if("hrtime"===nameOfMethodToReplace?_global.process&&"function"==typeof _global.process.hrtime&&hijackMethod(_global.process,nameOfMethodToReplace,clock):"nextTick"===nameOfMethodToReplace?_global.process&&"function"==typeof _global.process.nextTick&&hijackMethod(_global.process,nameOfMethodToReplace,clock):hijackMethod(_global,nameOfMethodToReplace,clock),void 0!==clock.timersModuleMethods&&timersModule[nameOfMethodToReplace]){const original=timersModule[nameOfMethodToReplace];clock.timersModuleMethods.push({methodName:nameOfMethodToReplace,original}),timersModule[nameOfMethodToReplace]=_global[nameOfMethodToReplace]}void 0!==clock.timersPromisesModuleMethods&&("setTimeout"===nameOfMethodToReplace?(clock.timersPromisesModuleMethods.push({methodName:"setTimeout",original:timersPromisesModule.setTimeout}),timersPromisesModule.setTimeout=(delay,value,options={})=>new Promise(((resolve,reject)=>{const abort=()=>{options.signal.removeEventListener("abort",abort),clock.abortListenerMap.delete(abort),clock.clearTimeout(handle),reject(options.signal.reason)},handle=clock.setTimeout((()=>{options.signal&&(options.signal.removeEventListener("abort",abort),clock.abortListenerMap.delete(abort)),resolve(value)}),delay);options.signal&&(options.signal.aborted?abort():(options.signal.addEventListener("abort",abort),clock.abortListenerMap.set(abort,options.signal)))}))):"setImmediate"===nameOfMethodToReplace?(clock.timersPromisesModuleMethods.push({methodName:"setImmediate",original:timersPromisesModule.setImmediate}),timersPromisesModule.setImmediate=(value,options={})=>new Promise(((resolve,reject)=>{const abort=()=>{options.signal.removeEventListener("abort",abort),clock.abortListenerMap.delete(abort),clock.clearImmediate(handle),reject(options.signal.reason)},handle=clock.setImmediate((()=>{options.signal&&(options.signal.removeEventListener("abort",abort),clock.abortListenerMap.delete(abort)),resolve(value)}));options.signal&&(options.signal.aborted?abort():(options.signal.addEventListener("abort",abort),clock.abortListenerMap.set(abort,options.signal)))}))):"setInterval"===nameOfMethodToReplace&&(clock.timersPromisesModuleMethods.push({methodName:"setInterval",original:timersPromisesModule.setInterval}),timersPromisesModule.setInterval=(delay,value,options={})=>({[Symbol.asyncIterator]:()=>{const createResolvable=()=>{let resolve,reject;const promise=new Promise(((res,rej)=>{resolve=res,reject=rej}));return promise.resolve=resolve,promise.reject=reject,promise};let returnCall,done=!1,hasThrown=!1,nextAvailable=0;const nextQueue=[],handle=clock.setInterval((()=>{nextQueue.length>0?nextQueue.shift().resolve():nextAvailable++}),delay),abort=()=>{options.signal.removeEventListener("abort",abort),clock.abortListenerMap.delete(abort),clock.clearInterval(handle),done=!0;for(const resolvable of nextQueue)resolvable.resolve()};return options.signal&&(options.signal.aborted?done=!0:(options.signal.addEventListener("abort",abort),clock.abortListenerMap.set(abort,options.signal))),{next:async()=>{if(options.signal?.aborted&&!hasThrown)throw hasThrown=!0,options.signal.reason;if(done)return{done:!0,value:void 0};if(nextAvailable>0)return nextAvailable--,{done:!1,value};const resolvable=createResolvable();if(nextQueue.push(resolvable),await resolvable,returnCall&&0===nextQueue.length&&returnCall.resolve(),options.signal?.aborted&&!hasThrown)throw hasThrown=!0,options.signal.reason;return done?{done:!0,value:void 0}:{done:!1,value}},return:async()=>(done||(nextQueue.length>0&&(returnCall=createResolvable(),await returnCall),clock.clearInterval(handle),done=!0,options.signal&&(options.signal.removeEventListener("abort",abort),clock.abortListenerMap.delete(abort))),{done:!0,value:void 0})}}})))}else handleMissingTimer(nameOfMethodToReplace)}return clock},withGlobal}}const defaultImplementation=withGlobal(globalObject);return fakeTimersSrc.timers=defaultImplementation.timers,fakeTimersSrc.createClock=defaultImplementation.createClock,fakeTimersSrc.install=defaultImplementation.install,fakeTimersSrc.withGlobal=withGlobal,fakeTimersSrc}();class FakeTimers{_global;_clock;_fakingTime;_fakingDate;_fakeTimers;_userConfig;_now=date_W2xKR2qe_RealDate.now;constructor({global,config}){this._userConfig=config,this._fakingDate=null,this._fakingTime=!1,this._fakeTimers=fakeTimersSrcExports.withGlobal(global),this._global=global}clearAllTimers(){this._fakingTime&&this._clock.reset()}dispose(){this.useRealTimers()}runAllTimers(){this._checkFakeTimers()&&this._clock.runAll()}async runAllTimersAsync(){this._checkFakeTimers()&&await this._clock.runAllAsync()}runOnlyPendingTimers(){this._checkFakeTimers()&&this._clock.runToLast()}async runOnlyPendingTimersAsync(){this._checkFakeTimers()&&await this._clock.runToLastAsync()}advanceTimersToNextTimer(steps=1){if(this._checkFakeTimers())for(let i=steps;i>0&&(this._clock.next(),this._clock.tick(0),0!==this._clock.countTimers());i--);}async advanceTimersToNextTimerAsync(steps=1){if(this._checkFakeTimers())for(let i=steps;i>0&&(await this._clock.nextAsync(),this._clock.tick(0),0!==this._clock.countTimers());i--);}advanceTimersByTime(msToRun){this._checkFakeTimers()&&this._clock.tick(msToRun)}async advanceTimersByTimeAsync(msToRun){this._checkFakeTimers()&&await this._clock.tickAsync(msToRun)}advanceTimersToNextFrame(){this._checkFakeTimers()&&this._clock.runToFrame()}runAllTicks(){this._checkFakeTimers()&&this._clock.runMicrotasks()}useRealTimers(){this._fakingDate&&(!function resetDate(){globalThis.Date=date_W2xKR2qe_RealDate}(),this._fakingDate=null),this._fakingTime&&(this._clock.uninstall(),this._fakingTime=!1)}useFakeTimers(){if(this._fakingDate)throw new Error('"setSystemTime" was called already and date was mocked. Reset timers using `vi.useRealTimers()` if you want to use fake timers again.');if(!this._fakingTime){const toFake=Object.keys(this._fakeTimers.timers).filter((timer=>"nextTick"!==timer&&"queueMicrotask"!==timer));if(this._userConfig?.toFake?.includes("nextTick")&&isChildProcess())throw new Error("process.nextTick cannot be mocked inside child_process");this._clock=this._fakeTimers.install({now:Date.now(),...this._userConfig,toFake:this._userConfig?.toFake||toFake,ignoreMissingTimers:!0}),this._fakingTime=!0}}reset(){if(this._checkFakeTimers()){const{now}=this._clock;this._clock.reset(),this._clock.setSystemTime(now)}}setSystemTime(now){const date=void 0===now||now instanceof Date?now:new Date(now);this._fakingTime?this._clock.setSystemTime(date):(this._fakingDate=date??new Date(this.getRealSystemTime()),function mockDate(date){const dateObj=new date_W2xKR2qe_RealDate(date.valueOf());if(Number.isNaN(dateObj.getTime()))throw new TypeError(`mockdate: The time set is an invalid date: ${date}`);globalThis.Date=MockDate,date_W2xKR2qe_now=dateObj.valueOf()}(this._fakingDate))}getMockedSystemTime(){return this._fakingTime?new Date(this._clock.now):this._fakingDate}getRealSystemTime(){return this._now()}getTimerCount(){return this._checkFakeTimers()?this._clock.countTimers():0}configure(config){this._userConfig=config}isFakeTimers(){return this._fakingTime}_checkFakeTimers(){if(!this._fakingTime)throw new Error('Timers are not mocked. Try calling "vi.useFakeTimers()" first.');return this._fakingTime}}function copyStackTrace(target,source){return void 0!==source.stack&&(target.stack=source.stack.replace(source.message,target.message)),target}function waitFor(callback,options={}){const{setTimeout,setInterval,clearTimeout,clearInterval}=utils_dist_getSafeTimers(),{interval=50,timeout=1e3}="number"==typeof options?{timeout:options}:options,STACK_TRACE_ERROR=new Error("STACK_TRACE_ERROR");return new Promise(((resolve,reject)=>{let lastError,timeoutId,intervalId,promiseStatus="idle";const onResolve=result=>{timeoutId&&clearTimeout(timeoutId),intervalId&&clearInterval(intervalId),resolve(result)},checkCallback=()=>{if(vi.isFakeTimers()&&vi.advanceTimersByTime(interval),"pending"!==promiseStatus)try{const result=callback();if(null===result||"object"!=typeof result||"function"!=typeof result.then)return onResolve(result),!0;promiseStatus="pending",result.then((resolvedValue=>{promiseStatus="resolved",onResolve(resolvedValue)}),(rejectedValue=>{promiseStatus="rejected",lastError=rejectedValue}))}catch(error){lastError=error}};!0!==checkCallback()&&(timeoutId=setTimeout((()=>{intervalId&&clearInterval(intervalId);let error=lastError;error||(error=copyStackTrace(new Error("Timed out in waitFor!"),STACK_TRACE_ERROR)),reject(error)}),timeout),intervalId=setInterval(checkCallback,interval))}))}function waitUntil(callback,options={}){const{setTimeout,setInterval,clearTimeout,clearInterval}=utils_dist_getSafeTimers(),{interval=50,timeout=1e3}="number"==typeof options?{timeout:options}:options,STACK_TRACE_ERROR=new Error("STACK_TRACE_ERROR");return new Promise(((resolve,reject)=>{let timeoutId,intervalId,promiseStatus="idle";const onReject=error=>{intervalId&&clearInterval(intervalId),error||(error=copyStackTrace(new Error("Timed out in waitUntil!"),STACK_TRACE_ERROR)),reject(error)},onResolve=result=>{if(result)return timeoutId&&clearTimeout(timeoutId),intervalId&&clearInterval(intervalId),resolve(result),!0},checkCallback=()=>{if(vi.isFakeTimers()&&vi.advanceTimersByTime(interval),"pending"!==promiseStatus)try{const result=callback();if(null===result||"object"!=typeof result||"function"!=typeof result.then)return onResolve(result);promiseStatus="pending",result.then((resolvedValue=>{promiseStatus="resolved",onResolve(resolvedValue)}),(rejectedValue=>{promiseStatus="rejected",onReject(rejectedValue)}))}catch(error){onReject(error)}};!0!==checkCallback()&&(timeoutId=setTimeout(onReject,timeout),intervalId=setInterval(checkCallback,interval))}))}const vitest=function createVitest(){let _config=null;const workerState=utils_C8RiOc4B_getWorkerState();let _timers;const timers=()=>_timers||=new FakeTimers({global:globalThis,config:workerState.config.fakeTimers}),_stubsGlobal=new Map,_stubsEnv=new Map,_envBooleans=["PROD","DEV","SSR"],utils={useFakeTimers(config){if(isChildProcess()&&(config?.toFake?.includes("nextTick")||workerState.config?.fakeTimers?.toFake?.includes("nextTick")))throw new Error('vi.useFakeTimers({ toFake: ["nextTick"] }) is not supported in node:child_process. Use --pool=threads if mocking nextTick is required.');return config?timers().configure({...workerState.config.fakeTimers,...config}):timers().configure(workerState.config.fakeTimers),timers().useFakeTimers(),utils},isFakeTimers:()=>timers().isFakeTimers(),useRealTimers:()=>(timers().useRealTimers(),utils),runOnlyPendingTimers:()=>(timers().runOnlyPendingTimers(),utils),runOnlyPendingTimersAsync:async()=>(await timers().runOnlyPendingTimersAsync(),utils),runAllTimers:()=>(timers().runAllTimers(),utils),runAllTimersAsync:async()=>(await timers().runAllTimersAsync(),utils),runAllTicks:()=>(timers().runAllTicks(),utils),advanceTimersByTime:ms=>(timers().advanceTimersByTime(ms),utils),advanceTimersByTimeAsync:async ms=>(await timers().advanceTimersByTimeAsync(ms),utils),advanceTimersToNextTimer:()=>(timers().advanceTimersToNextTimer(),utils),advanceTimersToNextTimerAsync:async()=>(await timers().advanceTimersToNextTimerAsync(),utils),advanceTimersToNextFrame:()=>(timers().advanceTimersToNextFrame(),utils),getTimerCount:()=>timers().getTimerCount(),setSystemTime:time=>(timers().setSystemTime(time),utils),getMockedSystemTime:()=>timers().getMockedSystemTime(),getRealSystemTime:()=>timers().getRealSystemTime(),clearAllTimers:()=>(timers().clearAllTimers(),utils),spyOn,fn,waitFor,waitUntil,hoisted:factory=>(helpers_assertTypes(factory,'"vi.hoisted" factory',["function"]),factory()),mock(path,factory){if("string"!=typeof path)throw new TypeError("vi.mock() expects a string path, but received a "+typeof path);const importer=getImporter("mock");_mocker().queueMock(path,importer,"function"==typeof factory?()=>factory((()=>_mocker().importActual(path,importer,_mocker().getMockContext().callstack))):factory)},unmock(path){if("string"!=typeof path)throw new TypeError("vi.unmock() expects a string path, but received a "+typeof path);_mocker().queueUnmock(path,getImporter("unmock"))},doMock(path,factory){if("string"!=typeof path)throw new TypeError("vi.doMock() expects a string path, but received a "+typeof path);const importer=getImporter("doMock");_mocker().queueMock(path,importer,"function"==typeof factory?()=>factory((()=>_mocker().importActual(path,importer,_mocker().getMockContext().callstack))):factory)},doUnmock(path){if("string"!=typeof path)throw new TypeError("vi.doUnmock() expects a string path, but received a "+typeof path);_mocker().queueUnmock(path,getImporter("doUnmock"))},importActual:async path=>_mocker().importActual(path,getImporter("importActual"),_mocker().getMockContext().callstack),importMock:async path=>_mocker().importMock(path,getImporter("importMock")),mocked:(item,_options={})=>item,isMockFunction:fn2=>isMockFunction(fn2),clearAllMocks:()=>([...mocks].reverse().forEach((spy=>spy.mockClear())),utils),resetAllMocks:()=>([...mocks].reverse().forEach((spy=>spy.mockReset())),utils),restoreAllMocks:()=>([...mocks].reverse().forEach((spy=>spy.mockRestore())),utils),stubGlobal:(name,value)=>(_stubsGlobal.has(name)||_stubsGlobal.set(name,Object.getOwnPropertyDescriptor(globalThis,name)),Object.defineProperty(globalThis,name,{value,writable:!0,configurable:!0,enumerable:!0}),utils),stubEnv:(name,value)=>(_stubsEnv.has(name)||_stubsEnv.set(name,vi_nSCvwQ7l_process.env[name]),_envBooleans.includes(name)?vi_nSCvwQ7l_process.env[name]=value?"1":"":void 0===value?delete vi_nSCvwQ7l_process.env[name]:vi_nSCvwQ7l_process.env[name]=String(value),utils),unstubAllGlobals:()=>(_stubsGlobal.forEach(((original,name)=>{original?Object.defineProperty(globalThis,name,original):Reflect.deleteProperty(globalThis,name)})),_stubsGlobal.clear(),utils),unstubAllEnvs:()=>(_stubsEnv.forEach(((original,name)=>{void 0===original?delete vi_nSCvwQ7l_process.env[name]:vi_nSCvwQ7l_process.env[name]=original})),_stubsEnv.clear(),utils),resetModules:()=>(function resetModules(modules,resetMocks=!1){const skipPaths=[/\/vitest\/dist\//,/\/vite-node\/dist\//,/vitest-virtual-\w+\/dist/,/@vitest\/dist/,...resetMocks?[]:[/^mock:/]];modules.forEach(((mod,path)=>{skipPaths.some((re=>re.test(path)))||modules.invalidateModule(mod)}))}(workerState.moduleCache),utils),dynamicImportSettled:async()=>waitForImportsToResolve(),setConfig(config){_config||(_config={...workerState.config}),Object.assign(workerState.config,config)},resetConfig(){_config&&Object.assign(workerState.config,_config)}};return utils}(),vi=vitest;function _mocker(){return"undefined"!=typeof __vitest_mocker__?__vitest_mocker__:new Proxy({},{get(_,name){throw new Error(`Vitest mocker was not initialized in this environment. vi.${String(name)}() is forbidden.`)}})}function getImporter(name){const stackArray=function createSimpleStackTrace(options){const{message="$$stack trace error",stackTraceLimit=1}=options||{},limit=Error.stackTraceLimit,prepareStackTrace=Error.prepareStackTrace;Error.stackTraceLimit=stackTraceLimit,Error.prepareStackTrace=e=>e.stack;const stackTrace=new Error(message).stack||"";return Error.prepareStackTrace=prepareStackTrace,Error.stackTraceLimit=limit,stackTrace}({stackTraceLimit:5}).split("\n"),importerStackIndex=stackArray.findIndex((stack2=>stack2.includes(` at Object.${name}`)||stack2.includes(`${name}@`))),stack=function source_map_parseSingleStack(raw){const line=raw.trim();return source_map_CHROME_IE_STACK_REGEXP.test(line)?source_map_parseSingleV8Stack(line):source_map_parseSingleFFOrSafariStack(line)}(stackArray[importerStackIndex+1]);return stack?.file||""}},"./node_modules/yup/index.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Rx:()=>create$5,Ry:()=>create$3,Z_:()=>create$6});var property_expr__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/property-expr/index.js"),tiny_case__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/tiny-case/index.js"),toposort__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/toposort/index.js"),toposort__WEBPACK_IMPORTED_MODULE_2___default=__webpack_require__.n(toposort__WEBPACK_IMPORTED_MODULE_2__);const toString=Object.prototype.toString,errorToString=Error.prototype.toString,regExpToString=RegExp.prototype.toString,symbolToString="undefined"!=typeof Symbol?Symbol.prototype.toString:()=>"",SYMBOL_REGEXP=/^Symbol\((.*)\)(.*)$/;function printSimpleValue(val,quoteStrings=!1){if(null==val||!0===val||!1===val)return""+val;const typeOf=typeof val;if("number"===typeOf)return function printNumber(val){return val!=+val?"NaN":0===val&&1/val<0?"-0":""+val}(val);if("string"===typeOf)return quoteStrings?`"${val}"`:val;if("function"===typeOf)return"[Function "+(val.name||"anonymous")+"]";if("symbol"===typeOf)return symbolToString.call(val).replace(SYMBOL_REGEXP,"Symbol($1)");const tag=toString.call(val).slice(8,-1);return"Date"===tag?isNaN(val.getTime())?""+val:val.toISOString(val):"Error"===tag||val instanceof Error?"["+errorToString.call(val)+"]":"RegExp"===tag?regExpToString.call(val):null}function printValue(value,quoteStrings){let result=printSimpleValue(value,quoteStrings);return null!==result?result:JSON.stringify(value,(function(key,value){let result=printSimpleValue(this[key],quoteStrings);return null!==result?result:value}),2)}function toArray(value){return null==value?[]:[].concat(value)}let _Symbol$toStringTag,_Symbol$hasInstance,_Symbol$toStringTag2,strReg=/\$\{\s*(\w+)\s*\}/g;_Symbol$toStringTag=Symbol.toStringTag;class ValidationErrorNoStack{constructor(errorOrErrors,value,field,type){this.name=void 0,this.message=void 0,this.value=void 0,this.path=void 0,this.type=void 0,this.params=void 0,this.errors=void 0,this.inner=void 0,this[_Symbol$toStringTag]="Error",this.name="ValidationError",this.value=value,this.path=field,this.type=type,this.errors=[],this.inner=[],toArray(errorOrErrors).forEach((err=>{if(ValidationError.isError(err)){this.errors.push(...err.errors);const innerErrors=err.inner.length?err.inner:[err];this.inner.push(...innerErrors)}else this.errors.push(err)})),this.message=this.errors.length>1?`${this.errors.length} errors occurred`:this.errors[0]}}_Symbol$hasInstance=Symbol.hasInstance,_Symbol$toStringTag2=Symbol.toStringTag;class ValidationError extends Error{static formatError(message,params){const path=params.label||params.path||"this";return path!==params.path&&(params=Object.assign({},params,{path})),"string"==typeof message?message.replace(strReg,((_,key)=>printValue(params[key]))):"function"==typeof message?message(params):message}static isError(err){return err&&"ValidationError"===err.name}constructor(errorOrErrors,value,field,type,disableStack){const errorNoStack=new ValidationErrorNoStack(errorOrErrors,value,field,type);if(disableStack)return errorNoStack;super(),this.value=void 0,this.path=void 0,this.type=void 0,this.params=void 0,this.errors=[],this.inner=[],this[_Symbol$toStringTag2]="Error",this.name=errorNoStack.name,this.message=errorNoStack.message,this.type=errorNoStack.type,this.value=errorNoStack.value,this.path=errorNoStack.path,this.errors=errorNoStack.errors,this.inner=errorNoStack.inner,Error.captureStackTrace&&Error.captureStackTrace(this,ValidationError)}static[_Symbol$hasInstance](inst){return ValidationErrorNoStack[Symbol.hasInstance](inst)||super[Symbol.hasInstance](inst)}}let mixed={default:"${path} is invalid",required:"${path} is a required field",defined:"${path} must be defined",notNull:"${path} cannot be null",oneOf:"${path} must be one of the following values: ${values}",notOneOf:"${path} must not be one of the following values: ${values}",notType:({path,type,value,originalValue})=>{const castMsg=null!=originalValue&&originalValue!==value?` (cast from the value \`${printValue(originalValue,!0)}\`).`:".";return"mixed"!==type?`${path} must be a \`${type}\` type, but the final value was: \`${printValue(value,!0)}\``+castMsg:`${path} must match the configured type. The validated value was: \`${printValue(value,!0)}\``+castMsg}},string={length:"${path} must be exactly ${length} characters",min:"${path} must be at least ${min} characters",max:"${path} must be at most ${max} characters",matches:'${path} must match the following: "${regex}"',email:"${path} must be a valid email",url:"${path} must be a valid URL",uuid:"${path} must be a valid UUID",datetime:"${path} must be a valid ISO date-time",datetime_precision:"${path} must be a valid ISO date-time with a sub-second precision of exactly ${precision} digits",datetime_offset:'${path} must be a valid ISO date-time with UTC "Z" timezone',trim:"${path} must be a trimmed string",lowercase:"${path} must be a lowercase string",uppercase:"${path} must be a upper case string"},number={min:"${path} must be greater than or equal to ${min}",max:"${path} must be less than or equal to ${max}",lessThan:"${path} must be less than ${less}",moreThan:"${path} must be greater than ${more}",positive:"${path} must be a positive number",negative:"${path} must be a negative number",integer:"${path} must be an integer"},date={min:"${path} field must be later than ${min}",max:"${path} field must be at earlier than ${max}"},boolean={isValue:"${path} field must be ${value}"},object={noUnknown:"${path} field has unspecified keys: ${unknown}"},array={min:"${path} field must have at least ${min} items",max:"${path} field must have less than or equal to ${max} items",length:"${path} must have ${length} items"},tuple={notType:params=>{const{path,value,spec}=params,typeLen=spec.types.length;if(Array.isArray(value)){if(value.length<typeLen)return`${path} tuple value has too few items, expected a length of ${typeLen} but got ${value.length} for value: \`${printValue(value,!0)}\``;if(value.length>typeLen)return`${path} tuple value has too many items, expected a length of ${typeLen} but got ${value.length} for value: \`${printValue(value,!0)}\``}return ValidationError.formatError(mixed.notType,params)}};Object.assign(Object.create(null),{mixed,string,number,date,object,array,boolean,tuple});const isSchema=obj=>obj&&obj.__isYupSchema__;class Condition{static fromOptions(refs,config){if(!config.then&&!config.otherwise)throw new TypeError("either `then:` or `otherwise:` is required for `when()` conditions");let{is,then,otherwise}=config,check="function"==typeof is?is:(...values)=>values.every((value=>value===is));return new Condition(refs,((values,schema)=>{var _branch;let branch=check(...values)?then:otherwise;return null!=(_branch=null==branch?void 0:branch(schema))?_branch:schema}))}constructor(refs,builder){this.fn=void 0,this.refs=refs,this.refs=refs,this.fn=builder}resolve(base,options){let values=this.refs.map((ref=>ref.getValue(null==options?void 0:options.value,null==options?void 0:options.parent,null==options?void 0:options.context))),schema=this.fn(values,base,options);if(void 0===schema||schema===base)return base;if(!isSchema(schema))throw new TypeError("conditions must return a schema object");return schema.resolve(options)}}const prefixes_context="$",prefixes_value=".";class Reference{constructor(key,options={}){if(this.key=void 0,this.isContext=void 0,this.isValue=void 0,this.isSibling=void 0,this.path=void 0,this.getter=void 0,this.map=void 0,"string"!=typeof key)throw new TypeError("ref must be a string, got: "+key);if(this.key=key.trim(),""===key)throw new TypeError("ref must be a non-empty string");this.isContext=this.key[0]===prefixes_context,this.isValue=this.key[0]===prefixes_value,this.isSibling=!this.isContext&&!this.isValue;let prefix=this.isContext?prefixes_context:this.isValue?prefixes_value:"";this.path=this.key.slice(prefix.length),this.getter=this.path&&(0,property_expr__WEBPACK_IMPORTED_MODULE_0__.getter)(this.path,!0),this.map=options.map}getValue(value,parent,context){let result=this.isContext?context:this.isValue?value:parent;return this.getter&&(result=this.getter(result||{})),this.map&&(result=this.map(result)),result}cast(value,options){return this.getValue(value,null==options?void 0:options.parent,null==options?void 0:options.context)}resolve(){return this}describe(){return{type:"ref",key:this.key}}toString(){return`Ref(${this.key})`}static isRef(value){return value&&value.__isYupRef}}Reference.prototype.__isYupRef=!0;const isAbsent=value=>null==value;function createValidation(config){function validate({value,path="",options,originalValue,schema},panic,next){const{name,test,params,message,skipAbsent}=config;let{parent,context,abortEarly=schema.spec.abortEarly,disableStackTrace=schema.spec.disableStackTrace}=options;function resolve(item){return Reference.isRef(item)?item.getValue(value,parent,context):item}function createError(overrides={}){const nextParams=Object.assign({value,originalValue,label:schema.spec.label,path:overrides.path||path,spec:schema.spec,disableStackTrace:overrides.disableStackTrace||disableStackTrace},params,overrides.params);for(const key of Object.keys(nextParams))nextParams[key]=resolve(nextParams[key]);const error=new ValidationError(ValidationError.formatError(overrides.message||message,nextParams),value,nextParams.path,overrides.type||name,nextParams.disableStackTrace);return error.params=nextParams,error}const invalid=abortEarly?panic:next;let ctx={path,parent,type:name,from:options.from,createError,resolve,options,originalValue,schema};const handleResult=validOrError=>{ValidationError.isError(validOrError)?invalid(validOrError):validOrError?next(null):invalid(createError())},handleError=err=>{ValidationError.isError(err)?invalid(err):panic(err)};if(skipAbsent&&isAbsent(value))return handleResult(!0);let result;try{var _result;if(result=test.call(ctx,value,ctx),"function"==typeof(null==(_result=result)?void 0:_result.then)){if(options.sync)throw new Error(`Validation test of type: "${ctx.type}" returned a Promise during a synchronous validate. This test will finish after the validate call has returned`);return Promise.resolve(result).then(handleResult,handleError)}}catch(err){return void handleError(err)}handleResult(result)}return validate.OPTIONS=config,validate}function getIn(schema,path,value,context=value){let parent,lastPart,lastPartDebug;return path?((0,property_expr__WEBPACK_IMPORTED_MODULE_0__.forEach)(path,((_part,isBracket,isArray)=>{let part=isBracket?_part.slice(1,_part.length-1):_part,isTuple="tuple"===(schema=schema.resolve({context,parent,value})).type,idx=isArray?parseInt(part,10):0;if(schema.innerType||isTuple){if(isTuple&&!isArray)throw new Error(`Yup.reach cannot implicitly index into a tuple type. the path part "${lastPartDebug}" must contain an index to the tuple element, e.g. "${lastPartDebug}[0]"`);if(value&&idx>=value.length)throw new Error(`Yup.reach cannot resolve an array item at index: ${_part}, in the path: ${path}. because there is no value at that index. `);parent=value,value=value&&value[idx],schema=isTuple?schema.spec.types[idx]:schema.innerType}if(!isArray){if(!schema.fields||!schema.fields[part])throw new Error(`The schema does not contain the path: ${path}. (failed at: ${lastPartDebug} which is a type: "${schema.type}")`);parent=value,value=value&&value[part],schema=schema.fields[part]}lastPart=part,lastPartDebug=isBracket?"["+_part+"]":"."+_part})),{schema,parent,parentPath:lastPart}):{parent,parentPath:path,schema}}class ReferenceSet extends Set{describe(){const description=[];for(const item of this.values())description.push(Reference.isRef(item)?item.describe():item);return description}resolveAll(resolve){let result=[];for(const item of this.values())result.push(resolve(item));return result}clone(){return new ReferenceSet(this.values())}merge(newItems,removeItems){const next=this.clone();return newItems.forEach((value=>next.add(value))),removeItems.forEach((value=>next.delete(value))),next}}function clone(src,seen=new Map){if(isSchema(src)||!src||"object"!=typeof src)return src;if(seen.has(src))return seen.get(src);let copy;if(src instanceof Date)copy=new Date(src.getTime()),seen.set(src,copy);else if(src instanceof RegExp)copy=new RegExp(src),seen.set(src,copy);else if(Array.isArray(src)){copy=new Array(src.length),seen.set(src,copy);for(let i=0;i<src.length;i++)copy[i]=clone(src[i],seen)}else if(src instanceof Map){copy=new Map,seen.set(src,copy);for(const[k,v]of src.entries())copy.set(k,clone(v,seen))}else if(src instanceof Set){copy=new Set,seen.set(src,copy);for(const v of src)copy.add(clone(v,seen))}else{if(!(src instanceof Object))throw Error(`Unable to clone ${src}`);copy={},seen.set(src,copy);for(const[k,v]of Object.entries(src))copy[k]=clone(v,seen)}return copy}class Schema{constructor(options){this.type=void 0,this.deps=[],this.tests=void 0,this.transforms=void 0,this.conditions=[],this._mutate=void 0,this.internalTests={},this._whitelist=new ReferenceSet,this._blacklist=new ReferenceSet,this.exclusiveTests=Object.create(null),this._typeCheck=void 0,this.spec=void 0,this.tests=[],this.transforms=[],this.withMutation((()=>{this.typeError(mixed.notType)})),this.type=options.type,this._typeCheck=options.check,this.spec=Object.assign({strip:!1,strict:!1,abortEarly:!0,recursive:!0,disableStackTrace:!1,nullable:!1,optional:!0,coerce:!0},null==options?void 0:options.spec),this.withMutation((s=>{s.nonNullable()}))}get _type(){return this.type}clone(spec){if(this._mutate)return spec&&Object.assign(this.spec,spec),this;const next=Object.create(Object.getPrototypeOf(this));return next.type=this.type,next._typeCheck=this._typeCheck,next._whitelist=this._whitelist.clone(),next._blacklist=this._blacklist.clone(),next.internalTests=Object.assign({},this.internalTests),next.exclusiveTests=Object.assign({},this.exclusiveTests),next.deps=[...this.deps],next.conditions=[...this.conditions],next.tests=[...this.tests],next.transforms=[...this.transforms],next.spec=clone(Object.assign({},this.spec,spec)),next}label(label){let next=this.clone();return next.spec.label=label,next}meta(...args){if(0===args.length)return this.spec.meta;let next=this.clone();return next.spec.meta=Object.assign(next.spec.meta||{},args[0]),next}withMutation(fn){let before=this._mutate;this._mutate=!0;let result=fn(this);return this._mutate=before,result}concat(schema){if(!schema||schema===this)return this;if(schema.type!==this.type&&"mixed"!==this.type)throw new TypeError(`You cannot \`concat()\` schema's of different types: ${this.type} and ${schema.type}`);let combined=schema.clone();const mergedSpec=Object.assign({},this.spec,combined.spec);return combined.spec=mergedSpec,combined.internalTests=Object.assign({},this.internalTests,combined.internalTests),combined._whitelist=this._whitelist.merge(schema._whitelist,schema._blacklist),combined._blacklist=this._blacklist.merge(schema._blacklist,schema._whitelist),combined.tests=this.tests,combined.exclusiveTests=this.exclusiveTests,combined.withMutation((next=>{schema.tests.forEach((fn=>{next.test(fn.OPTIONS)}))})),combined.transforms=[...this.transforms,...combined.transforms],combined}isType(v){return null==v?!(!this.spec.nullable||null!==v)||!(!this.spec.optional||void 0!==v):this._typeCheck(v)}resolve(options){let schema=this;if(schema.conditions.length){let conditions=schema.conditions;schema=schema.clone(),schema.conditions=[],schema=conditions.reduce(((prevSchema,condition)=>condition.resolve(prevSchema,options)),schema),schema=schema.resolve(options)}return schema}resolveOptions(options){var _options$strict,_options$abortEarly,_options$recursive,_options$disableStack;return Object.assign({},options,{from:options.from||[],strict:null!=(_options$strict=options.strict)?_options$strict:this.spec.strict,abortEarly:null!=(_options$abortEarly=options.abortEarly)?_options$abortEarly:this.spec.abortEarly,recursive:null!=(_options$recursive=options.recursive)?_options$recursive:this.spec.recursive,disableStackTrace:null!=(_options$disableStack=options.disableStackTrace)?_options$disableStack:this.spec.disableStackTrace})}cast(value,options={}){let resolvedSchema=this.resolve(Object.assign({value},options)),allowOptionality="ignore-optionality"===options.assert,result=resolvedSchema._cast(value,options);if(!1!==options.assert&&!resolvedSchema.isType(result)){if(allowOptionality&&isAbsent(result))return result;let formattedValue=printValue(value),formattedResult=printValue(result);throw new TypeError(`The value of ${options.path||"field"} could not be cast to a value that satisfies the schema type: "${resolvedSchema.type}". \n\nattempted value: ${formattedValue} \n`+(formattedResult!==formattedValue?`result of cast: ${formattedResult}`:""))}return result}_cast(rawValue,options){let value=void 0===rawValue?rawValue:this.transforms.reduce(((prevValue,fn)=>fn.call(this,prevValue,rawValue,this)),rawValue);return void 0===value&&(value=this.getDefault(options)),value}_validate(_value,options={},panic,next){let{path,originalValue=_value,strict=this.spec.strict}=options,value=_value;strict||(value=this._cast(value,Object.assign({assert:!1},options)));let initialTests=[];for(let test of Object.values(this.internalTests))test&&initialTests.push(test);this.runTests({path,value,originalValue,options,tests:initialTests},panic,(initialErrors=>{if(initialErrors.length)return next(initialErrors,value);this.runTests({path,value,originalValue,options,tests:this.tests},panic,next)}))}runTests(runOptions,panic,next){let fired=!1,{tests,value,originalValue,path,options}=runOptions,panicOnce=arg=>{fired||(fired=!0,panic(arg,value))},nextOnce=arg=>{fired||(fired=!0,next(arg,value))},count=tests.length,nestedErrors=[];if(!count)return nextOnce([]);let args={value,originalValue,path,options,schema:this};for(let i=0;i<tests.length;i++){(0,tests[i])(args,panicOnce,(function finishTestRun(err){err&&(Array.isArray(err)?nestedErrors.push(...err):nestedErrors.push(err)),--count<=0&&nextOnce(nestedErrors)}))}}asNestedTest({key,index,parent,parentPath,originalParent,options}){const k=null!=key?key:index;if(null==k)throw TypeError("Must include `key` or `index` for nested validations");const isIndex="number"==typeof k;let value=parent[k];const testOptions=Object.assign({},options,{strict:!0,parent,value,originalValue:originalParent[k],key:void 0,[isIndex?"index":"key"]:k,path:isIndex||k.includes(".")?`${parentPath||""}[${isIndex?k:`"${k}"`}]`:(parentPath?`${parentPath}.`:"")+key});return(_,panic,next)=>this.resolve(testOptions)._validate(value,testOptions,panic,next)}validate(value,options){var _options$disableStack2;let schema=this.resolve(Object.assign({},options,{value})),disableStackTrace=null!=(_options$disableStack2=null==options?void 0:options.disableStackTrace)?_options$disableStack2:schema.spec.disableStackTrace;return new Promise(((resolve,reject)=>schema._validate(value,options,((error,parsed)=>{ValidationError.isError(error)&&(error.value=parsed),reject(error)}),((errors,validated)=>{errors.length?reject(new ValidationError(errors,validated,void 0,void 0,disableStackTrace)):resolve(validated)}))))}validateSync(value,options){var _options$disableStack3;let result,schema=this.resolve(Object.assign({},options,{value})),disableStackTrace=null!=(_options$disableStack3=null==options?void 0:options.disableStackTrace)?_options$disableStack3:schema.spec.disableStackTrace;return schema._validate(value,Object.assign({},options,{sync:!0}),((error,parsed)=>{throw ValidationError.isError(error)&&(error.value=parsed),error}),((errors,validated)=>{if(errors.length)throw new ValidationError(errors,value,void 0,void 0,disableStackTrace);result=validated})),result}isValid(value,options){return this.validate(value,options).then((()=>!0),(err=>{if(ValidationError.isError(err))return!1;throw err}))}isValidSync(value,options){try{return this.validateSync(value,options),!0}catch(err){if(ValidationError.isError(err))return!1;throw err}}_getDefault(options){let defaultValue=this.spec.default;return null==defaultValue?defaultValue:"function"==typeof defaultValue?defaultValue.call(this,options):clone(defaultValue)}getDefault(options){return this.resolve(options||{})._getDefault(options)}default(def){if(0===arguments.length)return this._getDefault();return this.clone({default:def})}strict(isStrict=!0){return this.clone({strict:isStrict})}nullability(nullable,message){const next=this.clone({nullable});return next.internalTests.nullable=createValidation({message,name:"nullable",test(value){return null!==value||this.schema.spec.nullable}}),next}optionality(optional,message){const next=this.clone({optional});return next.internalTests.optionality=createValidation({message,name:"optionality",test(value){return void 0!==value||this.schema.spec.optional}}),next}optional(){return this.optionality(!0)}defined(message=mixed.defined){return this.optionality(!1,message)}nullable(){return this.nullability(!0)}nonNullable(message=mixed.notNull){return this.nullability(!1,message)}required(message=mixed.required){return this.clone().withMutation((next=>next.nonNullable(message).defined(message)))}notRequired(){return this.clone().withMutation((next=>next.nullable().optional()))}transform(fn){let next=this.clone();return next.transforms.push(fn),next}test(...args){let opts;if(opts=1===args.length?"function"==typeof args[0]?{test:args[0]}:args[0]:2===args.length?{name:args[0],test:args[1]}:{name:args[0],message:args[1],test:args[2]},void 0===opts.message&&(opts.message=mixed.default),"function"!=typeof opts.test)throw new TypeError("`test` is a required parameters");let next=this.clone(),validate=createValidation(opts),isExclusive=opts.exclusive||opts.name&&!0===next.exclusiveTests[opts.name];if(opts.exclusive&&!opts.name)throw new TypeError("Exclusive tests must provide a unique `name` identifying the test");return opts.name&&(next.exclusiveTests[opts.name]=!!opts.exclusive),next.tests=next.tests.filter((fn=>{if(fn.OPTIONS.name===opts.name){if(isExclusive)return!1;if(fn.OPTIONS.test===validate.OPTIONS.test)return!1}return!0})),next.tests.push(validate),next}when(keys,options){Array.isArray(keys)||"string"==typeof keys||(options=keys,keys=".");let next=this.clone(),deps=toArray(keys).map((key=>new Reference(key)));return deps.forEach((dep=>{dep.isSibling&&next.deps.push(dep.key)})),next.conditions.push("function"==typeof options?new Condition(deps,options):Condition.fromOptions(deps,options)),next}typeError(message){let next=this.clone();return next.internalTests.typeError=createValidation({message,name:"typeError",skipAbsent:!0,test(value){return!!this.schema._typeCheck(value)||this.createError({params:{type:this.schema.type}})}}),next}oneOf(enums,message=mixed.oneOf){let next=this.clone();return enums.forEach((val=>{next._whitelist.add(val),next._blacklist.delete(val)})),next.internalTests.whiteList=createValidation({message,name:"oneOf",skipAbsent:!0,test(value){let valids=this.schema._whitelist,resolved=valids.resolveAll(this.resolve);return!!resolved.includes(value)||this.createError({params:{values:Array.from(valids).join(", "),resolved}})}}),next}notOneOf(enums,message=mixed.notOneOf){let next=this.clone();return enums.forEach((val=>{next._blacklist.add(val),next._whitelist.delete(val)})),next.internalTests.blacklist=createValidation({message,name:"notOneOf",test(value){let invalids=this.schema._blacklist,resolved=invalids.resolveAll(this.resolve);return!resolved.includes(value)||this.createError({params:{values:Array.from(invalids).join(", "),resolved}})}}),next}strip(strip=!0){let next=this.clone();return next.spec.strip=strip,next}describe(options){const next=(options?this.resolve(options):this).clone(),{label,meta,optional,nullable}=next.spec;return{meta,label,optional,nullable,default:next.getDefault(options),type:next.type,oneOf:next._whitelist.describe(),notOneOf:next._blacklist.describe(),tests:next.tests.map((fn=>({name:fn.OPTIONS.name,params:fn.OPTIONS.params}))).filter(((n,idx,list)=>list.findIndex((c=>c.name===n.name))===idx))}}}Schema.prototype.__isYupSchema__=!0;for(const method of["validate","validateSync"])Schema.prototype[`${method}At`]=function(path,value,options={}){const{parent,parentPath,schema}=getIn(this,path,value,options.context);return schema[method](parent&&parent[parentPath],Object.assign({},options,{parent,path}))};for(const alias of["equals","is"])Schema.prototype[alias]=Schema.prototype.oneOf;for(const alias of["not","nope"])Schema.prototype[alias]=Schema.prototype.notOneOf;const isoReg=/^(\d{4}|[+-]\d{6})(?:-?(\d{2})(?:-?(\d{2}))?)?(?:[ T]?(\d{2}):?(\d{2})(?::?(\d{2})(?:[,.](\d{1,}))?)?(?:(Z)|([+-])(\d{2})(?::?(\d{2}))?)?)?$/;function parseDateStruct(date){var _regexResult$7$length,_regexResult$;const regexResult=isoReg.exec(date);return regexResult?{year:toNumber(regexResult[1]),month:toNumber(regexResult[2],1)-1,day:toNumber(regexResult[3],1),hour:toNumber(regexResult[4]),minute:toNumber(regexResult[5]),second:toNumber(regexResult[6]),millisecond:regexResult[7]?toNumber(regexResult[7].substring(0,3)):0,precision:null!=(_regexResult$7$length=null==(_regexResult$=regexResult[7])?void 0:_regexResult$.length)?_regexResult$7$length:void 0,z:regexResult[8]||void 0,plusMinus:regexResult[9]||void 0,hourOffset:toNumber(regexResult[10]),minuteOffset:toNumber(regexResult[11])}:null}function toNumber(str,defaultValue=0){return Number(str)||defaultValue}let rEmail=/^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,rUrl=/^((https?|ftp):)?\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i,rUUID=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,rIsoDateTime=new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$"),isTrimmed=value=>isAbsent(value)||value===value.trim(),objStringTag={}.toString();function create$6(){return new StringSchema}class StringSchema extends Schema{constructor(){super({type:"string",check:value=>(value instanceof String&&(value=value.valueOf()),"string"==typeof value)}),this.withMutation((()=>{this.transform(((value,_raw,ctx)=>{if(!ctx.spec.coerce||ctx.isType(value))return value;if(Array.isArray(value))return value;const strValue=null!=value&&value.toString?value.toString():value;return strValue===objStringTag?value:strValue}))}))}required(message){return super.required(message).withMutation((schema=>schema.test({message:message||mixed.required,name:"required",skipAbsent:!0,test:value=>!!value.length})))}notRequired(){return super.notRequired().withMutation((schema=>(schema.tests=schema.tests.filter((t=>"required"!==t.OPTIONS.name)),schema)))}length(length,message=string.length){return this.test({message,name:"length",exclusive:!0,params:{length},skipAbsent:!0,test(value){return value.length===this.resolve(length)}})}min(min,message=string.min){return this.test({message,name:"min",exclusive:!0,params:{min},skipAbsent:!0,test(value){return value.length>=this.resolve(min)}})}max(max,message=string.max){return this.test({name:"max",exclusive:!0,message,params:{max},skipAbsent:!0,test(value){return value.length<=this.resolve(max)}})}matches(regex,options){let message,name,excludeEmptyString=!1;return options&&("object"==typeof options?({excludeEmptyString=!1,message,name}=options):message=options),this.test({name:name||"matches",message:message||string.matches,params:{regex},skipAbsent:!0,test:value=>""===value&&excludeEmptyString||-1!==value.search(regex)})}email(message=string.email){return this.matches(rEmail,{name:"email",message,excludeEmptyString:!0})}url(message=string.url){return this.matches(rUrl,{name:"url",message,excludeEmptyString:!0})}uuid(message=string.uuid){return this.matches(rUUID,{name:"uuid",message,excludeEmptyString:!1})}datetime(options){let allowOffset,precision,message="";return options&&("object"==typeof options?({message="",allowOffset=!1,precision}=options):message=options),this.matches(rIsoDateTime,{name:"datetime",message:message||string.datetime,excludeEmptyString:!0}).test({name:"datetime_offset",message:message||string.datetime_offset,params:{allowOffset},skipAbsent:!0,test:value=>{if(!value||allowOffset)return!0;const struct=parseDateStruct(value);return!!struct&&!!struct.z}}).test({name:"datetime_precision",message:message||string.datetime_precision,params:{precision},skipAbsent:!0,test:value=>{if(!value||null==precision)return!0;const struct=parseDateStruct(value);return!!struct&&struct.precision===precision}})}ensure(){return this.default("").transform((val=>null===val?"":val))}trim(message=string.trim){return this.transform((val=>null!=val?val.trim():val)).test({message,name:"trim",test:isTrimmed})}lowercase(message=string.lowercase){return this.transform((value=>isAbsent(value)?value:value.toLowerCase())).test({message,name:"string_case",exclusive:!0,skipAbsent:!0,test:value=>isAbsent(value)||value===value.toLowerCase()})}uppercase(message=string.uppercase){return this.transform((value=>isAbsent(value)?value:value.toUpperCase())).test({message,name:"string_case",exclusive:!0,skipAbsent:!0,test:value=>isAbsent(value)||value===value.toUpperCase()})}}create$6.prototype=StringSchema.prototype;function create$5(){return new NumberSchema}class NumberSchema extends Schema{constructor(){super({type:"number",check:value=>(value instanceof Number&&(value=value.valueOf()),"number"==typeof value&&!(value=>value!=+value)(value))}),this.withMutation((()=>{this.transform(((value,_raw,ctx)=>{if(!ctx.spec.coerce)return value;let parsed=value;if("string"==typeof parsed){if(parsed=parsed.replace(/\s/g,""),""===parsed)return NaN;parsed=+parsed}return ctx.isType(parsed)||null===parsed?parsed:parseFloat(parsed)}))}))}min(min,message=number.min){return this.test({message,name:"min",exclusive:!0,params:{min},skipAbsent:!0,test(value){return value>=this.resolve(min)}})}max(max,message=number.max){return this.test({message,name:"max",exclusive:!0,params:{max},skipAbsent:!0,test(value){return value<=this.resolve(max)}})}lessThan(less,message=number.lessThan){return this.test({message,name:"max",exclusive:!0,params:{less},skipAbsent:!0,test(value){return value<this.resolve(less)}})}moreThan(more,message=number.moreThan){return this.test({message,name:"min",exclusive:!0,params:{more},skipAbsent:!0,test(value){return value>this.resolve(more)}})}positive(msg=number.positive){return this.moreThan(0,msg)}negative(msg=number.negative){return this.lessThan(0,msg)}integer(message=number.integer){return this.test({name:"integer",message,skipAbsent:!0,test:val=>Number.isInteger(val)})}truncate(){return this.transform((value=>isAbsent(value)?value:0|value))}round(method){var _method;let avail=["ceil","floor","round","trunc"];if("trunc"===(method=(null==(_method=method)?void 0:_method.toLowerCase())||"round"))return this.truncate();if(-1===avail.indexOf(method.toLowerCase()))throw new TypeError("Only valid options for round() are: "+avail.join(", "));return this.transform((value=>isAbsent(value)?value:Math[method](value)))}}create$5.prototype=NumberSchema.prototype;let invalidDate=new Date("");function create$4(){return new DateSchema}class DateSchema extends Schema{constructor(){super({type:"date",check(v){return obj=v,"[object Date]"===Object.prototype.toString.call(obj)&&!isNaN(v.getTime());var obj}}),this.withMutation((()=>{this.transform(((value,_raw,ctx)=>!ctx.spec.coerce||ctx.isType(value)||null===value?value:(value=function parseIsoDate(date){const struct=parseDateStruct(date);if(!struct)return Date.parse?Date.parse(date):Number.NaN;if(void 0===struct.z&&void 0===struct.plusMinus)return new Date(struct.year,struct.month,struct.day,struct.hour,struct.minute,struct.second,struct.millisecond).valueOf();let totalMinutesOffset=0;return"Z"!==struct.z&&void 0!==struct.plusMinus&&(totalMinutesOffset=60*struct.hourOffset+struct.minuteOffset,"+"===struct.plusMinus&&(totalMinutesOffset=0-totalMinutesOffset)),Date.UTC(struct.year,struct.month,struct.day,struct.hour,struct.minute+totalMinutesOffset,struct.second,struct.millisecond)}(value),isNaN(value)?DateSchema.INVALID_DATE:new Date(value))))}))}prepareParam(ref,name){let param;if(Reference.isRef(ref))param=ref;else{let cast=this.cast(ref);if(!this._typeCheck(cast))throw new TypeError(`\`${name}\` must be a Date or a value that can be \`cast()\` to a Date`);param=cast}return param}min(min,message=date.min){let limit=this.prepareParam(min,"min");return this.test({message,name:"min",exclusive:!0,params:{min},skipAbsent:!0,test(value){return value>=this.resolve(limit)}})}max(max,message=date.max){let limit=this.prepareParam(max,"max");return this.test({message,name:"max",exclusive:!0,params:{max},skipAbsent:!0,test(value){return value<=this.resolve(limit)}})}}function findIndex(arr,err){let idx=1/0;return arr.some(((key,ii)=>{var _err$path;if(null!=(_err$path=err.path)&&_err$path.includes(key))return idx=ii,!0})),idx}function sortByKeyOrder(keys){return(a,b)=>findIndex(keys,a)-findIndex(keys,b)}DateSchema.INVALID_DATE=invalidDate,create$4.prototype=DateSchema.prototype,create$4.INVALID_DATE=invalidDate;const parseJson=(value,_,ctx)=>{if("string"!=typeof value)return value;let parsed=value;try{parsed=JSON.parse(value)}catch(err){}return ctx.isType(parsed)?parsed:value};function deepPartial(schema){if("fields"in schema){const partial={};for(const[key,fieldSchema]of Object.entries(schema.fields))partial[key]=deepPartial(fieldSchema);return schema.setFields(partial)}if("array"===schema.type){const nextArray=schema.optional();return nextArray.innerType&&(nextArray.innerType=deepPartial(nextArray.innerType)),nextArray}return"tuple"===schema.type?schema.optional().clone({types:schema.spec.types.map(deepPartial)}):"optional"in schema?schema.optional():schema}let isObject=obj=>"[object Object]"===Object.prototype.toString.call(obj);const defaultSort=sortByKeyOrder([]);function create$3(spec){return new ObjectSchema(spec)}class ObjectSchema extends Schema{constructor(spec){super({type:"object",check:value=>isObject(value)||"function"==typeof value}),this.fields=Object.create(null),this._sortErrors=defaultSort,this._nodes=[],this._excludedEdges=[],this.withMutation((()=>{spec&&this.shape(spec)}))}_cast(_value,options={}){var _options$stripUnknown;let value=super._cast(_value,options);if(void 0===value)return this.getDefault(options);if(!this._typeCheck(value))return value;let fields=this.fields,strip=null!=(_options$stripUnknown=options.stripUnknown)?_options$stripUnknown:this.spec.noUnknown,props=[].concat(this._nodes,Object.keys(value).filter((v=>!this._nodes.includes(v)))),intermediateValue={},innerOptions=Object.assign({},options,{parent:intermediateValue,__validating:options.__validating||!1}),isChanged=!1;for(const prop of props){let field=fields[prop],exists=prop in value;if(field){let fieldValue,inputValue=value[prop];innerOptions.path=(options.path?`${options.path}.`:"")+prop,field=field.resolve({value:inputValue,context:options.context,parent:intermediateValue});let fieldSpec=field instanceof Schema?field.spec:void 0,strict=null==fieldSpec?void 0:fieldSpec.strict;if(null!=fieldSpec&&fieldSpec.strip){isChanged=isChanged||prop in value;continue}fieldValue=options.__validating&&strict?value[prop]:field.cast(value[prop],innerOptions),void 0!==fieldValue&&(intermediateValue[prop]=fieldValue)}else exists&&!strip&&(intermediateValue[prop]=value[prop]);exists===prop in intermediateValue&&intermediateValue[prop]===value[prop]||(isChanged=!0)}return isChanged?intermediateValue:value}_validate(_value,options={},panic,next){let{from=[],originalValue=_value,recursive=this.spec.recursive}=options;options.from=[{schema:this,value:originalValue},...from],options.__validating=!0,options.originalValue=originalValue,super._validate(_value,options,panic,((objectErrors,value)=>{if(!recursive||!isObject(value))return void next(objectErrors,value);originalValue=originalValue||value;let tests=[];for(let key of this._nodes){let field=this.fields[key];field&&!Reference.isRef(field)&&tests.push(field.asNestedTest({options,key,parent:value,parentPath:options.path,originalParent:originalValue}))}this.runTests({tests,value,originalValue,options},panic,(fieldErrors=>{next(fieldErrors.sort(this._sortErrors).concat(objectErrors),value)}))}))}clone(spec){const next=super.clone(spec);return next.fields=Object.assign({},this.fields),next._nodes=this._nodes,next._excludedEdges=this._excludedEdges,next._sortErrors=this._sortErrors,next}concat(schema){let next=super.concat(schema),nextFields=next.fields;for(let[field,schemaOrRef]of Object.entries(this.fields)){const target=nextFields[field];nextFields[field]=void 0===target?schemaOrRef:target}return next.withMutation((s=>s.setFields(nextFields,[...this._excludedEdges,...schema._excludedEdges])))}_getDefault(options){if("default"in this.spec)return super._getDefault(options);if(!this._nodes.length)return;let dft={};return this._nodes.forEach((key=>{var _innerOptions;const field=this.fields[key];let innerOptions=options;null!=(_innerOptions=innerOptions)&&_innerOptions.value&&(innerOptions=Object.assign({},innerOptions,{parent:innerOptions.value,value:innerOptions.value[key]})),dft[key]=field&&"getDefault"in field?field.getDefault(innerOptions):void 0})),dft}setFields(shape,excludedEdges){let next=this.clone();return next.fields=shape,next._nodes=function sortFields(fields,excludedEdges=[]){let edges=[],nodes=new Set,excludes=new Set(excludedEdges.map((([a,b])=>`${a}-${b}`)));function addNode(depPath,key){let node=(0,property_expr__WEBPACK_IMPORTED_MODULE_0__.split)(depPath)[0];nodes.add(node),excludes.has(`${key}-${node}`)||edges.push([key,node])}for(const key of Object.keys(fields)){let value=fields[key];nodes.add(key),Reference.isRef(value)&&value.isSibling?addNode(value.path,key):isSchema(value)&&"deps"in value&&value.deps.forEach((path=>addNode(path,key)))}return toposort__WEBPACK_IMPORTED_MODULE_2___default().array(Array.from(nodes),edges).reverse()}(shape,excludedEdges),next._sortErrors=sortByKeyOrder(Object.keys(shape)),excludedEdges&&(next._excludedEdges=excludedEdges),next}shape(additions,excludes=[]){return this.clone().withMutation((next=>{let edges=next._excludedEdges;return excludes.length&&(Array.isArray(excludes[0])||(excludes=[excludes]),edges=[...next._excludedEdges,...excludes]),next.setFields(Object.assign(next.fields,additions),edges)}))}partial(){const partial={};for(const[key,schema]of Object.entries(this.fields))partial[key]="optional"in schema&&schema.optional instanceof Function?schema.optional():schema;return this.setFields(partial)}deepPartial(){return deepPartial(this)}pick(keys){const picked={};for(const key of keys)this.fields[key]&&(picked[key]=this.fields[key]);return this.setFields(picked,this._excludedEdges.filter((([a,b])=>keys.includes(a)&&keys.includes(b))))}omit(keys){const remaining=[];for(const key of Object.keys(this.fields))keys.includes(key)||remaining.push(key);return this.pick(remaining)}from(from,to,alias){let fromGetter=(0,property_expr__WEBPACK_IMPORTED_MODULE_0__.getter)(from,!0);return this.transform((obj=>{if(!obj)return obj;let newObj=obj;return((obj,p)=>{const path=[...(0,property_expr__WEBPACK_IMPORTED_MODULE_0__.normalizePath)(p)];if(1===path.length)return path[0]in obj;let last=path.pop(),parent=(0,property_expr__WEBPACK_IMPORTED_MODULE_0__.getter)((0,property_expr__WEBPACK_IMPORTED_MODULE_0__.join)(path),!0)(obj);return!(!parent||!(last in parent))})(obj,from)&&(newObj=Object.assign({},obj),alias||delete newObj[from],newObj[to]=fromGetter(obj)),newObj}))}json(){return this.transform(parseJson)}noUnknown(noAllow=!0,message=object.noUnknown){"boolean"!=typeof noAllow&&(message=noAllow,noAllow=!0);let next=this.test({name:"noUnknown",exclusive:!0,message,test(value){if(null==value)return!0;const unknownKeys=function unknown(ctx,value){let known=Object.keys(ctx.fields);return Object.keys(value).filter((key=>-1===known.indexOf(key)))}(this.schema,value);return!noAllow||0===unknownKeys.length||this.createError({params:{unknown:unknownKeys.join(", ")}})}});return next.spec.noUnknown=noAllow,next}unknown(allow=!0,message=object.noUnknown){return this.noUnknown(!allow,message)}transformKeys(fn){return this.transform((obj=>{if(!obj)return obj;const result={};for(const key of Object.keys(obj))result[fn(key)]=obj[key];return result}))}camelCase(){return this.transformKeys(tiny_case__WEBPACK_IMPORTED_MODULE_1__.camelCase)}snakeCase(){return this.transformKeys(tiny_case__WEBPACK_IMPORTED_MODULE_1__.snakeCase)}constantCase(){return this.transformKeys((key=>(0,tiny_case__WEBPACK_IMPORTED_MODULE_1__.snakeCase)(key).toUpperCase()))}describe(options){const next=(options?this.resolve(options):this).clone(),base=super.describe(options);base.fields={};for(const[key,value]of Object.entries(next.fields)){var _innerOptions2;let innerOptions=options;null!=(_innerOptions2=innerOptions)&&_innerOptions2.value&&(innerOptions=Object.assign({},innerOptions,{parent:innerOptions.value,value:innerOptions.value[key]})),base.fields[key]=value.describe(innerOptions)}return base}}create$3.prototype=ObjectSchema.prototype},"../node_modules/@faker-js/faker/dist/chunk-LSEVNFON.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{a:()=>chunk_LSEVNFON_f});var ys={airline:{airline:[{name:"Aegean Airlines",iataCode:"A3"},{name:"Aeroflot",iataCode:"SU"},{name:"Aerolineas Argentinas",iataCode:"AR"},{name:"Aeromexico",iataCode:"AM"},{name:"Air Algerie",iataCode:"AH"},{name:"Air Arabia",iataCode:"G9"},{name:"Air Canada",iataCode:"AC"},{name:"Air China",iataCode:"CA"},{name:"Air Europa",iataCode:"UX"},{name:"Air France-KLM",iataCode:"AF"},{name:"Air India",iataCode:"AI"},{name:"Air Mauritius",iataCode:"MK"},{name:"Air New Zealand",iataCode:"NZ"},{name:"Air Niugini",iataCode:"PX"},{name:"Air Tahiti",iataCode:"VT"},{name:"Air Tahiti Nui",iataCode:"TN"},{name:"Air Transat",iataCode:"TS"},{name:"AirAsia X",iataCode:"D7"},{name:"AirAsia",iataCode:"AK"},{name:"Aircalin",iataCode:"SB"},{name:"Alaska Airlines",iataCode:"AS"},{name:"Alitalia",iataCode:"AZ"},{name:"All Nippon Airways",iataCode:"NH"},{name:"Allegiant Air",iataCode:"G4"},{name:"American Airlines",iataCode:"AA"},{name:"Asiana Airlines",iataCode:"OZ"},{name:"Avianca",iataCode:"AV"},{name:"Azul Linhas Aereas Brasileiras",iataCode:"AD"},{name:"Azur Air",iataCode:"ZF"},{name:"Beijing Capital Airlines",iataCode:"JD"},{name:"Boliviana de Aviacion",iataCode:"OB"},{name:"British Airways",iataCode:"BA"},{name:"Cathay Pacific",iataCode:"CX"},{name:"Cebu Pacific Air",iataCode:"5J"},{name:"China Airlines",iataCode:"CI"},{name:"China Eastern Airlines",iataCode:"MU"},{name:"China Southern Airlines",iataCode:"CZ"},{name:"Condor",iataCode:"DE"},{name:"Copa Airlines",iataCode:"CM"},{name:"Delta Air Lines",iataCode:"DL"},{name:"Easyfly",iataCode:"VE"},{name:"EasyJet",iataCode:"U2"},{name:"EcoJet",iataCode:"8J"},{name:"Egyptair",iataCode:"MS"},{name:"El Al",iataCode:"LY"},{name:"Emirates Airlines",iataCode:"EK"},{name:"Ethiopian Airlines",iataCode:"ET"},{name:"Etihad Airways",iataCode:"EY"},{name:"EVA Air",iataCode:"BR"},{name:"Fiji Airways",iataCode:"FJ"},{name:"Finnair",iataCode:"AY"},{name:"Flybondi",iataCode:"FO"},{name:"Flydubai",iataCode:"FZ"},{name:"FlySafair",iataCode:"FA"},{name:"Frontier Airlines",iataCode:"F9"},{name:"Garuda Indonesia",iataCode:"GA"},{name:"Go First",iataCode:"G8"},{name:"Gol Linhas Aereas Inteligentes",iataCode:"G3"},{name:"Hainan Airlines",iataCode:"HU"},{name:"Hawaiian Airlines",iataCode:"HA"},{name:"IndiGo Airlines",iataCode:"6E"},{name:"Japan Airlines",iataCode:"JL"},{name:"Jeju Air",iataCode:"7C"},{name:"Jet2",iataCode:"LS"},{name:"JetBlue Airways",iataCode:"B6"},{name:"JetSMART",iataCode:"JA"},{name:"Juneyao Airlines",iataCode:"HO"},{name:"Kenya Airways",iataCode:"KQ"},{name:"Korean Air",iataCode:"KE"},{name:"Kulula.com",iataCode:"MN"},{name:"LATAM Airlines",iataCode:"LA"},{name:"Lion Air",iataCode:"JT"},{name:"LOT Polish Airlines",iataCode:"LO"},{name:"Lufthansa",iataCode:"LH"},{name:"Libyan Airlines",iataCode:"LN"},{name:"Linea Aerea Amaszonas",iataCode:"Z8"},{name:"Malaysia Airlines",iataCode:"MH"},{name:"Nordwind Airlines",iataCode:"N4"},{name:"Norwegian Air Shuttle",iataCode:"DY"},{name:"Oman Air",iataCode:"WY"},{name:"Pakistan International Airlines",iataCode:"PK"},{name:"Pegasus Airlines",iataCode:"PC"},{name:"Philippine Airlines",iataCode:"PR"},{name:"Qantas Group",iataCode:"QF"},{name:"Qatar Airways",iataCode:"QR"},{name:"Republic Airways",iataCode:"YX"},{name:"Royal Air Maroc",iataCode:"AT"},{name:"Ryanair",iataCode:"FR"},{name:"S7 Airlines",iataCode:"S7"},{name:"SAS",iataCode:"SK"},{name:"Satena",iataCode:"9R"},{name:"Saudia",iataCode:"SV"},{name:"Shandong Airlines",iataCode:"SC"},{name:"Sichuan Airlines",iataCode:"3U"},{name:"Singapore Airlines",iataCode:"SQ"},{name:"Sky Airline",iataCode:"H2"},{name:"SkyWest Airlines",iataCode:"OO"},{name:"South African Airways",iataCode:"SA"},{name:"Southwest Airlines",iataCode:"WN"},{name:"SpiceJet",iataCode:"SG"},{name:"Spirit Airlines",iataCode:"NK"},{name:"Spring Airlines",iataCode:"9S"},{name:"SriLankan Airlines",iataCode:"UL"},{name:"Star Peru",iataCode:"2I"},{name:"Sun Country Airlines",iataCode:"SY"},{name:"SunExpress",iataCode:"XQ"},{name:"TAP Air Portugal",iataCode:"TP"},{name:"Thai AirAsia",iataCode:"FD"},{name:"Thai Airways",iataCode:"TG"},{name:"TUI Airways",iataCode:"BY"},{name:"Tunisair",iataCode:"TU"},{name:"Turkish Airlines",iataCode:"TK"},{name:"Ukraine International",iataCode:"PS"},{name:"United Airlines",iataCode:"UA"},{name:"Ural Airlines",iataCode:"U6"},{name:"VietJet Air",iataCode:"VJ"},{name:"Vietnam Airlines",iataCode:"VN"},{name:"Virgin Atlantic Airways",iataCode:"VS"},{name:"Virgin Australia",iataCode:"VA"},{name:"VivaAerobus",iataCode:"VB"},{name:"VOEPASS Linhas Aereas",iataCode:"2Z"},{name:"Volaris",iataCode:"Y4"},{name:"WestJet",iataCode:"WS"},{name:"Wingo",iataCode:"P5"},{name:"Wizz Air",iataCode:"W6"}],airplane:[{name:"Aerospatiale/BAC Concorde",iataTypeCode:"SSC"},{name:"Airbus A300",iataTypeCode:"AB3"},{name:"Airbus A310",iataTypeCode:"310"},{name:"Airbus A310-200",iataTypeCode:"312"},{name:"Airbus A310-300",iataTypeCode:"313"},{name:"Airbus A318",iataTypeCode:"318"},{name:"Airbus A319",iataTypeCode:"319"},{name:"Airbus A319neo",iataTypeCode:"31N"},{name:"Airbus A320",iataTypeCode:"320"},{name:"Airbus A320neo",iataTypeCode:"32N"},{name:"Airbus A321",iataTypeCode:"321"},{name:"Airbus A321neo",iataTypeCode:"32Q"},{name:"Airbus A330",iataTypeCode:"330"},{name:"Airbus A330-200",iataTypeCode:"332"},{name:"Airbus A330-300",iataTypeCode:"333"},{name:"Airbus A330-800neo",iataTypeCode:"338"},{name:"Airbus A330-900neo",iataTypeCode:"339"},{name:"Airbus A340",iataTypeCode:"340"},{name:"Airbus A340-200",iataTypeCode:"342"},{name:"Airbus A340-300",iataTypeCode:"343"},{name:"Airbus A340-500",iataTypeCode:"345"},{name:"Airbus A340-600",iataTypeCode:"346"},{name:"Airbus A350",iataTypeCode:"350"},{name:"Airbus A350-900",iataTypeCode:"359"},{name:"Airbus A350-1000",iataTypeCode:"351"},{name:"Airbus A380",iataTypeCode:"380"},{name:"Airbus A380-800",iataTypeCode:"388"},{name:"Antonov An-12",iataTypeCode:"ANF"},{name:"Antonov An-24",iataTypeCode:"AN4"},{name:"Antonov An-26",iataTypeCode:"A26"},{name:"Antonov An-28",iataTypeCode:"A28"},{name:"Antonov An-30",iataTypeCode:"A30"},{name:"Antonov An-32",iataTypeCode:"A32"},{name:"Antonov An-72",iataTypeCode:"AN7"},{name:"Antonov An-124 Ruslan",iataTypeCode:"A4F"},{name:"Antonov An-140",iataTypeCode:"A40"},{name:"Antonov An-148",iataTypeCode:"A81"},{name:"Antonov An-158",iataTypeCode:"A58"},{name:"Antonov An-225 Mriya",iataTypeCode:"A5F"},{name:"Boeing 707",iataTypeCode:"703"},{name:"Boeing 717",iataTypeCode:"717"},{name:"Boeing 720B",iataTypeCode:"B72"},{name:"Boeing 727",iataTypeCode:"727"},{name:"Boeing 727-100",iataTypeCode:"721"},{name:"Boeing 727-200",iataTypeCode:"722"},{name:"Boeing 737 MAX 7",iataTypeCode:"7M7"},{name:"Boeing 737 MAX 8",iataTypeCode:"7M8"},{name:"Boeing 737 MAX 9",iataTypeCode:"7M9"},{name:"Boeing 737 MAX 10",iataTypeCode:"7MJ"},{name:"Boeing 737",iataTypeCode:"737"},{name:"Boeing 737-100",iataTypeCode:"731"},{name:"Boeing 737-200",iataTypeCode:"732"},{name:"Boeing 737-300",iataTypeCode:"733"},{name:"Boeing 737-400",iataTypeCode:"734"},{name:"Boeing 737-500",iataTypeCode:"735"},{name:"Boeing 737-600",iataTypeCode:"736"},{name:"Boeing 737-700",iataTypeCode:"73G"},{name:"Boeing 737-800",iataTypeCode:"738"},{name:"Boeing 737-900",iataTypeCode:"739"},{name:"Boeing 747",iataTypeCode:"747"},{name:"Boeing 747-100",iataTypeCode:"741"},{name:"Boeing 747-200",iataTypeCode:"742"},{name:"Boeing 747-300",iataTypeCode:"743"},{name:"Boeing 747-400",iataTypeCode:"744"},{name:"Boeing 747-400D",iataTypeCode:"74J"},{name:"Boeing 747-8",iataTypeCode:"748"},{name:"Boeing 747SP",iataTypeCode:"74L"},{name:"Boeing 747SR",iataTypeCode:"74R"},{name:"Boeing 757",iataTypeCode:"757"},{name:"Boeing 757-200",iataTypeCode:"752"},{name:"Boeing 757-300",iataTypeCode:"753"},{name:"Boeing 767",iataTypeCode:"767"},{name:"Boeing 767-200",iataTypeCode:"762"},{name:"Boeing 767-300",iataTypeCode:"763"},{name:"Boeing 767-400",iataTypeCode:"764"},{name:"Boeing 777",iataTypeCode:"777"},{name:"Boeing 777-200",iataTypeCode:"772"},{name:"Boeing 777-200LR",iataTypeCode:"77L"},{name:"Boeing 777-300",iataTypeCode:"773"},{name:"Boeing 777-300ER",iataTypeCode:"77W"},{name:"Boeing 787",iataTypeCode:"787"},{name:"Boeing 787-8",iataTypeCode:"788"},{name:"Boeing 787-9",iataTypeCode:"789"},{name:"Boeing 787-10",iataTypeCode:"781"},{name:"Canadair Challenger",iataTypeCode:"CCJ"},{name:"Canadair CL-44",iataTypeCode:"CL4"},{name:"Canadair Regional Jet 100",iataTypeCode:"CR1"},{name:"Canadair Regional Jet 200",iataTypeCode:"CR2"},{name:"Canadair Regional Jet 700",iataTypeCode:"CR7"},{name:"Canadair Regional Jet 705",iataTypeCode:"CRA"},{name:"Canadair Regional Jet 900",iataTypeCode:"CR9"},{name:"Canadair Regional Jet 1000",iataTypeCode:"CRK"},{name:"De Havilland Canada DHC-2 Beaver",iataTypeCode:"DHP"},{name:"De Havilland Canada DHC-2 Turbo-Beaver",iataTypeCode:"DHR"},{name:"De Havilland Canada DHC-3 Otter",iataTypeCode:"DHL"},{name:"De Havilland Canada DHC-4 Caribou",iataTypeCode:"DHC"},{name:"De Havilland Canada DHC-6 Twin Otter",iataTypeCode:"DHT"},{name:"De Havilland Canada DHC-7 Dash 7",iataTypeCode:"DH7"},{name:"De Havilland Canada DHC-8-100 Dash 8 / 8Q",iataTypeCode:"DH1"},{name:"De Havilland Canada DHC-8-200 Dash 8 / 8Q",iataTypeCode:"DH2"},{name:"De Havilland Canada DHC-8-300 Dash 8 / 8Q",iataTypeCode:"DH3"},{name:"De Havilland Canada DHC-8-400 Dash 8Q",iataTypeCode:"DH4"},{name:"De Havilland DH.104 Dove",iataTypeCode:"DHD"},{name:"De Havilland DH.114 Heron",iataTypeCode:"DHH"},{name:"Douglas DC-3",iataTypeCode:"D3F"},{name:"Douglas DC-6",iataTypeCode:"D6F"},{name:"Douglas DC-8-50",iataTypeCode:"D8T"},{name:"Douglas DC-8-62",iataTypeCode:"D8L"},{name:"Douglas DC-8-72",iataTypeCode:"D8Q"},{name:"Douglas DC-9-10",iataTypeCode:"D91"},{name:"Douglas DC-9-20",iataTypeCode:"D92"},{name:"Douglas DC-9-30",iataTypeCode:"D93"},{name:"Douglas DC-9-40",iataTypeCode:"D94"},{name:"Douglas DC-9-50",iataTypeCode:"D95"},{name:"Douglas DC-10",iataTypeCode:"D10"},{name:"Douglas DC-10-10",iataTypeCode:"D1X"},{name:"Douglas DC-10-30",iataTypeCode:"D1Y"},{name:"Embraer 170",iataTypeCode:"E70"},{name:"Embraer 175",iataTypeCode:"E75"},{name:"Embraer 190",iataTypeCode:"E90"},{name:"Embraer 195",iataTypeCode:"E95"},{name:"Embraer E190-E2",iataTypeCode:"290"},{name:"Embraer E195-E2",iataTypeCode:"295"},{name:"Embraer EMB.110 Bandeirante",iataTypeCode:"EMB"},{name:"Embraer EMB.120 Brasilia",iataTypeCode:"EM2"},{name:"Embraer Legacy 600",iataTypeCode:"ER3"},{name:"Embraer Phenom 100",iataTypeCode:"EP1"},{name:"Embraer Phenom 300",iataTypeCode:"EP3"},{name:"Embraer RJ135",iataTypeCode:"ER3"},{name:"Embraer RJ140",iataTypeCode:"ERD"},{name:"Embraer RJ145 Amazon",iataTypeCode:"ER4"},{name:"Ilyushin IL18",iataTypeCode:"IL8"},{name:"Ilyushin IL62",iataTypeCode:"IL6"},{name:"Ilyushin IL76",iataTypeCode:"IL7"},{name:"Ilyushin IL86",iataTypeCode:"ILW"},{name:"Ilyushin IL96-300",iataTypeCode:"I93"},{name:"Ilyushin IL114",iataTypeCode:"I14"},{name:"Lockheed L-182 / 282 / 382 (L-100) Hercules",iataTypeCode:"LOH"},{name:"Lockheed L-188 Electra",iataTypeCode:"LOE"},{name:"Lockheed L-1011 Tristar",iataTypeCode:"L10"},{name:"Lockheed L-1049 Super Constellation",iataTypeCode:"L49"},{name:"McDonnell Douglas MD11",iataTypeCode:"M11"},{name:"McDonnell Douglas MD80",iataTypeCode:"M80"},{name:"McDonnell Douglas MD81",iataTypeCode:"M81"},{name:"McDonnell Douglas MD82",iataTypeCode:"M82"},{name:"McDonnell Douglas MD83",iataTypeCode:"M83"},{name:"McDonnell Douglas MD87",iataTypeCode:"M87"},{name:"McDonnell Douglas MD88",iataTypeCode:"M88"},{name:"McDonnell Douglas MD90",iataTypeCode:"M90"},{name:"Sukhoi Superjet 100-95",iataTypeCode:"SU9"},{name:"Tupolev Tu-134",iataTypeCode:"TU3"},{name:"Tupolev Tu-154",iataTypeCode:"TU5"},{name:"Tupolev Tu-204",iataTypeCode:"T20"},{name:"Yakovlev Yak-40",iataTypeCode:"YK4"},{name:"Yakovlev Yak-42",iataTypeCode:"YK2"}],airport:[{name:"Adelaide International Airport",iataCode:"ADL"},{name:"Adolfo Suarez Madrid-Barajas Airport",iataCode:"MAD"},{name:"Aeroparque Jorge Newbery Airport",iataCode:"AEP"},{name:"Afonso Pena International Airport",iataCode:"CWB"},{name:"Alfonso Bonilla Aragon International Airport",iataCode:"CLO"},{name:"Amsterdam Airport Schiphol",iataCode:"AMS"},{name:"Arturo Merino Benitez International Airport",iataCode:"SCL"},{name:"Auckland International Airport",iataCode:"AKL"},{name:"Beijing Capital International Airport",iataCode:"PEK"},{name:"Belem Val de Cans International Airport",iataCode:"BEL"},{name:"Belo Horizonte Tancredo Neves International Airport",iataCode:"CNF"},{name:"Berlin-Tegel Airport",iataCode:"TXL"},{name:"Bole International Airport",iataCode:"ADD"},{name:"Brasilia-Presidente Juscelino Kubitschek International Airport",iataCode:"BSB"},{name:"Brisbane International Airport",iataCode:"BNE"},{name:"Brussels Airport",iataCode:"BRU"},{name:"Cairns Airport",iataCode:"CNS"},{name:"Cairo International Airport",iataCode:"CAI"},{name:"Canberra Airport",iataCode:"CBR"},{name:"Capetown International Airport",iataCode:"CPT"},{name:"Charles de Gaulle International Airport",iataCode:"CDG"},{name:"Charlotte Douglas International Airport",iataCode:"CLT"},{name:"Chengdu Shuangliu International Airport",iataCode:"CTU"},{name:"Chhatrapati Shivaji International Airport",iataCode:"BOM"},{name:"Chicago O'Hare International Airport",iataCode:"ORD"},{name:"Chongqing Jiangbei International Airport",iataCode:"CKG"},{name:"Christchurch International Airport",iataCode:"CHC"},{name:"Copenhagen Kastrup Airport",iataCode:"CPH"},{name:"Dallas Fort Worth International Airport",iataCode:"DFW"},{name:"Daniel K. Inouye International Airport",iataCode:"HNL"},{name:"Denver International Airport",iataCode:"DEN"},{name:"Don Mueang International Airport",iataCode:"DMK"},{name:"Dubai International Airport",iataCode:"DXB"},{name:"Dublin Airport",iataCode:"DUB"},{name:"Dusseldorf Airport",iataCode:"DUS"},{name:"El Dorado International Airport",iataCode:"BOG"},{name:"Eleftherios Venizelos International Airport",iataCode:"ATH"},{name:"Faa'a International Airport",iataCode:"PPT"},{name:"Fort Lauderdale Hollywood International Airport",iataCode:"FLL"},{name:"Fortaleza Pinto Martins International Airport",iataCode:"FOR"},{name:"Frankfurt am Main Airport",iataCode:"FRA"},{name:"George Bush Intercontinental Houston Airport",iataCode:"IAH"},{name:"Gold Coast Airport",iataCode:"OOL"},{name:"Guarulhos - Governador Andre Franco Montoro International Airport",iataCode:"GRU"},{name:"Hartsfield-Jackson Atlanta International Airport",iataCode:"ATL"},{name:"Helsinki Vantaa Airport",iataCode:"HEL"},{name:"Hobart International Airport",iataCode:"HBA"},{name:"Hong Kong International Airport",iataCode:"HKG"},{name:"Houari Boumediene Airport",iataCode:"ALG"},{name:"Hurgada International Airport",iataCode:"HRG"},{name:"Incheon International Airport",iataCode:"ICN"},{name:"Indira Gandhi International Airport",iataCode:"DEL"},{name:"Istanbul Airport",iataCode:"IST"},{name:"Jacksons International Airport",iataCode:"POM"},{name:"Jeju International Airport",iataCode:"CJU"},{name:"John F Kennedy International Airport",iataCode:"JFK"},{name:"Jorge Chavez International Airport",iataCode:"LIM"},{name:"Jose Maria Cordova International Airport",iataCode:"MDE"},{name:"Josep Tarradellas Barcelona-El Prat Airport",iataCode:"BCN"},{name:"Kahului Airport",iataCode:"OGG"},{name:"King Abdulaziz International Airport",iataCode:"JED"},{name:"Kuala Lumpur International Airport",iataCode:"KUL"},{name:"Kunming Changshui International Airport",iataCode:"KMG"},{name:"La Tontouta International Airport",iataCode:"NOU"},{name:"Leonardo da Vinci-Fiumicino Airport",iataCode:"FCO"},{name:"London Heathrow Airport",iataCode:"LHR"},{name:"Los Angeles International Airport",iataCode:"LAX"},{name:"McCarran International Airport",iataCode:"LAS"},{name:"Melbourne International Airport",iataCode:"MEL"},{name:"Mexico City International Airport",iataCode:"MEX"},{name:"Miami International Airport",iataCode:"MIA"},{name:"Ministro Pistarini International Airport",iataCode:"EZE"},{name:"Minneapolis-St Paul International/Wold-Chamberlain Airport",iataCode:"MSP"},{name:"Mohammed V International Airport",iataCode:"CMN"},{name:"Moscow Domodedovo Airport",iataCode:"DME"},{name:"Munich Airport",iataCode:"MUC"},{name:"Murtala Muhammed International Airport",iataCode:"LOS"},{name:"Nadi International Airport",iataCode:"NAN"},{name:"Nairobi Jomo Kenyatta International Airport",iataCode:"NBO"},{name:"Narita International Airport",iataCode:"NRT"},{name:"Newark Liberty International Airport",iataCode:"EWR"},{name:"Ninoy Aquino International Airport",iataCode:"MNL"},{name:"Noumea Magenta Airport",iataCode:"GEA"},{name:"O. R. Tambo International Airport",iataCode:"JNB"},{name:"Orlando International Airport",iataCode:"MCO"},{name:"Oslo Lufthavn",iataCode:"OSL"},{name:"Perth Airport",iataCode:"PER"},{name:"Phoenix Sky Harbor International Airport",iataCode:"PHX"},{name:"Recife Guararapes-Gilberto Freyre International Airport",iataCode:"REC"},{name:"Rio de Janeiro Galeao International Airport",iataCode:"GIG"},{name:"Salgado Filho International Airport",iataCode:"POA"},{name:"Salvador Deputado Luis Eduardo Magalhaes International Airport",iataCode:"SSA"},{name:"San Francisco International Airport",iataCode:"SFO"},{name:"Santos Dumont Airport",iataCode:"SDU"},{name:"Sao Paulo-Congonhas Airport",iataCode:"CGH"},{name:"Seattle Tacoma International Airport",iataCode:"SEA"},{name:"Shanghai Hongqiao International Airport",iataCode:"SHA"},{name:"Shanghai Pudong International Airport",iataCode:"PVG"},{name:"Shenzhen Bao'an International Airport",iataCode:"SZX"},{name:"Sheremetyevo International Airport",iataCode:"SVO"},{name:"Singapore Changi Airport",iataCode:"SIN"},{name:"Soekarno-Hatta International Airport",iataCode:"CGK"},{name:'Stockholm-Arlanda Airport"',iataCode:"ARN"},{name:"Suvarnabhumi Airport",iataCode:"BKK"},{name:"Sydney Kingsford Smith International Airport",iataCode:"SYD"},{name:"Taiwan Taoyuan International Airport",iataCode:"TPE"},{name:"Tan Son Nhat International Airport",iataCode:"SGN"},{name:"Tokyo Haneda International Airport",iataCode:"HND"},{name:"Toronto Pearson International Airport",iataCode:"YYZ"},{name:"Tunis Carthage International Airport",iataCode:"TUN"},{name:"Vancouver International Airport",iataCode:"YVR"},{name:"Vienna International Airport",iataCode:"VIE"},{name:"Viracopos International Airport",iataCode:"VCP"},{name:"Vnukovo International Airport",iataCode:"VKO"},{name:"Wellington International Airport",iataCode:"WLG"},{name:"Xi'an Xianyang International Airport",iataCode:"XIY"},{name:"Zhukovsky International Airport",iataCode:"ZIA"},{name:"Zurich Airport",iataCode:"ZRH"}]},animal:{bear:["American black bear","Asian black bear","Brown bear","Giant panda","Polar bear","Sloth bear","Spectacled bear","Sun bear"],bird:["Abert's Towhee","Acadian Flycatcher","Acorn Woodpecker","Alder Flycatcher","Aleutian Tern","Allen's Hummingbird","Altamira Oriole","American Avocet","American Bittern","American Black Duck","American Coot","American Crow","American Dipper","American Golden-Plover","American Goldfinch","American Kestrel","American Oystercatcher","American Pipit","American Redstart","American Robin","American Tree Sparrow","American White Pelican","American Wigeon","American Woodcock","Ancient Murrelet","Anhinga","Anna's Hummingbird","Antillean Nighthawk","Antillean Palm Swift","Aplomado Falcon","Arctic Loon","Arctic Tern","Arctic Warbler","Ash-throated Flycatcher","Ashy Storm-Petrel","Asian Brown Flycatcher","Atlantic Puffin","Audubon's Oriole","Audubon's Shearwater","Aztec Thrush","Azure Gallinule","Bachman's Sparrow","Bachman's Warbler","Bahama Mockingbird","Bahama Swallow","Bahama Woodstar","Baikal Teal","Baird's Sandpiper","Baird's Sparrow","Bald Eagle","Baltimore Oriole","Bananaquit","Band-rumped Storm-Petrel","Band-tailed Gull","Band-tailed Pigeon","Bank Swallow","Bar-tailed Godwit","Barn Owl","Barn Swallow","Barnacle Goose","Barred Owl","Barrow's Goldeneye","Bay-breasted Warbler","Bean Goose","Bell's Vireo","Belted Kingfisher","Bendire's Thrasher","Berylline Hummingbird","Bewick's Wren","Bicknell's Thrush","Black Catbird","Black Guillemot","Black Noddy","Black Oystercatcher","Black Phoebe","Black Rail","Black Rosy-Finch","Black Scoter","Black Skimmer","Black Storm-Petrel","Black Swift","Black Tern","Black Turnstone","Black Vulture","Black-and-white Warbler","Black-backed Wagtail","Black-backed Woodpecker","Black-bellied Plover","Black-bellied Whistling-Duck","Black-billed Cuckoo","Black-billed Magpie","Black-browed Albatross","Black-capped Chickadee","Black-capped Gnatcatcher","Black-capped Petrel","Black-capped Vireo","Black-chinned Hummingbird","Black-chinned Sparrow","Black-crowned Night-Heron","Black-faced Grassquit","Black-footed Albatross","Black-headed Grosbeak","Black-headed Gull","Black-legged Kittiwake","Black-necked Stilt","Black-tailed Gnatcatcher","Black-tailed Godwit","Black-tailed Gull","Black-throated Blue Warbler","Black-throated Gray Warbler","Black-throated Green Warbler","Black-throated Sparrow","Black-vented Oriole","Black-vented Shearwater","Black-whiskered Vireo","Black-winged Stilt","Blackburnian Warbler","Blackpoll Warbler","Blue Bunting","Blue Grosbeak","Blue Grouse","Blue Jay","Blue Mockingbird","Blue-footed Booby","Blue-gray Gnatcatcher","Blue-headed Vireo","Blue-throated Hummingbird","Blue-winged Teal","Blue-winged Warbler","Bluethroat","Boat-tailed Grackle","Bobolink","Bohemian Waxwing","Bonaparte's Gull","Boreal Chickadee","Boreal Owl","Botteri's Sparrow","Brambling","Brandt's Cormorant","Brant","Brewer's Blackbird","Brewer's Sparrow","Bridled Tern","Bridled Titmouse","Bristle-thighed Curlew","Broad-billed Hummingbird","Broad-billed Sandpiper","Broad-tailed Hummingbird","Broad-winged Hawk","Bronzed Cowbird","Brown Booby","Brown Creeper","Brown Jay","Brown Noddy","Brown Pelican","Brown Shrike","Brown Thrasher","Brown-capped Rosy-Finch","Brown-chested Martin","Brown-crested Flycatcher","Brown-headed Cowbird","Brown-headed Nuthatch","Budgerigar","Buff-bellied Hummingbird","Buff-breasted Flycatcher","Buff-breasted Sandpiper","Buff-collared Nightjar","Bufflehead","Buller's Shearwater","Bullock's Oriole","Bumblebee Hummingbird","Burrowing Owl","Bushtit","Cactus Wren","California Condor","California Gnatcatcher","California Gull","California Quail","California Thrasher","California Towhee","Calliope Hummingbird","Canada Goose","Canada Warbler","Canvasback","Canyon Towhee","Canyon Wren","Cape May Warbler","Caribbean Elaenia","Carolina Chickadee","Carolina Parakeet","Carolina Wren","Caspian Tern","Cassin's Auklet","Cassin's Finch","Cassin's Kingbird","Cassin's Sparrow","Cassin's Vireo","Cattle Egret","Cave Swallow","Cedar Waxwing","Cerulean Warbler","Chestnut-backed Chickadee","Chestnut-collared Longspur","Chestnut-sided Warbler","Chihuahuan Raven","Chimney Swift","Chinese Egret","Chipping Sparrow","Chuck-will's-widow","Chukar","Cinnamon Hummingbird","Cinnamon Teal","Citrine Wagtail","Clapper Rail","Clark's Grebe","Clark's Nutcracker","Clay-colored Robin","Clay-colored Sparrow","Cliff Swallow","Colima Warbler","Collared Forest-Falcon","Collared Plover","Common Black-Hawk","Common Chaffinch","Common Crane","Common Cuckoo","Common Eider","Common Goldeneye","Common Grackle","Common Greenshank","Common Ground-Dove","Common House-Martin","Common Loon","Common Merganser","Common Moorhen","Common Murre","Common Nighthawk","Common Pauraque","Common Pochard","Common Poorwill","Common Raven","Common Redpoll","Common Ringed Plover","Common Rosefinch","Common Sandpiper","Common Snipe","Common Swift","Common Tern","Common Yellowthroat","Connecticut Warbler","Cook's Petrel","Cooper's Hawk","Cordilleran Flycatcher","Corn Crake","Cory's Shearwater","Costa's Hummingbird","Couch's Kingbird","Crane Hawk","Craveri's Murrelet","Crescent-chested Warbler","Crested Auklet","Crested Caracara","Crested Myna","Crimson-collared Grosbeak","Crissal Thrasher","Cuban Martin","Curlew Sandpiper","Curve-billed Thrasher","Dark-eyed Junco","Dickcissel","Double-crested Cormorant","Double-striped Thick-knee","Dovekie","Downy Woodpecker","Dunlin","Dusky Flycatcher","Dusky Thrush","Dusky Warbler","Dusky-capped Flycatcher","Eared Grebe","Eared Trogon","Eastern Bluebird","Eastern Kingbird","Eastern Meadowlark","Eastern Phoebe","Eastern Screech-Owl","Eastern Towhee","Eastern Wood-Pewee","Elegant Tern","Elegant Trogon","Elf Owl","Emperor Goose","Eskimo Curlew","Eurasian Blackbird","Eurasian Bullfinch","Eurasian Collared-Dove","Eurasian Coot","Eurasian Curlew","Eurasian Dotterel","Eurasian Hobby","Eurasian Jackdaw","Eurasian Kestrel","Eurasian Oystercatcher","Eurasian Siskin","Eurasian Tree Sparrow","Eurasian Wigeon","Eurasian Woodcock","Eurasian Wryneck","European Golden-Plover","European Starling","European Storm-Petrel","European Turtle-Dove","Evening Grosbeak","Eyebrowed Thrush","Falcated Duck","Fan-tailed Warbler","Far Eastern Curlew","Ferruginous Hawk","Ferruginous Pygmy-Owl","Field Sparrow","Fieldfare","Fish Crow","Five-striped Sparrow","Flame-colored Tanager","Flammulated Owl","Flesh-footed Shearwater","Florida Scrub-Jay","Fork-tailed Flycatcher","Fork-tailed Storm-Petrel","Fork-tailed Swift","Forster's Tern","Fox Sparrow","Franklin's Gull","Fulvous Whistling-Duck","Gadwall","Gambel's Quail","Garganey","Gila Woodpecker","Gilded Flicker","Glaucous Gull","Glaucous-winged Gull","Glossy Ibis","Golden Eagle","Golden-cheeked Warbler","Golden-crowned Kinglet","Golden-crowned Sparrow","Golden-crowned Warbler","Golden-fronted Woodpecker","Golden-winged Warbler","Grace's Warbler","Grasshopper Sparrow","Gray Bunting","Gray Catbird","Gray Flycatcher","Gray Hawk","Gray Jay","Gray Kingbird","Gray Partridge","Gray Silky-flycatcher","Gray Vireo","Gray Wagtail","Gray-breasted Martin","Gray-cheeked Thrush","Gray-crowned Rosy-Finch","Gray-crowned Yellowthroat","Gray-headed Chickadee","Gray-spotted Flycatcher","Gray-tailed Tattler","Great Auk","Great Black-backed Gull","Great Blue Heron","Great Cormorant","Great Crested Flycatcher","Great Egret","Great Frigatebird","Great Gray Owl","Great Horned Owl","Great Kiskadee","Great Knot","Great Skua","Great Spotted Woodpecker","Great-tailed Grackle","Greater Flamingo","Greater Pewee","Greater Prairie-chicken","Greater Roadrunner","Greater Scaup","Greater Shearwater","Greater White-fronted Goose","Greater Yellowlegs","Green Heron","Green Jay","Green Kingfisher","Green Sandpiper","Green Violet-ear","Green-breasted Mango","Green-tailed Towhee","Green-winged Teal","Greenish Elaenia","Groove-billed Ani","Gull-billed Tern","Gyrfalcon","Hairy Woodpecker","Hammond's Flycatcher","Harlequin Duck","Harris's Hawk","Harris's Sparrow","Hawfinch","Heermann's Gull","Henslow's Sparrow","Hepatic Tanager","Herald Petrel","Hermit Thrush","Hermit Warbler","Herring Gull","Himalayan Snowcock","Hoary Redpoll","Hooded Merganser","Hooded Oriole","Hooded Warbler","Hook-billed Kite","Hoopoe","Horned Grebe","Horned Lark","Horned Puffin","House Finch","House Sparrow","House Wren","Hudsonian Godwit","Hutton's Vireo","Iceland Gull","Inca Dove","Indigo Bunting","Island Scrub-Jay","Ivory Gull","Ivory-billed Woodpecker","Jabiru","Jack Snipe","Jungle Nightjar","Juniper Titmouse","Kentucky Warbler","Key West Quail-Dove","Killdeer","King Eider","King Rail","Kirtland's Warbler","Kittlitz's Murrelet","La Sagra's Flycatcher","Labrador Duck","Ladder-backed Woodpecker","Lanceolated Warbler","Lapland Longspur","Large-billed Tern","Lark Bunting","Lark Sparrow","Laughing Gull","Lawrence's Goldfinch","Laysan Albatross","Lazuli Bunting","Le Conte's Sparrow","Le Conte's Thrasher","Leach's Storm-Petrel","Least Auklet","Least Bittern","Least Flycatcher","Least Grebe","Least Sandpiper","Least Storm-Petrel","Least Tern","Lesser Black-backed Gull","Lesser Frigatebird","Lesser Goldfinch","Lesser Nighthawk","Lesser Prairie-chicken","Lesser Scaup","Lesser White-fronted Goose","Lesser Yellowlegs","Lewis's Woodpecker","Limpkin","Lincoln's Sparrow","Little Blue Heron","Little Bunting","Little Curlew","Little Egret","Little Gull","Little Ringed Plover","Little Shearwater","Little Stint","Loggerhead Kingbird","Loggerhead Shrike","Long-billed Curlew","Long-billed Dowitcher","Long-billed Murrelet","Long-billed Thrasher","Long-eared Owl","Long-tailed Jaeger","Long-toed Stint","Louisiana Waterthrush","Lucifer Hummingbird","Lucy's Warbler","MacGillivray's Warbler","Magnificent Frigatebird","Magnificent Hummingbird","Magnolia Warbler","Mallard","Mangrove Cuckoo","Manx Shearwater","Marbled Godwit","Marbled Murrelet","Marsh Sandpiper","Marsh Wren","Masked Booby","Masked Duck","Masked Tityra","McCown's Longspur","McKay's Bunting","Merlin","Mew Gull","Mexican Chickadee","Mexican Jay","Middendorff's Grasshopper-Warbler","Mississippi Kite","Mongolian Plover","Monk Parakeet","Montezuma Quail","Mottled Duck","Mottled Owl","Mottled Petrel","Mountain Bluebird","Mountain Chickadee","Mountain Plover","Mountain Quail","Mourning Dove","Mourning Warbler","Mugimaki Flycatcher","Murphy's Petrel","Muscovy Duck","Mute Swan","Narcissus Flycatcher","Nashville Warbler","Nelson's Sharp-tailed Sparrow","Neotropic Cormorant","Northern Beardless-Tyrannulet","Northern Bobwhite","Northern Cardinal","Northern Flicker","Northern Fulmar","Northern Gannet","Northern Goshawk","Northern Harrier","Northern Hawk Owl","Northern Jacana","Northern Lapwing","Northern Mockingbird","Northern Parula","Northern Pintail","Northern Pygmy-Owl","Northern Rough-winged Swallow","Northern Saw-whet Owl","Northern Shoveler","Northern Shrike","Northern Waterthrush","Northern Wheatear","Northwestern Crow","Nuttall's Woodpecker","Nutting's Flycatcher","Oak Titmouse","Oldsquaw","Olive Sparrow","Olive Warbler","Olive-backed Pipit","Olive-sided Flycatcher","Orange-crowned Warbler","Orchard Oriole","Oriental Cuckoo","Oriental Greenfinch","Oriental Pratincole","Oriental Scops-Owl","Oriental Turtle-Dove","Osprey","Ovenbird","Pacific Golden-Plover","Pacific Loon","Pacific-slope Flycatcher","Paint-billed Crake","Painted Bunting","Painted Redstart","Pallas's Bunting","Palm Warbler","Parakeet Auklet","Parasitic Jaeger","Passenger Pigeon","Pechora Pipit","Pectoral Sandpiper","Pelagic Cormorant","Peregrine Falcon","Phainopepla","Philadelphia Vireo","Pied-billed Grebe","Pigeon Guillemot","Pileated Woodpecker","Pin-tailed Snipe","Pine Bunting","Pine Grosbeak","Pine Siskin","Pine Warbler","Pink-footed Goose","Pink-footed Shearwater","Pinyon Jay","Piping Plover","Plain Chachalaca","Plain-capped Starthroat","Plumbeous Vireo","Pomarine Jaeger","Prairie Falcon","Prairie Warbler","Prothonotary Warbler","Purple Finch","Purple Gallinule","Purple Martin","Purple Sandpiper","Pygmy Nuthatch","Pyrrhuloxia","Razorbill","Red Crossbill","Red Knot","Red Phalarope","Red-bellied Woodpecker","Red-billed Pigeon","Red-billed Tropicbird","Red-breasted Flycatcher","Red-breasted Merganser","Red-breasted Nuthatch","Red-breasted Sapsucker","Red-cockaded Woodpecker","Red-crowned Parrot","Red-eyed Vireo","Red-faced Cormorant","Red-faced Warbler","Red-flanked Bluetail","Red-footed Booby","Red-headed Woodpecker","Red-legged Kittiwake","Red-naped Sapsucker","Red-necked Grebe","Red-necked Phalarope","Red-necked Stint","Red-shouldered Hawk","Red-tailed Hawk","Red-tailed Tropicbird","Red-throated Loon","Red-throated Pipit","Red-whiskered Bulbul","Red-winged Blackbird","Reddish Egret","Redhead","Redwing","Reed Bunting","Rhinoceros Auklet","Ring-billed Gull","Ring-necked Duck","Ring-necked Pheasant","Ringed Kingfisher","Roadside Hawk","Rock Dove","Rock Ptarmigan","Rock Sandpiper","Rock Wren","Rose-breasted Grosbeak","Rose-throated Becard","Roseate Spoonbill","Roseate Tern","Ross's Goose","Ross's Gull","Rough-legged Hawk","Royal Tern","Ruby-crowned Kinglet","Ruby-throated Hummingbird","Ruddy Duck","Ruddy Ground-Dove","Ruddy Quail-Dove","Ruddy Turnstone","Ruff","Ruffed Grouse","Rufous Hummingbird","Rufous-backed Robin","Rufous-capped Warbler","Rufous-crowned Sparrow","Rufous-winged Sparrow","Rustic Bunting","Rusty Blackbird","Sabine's Gull","Sage Grouse","Sage Sparrow","Sage Thrasher","Saltmarsh Sharp-tailed Sparrow","Sanderling","Sandhill Crane","Sandwich Tern","Savannah Sparrow","Say's Phoebe","Scaled Quail","Scaly-naped Pigeon","Scarlet Ibis","Scarlet Tanager","Scissor-tailed Flycatcher","Scott's Oriole","Seaside Sparrow","Sedge Wren","Semipalmated Plover","Semipalmated Sandpiper","Sharp-shinned Hawk","Sharp-tailed Grouse","Sharp-tailed Sandpiper","Shiny Cowbird","Short-billed Dowitcher","Short-eared Owl","Short-tailed Albatross","Short-tailed Hawk","Short-tailed Shearwater","Shy Albatross","Siberian Accentor","Siberian Blue Robin","Siberian Flycatcher","Siberian Rubythroat","Sky Lark","Slate-throated Redstart","Slaty-backed Gull","Slender-billed Curlew","Smew","Smith's Longspur","Smooth-billed Ani","Snail Kite","Snow Bunting","Snow Goose","Snowy Egret","Snowy Owl","Snowy Plover","Solitary Sandpiper","Song Sparrow","Sooty Shearwater","Sooty Tern","Sora","South Polar Skua","Southern Martin","Spectacled Eider","Spoonbill Sandpiper","Spot-billed Duck","Spot-breasted Oriole","Spotted Dove","Spotted Owl","Spotted Rail","Spotted Redshank","Spotted Sandpiper","Spotted Towhee","Sprague's Pipit","Spruce Grouse","Stejneger's Petrel","Steller's Eider","Steller's Jay","Steller's Sea-Eagle","Stilt Sandpiper","Stonechat","Streak-backed Oriole","Streaked Shearwater","Strickland's Woodpecker","Stripe-headed Tanager","Sulphur-bellied Flycatcher","Summer Tanager","Surf Scoter","Surfbird","Swainson's Hawk","Swainson's Thrush","Swainson's Warbler","Swallow-tailed Kite","Swamp Sparrow","Tamaulipas Crow","Tawny-shouldered Blackbird","Temminck's Stint","Tennessee Warbler","Terek Sandpiper","Thayer's Gull","Thick-billed Kingbird","Thick-billed Murre","Thick-billed Parrot","Thick-billed Vireo","Three-toed Woodpecker","Townsend's Solitaire","Townsend's Warbler","Tree Pipit","Tree Swallow","Tricolored Blackbird","Tricolored Heron","Tropical Kingbird","Tropical Parula","Trumpeter Swan","Tufted Duck","Tufted Flycatcher","Tufted Puffin","Tufted Titmouse","Tundra Swan","Turkey Vulture","Upland Sandpiper","Varied Bunting","Varied Thrush","Variegated Flycatcher","Vaux's Swift","Veery","Verdin","Vermilion Flycatcher","Vesper Sparrow","Violet-crowned Hummingbird","Violet-green Swallow","Virginia Rail","Virginia's Warbler","Wandering Albatross","Wandering Tattler","Warbling Vireo","Wedge-rumped Storm-Petrel","Wedge-tailed Shearwater","Western Bluebird","Western Grebe","Western Gull","Western Kingbird","Western Meadowlark","Western Reef-Heron","Western Sandpiper","Western Screech-Owl","Western Scrub-Jay","Western Tanager","Western Wood-Pewee","Whimbrel","Whip-poor-will","Whiskered Auklet","Whiskered Screech-Owl","Whiskered Tern","White Ibis","White Wagtail","White-breasted Nuthatch","White-cheeked Pintail","White-chinned Petrel","White-collared Seedeater","White-collared Swift","White-crowned Pigeon","White-crowned Sparrow","White-eared Hummingbird","White-eyed Vireo","White-faced Ibis","White-faced Storm-Petrel","White-headed Woodpecker","White-rumped Sandpiper","White-tailed Eagle","White-tailed Hawk","White-tailed Kite","White-tailed Ptarmigan","White-tailed Tropicbird","White-throated Needletail","White-throated Robin","White-throated Sparrow","White-throated Swift","White-tipped Dove","White-winged Crossbill","White-winged Dove","White-winged Parakeet","White-winged Scoter","White-winged Tern","Whooper Swan","Whooping Crane","Wild Turkey","Willet","Williamson's Sapsucker","Willow Flycatcher","Willow Ptarmigan","Wilson's Phalarope","Wilson's Plover","Wilson's Storm-Petrel","Wilson's Warbler","Winter Wren","Wood Duck","Wood Sandpiper","Wood Stork","Wood Thrush","Wood Warbler","Worm-eating Warbler","Worthen's Sparrow","Wrentit","Xantus's Hummingbird","Xantus's Murrelet","Yellow Bittern","Yellow Grosbeak","Yellow Rail","Yellow Wagtail","Yellow Warbler","Yellow-bellied Flycatcher","Yellow-bellied Sapsucker","Yellow-billed Cuckoo","Yellow-billed Loon","Yellow-billed Magpie","Yellow-breasted Bunting","Yellow-breasted Chat","Yellow-crowned Night-Heron","Yellow-eyed Junco","Yellow-faced Grassquit","Yellow-footed Gull","Yellow-green Vireo","Yellow-headed Blackbird","Yellow-legged Gull","Yellow-nosed Albatross","Yellow-rumped Warbler","Yellow-throated Vireo","Yellow-throated Warbler","Yucatan Vireo","Zenaida Dove","Zone-tailed Hawk"],cat:["Abyssinian","American Bobtail","American Curl","American Shorthair","American Wirehair","Balinese","Bengal","Birman","Bombay","British Shorthair","Burmese","Chartreux","Chausie","Cornish Rex","Devon Rex","Donskoy","Egyptian Mau","Exotic Shorthair","Havana","Highlander","Himalayan","Japanese Bobtail","Korat","Kurilian Bobtail","LaPerm","Maine Coon","Manx","Minskin","Munchkin","Nebelung","Norwegian Forest Cat","Ocicat","Ojos Azules","Oriental","Persian","Peterbald","Pixiebob","Ragdoll","Russian Blue","Savannah","Scottish Fold","Selkirk Rex","Serengeti","Siamese","Siberian","Singapura","Snowshoe","Sokoke","Somali","Sphynx","Thai","Tonkinese","Toyger","Turkish Angora","Turkish Van"],cetacean:["Amazon River Dolphin","Arnoux's Beaked Whale","Atlantic Humpbacked Dolphin","Atlantic Spotted Dolphin","Atlantic White-Sided Dolphin","Australian Snubfin Dolphin","Australian humpback Dolphin","Blue Whale","Bottlenose Dolphin","Bryde’s whale","Burrunan Dolphin","Chilean Dolphin","Chinese River Dolphin","Chinese White Dolphin","Clymene Dolphin","Commerson’s Dolphin","Costero","Dusky Dolphin","False Killer Whale","Fin Whale","Fraser’s Dolphin","Ganges River Dolphin","Guiana Dolphin","Heaviside’s Dolphin","Hector’s Dolphin","Hourglass Dolphin","Humpback whale","Indo-Pacific Bottlenose Dolphin","Indo-Pacific Hump-backed Dolphin","Irrawaddy Dolphin","Killer Whale (Orca)","La Plata Dolphin","Long-Beaked Common Dolphin","Long-finned Pilot Whale","Longman's Beaked Whale","Melon-headed Whale","Northern Rightwhale Dolphin","Omura’s whale","Pacific White-Sided Dolphin","Pantropical Spotted Dolphin","Peale’s Dolphin","Pygmy Killer Whale","Risso’s Dolphin","Rough-Toothed Dolphin","Sei Whale","Short-Beaked Common Dolphin","Short-finned Pilot Whale","Southern Bottlenose Whale","Southern Rightwhale Dolphin","Sperm Whale","Spinner Dolphin","Striped Dolphin","Tucuxi","White-Beaked Dolphin"],cow:["Aberdeen Angus","Abergele","Abigar","Abondance","Abyssinian Shorthorned Zebu","Aceh","Achham","Adamawa","Adaptaur","Afar","Africangus","Afrikaner","Agerolese","Alambadi","Alatau","Albanian","Albera","Alderney","Alentejana","Aleutian wild cattle","Aliad Dinka","Alistana-Sanabresa","Allmogekor","Alur","American","American Angus","American Beef Friesian","American Brown Swiss","American Milking Devon","American White Park","Amerifax","Amrit Mahal","Amsterdam Island cattle","Anatolian Black","Andalusian Black","Andalusian Blond","Andalusian Grey","Angeln","Angoni","Ankina","Ankole","Ankole-Watusi","Aracena","Arado","Argentine Criollo","Argentine Friesian","Armorican","Arouquesa","Arsi","Asturian Mountain","Asturian Valley","Aubrac","Aulie-Ata","Aure et Saint-Girons","Australian Braford","Australian Brangus","Australian Charbray","Australian Friesian Sahiwal","Australian Lowline","Australian Milking Zebu","Australian Shorthorn","Austrian Simmental","Austrian Yellow","Avileña-Negra Ibérica","Avétonou","Aweil Dinka","Ayrshire","Azaouak","Azebuado","Azerbaijan Zebu","Azores","Bachaur cattle","Baherie cattle","Bakosi cattle","Balancer","Baoule","Bargur cattle","Barrosã","Barzona","Bazadaise","Beef Freisian","Beefalo","Beefmaker","Beefmaster","Begayt","Belgian Blue","Belgian Red","Belgian Red Pied","Belgian White-and-Red","Belmont Red","Belted Galloway","Bernese","Berrenda cattle","Betizu","Bianca Modenese","Blaarkop","Black Angus","Black Baldy","Black Hereford","Blanca Cacereña","Blanco Orejinegro BON","Blonde d'Aquitaine","Blue Albion","Blue Grey","Bohuskulla","Bonsmara","Boran","Boškarin","Braford","Brahman","Brahmousin","Brangus","Braunvieh","Brava","Breed","British Friesian","British White","Brown Carpathian","Brown Caucasian","Brown Swiss","Bue Lingo","Burlina","Bushuyev","Butana cattle","Buša cattle","Cachena","Caldelana","Camargue","Campbell Island cattle","Canadian Speckle Park","Canadienne","Canaria","Canchim","Caracu","Carinthian Blondvieh","Carora","Charbray","Charolais","Chateaubriand","Chiangus","Chianina","Chillingham cattle","Chinese Black Pied","Cholistani","Coloursided White Back","Commercial","Corriente","Corsican cattle","Costeño con Cuernos","Crioulo Lageano","Cárdena Andaluza","Dajal","Dangi cattle","Danish Black-Pied","Danish Jersey","Danish Red","Deep Red cattle","Deoni","Devon","Dexter cattle","Dhanni","Doayo cattle","Doela","Drakensberger","Droughtmaster","Dulong'","Dutch Belted","Dutch Friesian","Dwarf Lulu","Dølafe","East Anatolian Red","Eastern Finncattle","Eastern Red Polled","Enderby Island cattle","English Longhorn","Ennstaler Bergscheck","Estonian Holstein","Estonian Native","Estonian Red cattle","Finncattle","Finnish Ayrshire","Finnish Holstein-Friesian","Fjäll","Fleckvieh","Florida Cracker cattle","Fogera","French Simmental","Fribourgeoise","Friesian Red and White","Fulani Sudanese","Fēng Cattle","Galician Blond","Galloway cattle","Gangatiri","Gaolao","Garvonesa","Gascon cattle","Gelbvieh","Georgian Mountain cattle","German Angus","German Black Pied Dairy","German Black Pied cattle","German Red Pied","Gir","Glan cattle","Gloucester","Gobra","Greek Shorthorn","Greek Steppe","Greyman cattle","Gudali","Guernsey cattle","Guzerá","Hallikar4","Hanwoo","Hariana cattle","Hartón del Valle","Harzer Rotvieh","Hays Converter","Heck cattle","Hereford","Herens","Highland cattle","Hinterwald","Holando-Argentino","Holstein Friesian cattle","Horro","Hungarian Grey","Huáng Cattle","Hybridmaster","Iberian cattle","Icelandic","Illawarra cattle","Improved Red and White","Indo-Brazilian","Irish Moiled","Israeli Holstein","Israeli Red","Istoben cattle","Istrian cattle","Jamaica Black","Jamaica Hope","Jamaica Red","Japanese Brown","Jarmelista","Javari cattle","Jersey cattle","Jutland cattle","Kabin Buri cattle","Kalmyk cattle","Kamphaeng Saen cattle","Kangayam","Kankrej","Karan Swiss","Kasaragod Dwarf cattle","Kathiawadi","Kazakh Whiteheaded","Kenana cattle","Kenkatha cattle","Kerry cattle","Kherigarh","Khillari cattle","Kholomogory","Korat Wagyu","Kostroma cattle","Krishna Valley cattle","Kurgan cattle","Kuri","La Reina cattle","Lakenvelder cattle","Lampurger","Latvian Blue","Latvian Brown","Latvian Danish Red","Lebedyn","Levantina","Limia cattle","Limousin","Limpurger","Lincoln Red","Lineback","Lithuanian Black-and-White","Lithuanian Light Grey","Lithuanian Red","Lithuanian White-Backed","Lohani cattle","Lourdais","Lucerna cattle","Luing","Madagascar Zebu","Madura","Maine-Anjou","Malnad Gidda","Malvi","Mandalong Special","Mantequera Leonesa","Maramureş Brown","Marchigiana","Maremmana","Marinhoa","Maronesa","Masai","Mashona","Menorquina","Mertolenga","Meuse-Rhine-Issel","Mewati","Milking Shorthorn","Minhota","Mirandesa","Mirkadim","Mocăniţă","Mollie","Monchina","Mongolian","Montbéliarde","Morucha","Murboden","Murnau-Werdenfels","Murray Grey","Muturu","N'Dama","Nagori","Negra Andaluza","Nelore","Nguni","Nimari","Normande","North Bengal Grey","Northern Finncattle","Northern Shorthorn","Norwegian Red","Ongole","Original Simmental","Pajuna","Palmera","Pantaneiro","Parda Alpina","Parthenaise","Pasiega","Pembroke","Philippine Native","Pie Rouge des Plaines","Piedmontese cattle","Pineywoods","Pinzgauer","Pirenaica","Podolac","Podolica","Polish Black-and-White","Polish Red","Poll Shorthorn","Polled Hereford","Polled Shorthorn","Ponwar","Preta","Pulikulam","Punganur","Pustertaler Sprinzen","Qinchaun","Queensland Miniature Boran","RX3","Ramo Grande","Randall","Raramuri Criollo","Rathi","Raya","Red Angus","Red Brangus","Red Chittagong","Red Fulani","Red Gorbatov","Red Holstein","Red Kandhari","Red Mingrelian","Red Poll","Red Polled Østland","Red Sindhi","Retinta","Riggit Galloway","Ringamåla","Rohjan","Romagnola","Romanian Bălţata","Romanian Steppe Gray","Romosinuano","Russian Black Pied","Rätisches Grauvieh","Sahiwal","Salers","Salorn","Sanga","Sanhe","Santa Cruz","Santa Gertrudis","Sayaguesa","Schwyz","Selembu","Senepol","Serbian Pied","Serbian Steppe","Sheko","Shetland","Shorthorn","Siboney de Cuba","Simbrah","Simford","Simmental","Siri","South Devon","Spanish Fighting Bull","Speckle Park","Square Meater","Sussex","Swedish Friesian","Swedish Polled","Swedish Red Pied","Swedish Red Polled","Swedish Red-and-White","Tabapuã","Tarentaise","Tasmanian Grey","Tauros","Telemark","Texas Longhorn","Texon","Thai Black","Thai Fighting Bull","Thai Friesian","Thai Milking Zebu","Tharparkar","Tswana","Tudanca","Tuli","Tulim","Turkish Grey Steppe","Tux-Zillertal","Tyrol Grey","Ukrainian Grey","Umblachery","Valdostana Castana","Valdostana Pezzata Nera","Valdostana Pezzata Rossa","Vaynol","Vechur8","Vestland Fjord","Vestland Red Polled","Vianesa","Volinian Beef","Vorderwald","Vosgienne","Väneko","Waguli","Wagyu","Wangus","Welsh Black","Western Finncattle","White Cáceres","White Fulani","White Lamphun","White Park","Whitebred Shorthorn","Xingjiang Brown","Yakutian","Yanbian","Yanhuang","Yurino","Zebu","Évolène cattle","Żubroń"],crocodilia:["African Slender-snouted Crocodile","Alligator mississippiensis","American Crocodile","Australian Freshwater Crocodile","Black Caiman","Broad-snouted Caiman","Chinese Alligator","Cuban Crocodile","Cuvier’s Dwarf Caiman","Dwarf Crocodile","Gharial","Morelet’s Crocodile","Mugger Crocodile","New Guinea Freshwater Crocodile","Nile Crocodile","Orinoco Crocodile","Philippine Crocodile","Saltwater Crocodile","Schneider’s Smooth-fronted Caiman","Siamese Crocodile","Spectacled Caiman","Tomistoma","West African Crocodile","Yacare Caiman"],dog:["Affenpinscher","Afghan Hound","Aidi","Airedale Terrier","Akbash","Akita","Alano Español","Alapaha Blue Blood Bulldog","Alaskan Husky","Alaskan Klee Kai","Alaskan Malamute","Alopekis","Alpine Dachsbracke","American Bulldog","American Bully","American Cocker Spaniel","American English Coonhound","American Foxhound","American Hairless Terrier","American Pit Bull Terrier","American Staffordshire Terrier","American Water Spaniel","Andalusian Hound","Anglo-Français de Petite Vénerie","Appenzeller Sennenhund","Ariegeois","Armant","Armenian Gampr dog","Artois Hound","Australian Cattle Dog","Australian Kelpie","Australian Shepherd","Australian Stumpy Tail Cattle Dog","Australian Terrier","Austrian Black and Tan Hound","Austrian Pinscher","Azawakh","Bakharwal dog","Banjara Hound","Barbado da Terceira","Barbet","Basenji","Basque Shepherd Dog","Basset Artésien Normand","Basset Bleu de Gascogne","Basset Fauve de Bretagne","Basset Hound","Bavarian Mountain Hound","Beagle","Beagle-Harrier","Bearded Collie","Beauceron","Bedlington Terrier","Belgian Shepherd","Bergamasco Shepherd","Berger Picard","Bernese Mountain Dog","Bhotia","Bichon Frisé","Billy","Black Mouth Cur","Black Norwegian Elkhound","Black Russian Terrier","Black and Tan Coonhound","Bloodhound","Blue Lacy","Blue Picardy Spaniel","Bluetick Coonhound","Boerboel","Bohemian Shepherd","Bolognese","Border Collie","Border Terrier","Borzoi","Bosnian Coarse-haired Hound","Boston Terrier","Bouvier des Ardennes","Bouvier des Flandres","Boxer","Boykin Spaniel","Bracco Italiano","Braque Francais","Braque Saint-Germain","Braque d'Auvergne","Braque de l'Ariège","Braque du Bourbonnais","Briard","Briquet Griffon Vendéen","Brittany","Broholmer","Bruno Jura Hound","Brussels Griffon","Bucovina Shepherd Dog","Bull Arab","Bull Terrier","Bulldog","Bullmastiff","Bully Kutta","Burgos Pointer","Cairn Terrier","Campeiro Bulldog","Can de Chira","Canaan Dog","Canadian Eskimo Dog","Cane Corso","Cane Paratore","Cane di Oropa","Cantabrian Water Dog","Cardigan Welsh Corgi","Carea Castellano Manchego","Carolina Dog","Carpathian Shepherd Dog","Catahoula Leopard Dog","Catalan Sheepdog","Caucasian Shepherd Dog","Cavalier King Charles Spaniel","Central Asian Shepherd Dog","Cesky Fousek","Cesky Terrier","Chesapeake Bay Retriever","Chien Français Blanc et Noir","Chien Français Blanc et Orange","Chien Français Tricolore","Chihuahua","Chilean Terrier","Chinese Chongqing Dog","Chinese Crested Dog","Chinook","Chippiparai","Chongqing dog","Chortai","Chow Chow","Cimarrón Uruguayo","Cirneco dell'Etna","Clumber Spaniel","Colombian fino hound","Coton de Tulear","Cretan Hound","Croatian Sheepdog","Curly-Coated Retriever","Cursinu","Czechoslovakian Wolfdog","Cão Fila de São Miguel","Cão da Serra de Aires","Cão de Castro Laboreiro","Cão de Gado Transmontano","Dachshund","Dalmatian","Dandie Dinmont Terrier","Danish-Swedish Farmdog","Denmark Feist","Dingo","Doberman Pinscher","Dogo Argentino","Dogo Guatemalteco","Dogo Sardesco","Dogue Brasileiro","Dogue de Bordeaux","Drentse Patrijshond","Drever","Dunker","Dutch Shepherd","Dutch Smoushond","East European Shepherd","East Siberian Laika","English Cocker Spaniel","English Foxhound","English Mastiff","English Setter","English Shepherd","English Springer Spaniel","English Toy Terrier","Entlebucher Mountain Dog","Estonian Hound","Estrela Mountain Dog","Eurasier","Field Spaniel","Fila Brasileiro","Finnish Hound","Finnish Lapphund","Finnish Spitz","Flat-Coated Retriever","French Bulldog","French Spaniel","Galgo Español","Galician Shepherd Dog","Garafian Shepherd","Gascon Saintongeois","Georgian Shepherd","German Hound","German Longhaired Pointer","German Pinscher","German Roughhaired Pointer","German Shepherd Dog","German Shorthaired Pointer","German Spaniel","German Spitz","German Wirehaired Pointer","Giant Schnauzer","Glen of Imaal Terrier","Golden Retriever","Gordon Setter","Gończy Polski","Grand Anglo-Français Blanc et Noir","Grand Anglo-Français Blanc et Orange","Grand Anglo-Français Tricolore","Grand Basset Griffon Vendéen","Grand Bleu de Gascogne","Grand Griffon Vendéen","Great Dane","Greater Swiss Mountain Dog","Greek Harehound","Greek Shepherd","Greenland Dog","Greyhound","Griffon Bleu de Gascogne","Griffon Fauve de Bretagne","Griffon Nivernais","Gull Dong","Gull Terrier","Hamiltonstövare","Hanover Hound","Harrier","Havanese","Hierran Wolfdog","Hokkaido","Hovawart","Huntaway","Hygen Hound","Hällefors Elkhound","Ibizan Hound","Icelandic Sheepdog","Indian Spitz","Indian pariah dog","Irish Red and White Setter","Irish Setter","Irish Terrier","Irish Water Spaniel","Irish Wolfhound","Istrian Coarse-haired Hound","Istrian Shorthaired Hound","Italian Greyhound","Jack Russell Terrier","Jagdterrier","Japanese Chin","Japanese Spitz","Japanese Terrier","Jindo","Jonangi","Kai Ken","Kaikadi","Kangal Shepherd Dog","Kanni","Karakachan dog","Karelian Bear Dog","Kars","Karst Shepherd","Keeshond","Kerry Beagle","Kerry Blue Terrier","King Charles Spaniel","King Shepherd","Kintamani","Kishu","Kokoni","Kombai","Komondor","Kooikerhondje","Koolie","Koyun dog","Kromfohrländer","Kuchi","Kuvasz","Labrador Retriever","Lagotto Romagnolo","Lakeland Terrier","Lancashire Heeler","Landseer","Lapponian Herder","Large Münsterländer","Leonberger","Levriero Sardo","Lhasa Apso","Lithuanian Hound","Lupo Italiano","Löwchen","Mackenzie River Husky","Magyar agár","Mahratta Greyhound","Maltese","Manchester Terrier","Maremmano-Abruzzese Sheepdog","McNab dog","Miniature American Shepherd","Miniature Bull Terrier","Miniature Fox Terrier","Miniature Pinscher","Miniature Schnauzer","Molossus of Epirus","Montenegrin Mountain Hound","Mountain Cur","Mountain Feist","Mucuchies","Mudhol Hound","Mudi","Neapolitan Mastiff","New Guinea Singing Dog","New Zealand Heading Dog","Newfoundland","Norfolk Terrier","Norrbottenspets","Northern Inuit Dog","Norwegian Buhund","Norwegian Elkhound","Norwegian Lundehund","Norwich Terrier","Nova Scotia Duck Tolling Retriever","Old Croatian Sighthound","Old Danish Pointer","Old English Sheepdog","Old English Terrier","Olde English Bulldogge","Otterhound","Pachon Navarro","Paisley Terrier","Pampas Deerhound","Papillon","Parson Russell Terrier","Pastore della Lessinia e del Lagorai","Patagonian Sheepdog","Patterdale Terrier","Pekingese","Pembroke Welsh Corgi","Perro Majorero","Perro de Pastor Mallorquin","Perro de Presa Canario","Perro de Presa Mallorquin","Peruvian Inca Orchid","Petit Basset Griffon Vendéen","Petit Bleu de Gascogne","Phalène","Pharaoh Hound","Phu Quoc Ridgeback","Picardy Spaniel","Plott Hound","Plummer Terrier","Podenco Canario","Podenco Valenciano","Pointer","Poitevin","Polish Greyhound","Polish Hound","Polish Lowland Sheepdog","Polish Tatra Sheepdog","Pomeranian","Pont-Audemer Spaniel","Poodle","Porcelaine","Portuguese Podengo","Portuguese Pointer","Portuguese Water Dog","Posavac Hound","Pražský Krysařík","Pshdar Dog","Pudelpointer","Pug","Puli","Pumi","Pungsan Dog","Pyrenean Mastiff","Pyrenean Mountain Dog","Pyrenean Sheepdog","Rafeiro do Alentejo","Rajapalayam","Rampur Greyhound","Rat Terrier","Ratonero Bodeguero Andaluz","Ratonero Mallorquin","Ratonero Murciano de Huerta","Ratonero Valenciano","Redbone Coonhound","Rhodesian Ridgeback","Romanian Mioritic Shepherd Dog","Romanian Raven Shepherd Dog","Rottweiler","Rough Collie","Russian Spaniel","Russian Toy","Russo-European Laika","Saarloos Wolfdog","Sabueso Español","Saint Bernard","Saint Hubert Jura Hound","Saint-Usuge Spaniel","Saluki","Samoyed","Sapsali","Sarabi dog","Sardinian Shepherd Dog","Schapendoes","Schillerstövare","Schipperke","Schweizer Laufhund","Schweizerischer Niederlaufhund","Scottish Deerhound","Scottish Terrier","Sealyham Terrier","Segugio Italiano","Segugio Maremmano","Segugio dell'Appennino","Seppala Siberian Sleddog","Serbian Hound","Serbian Tricolour Hound","Serrano Bulldog","Shar Pei","Shetland Sheepdog","Shiba Inu","Shih Tzu","Shikoku","Shiloh Shepherd","Siberian Husky","Silken Windhound","Silky Terrier","Sinhala Hound","Skye Terrier","Sloughi","Slovakian Wirehaired Pointer","Slovenský Cuvac","Slovenský Kopov","Smalandstövare","Small Greek domestic dog","Small Münsterländer","Smooth Collie","Smooth Fox Terrier","Soft-Coated Wheaten Terrier","South Russian Ovcharka","Spanish Mastiff","Spanish Water Dog","Spinone Italiano","Sporting Lucas Terrier","Stabyhoun","Staffordshire Bull Terrier","Standard Schnauzer","Stephens Stock","Styrian Coarse-haired Hound","Sussex Spaniel","Swedish Elkhound","Swedish Lapphund","Swedish Vallhund","Swedish White Elkhound","Taigan","Taiwan Dog","Tamaskan Dog","Teddy Roosevelt Terrier","Telomian","Tenterfield Terrier","Terrier Brasileiro","Thai Bangkaew Dog","Thai Ridgeback","Tibetan Mastiff","Tibetan Spaniel","Tibetan Terrier","Tornjak","Tosa","Toy Fox Terrier","Toy Manchester Terrier","Transylvanian Hound","Treeing Cur","Treeing Feist","Treeing Tennessee Brindle","Treeing Walker Coonhound","Trigg Hound","Tyrolean Hound","Vikhan","Villano de Las Encartaciones","Villanuco de Las Encartaciones","Vizsla","Volpino Italiano","Weimaraner","Welsh Sheepdog","Welsh Springer Spaniel","Welsh Terrier","West Highland White Terrier","West Siberian Laika","Westphalian Dachsbracke","Wetterhoun","Whippet","White Shepherd","White Swiss Shepherd Dog","Wire Fox Terrier","Wirehaired Pointing Griffon","Wirehaired Vizsla","Xiasi Dog","Xoloitzcuintli","Yakutian Laika","Yorkshire Terrier","Šarplaninac"],fish:["Alaska pollock","Albacore","Amur catfish","Araucanian herring","Argentine hake","Asari","Asian swamp eel","Atlantic cod","Atlantic herring","Atlantic horse mackerel","Atlantic mackerel","Atlantic menhaden","Atlantic salmon","Bigeye scad","Bigeye tuna","Bighead carp","Black carp","Blood cockle","Blue swimming crab","Blue whiting","Bombay-duck","Bonga shad","California pilchard","Cape horse mackerel","Capelin","Catla","Channel catfish","Chilean jack mackerel","Chinese perch","Chinese softshell turtle","Chub mackerel","Chum salmon","Common carp","Crucian carp","Daggertooth pike conger","European anchovy","European pilchard","European sprat","Filipino Venus","Gazami crab","Goldstripe sardinella","Grass carp","Gulf menhaden","Haddock","Hilsa shad","Indian mackerel","Indian oil sardine","Iridescent shark","Japanese anchovy","Japanese cockle","Japanese common catfish","Japanese flying squid","Japanese jack mackerel","Japanese littleneck","Japanese pilchard","Jumbo flying squid","Kawakawa","Korean bullhead","Largehead hairtail","Longtail tuna","Madeiran sardinella","Mandarin fish","Milkfish","Mrigal carp","Narrow-barred Spanish mackerel","Nile perch","Nile tilapia","North Pacific hake","Northern snakehead","Pacific anchoveta","Pacific cod","Pacific herring","Pacific sand lance","Pacific sandlance","Pacific saury","Pacific thread herring","Peruvian anchoveta","Pink salmon","Pollock","Pond loach","Rainbow trout","Rohu","Round sardinella","Short mackerel","Silver carp","Silver cyprinid","Skipjack tuna","Southern African anchovy","Southern rough shrimp","Whiteleg shrimp","Wuchang bream","Yellow croaker","Yellowfin tuna","Yellowhead catfish","Yellowstripe scad"],horse:["Abaco Barb","Abtenauer","Abyssinian","Aegidienberger","Akhal-Teke","Albanian Horse","Altai Horse","Altèr Real","American Albino","American Cream Draft","American Indian Horse","American Paint Horse","American Quarter Horse","American Saddlebred","American Warmblood","Andalusian Horse","Andravida Horse","Anglo-Arabian","Anglo-Arabo-Sardo","Anglo-Kabarda","Appaloosa","AraAppaloosa","Arabian Horse","Ardennes Horse","Arenberg-Nordkirchen","Argentine Criollo","Asian wild Horse","Assateague Horse","Asturcón","Augeron","Australian Brumby","Australian Draught Horse","Australian Stock Horse","Austrian Warmblood","Auvergne Horse","Auxois","Azerbaijan Horse","Azteca Horse","Baise Horse","Bale","Balearic Horse","Balikun Horse","Baluchi Horse","Banker Horse","Barb Horse","Bardigiano","Bashkir Curly","Basque Mountain Horse","Bavarian Warmblood","Belgian Half-blood","Belgian Horse","Belgian Warmblood","Bhutia Horse","Black Forest Horse","Blazer Horse","Boerperd","Borana","Boulonnais Horse","Brabant","Brandenburger","Brazilian Sport Horse","Breton Horse","Brumby","Budyonny Horse","Burguete Horse","Burmese Horse","Byelorussian Harness Horse","Calabrese Horse","Camargue Horse","Camarillo White Horse","Campeiro","Campolina","Canadian Horse","Canadian Pacer","Carolina Marsh Tacky","Carthusian Horse","Caspian Horse","Castilian Horse","Castillonnais","Catria Horse","Cavallo Romano della Maremma Laziale","Cerbat Mustang","Chickasaw Horse","Chilean Corralero","Choctaw Horse","Cleveland Bay","Clydesdale Horse","Cob","Coldblood Trotter","Colonial Spanish Horse","Colorado Ranger","Comtois Horse","Corsican Horse","Costa Rican Saddle Horse","Cretan Horse","Criollo Horse","Croatian Coldblood","Cuban Criollo","Cumberland Island Horse","Curly Horse","Czech Warmblood","Daliboz","Danish Warmblood","Danube Delta Horse","Dole Gudbrandsdal","Don","Dongola Horse","Draft Trotter","Dutch Harness Horse","Dutch Heavy Draft","Dutch Warmblood","Dzungarian Horse","East Bulgarian","East Friesian Horse","Estonian Draft","Estonian Horse","Falabella","Faroese","Finnhorse","Fjord Horse","Fleuve","Florida Cracker Horse","Foutanké","Frederiksborg Horse","Freiberger","French Trotter","Friesian Cross","Friesian Horse","Friesian Sporthorse","Furioso-North Star","Galiceño","Galician Pony","Gelderland Horse","Georgian Grande Horse","German Warmblood","Giara Horse","Gidran","Groningen Horse","Gypsy Horse","Hackney Horse","Haflinger","Hanoverian Horse","Heck Horse","Heihe Horse","Henson Horse","Hequ Horse","Hirzai","Hispano-Bretón","Holsteiner Horse","Horro","Hungarian Warmblood","Icelandic Horse","Iomud","Irish Draught","Irish Sport Horse sometimes called Irish Hunter","Italian Heavy Draft","Italian Trotter","Jaca Navarra","Jeju Horse","Jutland Horse","Kabarda Horse","Kafa","Kaimanawa Horses","Kalmyk Horse","Karabair","Karabakh Horse","Karachai Horse","Karossier","Kathiawari","Kazakh Horse","Kentucky Mountain Saddle Horse","Kiger Mustang","Kinsky Horse","Kisber Felver","Kiso Horse","Kladruber","Knabstrupper","Konik","Kundudo","Kustanair","Kyrgyz Horse","Latvian Horse","Lipizzan","Lithuanian Heavy Draught","Lokai","Losino Horse","Lusitano","Lyngshest","M'Bayar","M'Par","Mallorquín","Malopolski","Mangalarga","Mangalarga Marchador","Maremmano","Marismeño Horse","Marsh Tacky","Marwari Horse","Mecklenburger","Menorquín","Messara Horse","Metis Trotter","Mezőhegyesi Sport Horse","Međimurje Horse","Miniature Horse","Misaki Horse","Missouri Fox Trotter","Monchina","Mongolian Horse","Mongolian Wild Horse","Monterufolino","Morab","Morgan Horse","Mountain Pleasure Horse","Moyle Horse","Murakoz Horse","Murgese","Mustang Horse","Mérens Horse","Namib Desert Horse","Nangchen Horse","National Show Horse","Nez Perce Horse","Nivernais Horse","Nokota Horse","Noma","Nonius Horse","Nooitgedachter","Nordlandshest","Noriker Horse","Norman Cob","North American Single-Footer Horse","North Swedish Horse","Norwegian Coldblood Trotter","Norwegian Fjord","Novokirghiz","Oberlander Horse","Ogaden","Oldenburg Horse","Orlov trotter","Ostfriesen","Paint","Pampa Horse","Paso Fino","Pentro Horse","Percheron","Persano Horse","Peruvian Paso","Pintabian","Pleven Horse","Poitevin Horse","Posavac Horse","Pottok","Pryor Mountain Mustang","Przewalski's Horse","Pura Raza Española","Purosangue Orientale","Qatgani","Quarab","Quarter Horse","Racking Horse","Retuerta Horse","Rhenish German Coldblood","Rhinelander Horse","Riwoche Horse","Rocky Mountain Horse","Romanian Sporthorse","Rottaler","Russian Don","Russian Heavy Draft","Russian Trotter","Saddlebred","Salerno Horse","Samolaco Horse","San Fratello Horse","Sarcidano Horse","Sardinian Anglo-Arab","Schleswig Coldblood","Schwarzwälder Kaltblut","Selale","Sella Italiano","Selle Français","Shagya Arabian","Shan Horse","Shire Horse","Siciliano Indigeno","Silesian Horse","Sokolsky Horse","Sorraia","South German Coldblood","Soviet Heavy Draft","Spanish Anglo-Arab","Spanish Barb","Spanish Jennet Horse","Spanish Mustang","Spanish Tarpan","Spanish-Norman Horse","Spiti Horse","Spotted Saddle Horse","Standardbred Horse","Suffolk Punch","Swedish Ardennes","Swedish Warmblood","Swedish coldblood trotter","Swiss Warmblood","Taishū Horse","Takhi","Tawleed","Tchernomor","Tennessee Walking Horse","Tersk Horse","Thoroughbred","Tiger Horse","Tinker Horse","Tolfetano","Tori Horse","Trait Du Nord","Trakehner","Tsushima","Tuigpaard","Ukrainian Riding Horse","Unmol Horse","Uzunyayla","Ventasso Horse","Virginia Highlander","Vlaamperd","Vladimir Heavy Draft","Vyatka","Waler","Waler Horse","Walkaloosa","Warlander","Warmblood","Welsh Cob","Westphalian Horse","Wielkopolski","Württemberger","Xilingol Horse","Yakutian Horse","Yili Horse","Yonaguni Horse","Zaniskari","Zhemaichu","Zweibrücker","Žemaitukas"],insect:["Acacia-ants","Acorn-plum gall","Aerial yellowjacket","Africanized honey bee","Allegheny mound ant","Almond stone wasp","Ant","Arboreal ant","Argentine ant","Asian paper wasp","Baldfaced hornet","Bee","Bigheaded ant","Black and yellow mud dauber","Black carpenter ant","Black imported fire ant","Blue horntail woodwasp","Blue orchard bee","Braconid wasp","Bumble bee","Carpenter ant","Carpenter wasp","Chalcid wasp","Cicada killer","Citrus blackfly parasitoid","Common paper wasp","Crazy ant","Cuckoo wasp","Cynipid gall wasp","Eastern Carpenter bee","Eastern yellowjacket","Elm sawfly","Encyrtid wasp","Erythrina gall wasp","Eulophid wasp","European hornet","European imported fire ant","False honey ant","Fire ant","Forest bachac","Forest yellowjacket","German yellowjacket","Ghost ant","Giant ichneumon wasp","Giant resin bee","Giant wood wasp","Golden northern bumble bee","Golden paper wasp","Gouty oak gall","Grass Carrying Wasp","Great black wasp","Great golden digger wasp","Hackberry nipple gall parasitoid","Honey bee","Horned oak gall","Horse guard wasp","Hunting wasp","Ichneumonid wasp","Keyhole wasp","Knopper gall","Large garden bumble bee","Large oak-apple gall","Leafcutting bee","Little fire ant","Little yellow ant","Long-horned bees","Long-legged ant","Macao paper wasp","Mallow bee","Marble gall","Mossyrose gall wasp","Mud-daubers","Multiflora rose seed chalcid","Oak apple gall wasp","Oak rough bulletgall wasp","Oak saucer gall","Oak shoot sawfly","Odorous house ant","Orange-tailed bumble bee","Orangetailed potter wasp","Oriental chestnut gall wasp","Paper wasp","Pavement ant","Pigeon tremex","Pip gall wasp","Prairie yellowjacket","Pteromalid wasp","Pyramid ant","Raspberry Horntail","Red ant","Red carpenter ant","Red harvester ant","Red imported fire ant","Red wasp","Red wood ant","Red-tailed wasp","Reddish carpenter ant","Rough harvester ant","Sawfly parasitic wasp","Scale parasitoid","Silky ant","Sirex woodwasp","Siricid woodwasp","Smaller yellow ant","Southeastern blueberry bee","Southern fire ant","Southern yellowjacket","Sphecid wasp","Stony gall","Sweat bee","Texas leafcutting ant","Tiphiid wasp","Torymid wasp","Tramp ant","Valentine ant","Velvet ant","Vespid wasp","Weevil parasitoid","Western harvester ant","Western paper wasp","Western thatching ant","Western yellowjacket","White-horned horntail","Willow shoot sawfly","Woodwasp","Wool sower gall maker","Yellow Crazy Ant","Yellow and black potter wasp","Yellow-horned horntail"],lion:["Asiatic Lion","Barbary Lion","Cape lion","Masai Lion","Northeast Congo Lion","Transvaal lion","West African Lion"],pet_name:["Ace","Archie","Bailey","Bandit","Bella","Bentley","Bruno","Buddy","Charlie","Coco","Cookie","Cooper","Daisy","Dixie","Finn","Ginger","Gracie","Gus","Hank","Jack","Jax","Joey","Kobe","Leo","Lola","Louie","Lucy","Maggie","Max","Mia","Milo","Molly","Murphey","Nala","Nova","Ollie","Oreo","Rosie","Scout","Stella","Teddy","Tuffy"],rabbit:["American","American Chinchilla","American Fuzzy Lop","American Sable","Argente Brun","Belgian Hare","Beveren","Blanc de Hotot","Britannia Petite","Californian","Champagne D’Argent","Checkered Giant","Cinnamon","Crème D’Argent","Dutch","Dwarf Hotot","English Angora","English Lop","English Spot","Flemish Giant","Florida White","French Angora","French Lop","Giant Angora","Giant Chinchilla","Harlequin","Havana","Himalayan","Holland Lop","Jersey Wooly","Lilac","Lionhead","Mini Lop","Mini Rex","Mini Satin","Netherland Dwarf","New Zealand","Palomino","Polish","Rex","Rhinelander","Satin","Satin Angora","Silver","Silver Fox","Silver Marten","Standard Chinchilla","Tan","Thrianta"],rodent:["Abrocoma","Abrocoma schistacea","Aconaemys","Aconaemys porteri","African brush-tailed porcupine","Andean mountain cavy","Argentine tuco-tuco","Ashy chinchilla rat","Asiatic brush-tailed porcupine","Atherurus","Azara's agouti","Azara's tuco-tuco","Bahia porcupine","Bathyergus","Bathyergus janetta","Bathyergus suillus","Bennett's chinchilla rat","Bicolored-spined porcupine","Black agouti","Black dwarf porcupine","Black-rumped agouti","Black-tailed hairy dwarf porcupine","Bolivian chinchilla rat","Bolivian tuco-tuco","Bonetto's tuco-tuco","Brandt's yellow-toothed cavy","Brazilian guinea pig","Brazilian porcupine","Brazilian tuco-tuco","Bridge's degu","Brown hairy dwarf porcupine","Budin's chinchilla rat, A. budini","Cape porcupine","Catamarca tuco-tuco","Cavia","Central American agouti","Chacoan tuco-tuco","Chilean rock rat","Chinchilla","Coendou","Coiban agouti","Colburn's tuco-tuco","Collared tuco-tuco","Common degu","Common yellow-toothed cavy","Conover's tuco-tuco","Coruro","Crested agouti","Crested porcupine","Cryptomys","Cryptomys bocagei","Cryptomys damarensis","Cryptomys foxi","Cryptomys hottentotus","Cryptomys mechowi","Cryptomys ochraceocinereus","Cryptomys zechi","Ctenomys","Cuniculus","Cuscomys","Cuscomys ashanika","Dactylomys","Dactylomys boliviensis","Dactylomys dactylinus","Dactylomys peruanus","Dasyprocta","Domestic guinea pig","Emily's tuco-tuco","Erethizon","Famatina chinchilla rat","Frosted hairy dwarf porcupine","Fukomys","Fukomys amatus","Fukomys anselli","Fukomys bocagei","Fukomys damarensis","Fukomys darlingi","Fukomys foxi","Fukomys ilariae","Fukomys kafuensis","Fukomys mechowii","Fukomys micklemi","Fukomys occlusus","Fukomys ochraceocinereus","Fukomys whytei","Fukomys zechi","Furtive tuco-tuco","Galea","Georychus","Georychus capensis","Golden viscacha-rat","Goya tuco-tuco","Greater guinea pig","Green acouchi","Haig's tuco-tuco","Heliophobius","Heliophobius argenteocinereus","Heterocephalus","Heterocephalus glaber","Highland tuco-tuco","Hystrix","Indian porcupine","Isla Mocha degu","Kalinowski agouti","Kannabateomys","Kannabateomys amblyonyx","Lagidium","Lagostomus","Lewis' tuco-tuco","Long-tailed chinchilla","Long-tailed porcupine","Los Chalchaleros' viscacha-rat","Lowland paca","Magellanic tuco-tuco","Malayan porcupine","Maule tuco-tuco","Mendoza tuco-tuco","Mexican agouti","Mexican hairy dwarf porcupine","Microcavia","Montane guinea pig","Moon-toothed degu","Mottled tuco-tuco","Mountain degu","Mountain paca","Mountain viscacha-rat","Myoprocta","Natterer's tuco-tuco","North American porcupine","Northern viscacha","Octodon","Octodontomys","Octomys","Olallamys","Olallamys albicauda","Olallamys edax","Orinoco agouti","Paraguaian hairy dwarf porcupine","Pearson's tuco-tuco","Peruvian tuco-tuco","Philippine porcupine","Pipanacoctomys","Plains viscacha","Plains viscacha-rat","Porteous' tuco-tuco","Punta de Vacas chinchilla rat","Red acouchi","Red-rumped agouti","Reddish tuco-tuco","Rio Negro tuco-tuco","Robust tuco-tuco","Roosmalen's dwarf porcupine","Rothschild's porcupine","Ruatan Island agouti","Sage's rock rat","Salinoctomys","Salta tuco-tuco","San Luis tuco-tuco","Santa Catarina's guinea pig","Shiny guinea pig","Shipton's mountain cavy","Short-tailed chinchilla","Silky tuco-tuco","Social tuco-tuco","Southern mountain cavy","Southern tuco-tuco","Southern viscacha","Spalacopus","Spix's yellow-toothed cavy","Steinbach's tuco-tuco","Streaked dwarf porcupine","Strong tuco-tuco","Stump-tailed porcupine","Sumatran porcupine","Sunda porcupine","Talas tuco-tuco","Tawny tuco-tuco","Thick-spined porcupine","Tiny tuco-tuco","Trichys","Tucuman tuco-tuco","Tympanoctomys","Uspallata chinchilla rat","White-toothed tuco-tuco","Wolffsohn's viscacha"],snake:["Abaco Island boa","Aesculapian snake","African beaked snake","African puff adder","African rock python","African twig snake","African wolf snake","Amazon tree boa","Amazonian palm viper","American Vine Snake","American copperhead","Amethystine python","Anaconda","Andaman cat snake","Andaman cobra","Angolan python","Annulated sea snake","Arabian cobra","Arafura file snake","Arizona black rattlesnake","Arizona coral snake","Aruba rattlesnake","Asian Vine Snake, Whip Snake","Asian cobra","Asian keelback","Asian pipe snake","Asp","Asp viper","Assam keelback","Australian copperhead","Australian scrub python","Baird's rat snake","Baja California lyresnake","Ball Python","Ball python","Bamboo pitviper","Bamboo viper","Banded Flying Snake","Banded cat-eyed snake","Banded krait","Banded pitviper","Banded water cobra","Barbour's pit viper","Barred wolf snake","Beaked sea snake","Beauty rat snake","Beddome's cat snake","Beddome's coral snake","Bimini racer","Bird snake","Bismarck ringed python","Black headed python","Black krait","Black mamba","Black rat snake","Black snake","Black tree cobra","Black-banded trinket snake","Black-headed snake","Black-necked cobra","Black-necked spitting cobra","Black-speckled palm-pitviper","Black-striped keelback","Black-tailed horned pit viper","Blanding's tree snake","Blind snake","Blonde hognose snake","Blood python","Blue krait","Blunt-headed tree snake","Bluntnose viper","Boa","Boa constrictor","Bocourt's water snake","Boelen python","Boiga","Bolivian anaconda","Boomslang","Bornean pitviper","Borneo short-tailed python","Brahminy blind snake","Brazilian coral snake","Brazilian mud Viper","Brazilian smooth snake","Bredl's python","Brongersma's pitviper","Brown snake","Brown spotted pitviper[4]","Brown tree snake","Brown water python","Brown white-lipped python","Buff striped keelback","Bull snake","Burmese keelback","Burmese krait","Burmese python","Burrowing cobra","Burrowing viper","Bush viper","Bushmaster","Buttermilk racer","Calabar python","California kingsnake","Canebrake","Cantil","Cantor's pitviper","Cape cobra","Cape coral snake","Cape gopher snake","Carpet viper","Cascabel","Caspian cobra","Cat snake","Cat-eyed night snake","Cat-eyed snake","Central American lyre snake","Central ranges taipan","Centralian carpet python","Ceylon krait","Chappell Island tiger snake","Checkered garter snake","Checkered keelback","Chicken snake","Chihuahuan ridge-nosed rattlesnake","Children's python","Chinese tree viper","Coachwhip snake","Coastal carpet python","Coastal taipan","Cobra","Collett's snake","Colorado desert sidewinder","Common adder","Common cobra","Common garter snake","Common ground snake","Common keelback","Common lancehead","Common tiger snake","Common worm snake","Congo snake","Congo water cobra","Copperhead","Coral snake","Corn snake","Coronado Island rattlesnake","Cottonmouth","Crossed viper","Crowned snake","Cuban boa","Cuban wood snake","Cyclades blunt-nosed viper","Dauan Island water python","De Schauensee's anaconda","Death Adder","Desert death adder","Desert kingsnake","Desert woma python","Diamond python","Dog-toothed cat snake","Down's tiger snake","Dubois's sea snake","Dumeril's boa","Durango rock rattlesnake","Dusky pigmy rattlesnake","Dusty hognose snake","Dwarf beaked snake","Dwarf boa","Dwarf pipe snake","Dwarf sand adder","Eastern brown snake","Eastern coral snake","Eastern diamondback rattlesnake","Eastern green mamba","Eastern hognose snake","Eastern lyre snake","Eastern mud snake","Eastern racer","Eastern tiger snake","Eastern water cobra","Eastern yellowbelly sad racer","Egg-eater","Egyptian asp","Egyptian cobra","Elegant pitviper","Emerald tree boa","Equatorial spitting cobra","European asp","European smooth snake","Eyelash palm-pitviper","Eyelash pit viper","Eyelash viper","False cobra","False horned viper","False water cobra","Fan-Si-Pan horned pitviper","Fea's viper","Fer-de-lance","Fierce snake","Fifty pacer","Fishing snake","Flat-nosed pitviper","Flinders python","Flying snake","Forest cobra","Forest flame snake","Forsten's cat snake","Fox snake, three species of Pantherophis","Gaboon viper","Garter snake","Giant Malagasy hognose snake","Godman's pit viper","Gold tree cobra","Gold-ringed cat snake","Golden tree snake","Grand Canyon rattlesnake","Grass snake","Gray cat snake","Great Basin rattlesnake","Great Lakes bush viper","Great Plains rat snake","Green anaconda","Green cat-eyed snake","Green mamba","Green palm viper","Green rat snake","Green snake","Green tree pit viper","Green tree python","Grey Lora","Grey-banded kingsnake","Ground snake","Guatemalan palm viper","Guatemalan tree viper","Habu","Habu pit viper","Hagen's pitviper","Hairy bush viper","Halmahera python","Hardwicke's sea snake","Harlequin coral snake","High Woods coral snake","Hill keelback","Himalayan keelback","Hogg Island boa","Hognose snake","Hognosed viper","Honduran palm viper","Hook Nosed Sea Snake","Hopi rattlesnake","Horned adder","Horned desert viper","Horned viper","Horseshoe pitviper","Hundred pacer","Hutton's tree viper","Ikaheka snake","Indian cobra","Indian flying snake","Indian krait","Indian python","Indian tree viper","Indigo snake","Indochinese spitting cobra","Indonesian water python","Inland carpet python","Inland taipan","Jamaican Tree Snake","Jamaican boa","Jan's hognose snake","Japanese forest rat snake","Japanese rat snake","Japanese striped snake","Javan spitting cobra","Jerdon's pitviper","Jumping viper","Jungle carpet python","Kanburian pit viper","Kaulback's lance-headed pitviper","Kayaudi dwarf reticulated python","Kaznakov's viper","Keelback","Kham Plateau pitviper","Khasi Hills keelback","King Island tiger snake","King brown","King cobra","King rat snake","King snake","Krait","Krefft's tiger snake","Lance-headed rattlesnake","Lancehead","Large shield snake","Large-eyed pitviper","Large-scaled tree viper","Leaf viper","Leaf-nosed viper","Lesser black krait","Levant viper","Long-nosed adder","Long-nosed tree snake","Long-nosed viper","Long-nosed whip snake","Long-tailed rattlesnake","Longnosed worm snake","Lora","Lyre snake","Machete savane","Macklot's python","Madagascar ground boa","Madagascar tree boa","Malabar rock pitviper","Malayan krait","Malayan long-glanded coral snake","Malayan pit viper","Malcolm's tree viper","Mamba","Mamushi","Manchurian Black Water Snake","Mandalay cobra","Mandarin rat snake","Mangrove pit viper","Mangrove snake","Mangshan pitviper","Many-banded krait","Many-banded tree snake","Many-horned adder","Many-spotted cat snake","Massasauga rattlesnake","McMahon's viper","Mexican black kingsnake","Mexican green rattlesnake","Mexican hognose snake","Mexican palm-pitviper","Mexican parrot snake","Mexican racer","Mexican vine snake","Mexican west coast rattlesnake","Midget faded rattlesnake","Milk snake","Moccasin snake","Modest keelback","Mojave desert sidewinder","Mojave rattlesnake","Mole viper","Mollucan python","Moluccan flying snake","Montpellier snake","Motuo bamboo pitviper","Mountain adder","Mozambique spitting cobra","Mud adder","Mud snake","Mussurana","Namaqua dwarf adder","Namib dwarf sand adder","Narrowhead Garter Snake","New Guinea carpet python","Nichell snake","Nicobar Island keelback","Nicobar bamboo pitviper","Night snake","Nightingale adder","Nilgiri keelback","Nitsche's bush viper","Nitsche's tree viper","North Philippine cobra","North eastern king snake","Northeastern hill krait","Northern black-tailed rattlesnake","Northern tree snake","Northern water snake","Northern white-lipped python","Northwestern carpet python","Nose-horned viper","Nubian spitting cobra","Oaxacan small-headed rattlesnake","Oenpelli python","Olive python","Olive sea snake","Orange-collared keelback","Ornate flying snake","Palestine viper","Pallas' viper","Palm viper","Papuan python","Paradise flying snake","Parrot snake","Patchnose snake","Paupan taipan","Pelagic sea snake","Peninsula tiger snake","Peringuey's adder","Perrotet's shieldtail snake","Persian rat snake","Philippine cobra","Philippine pitviper","Pine snake","Pipe snake","Pit viper","Pointed-scaled pit viper[5]","Pope's tree viper","Portuguese viper","Prairie kingsnake","Puerto Rican boa","Puff adder","Pygmy python","Python","Queen snake","Racer","Raddysnake","Rainbow boa","Rat snake","Rattler","Rattlesnake","Red blood python","Red diamond rattlesnake","Red spitting cobra","Red-backed rat snake","Red-bellied black snake","Red-headed krait","Red-necked keelback","Red-tailed bamboo pitviper","Red-tailed boa","Red-tailed pipe snake","Reticulated python","Rhinoceros viper","Rhombic night adder","Ribbon snake","Rinkhals","Rinkhals cobra","River jack","Rosy boa","Rough green snake","Rough-scaled bush viper","Rough-scaled python","Rough-scaled tree viper","Royal python","Rubber boa","Rufous beaked snake","Rungwe tree viper","San Francisco garter snake","Sand adder","Sand boa","Savu python","Saw-scaled viper","Scarlet kingsnake","Schlegel's viper","Schultze's pitviper","Sea snake","Sedge viper","Selayer reticulated python","Sharp-nosed viper","Shield-nosed cobra","Shield-tailed snake","Siamese palm viper","Side-striped palm-pitviper","Sidewinder","Sikkim keelback","Sinai desert cobra","Sind krait","Small-eyed snake","Smooth green snake","Smooth snake","Snorkel viper","Snouted cobra","Sonoran sidewinder","South American hognose snake","South eastern corn snake","Southern Indonesian spitting cobra","Southern Pacific rattlesnake","Southern Philippine cobra","Southern black racer","Southern white-lipped python","Southwestern black spitting cobra","Southwestern blackhead snake","Southwestern carpet python","Southwestern speckled rattlesnake","Speckle-bellied keelback","Speckled kingsnake","Spectacled cobra","Spiny bush viper","Spitting cobra","Spotted python","Sri Lankan pit viper","Stejneger's bamboo pitviper","Stiletto snake","Stimson's python","Stoke's sea snake","Storm water cobra","Striped snake","Sumatran short-tailed python","Sumatran tree viper","Sunbeam snake","Taipan","Taiwan cobra","Tan racer","Tancitaran dusky rattlesnake","Tanimbar python","Tasmanian tiger snake","Tawny cat snake","Temple pit viper","Temple viper","Tentacled snake","Texas Coral Snake","Texas blind snake","Texas garter snake","Texas lyre snake","Texas night snake","Thai cobra","Three-lined ground snake","Tibetan bamboo pitviper","Tic polonga","Tiger pit viper","Tiger rattlesnake","Tiger snake","Tigre snake","Timber rattlesnake","Timor python","Titanboa","Tree boa","Tree snake","Tree viper","Trinket snake","Tropical rattlesnake","Twig snake","Twin Headed King Snake","Twin-Barred tree snake","Twin-spotted rat snake","Twin-spotted rattlesnake","Undulated pit viper","Uracoan rattlesnake","Ursini's viper","Urutu","Vine snake","Viper","Viper Adder","Vipera ammodytes","Wagler's pit viper","Wart snake","Water adder","Water moccasin","Water snake","West Indian racer","Western blind snake","Western carpet python","Western coral snake","Western diamondback rattlesnake","Western green mamba","Western ground snake","Western hog-nosed viper","Western mud snake","Western tiger snake","Western woma python","Wetar Island python","Whip snake","White-lipped keelback","White-lipped python","White-lipped tree viper","Wirot's pit viper","Wolf snake","Woma python","Worm snake","Wutu","Wynaad keelback","Yarara","Yellow anaconda","Yellow-banded sea snake","Yellow-bellied sea snake","Yellow-lined palm viper","Yellow-lipped sea snake","Yellow-striped rat snake","Yunnan keelback","Zebra snake","Zebra spitting cobra"],type:["bat","bear","bee","bird","butterfly","cat","cow","crocodile","deer","dog","dolphin","eagle","elephant","fish","flamingo","fox","frog","gecko","giraffe","gorilla","hamster","hippopotamus","horse","kangaroo","koala","lion","monkey","ostrich","panda","parrot","peacock","penguin","polar bear","rabbit","rhinoceros","sea lion","shark","snake","squirrel","tiger","turtle","whale","wolf","zebra"]},app:{author:["{{person.name}}","{{company.name}}"],name:["Redhold","Treeflex","Trippledex","Kanlam","Bigtax","Daltfresh","Toughjoyfax","Mat Lam Tam","Otcom","Tres-Zap","Y-Solowarm","Tresom","Voltsillam","Biodex","Greenlam","Viva","Matsoft","Temp","Zoolab","Subin","Rank","Job","Stringtough","Tin","It","Home Ing","Zamit","Sonsing","Konklab","Alpha","Latlux","Voyatouch","Alphazap","Holdlamis","Zaam-Dox","Sub-Ex","Quo Lux","Bamity","Ventosanzap","Lotstring","Hatity","Tempsoft","Overhold","Fixflex","Konklux","Zontrax","Tampflex","Span","Namfix","Transcof","Stim","Fix San","Sonair","Stronghold","Fintone","Y-find","Opela","Lotlux","Ronstring","Zathin","Duobam","Keylex"],version:["0.#.#","0.##","#.##","#.#","#.#.#"]},book:{author:["A.A. Milne","Agatha Christie","Alan Moore and Dave Gibbons","Albert Camus","Aldous Huxley","Alexander Pope","Alexandre Dumas","Alice Walker","Andrew Lang","Anne Frank","Anthony Burgess","Anthony Trollope","Antoine de Saint-Exupéry","Anton Chekhov","Anton Pavlovich Chekhov","Arthur Conan Doyle","Arthur Schopenhauer","Aylmer Maude","Ayn Rand","Beatrix Potter","Benjamin Disraeli","Benjamin Jowett","Bernard Shaw","Bertrand Russell","Bhagavanlal Indrajit","Boris Pasternak","Bram Stoker","Brian Evenson","C.E. Brock","C.S. Lewis","Carson McCallers","Charles Dickens","Charles E. Derbyshire","Charlotte Brontë","Charlotte Perkins Gilman","Chinua Achebe","Clifford R. Adams","Constance Garnett","Cormac McCarthy","D.H. Lawrence","Dan Brown","Daniel Defoe","Dante Alighieri","Dashiell Hammett","David Widger","David Wyllie","Dean Koontz","Don DeLillo","E.M. Forster","Edgar Allan Poe","Edgar Rice Burroughs","Elizabeth Cleghorn Gaskell","Elizabeth Von Arnim","Emily Brontë","Erich Remarque","Ernest Hemingway","Evelyn Waugh","F. Scott Fitzgerald","Ford Madox Ford","Frances Hodgson Burnett","Frank Herbert","Frank T. Merrill","Franz Kafka","Friedrich Wilhelm Nietzsche","Fyodor Dostoyevsky","G.K. Chesterton","Gabriel Garcia Marquez","Geoffrey Chaucer","George Eliot","George Grossmith","George Orwell","George R. R. Martin","George Saunders","Grady Ward","Graham Greene","Gustave Doré","Gustave Flaubert","Guy de Maupassant","Günter Grass","H.G. Wells","H.P. Lovecraft","Harper Lee","Harriet Beecher Stowe","Haruki Murakami","Henrik Ibsen","Henry David Thoreau","Henry Fielding","Henry James","Henry Miller","Henry Morley","Herman Melville","Hermann Broch","Homer","Honoré de Balzac","Ian McEwan","Isabel Florence Hapgood","Italo Calvino","J.D. Salinger","J.K. Rowling","J.M. Barrie","J.R.R. Tolkien","Jack Kerouac","Jack London","Jacob Grimm","Jacqueline Crooks","James Baldwin","James Dickey","James Ellroy","James Joyce","James Patterson","Jane Austen","Johann Wolfgang von Goethe","John Bunyan","John Camden Hotten","John Dos Passos","John Green","John Grisham","John Kennedy Toole","John Milton","John Ormsby","John Steinbeck","John Updike","Jonathan Franzen","Jonathan Swift","Joseph Conrad","Joseph Heller","José Rizal","Judy Blume","Jules Verne","Junot Diaz","Karl Marx","Kazuo Ishiguro","Ken Follett","Ken Kesey","Kenneth Grahame","Khaled Hosseini","Kingsley Amis","Kurt Vonnegut","L. Frank Baum","L.M. Montgomery","Laurence Sterne","Leo Tolstoy","Lewis Carroll","Louisa May Alcott","Louise Maude","Malcolm Lowry","Marcel Proust","Margaret Atwood","Margaret Mitchell","Marilynne Robinson","Mark Twain","Martin Amis","Mary Shelley","Michael Chabon","Miguel de Cervantes","Mikhail Bulgakov","Muriel Spark","Nancy Mitford","Nathanael West","Nathaniel Hawthorne","Neil Gaiman","Niccolo Machiavelli","Norman Mailer","Oscar Levy","Oscar Wilde","P.G. Wodehouse","Paulo Coelho","Peter Carey","Philip Pullman","Philip Roth","Plato","R.L. Stine","Rachel Kushner","Ralph Ellison","Ray Bradbury","Raymond Chandler","Richard Wagner","Richard Wright","Richard Yates","Roald Dahl","Robert Graves","Robert Louis Stevenson","Robert Penn Warren","Rudyard Kipling","Salman Rushdie","Samuel Beckett","Samuel Butler","Samuel Richardson","Saul Bellow","Shivaram Parashuram Bhide","Sir Arthur Conan Doyle","Sir Richard Francis Burton","Stendhal","Stephen Hawking","Stephen King","Sun Tzu","Suzanne Collins","T. Smollett","T.S. Eliot","Theodore Alois Buckley","Theodore Dreiser","Thomas Hardy","Thomas Love Peacock","Thomas Mann","Toni Morrison","Truman Capote","V.S. Naipaul","Vance Packard","Vatsyayana","Victor Hugo","Virgil","Virginia Woolf","Vladimir Nabokov","Voltaire","W.G. Sebald","W.K. Marriott","Walker Percy","Walt Whitman","Walter Scott","Wilhelm Grimm","Wilkie Collins","William Faulkner","William Gibson","William Golding","William Makepeace Thackeray","William Shakespeare","Zadie Smith"],format:["Audiobook","Ebook","Hardcover","Paperback"],genre:["Adventure","Biography","Business","Children's Literature","Classic","Comedy","Comic","Detective","Drama","Fantasy","Graphic Novel","Historical Fiction","Horror","Memoir","Mystery","Mythology","Philosophy","Poetry","Psychology","Religion","Romance","Science Fiction","Thriller","Western","Young Adult"],publisher:["Academic Press","Ace Books","Addison-Wesley","Adis International","Airiti Press","Allen Ltd","Andrews McMeel Publishing","Anova Books","Anvil Press Poetry","Applewood Books","Apress","Athabasca University Press","Atheneum Books","Atheneum Publishers","Atlantic Books","Atlas Press","BBC Books","Ballantine Books","Banner of Truth Trust","Bantam Books","Bantam Spectra","Barrie & Jenkins","Basic Books","Belknap Press","Bella Books","Bellevue Literary Press","Berg Publishers","Berkley Books","Bison Books","Black Dog Publishing","Black Library","Black Sparrow Books","Blackie and Son Limited","Blackstaff Press","Blackwell Publishing","Bloodaxe Books","Bloomsbury Publishing Plc","Blue Ribbon Books","Book League of America","Book Works","Booktrope","Borgo Press","Bowes & Bowes","Boydell & Brewer","Breslov Research Institute","Brill","Brimstone Press","Broadview Press","Burns & Oates","Butterworth-Heinemann","Caister Academic Press","Cambridge University Press","Candlewick Press","Canongate Books","Carcanet Press","Carlton Books","Carlton Publishing Group","Carnegie Mellon University Press","Casemate Publishers","Cengage Learning","Central European University Press","Chambers Harrap","Charles Scribner's Sons","Chatto and Windus","Chick Publications","Chronicle Books","Churchill Livingstone","Cisco Press","City Lights Publishers","Cloverdale Corporation","D. Appleton & Company","D. Reidel","DAW Books","Da Capo Press","Daedalus Publishing","Dalkey Archive Press","Darakwon Press","David & Charles","Dedalus Books","Del Rey Books","E. P. Dutton","ECW Press","Earthscan","Edupedia Publications","Eel Pie Publishing","Eerdmans Publishing","Ellora's Cave","Elsevier","Emerald Group Publishing","Etruscan Press","FabJob","Faber and Faber","Fairview Press","Farrar, Straus & Giroux","Fearless Books","Felony & Mayhem Press","Firebrand Books","Flame Tree Publishing","Focal Press","G-Unit Books","G. P. Putnam's Sons","Gaspereau Press","Gay Men's Press","Gefen Publishing House","George H. Doran Company","George Newnes","George Routledge & Sons","Godwit Press","Golden Cockerel Press","HMSO","Hachette Book Group USA","Hackett Publishing Company","Hamish Hamilton","Happy House","Harcourt Assessment","Harcourt Trade Publishers","Harlequin Enterprises Ltd","Harper & Brothers","Harper & Row","HarperCollins","HarperPrism","HarperTrophy","Harry N. Abrams, Inc.","Harvard University Press","Harvest House","Harvill Press at Random House","Hawthorne Books","Hay House","Haynes Manuals","Heyday Books","Hodder & Stoughton","Hodder Headline","Hogarth Press","Holland Park Press","Holt McDougal","Horizon Scientific Press","Ian Allan Publishing","Ignatius Press","Imperial War Museum","Indiana University Press","J. M. Dent","Jaico Publishing House","Jarrolds Publishing","John Blake Publishing","Karadi Tales","Kensington Books","Kessinger Publishing","Kodansha","Kogan Page","Koren Publishers Jerusalem","Ladybird Books","Leaf Books","Leafwood Publishers","Left Book Club","Legend Books","Lethe Press","Libertas Academica","Liberty Fund","Library of America","Lion Hudson","Macmillan Publishers","Mainstream Publishing","Manchester University Press","Mandrake Press","Mandrake of Oxford","Manning Publications","Manor House Publishing","Mapin Publishing","Marion Boyars Publishers","Mark Batty Publisher","Marshall Cavendish","Marshall Pickering","Martinus Nijhoff Publishers","Mascot Books","Matthias Media","McClelland and Stewart","McFarland & Company","McGraw Hill Financial","McGraw-Hill Education","Medknow Publications","Naiad Press","Nauka","NavPress","New Directions Publishing","New English Library","New Holland Publishers","New Village Press","Newnes","No Starch Press","Nonesuch Press","O'Reilly Media","Oberon Books","Open Court Publishing Company","Open University Press","Orchard Books","Orion Books","Packt Publishing","Palgrave Macmillan","Pan Books","Pantheon Books at Random House","Papadakis Publisher","Parachute Publishing","Parragon","Pathfinder Press","Paulist Press","Pavilion Books","Peace Hill Press","Pecan Grove Press","Pen and Sword Books","Penguin Books","Random House","Reed Elsevier","Reed Publishing","SAGE Publications","Salt Publishing","Sams Publishing","Schocken Books","Scholastic Press","Seagull Books","Secker & Warburg","Shambhala Publications","Shire Books","Shoemaker & Hoard Publishers","Shuter & Shooter Publishers","Sidgwick & Jackson","Signet Books","Simon & Schuster","St. Martin's Press","T & T Clark","Tachyon Publications","Tammi","Target Books","Tarpaulin Sky Press","Tartarus Press","Tate Publishing & Enterprises","Taunton Press","Taylor & Francis","Ten Speed Press","UCL Press","Unfinished Monument Press","United States Government Publishing Office","University of Akron Press","University of Alaska Press","University of California Press","University of Chicago Press","University of Michigan Press","University of Minnesota Press","University of Nebraska Press","Velazquez Press","Verso Books","Victor Gollancz Ltd","Viking Press","Vintage Books","Vintage Books at Random House","Virago Press","Virgin Publishing","Voyager Books","Zed Books","Ziff Davis Media","Zondervan"],series:["A Song of Ice and Fire","Anna Karenina","Colonel Race","Discworld","Dune","Harry Potter","Hercule Poirot","His Dark Materials","Jane Austen Murder Mysteries","Little Women","Outlander","Percy Jackson","Sherlock Holmes","The Arc of a Scythe","The Bartimaeus Trilogy","The Border Trilogy","The Chronicles of Narnia","The Dark Tower","The Dresden Files","The Eighth Life","The Foundation Series","The Hitchhiker's Guide to the Galaxy","The Hunger Games","The Infinity Cycle","The Inheritance Cycle","The Lord of the Rings","The Maze Runner","The Prison Healer","The Red Rising Saga","The Southern Reach","The Wheel of Time","Thursday Next Series","Twilight","War and Peace"],title:["1984","20,000 Leagues Under the Sea","A Bend in the River","A Brief History of Time","A Clockwork Orange","A Confederacy of Dunces","A Doll's House","A Handful of Dust","A Modest Proposal","A Passage to India","A Portrait of the Artist as a Young Man","A Room with a View","A Study in Scarlet","A Tale of Two Cities","A Wrinkle in Time","Absalom, Absalom!","Adventures of Huckleberry Finn","Alice's Adventures in Wonderland","All Quiet on the Western Front","All the King's Men","American Pastoral","An American Tragedy","And Then There Were None","Animal Farm","Anna Karenina","Anne of Green Gables","Are You There God? It's Me, Margaret","As I Lay Dying","Atlas Shrugged","Atonement","Austerlitz","Beloved","Beyond Good and Evil","Bible","Bleak House","Blood Meridian","Brave New World","Brideshead Revisited","Candide","Carmilla","Catch-22","Charlie and the Chocolate Factory","Charlotte's Web","Clarissa","Cranford","Crime and Punishment","Dao De Jing: A Minimalist Translation","David Copperfield","Deliverance","Don Quixote","Dora","Dr. Zhivago","Dracula","Dubliners","Dune","East of Eden","Emma","Fahrenheit 451","Faust","For Whom the Bell Tolls","Frankenstein","Freakonomics","Go Tell It on the Mountain","Gone with the Wind","Great Expectations","Grimms' Fairy Tales","Gulliver's Travels","Hamlet","Harry Potter and the Sorcerer's Stone","Heart of Darkness","Herzog","His Dark Materials","Hitting the line","Housekeeping","I, Claudius","If on a Winter's Night a Traveler","In Cold Blood","In Search of Lost Time","Invisible Man","It","Jane Eyre","Josefine Mutzenbacher","Jude the Obscure","L.A. Confidential","Leaves of Grass","Les Miserables","Life of Pi","Little Women","Lolita","Long Walk to Freedom","Lord Jim","Lord of the Flies","Lucky Jim","Madame Bovary","Malone Dies","Meditations","Men Without Women","Metamorphosis","Middlemarch","Midnight's Children","Moby Dick","Money","Mrs. Dalloway","My Bondage and My Freedom","My Life","Native Son","Neuromancer","Never Let Me Go","Nightmare Abbey","Nineteen Eighty Four","Nostromo","Notes from the Underground","Of Mice and Men","Oliver Twist","On the Duty of Civil Disobedience","On the Road","One Flew Over the Cuckoo's Nest","One Hundred Years of Solitude","One Thousand and One Nights","Oscar and Lucinda","Pale Fire","Paradise Lost","Peter Pan","Portnoy's Complaint","Pride and Prejudice","Rabbit, Run","Republic","Revolutionary Road","Robinson Crusoe","Romeo and Juliet","Ruth Fielding in Alaska","Scoop","Second Treatise of Government","Slaughterhouse Five","Stories of Anton Chekhov","Sybil","Tess of the d'Urbervilles","The Adventures of Augie March","The Adventures of Huckleberry Finn","The Adventures of Sherlock Holmes","The Adventures of Tom Sawyer","The Aeneid","The Alchemist","The Ambassadors","The Art of War","The Big Sleep","The Black Sheep","The Blue Castle","The Brief Wondrous Life of Oscar Wao","The Brothers Karamazov","The Call of the Wild","The Canterbury Tales","The Catcher in the Rye","The Color Purple","The Complete Works of Edgar Allen Poe","The Corrections","The Count of Monte Cristo","The Day of the Locust","The Diary of a Nobody","The Diary of a Young Girl","The Divine Comedy","The Enchanted April","The Fountainhead","The Golden Bowl","The Golden Notebook","The Good Soldier","The Grapes of Wrath","The Great Gatsby","The Handmaid's Tale","The Heart is a Lonely Hunter","The Heart of the Matter","The Hobbit","The Hound of the Baskervilles","The Idiot","The Iliad","The King in Yellow","The Kite Runner","The Lion, the Witch, and the Wardrobe","The Little Prince","The Lord of the Rings","The Magic Mountain","The Maltese Falcon","The Master and Margarita","The Moviegoer","The Naked and the Dead","The Odyssey","The Old Man and the Sea","The Pickwick Papers","The Picture of Dorian Gray","The Pilgrim's Progress","The Pillars of the Earth","The Plague","The Portrait of a Lady","The Prime of Miss Jean Brodie","The Prince","The Problems of Philosophy","The Prophet","The Pursuit of Love","The Rainbow","The Red and the Black","The Remains of the Day","The Republic","The Scarlet Letter","The Sleepwalkers","The Sound and the Fury","The Stand","The Strange Case of Dr. Jekyll and Mr. Hyde","The Stranger","The Sun Also Rises","The Thirty-Nine Steps","The Three Musketeers","The Time Machine","The Tin Drum","The Trial","The War of the Worlds","The Waste Land","The Way We Live Now","The Wind in the Willows","The Woman in White","The Wonderful Wizard of Oz","The Works of Edgar Allan Poe","The Yellow Wallpaper","Things Fall Apart","Tinker, Tailor, Soldier, Spy","To Kill a Mockingbird","To the Lighthouse","Tom Jones","Treasure Island","Tristram Shandy","Tropic of Cancer","U.S.A. Trilogy","Ulysses","Uncle Tom's Cabin","Under the Volcano","Underworld","Vanity Fair","Walden","War and Peace","Watchmen","Winnie-the-Pooh","Wuthering Heights"]},cell_phone:{formats:["###-###-####","(###) ###-####","1-###-###-####","###.###.####"]},color:{human:["azure","black","blue","cyan","fuchsia","gold","green","grey","indigo","ivory","lavender","lime","magenta","maroon","mint green","olive","orange","orchid","pink","plum","purple","red","salmon","silver","sky blue","tan","teal","turquoise","violet","white","yellow"]},commerce:{department:["Automotive","Baby","Beauty","Books","Clothing","Computers","Electronics","Games","Garden","Grocery","Health","Home","Industrial","Jewelry","Kids","Movies","Music","Outdoors","Shoes","Sports","Tools","Toys"],product_description:["Discover the {{animal.type}}-like agility of our {{commerce.product}}, perfect for {{word.adjective}} users","Discover the {{word.adjective}} new {{commerce.product}} with an exciting mix of {{commerce.productMaterial}} ingredients","Ergonomic {{commerce.product}} made with {{commerce.productMaterial}} for all-day {{word.adjective}} support","Experience the {{color.human}} brilliance of our {{commerce.product}}, perfect for {{word.adjective}} environments","Featuring {{science.chemical_element.name}}-enhanced technology, our {{commerce.product}} offers unparalleled {{word.adjective}} performance","Innovative {{commerce.product}} featuring {{word.adjective}} technology and {{commerce.productMaterial}} construction","Introducing the {{location.country}}-inspired {{commerce.product}}, blending {{word.adjective}} style with local craftsmanship","New {{color.human}} {{commerce.product}} with ergonomic design for {{word.adjective}} comfort",'New {{commerce.product}} model with {{number.int({"min": 1, "max": 100})}} GB RAM, {{number.int({"min": 1, "max": 1000})}} GB storage, and {{word.adjective}} features',"Our {{animal.type}}-friendly {{commerce.product}} ensures {{word.adjective}} comfort for your pets","Our {{food.adjective}}-inspired {{commerce.product}} brings a taste of luxury to your {{word.adjective}} lifestyle","Professional-grade {{commerce.product}} perfect for {{word.adjective}} training and recreational use","Savor the {{food.adjective}} essence in our {{commerce.product}}, designed for {{word.adjective}} culinary adventures","Stylish {{commerce.product}} designed to make you stand out with {{word.adjective}} looks","The sleek and {{word.adjective}} {{commerce.product}} comes with {{color.human}} LED lighting for smart functionality","The {{color.human}} {{commerce.product}} combines {{location.country}} aesthetics with {{science.chemical_element.name}}-based durability","The {{company.catchPhrase}} {{commerce.product}} offers reliable performance and {{word.adjective}} design","The {{person.firstName}} {{commerce.product}} is the latest in a series of {{word.adjective}} products from {{company.name}}","{{commerce.productAdjective}} {{commerce.product}} designed with {{commerce.productMaterial}} for {{word.adjective}} performance","{{company.name}}'s most advanced {{commerce.product}} technology increases {{word.adjective}} capabilities"],product_name:{adjective:["Awesome","Bespoke","Electronic","Elegant","Ergonomic","Fantastic","Fresh","Frozen","Generic","Gorgeous","Handcrafted","Handmade","Incredible","Intelligent","Licensed","Luxurious","Modern","Oriental","Practical","Recycled","Refined","Rustic","Sleek","Small","Soft","Tasty","Unbranded"],material:["Aluminum","Bamboo","Bronze","Ceramic","Concrete","Cotton","Gold","Granite","Marble","Metal","Plastic","Rubber","Silk","Steel","Wooden"],product:["Bacon","Ball","Bike","Car","Chair","Cheese","Chicken","Chips","Computer","Fish","Gloves","Hat","Keyboard","Mouse","Pants","Pizza","Salad","Sausages","Shirt","Shoes","Soap","Table","Towels","Tuna"]}},company:{adjective:["AI-driven","Adaptive","Advanced","Automated","Balanced","Business-focused","Centralized","Compatible","Configurable","Cross-platform","Customer-focused","Customizable","Decentralized","Devolved","Digitized","Distributed","Diverse","Enhanced","Ergonomic","Exclusive","Expanded","Extended","Face to face","Focused","Front-line","Fully-configurable","Fundamental","Future-proofed","Grass-roots","Horizontal","Immersive","Implemented","Innovative","Integrated","Intuitive","Managed","Monitored","Multi-tiered","Networked","Open-architected","Open-source","Operative","Optimized","Optional","Organic","Organized","Persevering","Persistent","Phased","Polarised","Proactive","Profit-focused","Profound","Programmable","Progressive","Public-key","Quality-focused","Reactive","Realigned","Reduced","Reverse-engineered","Robust","Seamless","Secured","Self-enabling","Sharable","Smart","Stand-alone","Streamlined","Sustainable","Synchronised","Team-oriented","Total","Triple-buffered","Universal","Upgradable","User-centric","User-friendly","Versatile","Virtual","Visionary"],buzz_adjective:["24/7","AI-driven","B2B","B2C","back-end","best-of-breed","bleeding-edge","collaborative","compelling","cross-media","cross-platform","customized","cutting-edge","decentralized","distributed","dynamic","efficient","end-to-end","enterprise","extensible","frictionless","front-end","generative","global","granular","holistic","immersive","impactful","innovative","integrated","interactive","intuitive","killer","leading-edge","magnetic","mission-critical","next-generation","one-to-one","open-source","out-of-the-box","plug-and-play","proactive","quantum","real-time","revolutionary","rich","robust","scalable","seamless","smart","sticky","strategic","sustainable","synergistic","transparent","turn-key","ubiquitous","user-centric","value-added","vertical","viral","virtual","visionary","world-class"],buzz_noun:["AI","ROI","applications","architectures","blockchains","channels","communities","content","convergence","deliverables","e-commerce","experiences","functionalities","infrastructures","initiatives","interfaces","large language models","lifetime value","markets","methodologies","metrics","mindshare","models","networks","niches","paradigms","partnerships","platforms","relationships","schemas","smart contracts","solutions","supply-chains","synergies","systems","technologies","users","web services"],buzz_verb:["aggregate","architect","benchmark","brand","collaborate","cultivate","deliver","deploy","disintermediate","drive","embrace","empower","enable","engage","engineer","enhance","evolve","expedite","exploit","extend","facilitate","gamify","generate","grow","harness","implement","incentivize","incubate","innovate","integrate","iterate","leverage","maximize","mesh","monetize","optimize","orchestrate","productize","redefine","reinvent","repurpose","revolutionize","scale","seize","simplify","strategize","streamline","syndicate","synthesize","target","transform","transition","unleash","utilize","visualize","whiteboard"],descriptor:["24 hour","24/7","AI-powered","actuating","analyzing","asymmetric","asynchronous","attitude-oriented","bifurcated","bottom-line","clear-thinking","client-driven","client-server","cloud-native","coherent","cohesive","composite","content-based","context-sensitive","contextually-based","data-driven","dedicated","demand-driven","directional","discrete","disintermediate","dynamic","eco-centric","empowering","encompassing","executive","explicit","exuding","fault-tolerant","fresh-thinking","full-range","global","heuristic","high-level","holistic","homogeneous","human-resource","hybrid","immersive","impactful","incremental","intangible","interactive","intermediate","leading edge","local","logistical","maximized","methodical","mission-critical","mobile","modular","motivating","national","needs-based","neutral","next generation","optimal","optimizing","radical","real-time","reciprocal","regional","resilient","responsive","scalable","secondary","stable","static","sustainable","system-worthy","systematic","systemic","tangible","tertiary","transitional","uniform","user-facing","value-added","well-modulated","zero administration","zero defect","zero tolerance","zero trust"],legal_entity_type:["Group","Inc","LLC","and Sons"],name_pattern:["{{person.last_name.generic}} - {{person.last_name.generic}}","{{person.last_name.generic}} {{company.legal_entity_type}}","{{person.last_name.generic}}, {{person.last_name.generic}} and {{person.last_name.generic}}"],noun:["ability","access","adapter","algorithm","alliance","analyzer","application","approach","architecture","archive","array","artificial intelligence","attitude","benchmark","budgetary management","capability","capacity","challenge","circuit","collaboration","complexity","concept","conglomeration","contingency","core","customer loyalty","data-warehouse","database","definition","emulation","encoding","encryption","firmware","flexibility","focus group","forecast","frame","framework","function","functionalities","generative AI","hardware","help-desk","hierarchy","hub","implementation","infrastructure","initiative","installation","instruction set","interface","internet solution","intranet","knowledge base","knowledge user","leverage","local area network","matrices","matrix","methodology","microservice","middleware","migration","model","moderator","monitoring","moratorium","neural-net","open architecture","orchestration","paradigm","parallelism","policy","portal","pricing structure","process improvement","product","productivity","project","projection","protocol","service-desk","software","solution","standardization","strategy","structure","success","support","synergy","system engine","task-force","throughput","time-frame","toolset","utilisation","website","workforce"]},database:{column:["avatar","category","comment","createdAt","email","group","id","name","password","phone","status","title","token","updatedAt"]},date:{month:{wide:["April","August","December","February","January","July","June","March","May","November","October","September"],abbr:["Apr","Aug","Dec","Feb","Jan","Jul","Jun","Mar","May","Nov","Oct","Sep"]},weekday:{wide:["Friday","Monday","Saturday","Sunday","Thursday","Tuesday","Wednesday"],abbr:["Fri","Mon","Sat","Sun","Thu","Tue","Wed"]}},finance:{account_type:["Auto Loan","Checking","Credit Card","Home Loan","Investment","Money Market","Personal Loan","Savings"],credit_card:{american_express:["34##-######-####L","37##-######-####L"],diners_club:["30[0-5]#-######-###L","36##-######-###L","54##-####-####-###L"],discover:["6011-####-####-###L","64[4-9]#-####-####-###L","65##-####-####-###L"],jcb:["3528-####-####-###L","3529-####-####-###L","35[3-8]#-####-####-###L"],mastercard:["2[221-720]-####-####-###L","5[1-5]##-####-####-###L"],visa:["4###########L","4###-####-####-###L"]},currency:[{name:"UAE Dirham",code:"AED",symbol:"",numericCode:"784"},{name:"Afghani",code:"AFN",symbol:"؋",numericCode:"971"},{name:"Lek",code:"ALL",symbol:"Lek",numericCode:"008"},{name:"Armenian Dram",code:"AMD",symbol:"",numericCode:"051"},{name:"Netherlands Antillian Guilder",code:"ANG",symbol:"ƒ",numericCode:"532"},{name:"Kwanza",code:"AOA",symbol:"",numericCode:"973"},{name:"Argentine Peso",code:"ARS",symbol:"$",numericCode:"032"},{name:"Australian Dollar",code:"AUD",symbol:"$",numericCode:"036"},{name:"Aruban Guilder",code:"AWG",symbol:"ƒ",numericCode:"533"},{name:"Azerbaijanian Manat",code:"AZN",symbol:"ман",numericCode:"944"},{name:"Convertible Marks",code:"BAM",symbol:"KM",numericCode:"977"},{name:"Barbados Dollar",code:"BBD",symbol:"$",numericCode:"052"},{name:"Taka",code:"BDT",symbol:"",numericCode:"050"},{name:"Bulgarian Lev",code:"BGN",symbol:"лв",numericCode:"975"},{name:"Bahraini Dinar",code:"BHD",symbol:"",numericCode:"048"},{name:"Burundi Franc",code:"BIF",symbol:"",numericCode:"108"},{name:"Bermudian Dollar (customarily known as Bermuda Dollar)",code:"BMD",symbol:"$",numericCode:"060"},{name:"Brunei Dollar",code:"BND",symbol:"$",numericCode:"096"},{name:"Boliviano boliviano",code:"BOB",symbol:"Bs",numericCode:"068"},{name:"Brazilian Real",code:"BRL",symbol:"R$",numericCode:"986"},{name:"Bahamian Dollar",code:"BSD",symbol:"$",numericCode:"044"},{name:"Pula",code:"BWP",symbol:"P",numericCode:"072"},{name:"Belarusian Ruble",code:"BYN",symbol:"Rbl",numericCode:"933"},{name:"Belize Dollar",code:"BZD",symbol:"BZ$",numericCode:"084"},{name:"Canadian Dollar",code:"CAD",symbol:"$",numericCode:"124"},{name:"Congolese Franc",code:"CDF",symbol:"",numericCode:"976"},{name:"Swiss Franc",code:"CHF",symbol:"CHF",numericCode:"756"},{name:"Chilean Peso",code:"CLP",symbol:"$",numericCode:"152"},{name:"Yuan Renminbi",code:"CNY",symbol:"¥",numericCode:"156"},{name:"Colombian Peso",code:"COP",symbol:"$",numericCode:"170"},{name:"Costa Rican Colon",code:"CRC",symbol:"₡",numericCode:"188"},{name:"Cuban Peso",code:"CUP",symbol:"₱",numericCode:"192"},{name:"Cape Verde Escudo",code:"CVE",symbol:"",numericCode:"132"},{name:"Czech Koruna",code:"CZK",symbol:"Kč",numericCode:"203"},{name:"Djibouti Franc",code:"DJF",symbol:"",numericCode:"262"},{name:"Danish Krone",code:"DKK",symbol:"kr",numericCode:"208"},{name:"Dominican Peso",code:"DOP",symbol:"RD$",numericCode:"214"},{name:"Algerian Dinar",code:"DZD",symbol:"",numericCode:"012"},{name:"Egyptian Pound",code:"EGP",symbol:"£",numericCode:"818"},{name:"Nakfa",code:"ERN",symbol:"",numericCode:"232"},{name:"Ethiopian Birr",code:"ETB",symbol:"",numericCode:"230"},{name:"Euro",code:"EUR",symbol:"€",numericCode:"978"},{name:"Fiji Dollar",code:"FJD",symbol:"$",numericCode:"242"},{name:"Falkland Islands Pound",code:"FKP",symbol:"£",numericCode:"238"},{name:"Pound Sterling",code:"GBP",symbol:"£",numericCode:"826"},{name:"Lari",code:"GEL",symbol:"",numericCode:"981"},{name:"Cedi",code:"GHS",symbol:"",numericCode:"936"},{name:"Gibraltar Pound",code:"GIP",symbol:"£",numericCode:"292"},{name:"Dalasi",code:"GMD",symbol:"",numericCode:"270"},{name:"Guinea Franc",code:"GNF",symbol:"",numericCode:"324"},{name:"Quetzal",code:"GTQ",symbol:"Q",numericCode:"320"},{name:"Guyana Dollar",code:"GYD",symbol:"$",numericCode:"328"},{name:"Hong Kong Dollar",code:"HKD",symbol:"$",numericCode:"344"},{name:"Lempira",code:"HNL",symbol:"L",numericCode:"340"},{name:"Gourde",code:"HTG",symbol:"",numericCode:"332"},{name:"Forint",code:"HUF",symbol:"Ft",numericCode:"348"},{name:"Rupiah",code:"IDR",symbol:"Rp",numericCode:"360"},{name:"New Israeli Sheqel",code:"ILS",symbol:"₪",numericCode:"376"},{name:"Bhutanese Ngultrum",code:"BTN",symbol:"Nu",numericCode:"064"},{name:"Indian Rupee",code:"INR",symbol:"₹",numericCode:"356"},{name:"Iraqi Dinar",code:"IQD",symbol:"",numericCode:"368"},{name:"Iranian Rial",code:"IRR",symbol:"﷼",numericCode:"364"},{name:"Iceland Krona",code:"ISK",symbol:"kr",numericCode:"352"},{name:"Jamaican Dollar",code:"JMD",symbol:"J$",numericCode:"388"},{name:"Jordanian Dinar",code:"JOD",symbol:"",numericCode:"400"},{name:"Yen",code:"JPY",symbol:"¥",numericCode:"392"},{name:"Kenyan Shilling",code:"KES",symbol:"",numericCode:"404"},{name:"Som",code:"KGS",symbol:"лв",numericCode:"417"},{name:"Riel",code:"KHR",symbol:"៛",numericCode:"116"},{name:"Comoro Franc",code:"KMF",symbol:"",numericCode:"174"},{name:"North Korean Won",code:"KPW",symbol:"₩",numericCode:"408"},{name:"Won",code:"KRW",symbol:"₩",numericCode:"410"},{name:"Kuwaiti Dinar",code:"KWD",symbol:"",numericCode:"414"},{name:"Cayman Islands Dollar",code:"KYD",symbol:"$",numericCode:"136"},{name:"Tenge",code:"KZT",symbol:"лв",numericCode:"398"},{name:"Kip",code:"LAK",symbol:"₭",numericCode:"418"},{name:"Lebanese Pound",code:"LBP",symbol:"£",numericCode:"422"},{name:"Sri Lanka Rupee",code:"LKR",symbol:"₨",numericCode:"144"},{name:"Liberian Dollar",code:"LRD",symbol:"$",numericCode:"430"},{name:"Libyan Dinar",code:"LYD",symbol:"",numericCode:"434"},{name:"Moroccan Dirham",code:"MAD",symbol:"",numericCode:"504"},{name:"Moldovan Leu",code:"MDL",symbol:"",numericCode:"498"},{name:"Malagasy Ariary",code:"MGA",symbol:"",numericCode:"969"},{name:"Denar",code:"MKD",symbol:"ден",numericCode:"807"},{name:"Kyat",code:"MMK",symbol:"",numericCode:"104"},{name:"Tugrik",code:"MNT",symbol:"₮",numericCode:"496"},{name:"Pataca",code:"MOP",symbol:"",numericCode:"446"},{name:"Ouguiya",code:"MRU",symbol:"",numericCode:"929"},{name:"Mauritius Rupee",code:"MUR",symbol:"₨",numericCode:"480"},{name:"Rufiyaa",code:"MVR",symbol:"",numericCode:"462"},{name:"Kwacha",code:"MWK",symbol:"",numericCode:"454"},{name:"Mexican Peso",code:"MXN",symbol:"$",numericCode:"484"},{name:"Malaysian Ringgit",code:"MYR",symbol:"RM",numericCode:"458"},{name:"Metical",code:"MZN",symbol:"MT",numericCode:"943"},{name:"Naira",code:"NGN",symbol:"₦",numericCode:"566"},{name:"Cordoba Oro",code:"NIO",symbol:"C$",numericCode:"558"},{name:"Norwegian Krone",code:"NOK",symbol:"kr",numericCode:"578"},{name:"Nepalese Rupee",code:"NPR",symbol:"₨",numericCode:"524"},{name:"New Zealand Dollar",code:"NZD",symbol:"$",numericCode:"554"},{name:"Rial Omani",code:"OMR",symbol:"﷼",numericCode:"512"},{name:"Balboa",code:"PAB",symbol:"B/.",numericCode:"590"},{name:"Nuevo Sol",code:"PEN",symbol:"S/.",numericCode:"604"},{name:"Kina",code:"PGK",symbol:"",numericCode:"598"},{name:"Philippine Peso",code:"PHP",symbol:"Php",numericCode:"608"},{name:"Pakistan Rupee",code:"PKR",symbol:"₨",numericCode:"586"},{name:"Zloty",code:"PLN",symbol:"zł",numericCode:"985"},{name:"Guarani",code:"PYG",symbol:"Gs",numericCode:"600"},{name:"Qatari Rial",code:"QAR",symbol:"﷼",numericCode:"634"},{name:"New Leu",code:"RON",symbol:"lei",numericCode:"946"},{name:"Serbian Dinar",code:"RSD",symbol:"Дин.",numericCode:"941"},{name:"Russian Ruble",code:"RUB",symbol:"руб",numericCode:"643"},{name:"Rwanda Franc",code:"RWF",symbol:"",numericCode:"646"},{name:"Saudi Riyal",code:"SAR",symbol:"﷼",numericCode:"682"},{name:"Solomon Islands Dollar",code:"SBD",symbol:"$",numericCode:"090"},{name:"Seychelles Rupee",code:"SCR",symbol:"₨",numericCode:"690"},{name:"Sudanese Pound",code:"SDG",symbol:"",numericCode:"938"},{name:"Swedish Krona",code:"SEK",symbol:"kr",numericCode:"752"},{name:"Singapore Dollar",code:"SGD",symbol:"$",numericCode:"702"},{name:"Saint Helena Pound",code:"SHP",symbol:"£",numericCode:"654"},{name:"Leone",code:"SLE",symbol:"",numericCode:"925"},{name:"Somali Shilling",code:"SOS",symbol:"S",numericCode:"706"},{name:"Surinam Dollar",code:"SRD",symbol:"$",numericCode:"968"},{name:"South Sudanese pound",code:"SSP",symbol:"",numericCode:"728"},{name:"Dobra",code:"STN",symbol:"Db",numericCode:"930"},{name:"Syrian Pound",code:"SYP",symbol:"£",numericCode:"760"},{name:"Lilangeni",code:"SZL",symbol:"",numericCode:"748"},{name:"Baht",code:"THB",symbol:"฿",numericCode:"764"},{name:"Somoni",code:"TJS",symbol:"",numericCode:"972"},{name:"Manat",code:"TMT",symbol:"",numericCode:"934"},{name:"Tunisian Dinar",code:"TND",symbol:"",numericCode:"788"},{name:"Pa'anga",code:"TOP",symbol:"",numericCode:"776"},{name:"Turkish Lira",code:"TRY",symbol:"₺",numericCode:"949"},{name:"Trinidad and Tobago Dollar",code:"TTD",symbol:"TT$",numericCode:"780"},{name:"New Taiwan Dollar",code:"TWD",symbol:"NT$",numericCode:"901"},{name:"Tanzanian Shilling",code:"TZS",symbol:"",numericCode:"834"},{name:"Hryvnia",code:"UAH",symbol:"₴",numericCode:"980"},{name:"Uganda Shilling",code:"UGX",symbol:"",numericCode:"800"},{name:"US Dollar",code:"USD",symbol:"$",numericCode:"840"},{name:"Peso Uruguayo",code:"UYU",symbol:"$U",numericCode:"858"},{name:"Uzbekistan Sum",code:"UZS",symbol:"лв",numericCode:"860"},{name:"Venezuelan bolívar",code:"VES",symbol:"Bs",numericCode:"928"},{name:"Dong",code:"VND",symbol:"₫",numericCode:"704"},{name:"Vatu",code:"VUV",symbol:"",numericCode:"548"},{name:"Tala",code:"WST",symbol:"",numericCode:"882"},{name:"CFA Franc BEAC",code:"XAF",symbol:"",numericCode:"950"},{name:"East Caribbean Dollar",code:"XCD",symbol:"$",numericCode:"951"},{name:"CFA Franc BCEAO",code:"XOF",symbol:"",numericCode:"952"},{name:"CFP Franc",code:"XPF",symbol:"",numericCode:"953"},{name:"Yemeni Rial",code:"YER",symbol:"﷼",numericCode:"886"},{name:"Rand",code:"ZAR",symbol:"R",numericCode:"710"},{name:"Lesotho Loti",code:"LSL",symbol:"",numericCode:"426"},{name:"Namibia Dollar",code:"NAD",symbol:"N$",numericCode:"516"},{name:"Zambian Kwacha",code:"ZMW",symbol:"K",numericCode:"967"},{name:"Zimbabwe Dollar",code:"ZWL",symbol:"",numericCode:"932"}],transaction_description_pattern:["A {{finance.transactionType}} for {{finance.currencyCode}} {{finance.amount}} was made at {{company.name}} via card ending ****{{string.numeric(4)}} on account ***{{string.numeric(4)}}.","A {{finance.transactionType}} of {{finance.currencyCode}} {{finance.amount}} occurred at {{company.name}} using a card ending in ****{{string.numeric(4)}} for account ***{{string.numeric(4)}}.","Payment of {{finance.currencyCode}} {{finance.amount}} for {{finance.transactionType}} at {{company.name}}, processed with card ending ****{{string.numeric(4)}} linked to account ***{{string.numeric(4)}}.","Transaction alert: {{finance.transactionType}} at {{company.name}} using card ending ****{{string.numeric(4)}} for an amount of {{finance.currencyCode}} {{finance.amount}} on account ***{{string.numeric(4)}}.","You made a {{finance.transactionType}} of {{finance.currencyCode}} {{finance.amount}} at {{company.name}} using card ending in ****{{string.numeric(4)}} from account ***{{string.numeric(4)}}.","Your {{finance.transactionType}} of {{finance.currencyCode}} {{finance.amount}} at {{company.name}} was successful. Charged via card ****{{string.numeric(4)}} to account ***{{string.numeric(4)}}.","{{finance.transactionType}} at {{company.name}} with a card ending in ****{{string.numeric(4)}} for {{finance.currencyCode}} {{finance.amount}} from account ***{{string.numeric(4)}}.","{{finance.transactionType}} confirmed at {{company.name}} for {{finance.currencyCode}} {{finance.amount}}, card ending in ****{{string.numeric(4)}} associated with account ***{{string.numeric(4)}}.","{{finance.transactionType}} of {{finance.currencyCode}} {{finance.amount}} at {{company.name}} charged to account ending in {{string.numeric(4)}} using card ending in ****{{string.numeric(4)}}.","{{finance.transactionType}} processed at {{company.name}} for {{finance.currencyCode}} {{finance.amount}}, using card ending ****{{string.numeric(4)}}. Account: ***{{string.numeric(4)}}.","{{finance.transactionType}} transaction at {{company.name}} using card ending with ****{{string.numeric(4)}} for {{finance.currencyCode}} {{finance.amount}} in account ***{{string.numeric(4)}}."],transaction_type:["deposit","invoice","payment","withdrawal"]},food:{adjective:["bitter","creamy","crispy","crunchy","delicious","fluffy","fresh","golden","juicy","moist","rich","salty","savory","smoky","sour","spicy","sweet","tangy","tender","zesty"],description_pattern:["A classic pie filled with delicious {{food.meat}} and {{food.adjective}} {{food.ingredient}}, baked in a {{food.adjective}} pastry crust and topped with a golden-brown lattice.","A delightful tart combining {{food.adjective}} {{food.vegetable}} and sweet {{food.fruit}}, set in a buttery pastry shell and finished with a hint of {{food.spice}}.","A heartwarming {{food.ethnic_category}} soup, featuring fresh {{food.ingredient}} and an aromatic blend of traditional spices.","A robust {{food.adjective}} stew featuring {{food.ethnic_category}} flavors, loaded with {{food.adjective}} meat, {{food.adjective}} vegetables, and a {{food.adjective}}, {{food.adjective}} broth.","A simple {{food.fruit}} pie. No fancy stuff. Just pie.","A slow-roasted {{animal.bird}} with a {{food.adjective}}, {{food.adjective}} exterior. Stuffed with {{food.fruit}} and covered in {{food.fruit}} sauce. Sides with {{food.vegetable}} puree and wild {{food.vegetable}}.","A special {{color.human}} {{food.ingredient}} from {{location.country}}. To support the strong flavor it is sided with a tablespoon of {{food.spice}}.","A succulent {{food.meat}} steak, encased in a {{food.adjective}} {{food.spice}} crust, served with a side of {{food.spice}} mashed {{food.vegetable}}.","An exquisite {{food.meat}} roast, infused with the essence of {{food.fruit}}, slow-roasted to bring out its natural flavors and served with a side of creamy {{food.vegetable}}","Baked {{food.ingredient}}-stuffed {{food.meat}}, seasoned with {{food.spice}} and {{food.adjective}} herbs, accompanied by roasted {{food.vegetable}} medley.","Crispy fried {{food.meat}} bites, seasoned with {{food.spice}} and served with a tangy {{food.fruit}} dipping sauce.","Fresh mixed greens tossed with {{food.spice}}-rubbed {{food.meat}}, {{food.vegetable}}, and a light dressing.","Fresh {{food.ingredient}} with a pinch of {{food.spice}}, topped by a caramelized {{food.fruit}} with whipped cream","Grilled {{food.meat}} kebabs, marinated in {{food.ethnic_category}} spices and served with a fresh {{food.vegetable}} and {{food.fruit}} salad.","Hearty {{food.ingredient}} and {{food.meat}} stew, slow-cooked with {{food.spice}} and {{food.vegetable}} for a comforting, flavorful meal.","Juicy {{food.meat}}, grilled to your liking and drizzled with a bold {{food.spice}} sauce, served alongside roasted {{food.vegetable}}.","Our {{food.adjective}} {{food.meat}}, slow-cooked to perfection, accompanied by steamed {{food.vegetable}} and a rich, savory gravy.","Tender {{food.meat}} skewers, glazed with a sweet and tangy {{food.fruit}} sauce, served over a bed of fragrant jasmine rice.","Tenderly braised {{food.meat}} in a rich {{food.spice}} and {{food.vegetable}} sauce, served with a side of creamy {{food.vegetable}}.","Three {{food.ingredient}} with {{food.vegetable}}, {{food.vegetable}}, {{food.vegetable}}, {{food.vegetable}} and {{food.ingredient}}. With a side of baked {{food.fruit}}, and your choice of {{food.ingredient}} or {{food.ingredient}}.",'{{number.int({"min":1, "max":99})}}-day aged {{food.meat}} steak, with choice of {{number.int({"min":2, "max":4})}} sides.'],dish:["California maki","Peking duck","Philadelphia maki","arepas","barbecue ribs","bruschette with tomato","bunny chow","caesar salad","caprese salad","cauliflower penne","cheeseburger","chicken fajitas","chicken milanese","chicken parm","chicken wings","chilli con carne","ebiten maki","fettuccine alfredo","fish and chips","french fries with sausages","french toast","hummus","katsu curry","kebab","lasagne","linguine with clams","massaman curry","meatballs with sauce","mushroom risotto","pappardelle alla bolognese","pasta and beans","pasta carbonara","pasta with tomato and basil","pho","pierogi","pizza","poke","pork belly buns","pork sausage roll","poutine","ricotta stuffed ravioli","risotto with seafood","salmon nigiri","scotch eggs","seafood paella","som tam","souvlaki","stinky tofu","sushi","tacos","teriyaki chicken donburi","tiramisù","tuna sashimi","vegetable soup"],dish_pattern:["{{food.adjective}} {{food.ethnic_category}} stew","{{food.adjective}} {{food.meat}} with {{food.vegetable}}","{{food.ethnic_category}} {{food.ingredient}} soup","{{food.fruit}} and {{food.fruit}} tart","{{food.fruit}} pie","{{food.fruit}}-glazed {{food.meat}} skewers","{{food.fruit}}-infused {{food.meat}} roast","{{food.ingredient}} and {{food.meat}} pie","{{food.ingredient}}-infused {{food.meat}}","{{food.meat}} steak","{{food.meat}} with {{food.fruit}} sauce","{{food.spice}}-crusted {{food.meat}}","{{food.spice}}-rubbed {{food.meat}} salad","{{food.vegetable}} salad","{{person.first_name.generic}}'s special {{food.ingredient}}"],ethnic_category:["Ainu","Albanian","American","Andhra","Anglo-Indian","Arab","Argentine","Armenian","Assyrian","Awadhi","Azerbaijani","Balochi","Bangladeshi","Bashkir","Belarusian","Bengali","Berber","Brazilian","British","Buddhist","Bulgarian","Cajun","Cantonese","Caribbean","Chechen","Chinese","Chinese Islamic","Circassian","Crimean Tatar","Cypriot","Czech","Danish","Egyptian","English","Eritrean","Estonian","Ethiopian","Filipino","French","Georgian","German","Goan","Goan Catholic","Greek","Gujarati","Hyderabad","Indian","Indian Chinese","Indian Singaporean","Indonesian","Inuit","Irish","Italian","Italian-American","Jamaican","Japanese","Jewish - Israeli","Karnataka","Kazakh","Keralite","Korean","Kurdish","Laotian","Latvian","Lebanese","Lithuanian","Louisiana Creole","Maharashtrian","Malay","Malaysian Chinese","Malaysian Indian","Mangalorean","Mediterranean","Mennonite","Mexican","Mordovian","Mughal","Native American","Nepalese","New Mexican","Odia","Pakistani","Parsi","Pashtun","Pennsylvania Dutch","Peranakan","Persian","Peruvian","Polish","Portuguese","Punjabi","Québécois","Rajasthani","Romani","Romanian","Russian","Sami","Serbian","Sindhi","Slovak","Slovenian","Somali","South Indian","Soviet","Spanish","Sri Lankan","Taiwanese","Tamil","Tatar","Texan","Thai","Turkish","Udupi","Ukrainian","Vietnamese","Yamal","Zambian","Zanzibari"],fruit:["apple","apricot","aubergine","avocado","banana","berry","blackberry","blood orange","blueberry","bush tomato","butternut pumpkin","cantaloupe","cavalo","cherry","corella pear","cranberry","cumquat","currant","custard apple","custard apples daikon","date","dragonfruit","dried apricot","elderberry","feijoa","fig","fingerlime","goji berry","grape","grapefruit","guava","honeydew melon","incaberry","jarrahdale pumpkin","juniper berry","kiwi fruit","kiwiberry","lemon","lime","longan","loquat","lychee","mandarin","mango","mangosteen","melon","mulberry","nashi pear","nectarine","olive","orange","papaw","papaya","passionfruit","peach","pear","pineapple","plum","pomegranate","prune","rockmelon","snowpea","sprout","starfruit","strawberry","sultana","tangelo","tomato","watermelon"],ingredient:["achacha","adzuki beans","agar","agave syrup","ajowan seed","albacore tuna","alfalfa","allspice","almond oil","almonds","amaranth","amchur","anchovies","aniseed","annatto seed","apple cider vinegar","apple juice","apple juice concentrate","apples","apricots","arborio rice","arrowroot","artichoke","arugula","asafoetida","asian greens","asian noodles","asparagus","aubergine","avocado","avocado oil","avocado spread","bacon","baking powder","baking soda","balsamic vinegar","bamboo shoots","banana","barberry","barley","barramundi","basil basmati rice","bay leaves","bean shoots","bean sprouts","beans","beef","beef stock","beetroot","berries","besan","black eyed beans","blackberries","blood oranges","blue cheese","blue eye trevalla","blue swimmer crab","blueberries","bocconcini","bok choy","bonito flakes","bonza","borlotti beans","bran","brazil nut","bread","brie","broccoli","broccolini","brown flour","brown mushrooms","brown rice","brown rice vinegar","brussels sprouts","buckwheat","buckwheat flour","buckwheat noodles","bulghur","bush tomato","butter","butter beans","buttermilk","butternut lettuce","butternut pumpkin","cabbage","cacao","cake","calamari","camellia tea oil","camembert","camomile","candle nut","cannellini beans","canola oil","cantaloupe","capers","capsicum","caraway seed","cardamom","carob carrot","carrot","cashews","cassia bark","cauliflower","cavalo","cayenne","celery","celery seed","cheddar","cherries","chestnut","chia seeds","chicken","chicken stock","chickory","chickpea","chilli pepper","chinese cabbage","chinese five spice","chives","choy sum","cinnamon","clams","cloves","cocoa powder","coconut","coconut oil","coconut water","coffee","common cultivated mushrooms","corella pear","coriander leaves","coriander seed","corn oil","corn syrup","corn tortilla","cornichons","cornmeal","cos lettuce","cottage cheese","cous cous","crabs","cranberry","cream","cream cheese","cucumber","cumin","cumquat","currants","curry leaves","curry powder","custard apples","dandelion","dark chocolate","dashi","dates","dill","dragonfruit","dried apricots","dried chinese broccoli","duck","edam","edamame","eggplant","eggs","elderberry","endive","english spinach","enoki mushrooms","extra virgin olive oil","farmed prawns","feijoa","fennel","fennel seeds","fenugreek","feta","figs","file powder","fingerlime","fish sauce","fish stock","flat mushrooms","flathead","flaxseed","flaxseed oil","flounder","flour","freekeh","french eschallots","fresh chillies","fromage blanc","fruit","galangal","garam masala","garlic","goat cheese","goat milk","goji berry","grape seed oil","grapefruit","grapes","green beans","green pepper","green tea","green tea noodles","greenwheat freekeh","gruyere","guava","gula melaka","haloumi","ham","haricot beans","harissa","hazelnut","hijiki","hiramasa kingfish","hokkien noodles","honey","honeydew melon","horseradish","hot smoked salmon","hummus","iceberg lettuce","incaberries","jarrahdale pumpkin","jasmine rice","jelly","jerusalem artichoke","jewfish","jicama","juniper berries","kale","kangaroo","kecap manis","kenchur","kidney beans","kidneys","kiwi berries","kiwi fruit","kohlrabi","kokam","kombu","koshihikari rice","kudzu","kumera","lamb","lavender flowers","leeks","lemon","lemongrass","lentils","lettuce","licorice","lime leaves","limes","liver","lobster","longan","loquats","lotus root","lychees","macadamia nut","macadamia oil","mace","mackerel","mahi mahi","mahlab","malt vinegar","mandarins","mango","mangosteens","maple syrup","margarine","marigold","marjoram","mastic","melon","milk","milk chocolate","mint","miso","molasses","monkfish","morwong","mountain bread","mozzarella","muesli","mulberries","mullet","mung beans","mussels","mustard","mustard seed","nashi pear","nasturtium","nectarines","nori","nutmeg","nutritional yeast","nuts","oat flour","oatmeal","oats","octopus","okra","olive oil","olives","omega spread","onion","oranges","oregano","oyster mushrooms","oyster sauce","oysters","pandanus leaves","papaw","papaya","paprik","parmesan cheese","parrotfish","parsley","parsnip","passionfruit","pasta","peaches","peanuts","pear","pear juice","pears","peas","pecan nut","pecorino","pepitas","peppercorns","peppermint","peppers","persimmon","pine nut","pineapple","pinto beans","pistachio nut","plums","polenta","pomegranate","poppy seed","porcini mushrooms","pork","potato flour","potatoes","provolone","prunes","pumpkin","pumpkin seed","purple carrot","purple rice","quark","quince","quinoa","radicchio","radish","raisin","raspberry","red cabbage","red lentils","red pepper","red wine","red wine vinegar","redfish","rhubarb","rice flour","rice noodles","rice paper","rice syrup","ricemilk","ricotta","rockmelon","rose water","rosemary","rye","rye bread","safflower oil","saffron","sage","sake","salmon","sardines","sausages","scallops","sea salt","semolina","sesame oil","sesame seeds","shark","shiitake mushrooms","silverbeet","slivered almonds","smoked trout","snapper","snowpea sprouts","snowpeas","soba","sour dough bread","soy","soy beans","soy flour","soy milk","soy sauce","soymilk","spearmint","spelt","spelt bread","spinach","spring onions","sprouts","squash","squid","star anise","star fruit","starfruit","stevia","strawberries","sugar","sultanas","sun-dried tomatoes","sunflower oil","sunflower seeds","sweet chilli sauce","sweet potato","swiss chard","swordfish","szechuan pepperberry","tabasco","tahini","taleggio cheese","tamari","tamarillo","tangelo","tapioca","tapioca flour","tarragon","tea","tea oil","tempeh","thyme","tinned","tofu","tom yum","tomatoes","trout","tuna","turkey","turmeric","turnips","unbleached flour","vanilla beans","vegetable oil","vegetable spaghetti","vegetable stock","vermicelli noodles","vinegar","wakame","walnut","warehou","wasabi","water","watercress","watermelon","wattleseed","wheat","wheatgrass juice","white bread","white flour","white rice","white wine","white wine vinegar","whiting wild rice","wholegrain bread","wholemeal","wholewheat flour","william pear","yeast","yellow papaw","yellowtail kingfish","yoghurt","yogurt","zucchini"],meat:["beef","chicken","crocodile","duck","emu","goose","kangaroo","lamb","ostrich","pigeon","pork","quail","rabbit","salmon","turkey","venison"],spice:["achiote seed","ajwain seed","ajwan seed","allspice","amchoor","anise","anise star","aniseed","annatto seed","arrowroot","asafoetida","baharat","balti masala","balti stir fry mix","basil","bay leaves","bbq","caraway seed","cardamom","cassia","cayenne pepper","celery","chamomile","chervil","chilli","chilli pepper","chillies","china star","chives","cinnamon","cloves","colombo","coriander","cumin","curly leaf parsley","curry","dhansak","dill","fennel seed","fenugreek","fines herbes","five spice","french lavender","galangal","garam masala","garlic","german chamomile","ginger","green cardamom","herbes de provence","jalfrezi","jerk","kaffir leaves","korma","lavender","lemon grass","lemon pepper","lime leaves","liquorice root","mace","mango","marjoram","methi","mint","mustard","nutmeg","onion seed","orange zest","oregano","paprika","parsley","pepper","peppercorns","pimento","piri piri","poppy seed","pot marjoram","poudre de colombo","ras-el-hanout","rice paper","rogan josh","rose baie","rosemary","saffron","sage","sesame seed","spearmint","sumac","sweet basil","sweet laurel","tagine","tandoori masala","tarragon","thyme","tikka masala","turmeric","vanilla","zahtar"],vegetable:["artichoke","arugula","asian greens","asparagus","bean shoots","bean sprouts","beans","beetroot","bok choy","broccoli","broccolini","brussels sprouts","butternut lettuce","cabbage","capers","carob carrot","carrot","cauliflower","celery","chilli pepper","chinese cabbage","chives","cornichons","cos lettuce","cucumber","dried chinese broccoli","eggplant","endive","english spinach","french eschallots","fresh chillies","garlic","green beans","green pepper","hijiki","iceberg lettuce","jerusalem artichoke","jicama","kale","kohlrabi","leeks","lettuce","okra","onion","parsnip","peas","peppers","potatoes","pumpkin","purple carrot","radicchio","radish","raspberry","red cabbage","red pepper","rhubarb","snowpea sprouts","spinach","squash","sun dried tomatoes","sweet potato","swiss chard","turnips","zucchini"]},hacker:{adjective:["1080p","auxiliary","back-end","bluetooth","cross-platform","digital","haptic","mobile","multi-byte","neural","online","open-source","optical","primary","redundant","solid state","virtual","wireless"],ingverb:["backing up","bypassing","calculating","compressing","connecting","copying","generating","hacking","indexing","navigating","overriding","parsing","programming","quantifying","synthesizing","transmitting"],noun:["alarm","application","array","bandwidth","bus","capacitor","card","circuit","driver","feed","firewall","hard drive","interface","matrix","microchip","monitor","panel","pixel","port","program","protocol","sensor","system","transmitter"],phrase:["I'll {{verb}} the {{adjective}} {{abbreviation}} {{noun}}, that should {{noun}} the {{abbreviation}} {{noun}}!","If we {{verb}} the {{noun}}, we can get to the {{abbreviation}} {{noun}} through the {{adjective}} {{abbreviation}} {{noun}}!","The {{abbreviation}} {{noun}} is down, {{verb}} the {{adjective}} {{noun}} so we can {{verb}} the {{abbreviation}} {{noun}}!","Try to {{verb}} the {{abbreviation}} {{noun}}, maybe it will {{verb}} the {{adjective}} {{noun}}!","Use the {{adjective}} {{abbreviation}} {{noun}}, then you can {{verb}} the {{adjective}} {{noun}}!","We need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!","You can't {{verb}} the {{noun}} without {{ingverb}} the {{adjective}} {{abbreviation}} {{noun}}!","{{ingverb}} the {{noun}} won't do anything, we need to {{verb}} the {{adjective}} {{abbreviation}} {{noun}}!"],verb:["back up","bypass","calculate","compress","connect","copy","generate","hack","index","input","navigate","override","parse","program","quantify","reboot","synthesize","transmit"]},internet:{domain_suffix:["com","biz","info","name","net","org"],example_email:["example.org","example.com","example.net"],free_email:["gmail.com","yahoo.com","hotmail.com"]},location:{building_number:["#####","####","###"],city_name:["Abilene","Akron","Alafaya","Alameda","Albany","Albuquerque","Alexandria","Alhambra","Aliso Viejo","Allen","Allentown","Aloha","Alpharetta","Altadena","Altamonte Springs","Altoona","Amarillo","Ames","Anaheim","Anchorage","Anderson","Ankeny","Ann Arbor","Annandale","Antelope","Antioch","Apex","Apopka","Apple Valley","Appleton","Arcadia","Arden-Arcade","Arecibo","Arlington","Arlington Heights","Arvada","Ashburn","Asheville","Aspen Hill","Atascocita","Athens-Clarke County","Atlanta","Attleboro","Auburn","Augusta-Richmond County","Aurora","Austin","Avondale","Azusa","Bakersfield","Baldwin Park","Baltimore","Barnstable Town","Bartlett","Baton Rouge","Battle Creek","Bayamon","Bayonne","Baytown","Beaumont","Beavercreek","Beaverton","Bedford","Bel Air South","Bell Gardens","Belleville","Bellevue","Bellflower","Bellingham","Bend","Bentonville","Berkeley","Berwyn","Bethesda","Bethlehem","Billings","Biloxi","Binghamton","Birmingham","Bismarck","Blacksburg","Blaine","Bloomington","Blue Springs","Boca Raton","Boise City","Bolingbrook","Bonita Springs","Bossier City","Boston","Bothell","Boulder","Bountiful","Bowie","Bowling Green","Boynton Beach","Bozeman","Bradenton","Brandon","Brentwood","Bridgeport","Bristol","Brockton","Broken Arrow","Brookhaven","Brookline","Brooklyn Park","Broomfield","Brownsville","Bryan","Buckeye","Buena Park","Buffalo","Buffalo Grove","Burbank","Burien","Burke","Burleson","Burlington","Burnsville","Caguas","Caldwell","Camarillo","Cambridge","Camden","Canton","Cape Coral","Carlsbad","Carmel","Carmichael","Carolina","Carrollton","Carson","Carson City","Cary","Casa Grande","Casas Adobes","Casper","Castle Rock","Castro Valley","Catalina Foothills","Cathedral City","Catonsville","Cedar Hill","Cedar Park","Cedar Rapids","Centennial","Centreville","Ceres","Cerritos","Champaign","Chandler","Chapel Hill","Charleston","Charlotte","Charlottesville","Chattanooga","Cheektowaga","Chesapeake","Chesterfield","Cheyenne","Chicago","Chico","Chicopee","Chino","Chino Hills","Chula Vista","Cicero","Cincinnati","Citrus Heights","Clarksville","Clearwater","Cleveland","Cleveland Heights","Clifton","Clovis","Coachella","Coconut Creek","Coeur d'Alene","College Station","Collierville","Colorado Springs","Colton","Columbia","Columbus","Commerce City","Compton","Concord","Conroe","Conway","Coon Rapids","Coral Gables","Coral Springs","Corona","Corpus Christi","Corvallis","Costa Mesa","Council Bluffs","Country Club","Covina","Cranston","Cupertino","Cutler Bay","Cuyahoga Falls","Cypress","Dale City","Dallas","Daly City","Danbury","Danville","Davenport","Davie","Davis","Dayton","Daytona Beach","DeKalb","DeSoto","Dearborn","Dearborn Heights","Decatur","Deerfield Beach","Delano","Delray Beach","Deltona","Denton","Denver","Des Moines","Des Plaines","Detroit","Diamond Bar","Doral","Dothan","Downers Grove","Downey","Draper","Dublin","Dubuque","Duluth","Dundalk","Dunwoody","Durham","Eagan","East Hartford","East Honolulu","East Lansing","East Los Angeles","East Orange","East Providence","Eastvale","Eau Claire","Eden Prairie","Edina","Edinburg","Edmond","El Cajon","El Centro","El Dorado Hills","El Monte","El Paso","Elgin","Elizabeth","Elk Grove","Elkhart","Ellicott City","Elmhurst","Elyria","Encinitas","Enid","Enterprise","Erie","Escondido","Euclid","Eugene","Euless","Evanston","Evansville","Everett","Fairfield","Fall River","Fargo","Farmington","Farmington Hills","Fayetteville","Federal Way","Findlay","Fishers","Flagstaff","Flint","Florence-Graham","Florin","Florissant","Flower Mound","Folsom","Fond du Lac","Fontana","Fort Collins","Fort Lauderdale","Fort Myers","Fort Pierce","Fort Smith","Fort Wayne","Fort Worth","Fountain Valley","Fountainebleau","Framingham","Franklin","Frederick","Freeport","Fremont","Fresno","Frisco","Fullerton","Gainesville","Gaithersburg","Galveston","Garden Grove","Gardena","Garland","Gary","Gastonia","Georgetown","Germantown","Gilbert","Gilroy","Glen Burnie","Glendale","Glendora","Glenview","Goodyear","Grand Forks","Grand Island","Grand Junction","Grand Prairie","Grand Rapids","Grapevine","Great Falls","Greeley","Green Bay","Greensboro","Greenville","Greenwood","Gresham","Guaynabo","Gulfport","Hacienda Heights","Hackensack","Haltom City","Hamilton","Hammond","Hampton","Hanford","Harlingen","Harrisburg","Harrisonburg","Hartford","Hattiesburg","Haverhill","Hawthorne","Hayward","Hemet","Hempstead","Henderson","Hendersonville","Hesperia","Hialeah","Hicksville","High Point","Highland","Highlands Ranch","Hillsboro","Hilo","Hoboken","Hoffman Estates","Hollywood","Homestead","Honolulu","Hoover","Houston","Huntersville","Huntington","Huntington Beach","Huntington Park","Huntsville","Hutchinson","Idaho Falls","Independence","Indianapolis","Indio","Inglewood","Iowa City","Irondequoit","Irvine","Irving","Jackson","Jacksonville","Janesville","Jefferson City","Jeffersonville","Jersey City","Johns Creek","Johnson City","Joliet","Jonesboro","Joplin","Jupiter","Jurupa Valley","Kalamazoo","Kannapolis","Kansas City","Kearny","Keller","Kendale Lakes","Kendall","Kenner","Kennewick","Kenosha","Kent","Kentwood","Kettering","Killeen","Kingsport","Kirkland","Kissimmee","Knoxville","Kokomo","La Crosse","La Habra","La Mesa","La Mirada","Lacey","Lafayette","Laguna Niguel","Lake Charles","Lake Elsinore","Lake Forest","Lake Havasu City","Lake Ridge","Lakeland","Lakeville","Lakewood","Lancaster","Lansing","Laredo","Largo","Las Cruces","Las Vegas","Lauderhill","Lawrence","Lawton","Layton","League City","Lee's Summit","Leesburg","Lehi","Lehigh Acres","Lenexa","Levittown","Lewisville","Lexington-Fayette","Lincoln","Linden","Little Rock","Littleton","Livermore","Livonia","Lodi","Logan","Lombard","Lompoc","Long Beach","Longmont","Longview","Lorain","Los Angeles","Louisville/Jefferson County","Loveland","Lowell","Lubbock","Lynchburg","Lynn","Lynwood","Macon-Bibb County","Madera","Madison","Malden","Manchester","Manhattan","Mansfield","Manteca","Maple Grove","Margate","Maricopa","Marietta","Marysville","Mayaguez","McAllen","McKinney","McLean","Medford","Melbourne","Memphis","Menifee","Mentor","Merced","Meriden","Meridian","Mesa","Mesquite","Metairie","Methuen Town","Miami","Miami Beach","Miami Gardens","Middletown","Midland","Midwest City","Milford","Millcreek","Milpitas","Milwaukee","Minneapolis","Minnetonka","Minot","Miramar","Mishawaka","Mission","Mission Viejo","Missoula","Missouri City","Mobile","Modesto","Moline","Monroe","Montebello","Monterey Park","Montgomery","Moore","Moreno Valley","Morgan Hill","Mount Pleasant","Mount Prospect","Mount Vernon","Mountain View","Muncie","Murfreesboro","Murray","Murrieta","Nampa","Napa","Naperville","Nashua","Nashville-Davidson","National City","New Bedford","New Braunfels","New Britain","New Brunswick","New Haven","New Orleans","New Rochelle","New York","Newark","Newport Beach","Newport News","Newton","Niagara Falls","Noblesville","Norfolk","Normal","Norman","North Bethesda","North Charleston","North Highlands","North Las Vegas","North Lauderdale","North Little Rock","North Miami","North Miami Beach","North Port","North Richland Hills","Norwalk","Novato","Novi","O'Fallon","Oak Lawn","Oak Park","Oakland","Oakland Park","Ocala","Oceanside","Odessa","Ogden","Oklahoma City","Olathe","Olympia","Omaha","Ontario","Orange","Orem","Orland Park","Orlando","Oro Valley","Oshkosh","Overland Park","Owensboro","Oxnard","Palatine","Palm Bay","Palm Beach Gardens","Palm Coast","Palm Desert","Palm Harbor","Palm Springs","Palmdale","Palo Alto","Paradise","Paramount","Parker","Parma","Pasadena","Pasco","Passaic","Paterson","Pawtucket","Peabody","Pearl City","Pearland","Pembroke Pines","Pensacola","Peoria","Perris","Perth Amboy","Petaluma","Pflugerville","Pharr","Philadelphia","Phoenix","Pico Rivera","Pine Bluff","Pine Hills","Pinellas Park","Pittsburg","Pittsburgh","Pittsfield","Placentia","Plainfield","Plano","Plantation","Pleasanton","Plymouth","Pocatello","Poinciana","Pomona","Pompano Beach","Ponce","Pontiac","Port Arthur","Port Charlotte","Port Orange","Port St. Lucie","Portage","Porterville","Portland","Portsmouth","Potomac","Poway","Providence","Provo","Pueblo","Quincy","Racine","Raleigh","Rancho Cordova","Rancho Cucamonga","Rancho Palos Verdes","Rancho Santa Margarita","Rapid City","Reading","Redding","Redlands","Redmond","Redondo Beach","Redwood City","Reno","Renton","Reston","Revere","Rialto","Richardson","Richland","Richmond","Rio Rancho","Riverside","Riverton","Riverview","Roanoke","Rochester","Rochester Hills","Rock Hill","Rockford","Rocklin","Rockville","Rockwall","Rocky Mount","Rogers","Rohnert Park","Rosemead","Roseville","Roswell","Round Rock","Rowland Heights","Rowlett","Royal Oak","Sacramento","Saginaw","Salem","Salina","Salinas","Salt Lake City","Sammamish","San Angelo","San Antonio","San Bernardino","San Bruno","San Buenaventura (Ventura)","San Clemente","San Diego","San Francisco","San Jacinto","San Jose","San Juan","San Leandro","San Luis Obispo","San Marcos","San Mateo","San Rafael","San Ramon","San Tan Valley","Sandy","Sandy Springs","Sanford","Santa Ana","Santa Barbara","Santa Clara","Santa Clarita","Santa Cruz","Santa Fe","Santa Maria","Santa Monica","Santa Rosa","Santee","Sarasota","Savannah","Sayreville","Schaumburg","Schenectady","Scottsdale","Scranton","Seattle","Severn","Shawnee","Sheboygan","Shoreline","Shreveport","Sierra Vista","Silver Spring","Simi Valley","Sioux City","Sioux Falls","Skokie","Smyrna","Somerville","South Bend","South Gate","South Hill","South Jordan","South San Francisco","South Valley","South Whittier","Southaven","Southfield","Sparks","Spokane","Spokane Valley","Spring","Spring Hill","Spring Valley","Springdale","Springfield","St. Charles","St. Clair Shores","St. Cloud","St. George","St. Joseph","St. Louis","St. Louis Park","St. Paul","St. Peters","St. Petersburg","Stamford","State College","Sterling Heights","Stillwater","Stockton","Stratford","Strongsville","Suffolk","Sugar Land","Summerville","Sunnyvale","Sunrise","Sunrise Manor","Surprise","Syracuse","Tacoma","Tallahassee","Tamarac","Tamiami","Tampa","Taunton","Taylor","Taylorsville","Temecula","Tempe","Temple","Terre Haute","Texas City","The Hammocks","The Villages","The Woodlands","Thornton","Thousand Oaks","Tigard","Tinley Park","Titusville","Toledo","Toms River","Tonawanda","Topeka","Torrance","Town 'n' Country","Towson","Tracy","Trenton","Troy","Trujillo Alto","Tuckahoe","Tucson","Tulare","Tulsa","Turlock","Tuscaloosa","Tustin","Twin Falls","Tyler","Union City","University","Upland","Urbana","Urbandale","Utica","Vacaville","Valdosta","Vallejo","Vancouver","Victoria","Victorville","Vineland","Virginia Beach","Visalia","Vista","Waco","Waipahu","Waldorf","Walnut Creek","Waltham","Warner Robins","Warren","Warwick","Washington","Waterbury","Waterloo","Watsonville","Waukegan","Waukesha","Wauwatosa","Wellington","Wesley Chapel","West Allis","West Babylon","West Covina","West Des Moines","West Hartford","West Haven","West Jordan","West Lafayette","West New York","West Palm Beach","West Sacramento","West Seneca","West Valley City","Westfield","Westland","Westminster","Weston","Weymouth Town","Wheaton","White Plains","Whittier","Wichita","Wichita Falls","Wilmington","Wilson","Winston-Salem","Woodbury","Woodland","Worcester","Wylie","Wyoming","Yakima","Yonkers","Yorba Linda","York","Youngstown","Yuba City","Yucaipa","Yuma"],city_pattern:["{{location.city_prefix}} {{person.first_name.generic}}{{location.city_suffix}}","{{location.city_prefix}} {{person.first_name.generic}}","{{person.first_name.generic}}{{location.city_suffix}}","{{person.last_name.generic}}{{location.city_suffix}}","{{location.city_name}}"],city_prefix:["North","East","West","South","New","Lake","Port","Fort"],city_suffix:["town","ton","land","ville","berg","burgh","boro","borough","bury","view","port","mouth","stad","stead","furt","chester","cester","fort","field","haven","side","shire","worth"],continent:["Africa","Antarctica","Asia","Australia","Europe","North America","South America"],country:["Afghanistan","Aland Islands","Albania","Algeria","American Samoa","Andorra","Angola","Anguilla","Antarctica","Antigua and Barbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","Bonaire, Sint Eustatius and Saba","Bosnia and Herzegovina","Botswana","Bouvet Island","Brazil","British Indian Ocean Territory (Chagos Archipelago)","Brunei Darussalam","Bulgaria","Burkina Faso","Burundi","Cambodia","Cameroon","Canada","Cape Verde","Cayman Islands","Central African Republic","Chad","Chile","China","Christmas Island","Cocos (Keeling) Islands","Colombia","Comoros","Congo","Cook Islands","Costa Rica","Cote d'Ivoire","Croatia","Cuba","Curacao","Cyprus","Czechia","Democratic Republic of the Congo","Denmark","Djibouti","Dominica","Dominican Republic","Ecuador","Egypt","El Salvador","Equatorial Guinea","Eritrea","Estonia","Eswatini","Ethiopia","Faroe Islands","Falkland Islands (Malvinas)","Fiji","Finland","France","French Guiana","French Polynesia","French Southern Territories","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","Guinea-Bissau","Guyana","Haiti","Heard Island and McDonald Islands","Holy See (Vatican City State)","Honduras","Hong Kong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","Isle of Man","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Democratic People's Republic of Korea","Republic of Korea","Kuwait","Kyrgyz Republic","Lao People's Democratic Republic","Latvia","Lebanon","Lesotho","Liberia","Libyan Arab Jamahiriya","Liechtenstein","Lithuania","Luxembourg","Macao","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","Marshall Islands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","New Caledonia","New Zealand","Nicaragua","Niger","Nigeria","Niue","Norfolk Island","North Macedonia","Northern Mariana Islands","Norway","Oman","Pakistan","Palau","Palestine","Panama","Papua New Guinea","Paraguay","Peru","Philippines","Pitcairn Islands","Poland","Portugal","Puerto Rico","Qatar","Reunion","Romania","Russian Federation","Rwanda","Saint Barthelemy","Saint Helena","Saint Kitts and Nevis","Saint Lucia","Saint Martin","Saint Pierre and Miquelon","Saint Vincent and the Grenadines","Samoa","San Marino","Sao Tome and Principe","Saudi Arabia","Senegal","Serbia","Seychelles","Sierra Leone","Singapore","Sint Maarten","Slovakia","Slovenia","Solomon Islands","Somalia","South Africa","South Georgia and the South Sandwich Islands","South Sudan","Spain","Sri Lanka","Sudan","Suriname","Svalbard & Jan Mayen Islands","Sweden","Switzerland","Syrian Arab Republic","Taiwan","Tajikistan","Tanzania","Thailand","Timor-Leste","Togo","Tokelau","Tonga","Trinidad and Tobago","Tunisia","Turkey","Turkmenistan","Turks and Caicos Islands","Tuvalu","Uganda","Ukraine","United Arab Emirates","United Kingdom","United States of America","United States Minor Outlying Islands","Uruguay","Uzbekistan","Vanuatu","Venezuela","Vietnam","Virgin Islands, British","Virgin Islands, U.S.","Wallis and Futuna","Western Sahara","Yemen","Zambia","Zimbabwe"],county:["Adams County","Calhoun County","Carroll County","Clark County","Clay County","Crawford County","Douglas County","Fayette County","Franklin County","Grant County","Greene County","Hamilton County","Hancock County","Henry County","Jackson County","Jefferson County","Johnson County","Lake County","Lawrence County","Lee County","Lincoln County","Logan County","Madison County","Marion County","Marshall County","Monroe County","Montgomery County","Morgan County","Perry County","Pike County","Polk County","Scott County","Union County","Warren County","Washington County","Wayne County","Avon","Bedfordshire","Berkshire","Borders","Buckinghamshire","Cambridgeshire","Central","Cheshire","Cleveland","Clwyd","Cornwall","County Antrim","County Armagh","County Down","County Fermanagh","County Londonderry","County Tyrone","Cumbria","Derbyshire","Devon","Dorset","Dumfries and Galloway","Durham","Dyfed","East Sussex","Essex","Fife","Gloucestershire","Grampian","Greater Manchester","Gwent","Gwynedd County","Hampshire","Herefordshire","Hertfordshire","Highlands and Islands","Humberside","Isle of Wight","Kent","Lancashire","Leicestershire","Lincolnshire","Lothian","Merseyside","Mid Glamorgan","Norfolk","North Yorkshire","Northamptonshire","Northumberland","Nottinghamshire","Oxfordshire","Powys","Rutland","Shropshire","Somerset","South Glamorgan","South Yorkshire","Staffordshire","Strathclyde","Suffolk","Surrey","Tayside","Tyne and Wear","Warwickshire","West Glamorgan","West Midlands","West Sussex","West Yorkshire","Wiltshire","Worcestershire"],direction:{cardinal:["North","East","South","West"],cardinal_abbr:["N","E","S","W"],ordinal:["Northeast","Northwest","Southeast","Southwest"],ordinal_abbr:["NE","NW","SE","SW"]},language:[{name:"Afrikaans",alpha2:"af",alpha3:"afr"},{name:"Azerbaijani",alpha2:"az",alpha3:"aze"},{name:"Maldivian",alpha2:"dv",alpha3:"div"},{name:"Farsi/Persian",alpha2:"fa",alpha3:"fas"},{name:"Latvian",alpha2:"lv",alpha3:"lav"},{name:"Indonesian",alpha2:"id",alpha3:"ind"},{name:"Nepali",alpha2:"ne",alpha3:"nep"},{name:"Thai",alpha2:"th",alpha3:"tha"},{name:"Uzbek",alpha2:"uz",alpha3:"uzb"},{name:"Yoruba",alpha2:"yo",alpha3:"yor"},{name:"Pashto",alpha2:"ps",alpha3:"pus"},{name:"English",alpha2:"en",alpha3:"eng"},{name:"Urdu",alpha2:"ur",alpha3:"urd"},{name:"German",alpha2:"de",alpha3:"deu"},{name:"French",alpha2:"fr",alpha3:"fra"},{name:"Spanish",alpha2:"es",alpha3:"spa"},{name:"Italian",alpha2:"it",alpha3:"ita"},{name:"Dutch",alpha2:"nl",alpha3:"nld"},{name:"Russian",alpha2:"ru",alpha3:"rus"},{name:"Portuguese",alpha2:"pt",alpha3:"por"},{name:"Polish",alpha2:"pl",alpha3:"pol"},{name:"Arabic",alpha2:"ar",alpha3:"ara"},{name:"Japanese",alpha2:"ja",alpha3:"jpn"},{name:"Chinese",alpha2:"zh",alpha3:"zho"},{name:"Hindi",alpha2:"hi",alpha3:"hin"},{name:"Bengali",alpha2:"bn",alpha3:"ben"},{name:"Gujarati",alpha2:"gu",alpha3:"guj"},{name:"Tamil",alpha2:"ta",alpha3:"tam"},{name:"Telugu",alpha2:"te",alpha3:"tel"},{name:"Punjabi",alpha2:"pa",alpha3:"pan"},{name:"Vietnamese",alpha2:"vi",alpha3:"vie"},{name:"Korean",alpha2:"ko",alpha3:"kor"},{name:"Turkish",alpha2:"tr",alpha3:"tur"},{name:"Swedish",alpha2:"sv",alpha3:"swe"},{name:"Greek",alpha2:"el",alpha3:"ell"},{name:"Czech",alpha2:"cs",alpha3:"ces"},{name:"Hungarian",alpha2:"hu",alpha3:"hun"},{name:"Romanian",alpha2:"ro",alpha3:"ron"},{name:"Ukrainian",alpha2:"uk",alpha3:"ukr"},{name:"Norwegian",alpha2:"no",alpha3:"nor"},{name:"Serbian",alpha2:"sr",alpha3:"srp"},{name:"Croatian",alpha2:"hr",alpha3:"hrv"},{name:"Slovak",alpha2:"sk",alpha3:"slk"},{name:"Slovenian",alpha2:"sl",alpha3:"slv"},{name:"Icelandic",alpha2:"is",alpha3:"isl"},{name:"Finnish",alpha2:"fi",alpha3:"fin"},{name:"Danish",alpha2:"da",alpha3:"dan"},{name:"Swahili",alpha2:"sw",alpha3:"swa"},{name:"Bashkir",alpha2:"ba",alpha3:"bak"},{name:"Basque",alpha2:"eu",alpha3:"eus"},{name:"Catalan",alpha2:"ca",alpha3:"cat"},{name:"Galician",alpha2:"gl",alpha3:"glg"},{name:"Esperanto",alpha2:"eo",alpha3:"epo"},{name:"Fijian",alpha2:"fj",alpha3:"fij"},{name:"Malagasy",alpha2:"mg",alpha3:"mlg"},{name:"Maltese",alpha2:"mt",alpha3:"mlt"},{name:"Albanian",alpha2:"sq",alpha3:"sqi"},{name:"Armenian",alpha2:"hy",alpha3:"hye"},{name:"Georgian",alpha2:"ka",alpha3:"kat"},{name:"Macedonian",alpha2:"mk",alpha3:"mkd"},{name:"Kazakh",alpha2:"kk",alpha3:"kaz"},{name:"Haitian Creole",alpha2:"ht",alpha3:"hat"},{name:"Mongolian",alpha2:"mn",alpha3:"mon"},{name:"Kyrgyz",alpha2:"ky",alpha3:"kir"},{name:"Finnish",alpha2:"fi",alpha3:"fin"},{name:"Tagalog",alpha2:"tl",alpha3:"tgl"},{name:"Malay",alpha2:"ms",alpha3:"msa"},{name:"Tajik",alpha2:"tg",alpha3:"tgk"},{name:"Swati",alpha2:"ss",alpha3:"ssw"},{name:"Tatar",alpha2:"tt",alpha3:"tat"},{name:"Zulu",alpha2:"zu",alpha3:"zul"}],postcode:["#####","#####-####"],secondary_address:["Apt. ###","Suite ###"],state:["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New Hampshire","New Jersey","New Mexico","New York","North Carolina","North Dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode Island","South Carolina","South Dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West Virginia","Wisconsin","Wyoming"],state_abbr:["AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"],street_address:{normal:"{{location.buildingNumber}} {{location.street}}",full:"{{location.buildingNumber}} {{location.street}} {{location.secondaryAddress}}"},street_name:["10th Street","11th Street","12th Street","13th Street","14th Street","15th Street","16th Street","1st Avenue","1st Street","2nd Avenue","2nd Street","3rd Avenue","3rd Street","4th Avenue","4th Street","5th Avenue","5th Street","6th Avenue","6th Street","7th Avenue","7th Street","8th Avenue","8th Street","9th Street","A Street","Abbey Road","Adams Avenue","Adams Street","Airport Road","Albany Road","Albert Road","Albion Street","Alexandra Road","Alfred Street","Alma Street","Ash Close","Ash Grove","Ash Road","Ash Street","Aspen Close","Atlantic Avenue","Avenue Road","Back Lane","Baker Street","Balmoral Road","Barn Close","Barton Road","Bath Road","Bath Street","Bay Street","Beach Road","Bedford Road","Beech Close","Beech Drive","Beech Grove","Beech Road","Beechwood Avenue","Bell Lane","Belmont Road","Birch Avenue","Birch Close","Birch Grove","Birch Road","Blind Lane","Bluebell Close","Boundary Road","Bramble Close","Bramley Close","Bridge Road","Bridge Street","Broad Lane","Broad Street","Broadway","Broadway Avenue","Broadway Street","Brook Lane","Brook Road","Brook Street","Brookside","Buckingham Road","Cambridge Street","Canal Street","Castle Close","Castle Lane","Castle Road","Castle Street","Cavendish Road","Cedar Avenue","Cedar Close","Cedar Grove","Cedar Road","Cedar Street","Cemetery Road","Center Avenue","Center Road","Center Street","Central Avenue","Central Street","Chapel Close","Chapel Hill","Chapel Road","Chapel Street","Charles Street","Cherry Close","Cherry Street","Cherry Tree Close","Chester Road","Chestnut Close","Chestnut Drive","Chestnut Grove","Chestnut Street","Church Avenue","Church Close","Church Hill","Church Lane","Church Path","Church Road","Church Street","Church View","Church Walk","Claremont Road","Clarence Road","Clarence Street","Clarendon Road","Clark Street","Clay Lane","Cleveland Street","Cliff Road","Clifton Road","Clinton Street","College Avenue","College Street","Columbia Avenue","Commerce Street","Commercial Road","Commercial Street","Common Lane","Coronation Avenue","Coronation Road","County Line Road","County Road","Court Street","Cow Lane","Crescent Road","Cromwell Road","Cross Lane","Cross Street","Crown Street","Cumberland Street","Dale Street","Dark Lane","Davis Street","Depot Street","Derby Road","Derwent Close","Devonshire Road","Division Street","Douglas Road","Duke Street","E 10th Street","E 11th Street","E 12th Street","E 14th Street","E 1st Street","E 2nd Street","E 3rd Street","E 4th Avenue","E 4th Street","E 5th Street","E 6th Avenue","E 6th Street","E 7th Street","E 8th Street","E 9th Street","E Bridge Street","E Broad Street","E Broadway","E Broadway Street","E Cedar Street","E Center Street","E Central Avenue","E Church Street","E Elm Street","E Franklin Street","E Front Street","E Grand Avenue","E High Street","E Jackson Street","E Jefferson Street","E Main","E Main Street","E Maple Street","E Market Street","E North Street","E Oak Street","E Park Avenue","E Pine Street","E River Road","E South Street","E State Street","E Union Street","E Walnut Street","E Washington Avenue","E Washington Street","E Water Street","East Avenue","East Road","East Street","Edward Street","Elm Close","Elm Grove","Elm Road","Elm Street","Euclid Avenue","Fairfield Road","Farm Close","Ferry Road","Field Close","Field Lane","First Avenue","First Street","Fore Street","Forest Avenue","Forest Road","Fourth Avenue","Franklin Avenue","Franklin Road","Franklin Street","Front Street","Frontage Road","Garden Close","Garden Street","George Street","Gladstone Road","Glebe Close","Gloucester Road","Gordon Road","Gordon Street","Grand Avenue","Grange Avenue","Grange Close","Grange Road","Grant Street","Green Close","Green Lane","Green Street","Greenville Road","Greenway","Greenwood Road","Grove Lane","Grove Road","Grove Street","Hall Lane","Hall Street","Harrison Avenue","Harrison Street","Hawthorn Avenue","Hawthorn Close","Hazel Close","Hazel Grove","Heath Road","Heather Close","Henry Street","Heron Close","Hickory Street","High Road","High Street","Highfield Avenue","Highfield Close","Highfield Road","Highland Avenue","Hill Road","Hill Street","Hillside","Hillside Avenue","Hillside Close","Hillside Road","Holly Close","Honeysuckle Close","Howard Road","Howard Street","Jackson Avenue","Jackson Street","James Street","Jefferson Avenue","Jefferson Street","Johnson Street","Jubilee Close","Juniper Close","Kent Road","Kestrel Close","King Street","King's Road","Kingfisher Close","Kings Highway","Kingsway","Laburnum Grove","Lafayette Street","Lake Avenue","Lake Drive","Lake Road","Lake Street","Lancaster Road","Lansdowne Road","Larch Close","Laurel Close","Lawrence Street","Lee Street","Liberty Street","Lime Grove","Lincoln Avenue","Lincoln Highway","Lincoln Road","Lincoln Street","Locust Street","Lodge Close","Lodge Lane","London Road","Long Lane","Low Road","Madison Avenue","Madison Street","Main","Main Avenue","Main Road","Main Street","Main Street E","Main Street N","Main Street S","Main Street W","Manchester Road","Manor Close","Manor Drive","Manor Gardens","Manor Road","Manor Way","Maple Avenue","Maple Close","Maple Drive","Maple Road","Maple Street","Market Place","Market Square","Market Street","Marlborough Road","Marsh Lane","Martin Luther King Boulevard","Martin Luther King Drive","Martin Luther King Jr Boulevard","Mary Street","Mayfield Road","Meadow Close","Meadow Drive","Meadow Lane","Meadow View","Meadow Way","Memorial Drive","Middle Street","Mill Close","Mill Lane","Mill Road","Mill Street","Milton Road","Milton Street","Monroe Street","Moor Lane","Moss Lane","Mount Pleasant","Mount Street","Mulberry Street","N 1st Street","N 2nd Street","N 3rd Street","N 4th Street","N 5th Street","N 6th Street","N 7th Street","N 8th Street","N 9th Street","N Bridge Street","N Broad Street","N Broadway","N Broadway Street","N Cedar Street","N Center Street","N Central Avenue","N Chestnut Street","N Church Street","N College Street","N Court Street","N Division Street","N East Street","N Elm Street","N Franklin Street","N Front Street","N Harrison Street","N High Street","N Jackson Street","N Jefferson Street","N Lincoln Street","N Locust Street","N Main","N Main Avenue","N Main Street","N Maple Street","N Market Street","N Monroe Street","N Oak Street","N Park Street","N Pearl Street","N Pine Street","N Poplar Street","N Railroad Street","N State Street","N Union Street","N Walnut Street","N Washington Avenue","N Washington Street","N Water Street","Nelson Road","Nelson Street","New Lane","New Road","New Street","Newton Road","Nightingale Close","Norfolk Road","North Avenue","North Lane","North Road","North Street","Northfield Road","Oak Avenue","Oak Drive","Oak Lane","Oak Road","Oak Street","Oakfield Road","Oaklands","Old Lane","Old Military Road","Old Road","Old State Road","Orchard Drive","Orchard Lane","Orchard Road","Orchard Street","Oxford Road","Oxford Street","Park Avenue","Park Crescent","Park Drive","Park Lane","Park Place","Park Road","Park Street","Park View","Parkside","Pearl Street","Pennsylvania Avenue","Pine Close","Pine Grove","Pine Street","Pinfold Lane","Pleasant Street","Poplar Avenue","Poplar Close","Poplar Road","Poplar Street","Post Road","Pound Lane","Princes Street","Princess Street","Priory Close","Priory Road","Prospect Avenue","Prospect Place","Prospect Road","Prospect Street","Quarry Lane","Quarry Road","Queen's Road","Railroad Avenue","Railroad Street","Railway Street","Rectory Close","Rectory Lane","Richmond Close","Richmond Road","Ridge Road","River Road","River Street","Riverside","Riverside Avenue","Riverside Drive","Roman Road","Roman Way","Rowan Close","Russell Street","S 10th Street","S 14th Street","S 1st Avenue","S 1st Street","S 2nd Street","S 3rd Street","S 4th Street","S 5th Street","S 6th Street","S 7th Street","S 8th Street","S 9th Street","S Bridge Street","S Broad Street","S Broadway","S Broadway Street","S Center Street","S Central Avenue","S Chestnut Street","S Church Street","S College Street","S Division Street","S East Street","S Elm Street","S Franklin Street","S Front Street","S Grand Avenue","S High Street","S Jackson Street","S Jefferson Street","S Lincoln Street","S Main","S Main Avenue","S Main Street","S Maple Street","S Market Street","S Mill Street","S Monroe Street","S Oak Street","S Park Street","S Pine Street","S Railroad Street","S State Street","S Union Street","S Walnut Street","S Washington Avenue","S Washington Street","S Water Street","S West Street","Salisbury Road","Sandringham Road","Sandy Lane","School Close","School Lane","School Road","School Street","Second Avenue","Silver Street","Skyline Drive","Smith Street","Somerset Road","South Avenue","South Drive","South Road","South Street","South View","Spring Gardens","Spring Street","Springfield Close","Springfield Road","Spruce Street","St Andrew's Road","St Andrews Close","St George's Road","St John's Road","St Mary's Close","St Mary's Road","Stanley Road","Stanley Street","State Avenue","State Line Road","State Road","State Street","Station Road","Station Street","Stoney Lane","Sycamore Avenue","Sycamore Close","Sycamore Drive","Sycamore Street","Talbot Road","Tennyson Road","The Avenue","The Beeches","The Causeway","The Chase","The Coppice","The Copse","The Crescent","The Croft","The Dell","The Drive","The Fairway","The Glebe","The Grange","The Green","The Grove","The Hawthorns","The Lane","The Laurels","The Limes","The Maltings","The Meadows","The Mews","The Mount","The Oaks","The Orchard","The Oval","The Paddock","The Paddocks","The Poplars","The Ridgeway","The Ridings","The Rise","The Sidings","The Spinney","The Square","The Willows","The Woodlands","Third Avenue","Third Street","Tower Road","Trinity Road","Tudor Close","Union Avenue","Union Street","University Avenue","University Drive","Valley Road","Veterans Memorial Drive","Veterans Memorial Highway","Vicarage Close","Vicarage Lane","Vicarage Road","Victoria Place","Victoria Road","Victoria Street","Vine Street","W 10th Street","W 11th Street","W 12th Street","W 14th Street","W 1st Street","W 2nd Street","W 3rd Street","W 4th Avenue","W 4th Street","W 5th Street","W 6th Avenue","W 6th Street","W 7th Street","W 8th Street","W 9th Street","W Bridge Street","W Broad Street","W Broadway","W Broadway Avenue","W Broadway Street","W Center Street","W Central Avenue","W Chestnut Street","W Church Street","W Division Street","W Elm Street","W Franklin Street","W Front Street","W Grand Avenue","W High Street","W Jackson Street","W Jefferson Street","W Lake Street","W Main","W Main Street","W Maple Street","W Market Street","W Monroe Street","W North Street","W Oak Street","W Park Street","W Pine Street","W River Road","W South Street","W State Street","W Union Street","W Walnut Street","W Washington Avenue","W Washington Street","Walnut Close","Walnut Street","Warren Close","Warren Road","Washington Avenue","Washington Boulevard","Washington Road","Washington Street","Water Lane","Water Street","Waterloo Road","Waterside","Watery Lane","Waverley Road","Well Lane","Wellington Road","Wellington Street","West Avenue","West End","West Lane","West Road","West Street","West View","Western Avenue","Western Road","Westfield Road","Westgate","William Street","Willow Close","Willow Drive","Willow Grove","Willow Road","Willow Street","Windermere Road","Windmill Close","Windmill Lane","Windsor Avenue","Windsor Close","Windsor Drive","Wood Lane","Wood Street","Woodland Close","Woodland Road","Woodlands","Woodlands Avenue","Woodlands Close","Woodlands Road","Woodside","Woodside Road","Wren Close","Yew Tree Close","York Road","York Street"],street_pattern:["{{person.first_name.generic}} {{location.street_suffix}}","{{person.last_name.generic}} {{location.street_suffix}}","{{location.street_name}}"],street_suffix:["Alley","Avenue","Branch","Bridge","Brook","Brooks","Burg","Burgs","Bypass","Camp","Canyon","Cape","Causeway","Center","Centers","Circle","Circles","Cliff","Cliffs","Club","Common","Corner","Corners","Course","Court","Courts","Cove","Coves","Creek","Crescent","Crest","Crossing","Crossroad","Curve","Dale","Dam","Divide","Drive","Drives","Estate","Estates","Expressway","Extension","Extensions","Fall","Falls","Ferry","Field","Fields","Flat","Flats","Ford","Fords","Forest","Forge","Forges","Fork","Forks","Fort","Freeway","Garden","Gardens","Gateway","Glen","Glens","Green","Greens","Grove","Groves","Harbor","Harbors","Haven","Heights","Highway","Hill","Hills","Hollow","Inlet","Island","Islands","Isle","Junction","Junctions","Key","Keys","Knoll","Knolls","Lake","Lakes","Land","Landing","Lane","Light","Lights","Loaf","Lock","Locks","Lodge","Loop","Mall","Manor","Manors","Meadow","Meadows","Mews","Mill","Mills","Mission","Motorway","Mount","Mountain","Mountains","Neck","Orchard","Oval","Overpass","Park","Parks","Parkway","Parkways","Pass","Passage","Path","Pike","Pine","Pines","Place","Plain","Plains","Plaza","Point","Points","Port","Ports","Prairie","Radial","Ramp","Ranch","Rapid","Rapids","Rest","Ridge","Ridges","River","Road","Roads","Route","Row","Rue","Run","Shoal","Shoals","Shore","Shores","Skyway","Spring","Springs","Spur","Spurs","Square","Squares","Station","Stravenue","Stream","Street","Streets","Summit","Terrace","Throughway","Trace","Track","Trafficway","Trail","Tunnel","Turnpike","Underpass","Union","Unions","Valley","Valleys","Via","Viaduct","View","Views","Village","Villages","Ville","Vista","Walk","Walks","Wall","Way","Ways","Well","Wells"]},lorem:{word:["a","ab","abbas","abduco","abeo","abscido","absconditus","absens","absorbeo","absque","abstergo","absum","abundans","abutor","accedo","accendo","acceptus","accommodo","accusamus","accusantium","accusator","acer","acerbitas","acervus","acidus","acies","acquiro","acsi","ad","adamo","adaugeo","addo","adduco","ademptio","adeo","adeptio","adfectus","adfero","adficio","adflicto","adhaero","adhuc","adicio","adimpleo","adinventitias","adipisci","adipiscor","adiuvo","administratio","admiratio","admitto","admoneo","admoveo","adnuo","adopto","adsidue","adstringo","adsuesco","adsum","adulatio","adulescens","aduro","advenio","adversus","advoco","aedificium","aeger","aegre","aegrotatio","aegrus","aeneus","aequitas","aequus","aer","aestas","aestivus","aestus","aetas","aeternus","ager","aggero","aggredior","agnitio","agnosco","ago","ait","aiunt","alias","alienus","alii","alioqui","aliqua","aliquam","aliquid","alius","allatus","alo","alter","altus","alveus","amaritudo","ambitus","ambulo","amet","amicitia","amiculum","amissio","amita","amitto","amo","amor","amoveo","amplexus","amplitudo","amplus","ancilla","angelus","angulus","angustus","animadverto","animi","animus","annus","anser","ante","antea","antepono","antiquus","aperiam","aperio","aperte","apostolus","apparatus","appello","appono","appositus","approbo","apto","aptus","apud","aqua","ara","aranea","arbitro","arbor","arbustum","arca","arceo","arcesso","architecto","arcus","argentum","argumentum","arguo","arma","armarium","aro","ars","articulus","artificiose","arto","arx","ascisco","ascit","asper","asperiores","aspernatur","aspicio","asporto","assentator","assumenda","astrum","at","atavus","ater","atque","atqui","atrocitas","atrox","attero","attollo","attonbitus","auctor","auctus","audacia","audax","audentia","audeo","audio","auditor","aufero","aureus","aurum","aut","autem","autus","auxilium","avaritia","avarus","aveho","averto","baiulus","balbus","barba","bardus","basium","beatae","beatus","bellicus","bellum","bene","beneficium","benevolentia","benigne","bestia","bibo","bis","blandior","blanditiis","bonus","bos","brevis","cado","caecus","caelestis","caelum","calamitas","calcar","calco","calculus","callide","campana","candidus","canis","canonicus","canto","capillus","capio","capitulus","capto","caput","carbo","carcer","careo","caries","cariosus","caritas","carmen","carpo","carus","casso","caste","casus","catena","caterva","cattus","cauda","causa","caute","caveo","cavus","cedo","celebrer","celer","celo","cena","cenaculum","ceno","censura","centum","cerno","cernuus","certe","certus","cervus","cetera","charisma","chirographum","cibo","cibus","cicuta","cilicium","cimentarius","ciminatio","cinis","circumvenio","cito","civis","civitas","clam","clamo","claro","clarus","claudeo","claustrum","clementia","clibanus","coadunatio","coaegresco","coepi","coerceo","cogito","cognatus","cognomen","cogo","cohaero","cohibeo","cohors","colligo","collum","colo","color","coma","combibo","comburo","comedo","comes","cometes","comis","comitatus","commemoro","comminor","commodi","commodo","communis","comparo","compello","complectus","compono","comprehendo","comptus","conatus","concedo","concido","conculco","condico","conduco","confero","confido","conforto","confugo","congregatio","conicio","coniecto","conitor","coniuratio","conor","conqueror","conscendo","consectetur","consequatur","consequuntur","conservo","considero","conspergo","constans","consuasor","contabesco","contego","contigo","contra","conturbo","conventus","convoco","copia","copiose","cornu","corona","corporis","corpus","correptius","corrigo","corroboro","corrumpo","corrupti","coruscus","cotidie","crapula","cras","crastinus","creator","creber","crebro","credo","creo","creptio","crepusculum","cresco","creta","cribro","crinis","cruciamentum","crudelis","cruentus","crur","crustulum","crux","cubicularis","cubitum","cubo","cui","cuius","culpa","culpo","cultellus","cultura","cum","cumque","cunabula","cunae","cunctatio","cupiditas","cupiditate","cupio","cuppedia","cupressus","cur","cura","curatio","curia","curiositas","curis","curo","curriculum","currus","cursim","curso","cursus","curto","curtus","curvo","custodia","damnatio","damno","dapifer","debeo","debilito","debitis","decens","decerno","decet","decimus","decipio","decor","decretum","decumbo","dedecor","dedico","deduco","defaeco","defendo","defero","defessus","defetiscor","deficio","defleo","defluo","defungo","degenero","degero","degusto","deinde","delectatio","delectus","delego","deleniti","deleo","delibero","delicate","delinquo","deludo","demens","demergo","demitto","demo","demonstro","demoror","demulceo","demum","denego","denique","dens","denuncio","denuo","deorsum","depereo","depono","depopulo","deporto","depraedor","deprecator","deprimo","depromo","depulso","deputo","derelinquo","derideo","deripio","deserunt","desidero","desino","desipio","desolo","desparatus","despecto","dicta","dignissimos","distinctio","dolor","dolore","dolorem","doloremque","dolores","doloribus","dolorum","ducimus","ea","eaque","earum","eius","eligendi","enim","eos","error","esse","est","et","eum","eveniet","ex","excepturi","exercitationem","expedita","explicabo","facere","facilis","fuga","fugiat","fugit","harum","hic","id","illo","illum","impedit","in","incidunt","infit","inflammatio","inventore","ipsa","ipsam","ipsum","iste","itaque","iure","iusto","labore","laboriosam","laborum","laudantium","libero","magnam","magni","maiores","maxime","minima","minus","modi","molestiae","molestias","mollitia","nam","natus","necessitatibus","nemo","neque","nesciunt","nihil","nisi","nobis","non","nostrum","nulla","numquam","occaecati","ocer","odio","odit","officia","officiis","omnis","optio","paens","pariatur","patior","patria","patrocinor","patruus","pauci","paulatim","pauper","pax","peccatus","pecco","pecto","pectus","pecus","peior","pel","perferendis","perspiciatis","placeat","porro","possimus","praesentium","provident","quae","quaerat","quam","quas","quasi","qui","quia","quibusdam","quidem","quis","quisquam","quo","quod","quos","ratione","recusandae","reiciendis","rem","repellat","repellendus","reprehenderit","repudiandae","rerum","saepe","sapiente","sed","sequi","similique","sint","sit","socius","sodalitas","sol","soleo","solio","solitudo","solium","sollers","sollicito","solum","solus","soluta","solutio","solvo","somniculosus","somnus","sonitus","sono","sophismata","sopor","sordeo","sortitus","spargo","speciosus","spectaculum","speculum","sperno","spero","spes","spiculum","spiritus","spoliatio","sponte","stabilis","statim","statua","stella","stillicidium","stipes","stips","sto","strenuus","strues","studio","stultus","suadeo","suasoria","sub","subito","subiungo","sublime","subnecto","subseco","substantia","subvenio","succedo","succurro","sufficio","suffoco","suffragium","suggero","sui","sulum","sum","summa","summisse","summopere","sumo","sumptus","sunt","supellex","super","suppellex","supplanto","suppono","supra","surculus","surgo","sursum","suscipio","suscipit","suspendo","sustineo","suus","synagoga","tabella","tabernus","tabesco","tabgo","tabula","taceo","tactus","taedium","talio","talis","talus","tam","tamdiu","tamen","tametsi","tamisium","tamquam","tandem","tantillus","tantum","tardus","tego","temeritas","temperantia","templum","tempora","tempore","temporibus","temptatio","tempus","tenax","tendo","teneo","tener","tenetur","tenuis","tenus","tepesco","tepidus","ter","terebro","teres","terga","tergeo","tergiversatio","tergo","tergum","termes","terminatio","tero","terra","terreo","territo","terror","tersus","tertius","testimonium","texo","textilis","textor","textus","thalassinus","theatrum","theca","thema","theologus","thermae","thesaurus","thesis","thorax","thymbra","thymum","tibi","timidus","timor","titulus","tolero","tollo","tondeo","tonsor","torqueo","torrens","tot","totam","totidem","toties","totus","tracto","trado","traho","trans","tredecim","tremo","trepide","tres","tribuo","tricesimus","triduana","tripudio","tristis","triumphus","trucido","truculenter","tubineus","tui","tum","tumultus","tunc","turba","turbo","turpis","tutamen","tutis","tyrannus","uberrime","ubi","ulciscor","ullam","ullus","ulterius","ultio","ultra","umbra","umerus","umquam","una","unde","undique","universe","unus","urbanus","urbs","uredo","usitas","usque","ustilo","ustulo","usus","ut","uter","uterque","utilis","utique","utor","utpote","utrimque","utroque","utrum","uxor","vaco","vacuus","vado","vae","valde","valens","valeo","valetudo","validus","vallum","vapulus","varietas","varius","vehemens","vel","velit","velociter","velum","velut","venia","veniam","venio","ventito","ventosus","ventus","venustas","ver","verbera","verbum","vere","verecundia","vereor","vergo","veritas","veritatis","vero","versus","verto","verumtamen","verus","vesco","vesica","vesper","vespillo","vester","vestigium","vestrum","vetus","via","vicinus","vicissitudo","victoria","victus","videlicet","video","viduo","vigilo","vigor","vilicus","vilis","vilitas","villa","vinco","vinculum","vindico","vinitor","vinum","vir","virga","virgo","viridis","viriliter","virtus","vis","viscus","vita","vitae","vitiosus","vitium","vito","vivo","vix","vobis","vociferor","voco","volaticus","volo","volubilis","voluntarius","volup","voluptas","voluptate","voluptatem","voluptates","voluptatibus","voluptatum","volutabrum","volva","vomer","vomica","vomito","vorago","vorax","voro","vos","votum","voveo","vox","vulariter","vulgaris","vulgivagus","vulgo","vulgus","vulnero","vulnus","vulpes","vulticulus","xiphias"]},metadata:{title:"English",code:"en",language:"en",endonym:"English",dir:"ltr",script:"Latn"},music:{album:['"Awaken, My Love!"',"(What's The Story) Morning Glory?","- Tragedy +","13 Reasons Why (Season 3)","21st Century Breakdown","30 De Febrero","432 Hz Deep Healing","5-Star","528 Hz Meditation Music","54+1","8 Mile","808s & Heartbreak","9 To 5 And Odd Jobs","A Beautiful Lie","A Day At The Races","A Day Without Rain","A Fever You Can't Sweat Out","A Gangsta's Pain","A Gift & A Curse","A Hard Day's Night","A Head Full Of Dreams","A Kind Of Magic","A Million Ways To Murder","A Moment Apart","A Song For Every Moon","A Thousand Suns","A Winter Romance","ABBA","AI YoungBoy","AJ Tracey","Act One","After Hours","Agent Provocateur","All About You","All I Know So Far: Setlist","All Or Nothing","All Out","All Over The Place","All Stand Together","All The Lost Souls","All The Things I Never Said","All Things Must Pass","Alleen","Alright, Still","Alta Suciedad","America","American Heartbreak","American Teen","And Justice For None","Animal Songs","Another Friday Night","Anything Goes","Ao Vivo Em São Paulo","Ao Vivo No Ibirapuera","Apricot Princess","Aqui E Agora (Ao Vivo)","Arcane League Of Legends","Ardipithecus","Aretha Now","Around The Fur","Arrival","Artist 2.0","As She Pleases","Ascend","Ashlyn","Astro Lounge","At Night, Alone.","At. Long. Last. ASAP","Atlas","Audioslave","Aura","Austin","Awake","Away From The Sun","Ayayay!","Baby On Baby","Back For Everything","Back From The Edge","Back In Black","Back To Black","Back To The Game","Bad","Bahía Ducati","Baila","Barbie The Album","Battleground","Bayou Country","Bcos U Will Never B Free","Be","Be Here Now","Beautiful Mind","Beautiful Thugger Girls","Beautiful Trauma","Beauty And The Beast","Beggars Banquet","Being Funny In A Foreign Language","Berlin Lebt","Berry Is On Top","Best White Noise For Baby Sleep - Loopable With No Fade","Big Baby DRAM","Bigger, Better, Faster, More!","Billy Talent II","Black Star Elephant","Blackout","Blank Face LP","Bleach","Blizzard Of Ozz","Blonde","Blood Sugar Sex Magik","Bloom","Blowin' Your Mind!","Blu Celeste","Blue","Blue Banisters","Blue Hawaii","Blue Neighbourhood","Bluebird Days","Bobby Tarantino","Bobby Tarantino II","Bon Iver","Born Pink","Born To Run","Brand New Eyes","Break The Cycle","Breakfast In America","Breakthrough","Brett Young","Bridge Over Troubled Water","Bright: The Album","Brol","Buds","Buena Vista Social Club","Built On Glass","Bury Me At Makeout Creek","Busyhead","By The Way","CB6","CNCO","California Sunrise","Californication","Call Me Irresponsible","Calm","Camino Palmero","Camp","Caracal","Carbon Fiber Hits","Carnival","Carry On","Cartel De Santa","Certified Lover Boy","Chaaama","Chama Meu Nome","Chapter 1: Snake Oil","Chapter 2: Swamp Savant","Chapter One","Charlie's Angels","Cherry Bomb","Chief","Chocolate Factory","Chosen","Chris Brown","Christina Aguilera","Chromatica","Church","City Of Evil","Clandestino","Clouds","Coco","Collision Course","Colour Vision","Combat Rock","Come Around Sundown","Come Away With Me","Come Home The Kids Miss You","Come What(ever) May","Commando","Common Sense","Communion","Conditions","Confident","Confrontation","Control The Streets, Volume 2","Corinne Bailey Rae","Costello Music","Cottonwood","Covers, Vol. 2","Cozy Tapes Vol. 2: Too Cozy","Crash Talk","Crazy Love","Crazysexycool","Crowded House","Cruisin' With Junior H","Culture","Current Mood","DS2","Dale","Danger Days: The True Lives Of The Fabulous Killjoys","Dangerous Woman","Dangerous: The Double Album","Dark Horse","Day69","Daydream","De Fiesta","De Viaje","DeAnn","Death Race For Love","Delirium","Delta","Demidevil","Depression Cherry","Descendants","Desgenerados Mixtape","Destin","Destiny Fulfilled","Desvelado","Detroit 2","Dex Meets Dexter","Dharma","Die A Legend","Different World","Dig Your Roots","Digital Druglord","Dirt","Disclaimer I / II","Discovery","Disraeli Gears","Disumano","Dizzy Up The Girl","Don't Play That Song","Donda","Donde Quiero Estar","Doo-Wops & Hooligans","Down The Way","Dr. Feelgood","Dream Your Life Away","Dreaming Out Loud","Drip Harder","Drive","Drones","Dropped Outta College","Drowning","Dua Warna Cinta","Dulce Beat","Dusty In Memphis","Dutty Rock","Dying To Live","ENR","East Atlanta Love Letter","Editorial","Edna","El Abayarde","El Amor En Los Tiempos Del Perreo","El Camino","El Comienzo","El Dorado","El Karma","El Mal Querer","El Malo","El Trabajo Es La Suerte","El Viaje De Copperpot","Electric Ladyland","Emotion","En Tus Planes","Endless Summer Vacation","Enter The Wu-Tang (36 Chambers)","Equals (=)","Estrella","Euphoria","Europop","Evermore","Every Kingdom","Everyday Life","Evolve","Expectations","Face Yourself","Facelift","Fallin'","Fancy You","Fantasía","Favourite Worst Nightmare","Fear Of The Dark","Fearless","Feel Something","Feels Like Home","Femme Fatale","Ferxxocalipsis","Fifty Shades Darker","Fifty Shades Freed","Fifty Shades Of Grey","Final (Vol.1)","Finding Beauty In Negative Spaces","Fine Line","First Impressions Of Earth","First Steps","Five Seconds Flat","Folklore","For Emma, Forever Ago","Forajido EP 1","Forever","Forever Young","Formula Of Love: O+T=<3","Free 6lack","Freudian","Frozen II","Full Moon Fever","Funhouse","Funk Wav Bounces Vol.1","Future History","FutureSex/LoveSounds","Fuzzybrain","Gallery","Gangsta's Paradise","Gemini","Gemini Rights","Generationwhy","Get A Grip","Get Up","Gettin' Old","Girl","Gladiator","Glisten","Globalization","Gloria","Glory Days","God's Project","Gold Skies","Golden","Good Evening","Good Thing","Goodbye Yellow Brick Road","Gossip Columns","Got Your Six","Graceland","Graduation","Grand Champ","Grandson, Vol. 1","Green River","Guerra","Ha*Ash Primera Fila - Hecho Realidad","Haiz","Hamilton","Happy Endings","Harry Styles","Hasta La Raíz","Hatful Of Hollow","Head In The Clouds","Heard It In A Past Life","Heart Shaped World","Heartbeat City","Heartbreak On A Full Moon / Cuffing Season - 12 Days Of Christmas","Heaven Or Hell","Heaven knows","Hellbilly Deluxe","Hellboy","Help!","Her Loss","Here Comes The Cowboy","Hey World","High School Musical","High Tide In The Snake's Nest","Historias De Un Capricornio","Hndrxx","Hombres G (Devuélveme A Mi Chica)","Homerun","Homework","Hot Fuss","Hot Pink","Hot Sauce / Hello Future","Hot Space","Hotel Diablo","Houses Of The Holy","How Big, How Blue, How Beautiful","How I'm Feeling","How To Be Human","How To Save A Life","How To: Friend, Love, Freefall","Hozier","Human","Huncho Jack, Jack Huncho","Hunter Hayes","Hysteria","I Am...Sasha Fierce","I Can't Handle Change","I Met You When I Was 18. (The Playlist)","I Never Liked You","I Never Loved A Man The Way I Love You","I See You","I Think You Think Too Much Of Me","I Used To Know Her","I Used To Think I Could Fly","I'm Comin' Over","Ich & Keine Maske","If You Can Believe Your Eyes & Ears","Il Ballo Della Vita","Ill Communication","Imagination & The Misfit Kid","Imagine","Immortalized","In A Perfect World...","In Colour","In My Own Words","In Rainbows","In Return","In The Lonely Hour","Infest","Innuendo","Inter Shibuya - La Mafia","Interstellar","Is This It","It Was Written","It's Not Me, It's You","It's Only Me","Ivory","JackBoys","Jamie","Jazz","Jibrail & Iblis","Jordi","Jordin Sparks","Jose","Just As I Am","Just Cause Y'all Waited 2","Just Like You","Justified","K-12 / After School","K.I.D.S.","K.O.","K.O.B. Live","KG0516","KOD","Kane Brown","Kid A","Kid Krow","Kids See Ghosts","Kids in Love","Kinks (You Really Got Me)","Know-It-All","Konvicted","Kring","LANY","LM5","La Criatura","La Flaca","La Melodia De La Calle","La Revolucion","Lady Lady","Lady Wood","Langit Mong Bughaw","Las Que No Iban A Salir","Last Day Of Summer","Last Year Was Complicated","Layers","Layover","Lazarus","Led Zeppelin","Left Of The Middle","Leftoverture","Legends Never Die","Let's Skip To The Wedding","Let's Talk About Love","Licensed To Ill","Life In Cartoon Motion","Life Thru A Lens","Lifelines","Like..?","Lil Big Pac","Lil Boat","Lil Boat 2","Lil Boat 3.5","Lil Kiwi","Lil Pump","Limon Y Sal","Listen Without Prejudice","Little Voice","Live On Red Barn Radio I & II","Lo Que Andábamos Buscando","Lofi Fruits Music 2021","London Calling","Los Campeones Del Pueblo","Los Extraterrestres","Los Favoritos 2","Lost","Lost In Love","Loud","Love Sick","Love Story","Love Stuff","Love Yourself: Tear","Lover","Luca Brasi 2: Gangsta Grillz","Lust For Life","Luv Is Rage","M!ssundaztood","Ma Fleur","Made In Lagos","Mafia Bidness","Magazines Or Novels","Mainstream Sellout","Majestic","Make It Big","Make Yourself","Making Mirrors","Mamma Mia! Here We Go Again","Man Of The Woods","Manic","Me And My Gang","Meduza","Meet The Orphans","Meet The Woo","Melim","Mellon Collie And The Infinite Sadness","Melly vs. Melvin","Memories...Do Not Open","Menagerie","Midnights","Minecraft - Volume Alpha","Minutes To Midnight","Mix Pa Llorar En Tu Cuarto","Modo Avión","Monkey Business","Mono.","Montana","Montevallo","Moosetape","Morning View","Motivan2","Moving Pictures","Mr. Davis","Mr. Misunderstood","Mulan","Mura Masa","Music From The Edge Of Heaven","Music Of The Sun","My House","My Kinda Party","My Krazy Life","My Liver Will Handle What My Heart Can't","My Moment","My Own Lane","My Turn","My Worlds","Na Praia (Ao Vivo)","Nakamura","Nation Of Two","Navegando","Need You Now","Neon Future III","Neotheater","Never Trust A Happy Song","New English","News Of The World","Nicole","Night & Day","Nimmerland","Nimrod","Nine Track Mind","No Angel","No Me Pidas Perdón","No More Drama","No Protection","No Strings Attached","No Time To Die","Nobody Is Listening","Non Stop Erotic Cabaret","Non-Fiction","Northsbest","Nostalgia","Nostalgia, Ultra","Notes On A Conditional Form","Now Or Never","O Embaixador (Ao Vivo)","O My Heart","OK Computer","Ocean","Ocean Avenue","Ocean Eyes","Odisea","Oh My My","Oh, What A Life","On The 6","One In A Million","One More Light","One Of These Nights","Open Up And Say...Ahh!","Ordinary Man","Origins","Out Of The Blue","Over It","OzuTochi","PTSD","Pa Las Baby's Y Belikeada","Pa Que Hablen","Pa' Luego Es Tarde","Pa' Otro La 'O","Pablo Honey","Pain Is Love","Pain Is Temporary","Painting Pictures","Palmen Aus Plastik 2","Para Mi Ex","Para Siempre","Partners In Crime","Pawn Shop","Pegasus / Neon Shark VS Pegasus","Pet Sounds","Piece By Piece","Pier Pressure","Pineapple Sunrise","Piseiro 2020 Ao Vivo","Planet Pit","Plans","Play Deep","Playa Saturno","Por Primera Vez","Por Vida","Positions","Post Human: Survival Horror","Poster Girl","Prazer, Eu Sou Ferrugem (Ao Vivo)","Pretty Girls Like Trap Music","Pretty. Odd.","Prince Royce","Prisma","Prometo","Providence","Puberty 2","Punisher","Purgatory","Purple Rain","Que Bendición","Queen Of The Clouds","Quiero Volver","R&G (Rhythm & Gangsta): The Masterpiece","Raise!","Ransom 2","Rapunzel","Rare","Re Mida","Ready To Die","Realer","Rebelde","Reclassified","Recovery","Recuerden Mi Estilo","Reggatta De Blanc","Regulate… G Funk Era","Reik","Reise, Reise","Relapse","Relaxing Piano Lullabies And Natural Sleep Aid For Baby Sleep Music","Religiously. The Album.","Replay","Results May Vary","Revenge","Revolve","Revolver","Ricky Martin","Rien 100 Rien","Ripcord","Rise And Fall, Rage And Grace","Rise Of An Empire","Robin Hood: Prince Of Thieves","Rock N Roll Jesus","Romance","Romances","Ronan","Royal Blood","Rumours","Sad Boyz 4 Life II","San Lucas","Santana World","Saturation III","Sauce Boyz","Savage Mode","Saxobeats","Scarlet","Schwarzes Herz","Seal The Deal & Let's Boogie","Section.80","Segundo Romance","Sehnsucht","Shake The Snow Globe","Shang-Chi And The Legend Of The Ten Rings: The Album","Sheer Heart Attack","Shiesty Season","Shock Value","Shoot For The Stars, Aim For The Moon","Signed Sealed And Delivered","Signos","Silent Alarm","Simplemente Gracias","Sin Bandera","Sing Me A Lullaby, My Sweet Temptation","Sinner","Sirio","Sit Still, Look Pretty","Skin","Slowhand","Smash","Smithereens","Snow Cougar","Social Cues","Some Girls","Song Hits From Holiday Inn","Songs For Dads","Songs For The Deaf","Songs For You, Truths For Me","Songs In The Key Of Life","Souled Out","Sounds Of Silence","Soy Como Quiero Ser","Speak Now","Speak Your Mind","Speakerboxxx/The Love Below","Spider-Man: Into The Spider-Verse","Split Decision","Square Up","SremmLife","Starboy","Stay +","Stay Dangerous","Staying At Tamara's","Steppenwolf","Stick Season","Still Bill","Straight Outta Compton","Strange Trails","Stronger","Suavemente","Sublime","Suck It and See","Sucker","Sueños","Sugar","Summer Forever","Summer,","Sunset Season","Sunshine On Leith","Surfer Rosa","Sweet Talker","SweetSexySavage","System Of A Down","TA13OO","Talk That Talk","Talking Heads: 77","Tangled Up","Tango In The Night","Taxi Driver","Taylor Swift","Tell Me It's Real","Ten","Ten Summoner's Tales","Terra Sem Cep (Ao Vivo)","Terral","Testing","Tha Carter III","Thank Me Later","That's Christmas To Me","The Academy","The Adventures Of Bobby Ray","The Album","The Andy Williams Christmas Album","The Aviary","The Balcony","The Battle Of Los Angeles","The Beatles (White Album)","The Beginning","The Better Life","The Big Day","The Book","The Breakfast Club","The Cars","The Colour And The Shape","The Death Of Peace Of Mind","The Diary Of Alicia Keys","The Documentary","The Emancipation Of Mimi","The Eminem Show","The End Of Everything","The Final Countdown","The Forever Story","The Foundation","The Goat","The Golden Child","The Good Parts","The Greatest Showman: Reimagined","The Green Trip","The Hardest Love","The Head And The Heart","The Human Condition","The Infamous","The Lady Killer","The Last Don II","The Lion King","The Lockdown Sessions","The London Sessions","The Lord Of The Rings: The Fellowship Of The Ring","The Lost Boy","The Magic Of Christmas / The Christmas Song","The Marshall Mathers LP","The Martin Garrix Collection","The Melodic Blue","The Mockingbird & The Crow","The Pains Of Growing","The Papercut Chronicles","The Perfect Luv Tape","The Pinkprint","The Predator","The Queen Is Dead","The ReVe Festival: Finale","The Rise And Fall Of Ziggy Stardust And The Spiders From Mars","The Rising Tied","The River","The Stone Roses","The Story Of Us","The Stranger","The Sufferer & The Witness","The Sun's Tirade","The Temptations Sing Smokey","The Time Of Our Lives","The Way It Is","The Wonderful World Of Sam Cooke","The Writing's On The Wall","The Young And The Hopeless","Therapy","Therapy Session","There Is More (Live)","There Is Nothing Left To Lose","These Things Happen","Third Eye Blind","This Is Me...Then","This Unruly Mess I've Made","Threat to Survival","Thrill Of The Chase","Time","Timelezz","To Let A Good Thing Die","To Pimp A Butterfly","Toast To Our Differences","Todos Os Cantos, Vol. 1 (Ao Vivo)","Too Hard","Torches X","Total Xanarchy","Toto IV","Toulouse Street","Tourist History","Toxicity","Tragic Kingdom","Tranquility Base Hotel & Casino","Traumazine","Traveler","Tres Hombres","Trip At Knight","Tron: Legacy","True Blue","True Colors","Trustfall","Tu Veneno Mortal","Tudo Em Paz","Ubuntu","Ugly Is Beautiful","Ultra 2021","Una Mattina","Unbroken","Uncovered","Under Pressure","Unsponsored Content","Unstoppable","Unwritten","Urban Flora","Urban Hymns","Use Your Illusion I","Veneer","Versions Of Me","Vibes","Vice Versa","Vices & Virtues","Victory","Vida","Viejo Marihuano","Visualízate","Walk Away","Walk Me Home...","Watch The Throne","Wave","We Broke The Rules","We Love You Tecca","We Love You Tecca 2","Weezer (Green Album)","Welcome To The Madhouse","Westlife","What A Time To Be Alive","What Do You Think About The Car?","What Is Love?","What Makes You Country","What Separates Me From You","What You See Is What You Get / What You See Ain't Always What You Get","When It's Dark Out","When We All Fall Asleep, Where Do We Go?","Where The Light Is","While The World Was Burning","White Pony","Whitney","Who Really Cares","Who You Are","Who's Next","Wide Open","Wilder Mind","Wildfire","Willy And The Poor Boys","Wings / You Never Walk Alone","Wish","Wish You Were Here","Without Warning","Wonder","X&Y","XOXO","Y Que Quede Claro","YBN: The Mixtape","Yo Creo","You Will Regret","Youngblood","Younger Now","Youth"],artist:["$NOT","$uicideboy$","(G)I-DLE","*NSYNC","2 Chainz","21 Savage","6LACK","? & The Mysterians","A Boogie Wit da Hoodie","A Taste of Honey","A Tribe Called Quest","A-Ha","ABBA","AC/DC","AJ Tracey","ATEEZ","Ace of Base","Adele","Ado","Aerosmith","Agust D","Aitana","Al Dexter & his Troopers","Al Green","Al Jolson","Al Martino","Alan Jackson","Alannah Myles","Alec Benjamin","Alejandro Sanz","Alesso","Alfredo Olivas","Ali Gatie","Alice In Chains","Alina Baraz","All Time Low","All-4-One","All-American Rejects","Alok","America","American Quartet","Amii Stewart","Amitabh Bhattacharya","Ana Castela","Anderson .Paak","Andy Grammer","Angus & Julia Stone","Anirudh Ravichander","Anita Ward","Anitta","Anton Karas","Anuel AA","Arcade Fire","Archie Bell & The Drells","Archies","Aretha Franklin","Arizona Zervas","Armin van Buuren","Arthur Conley","Artie Shaw","Asake","Asees Kaur","Association","Atif Aslam","Audioslave","Aventura","Avril Lavigne","Aya Nakamura","B J Thomas","B.o.B","BLACKPINK","BONES","BROCKHAMPTON","BTS","Baby Keem","Bachman-Turner Overdrive","Backstreet Boys","Bad Bunny","Badshah","Bailey Zimmerman","Banda El Recodo","Barbra Streisand","Barry White","Bazzi","Bebe Rexha","Becky G","Becky Hill","Bee Gees","Ben Bernie","Ben Howard","Ben Selvin","Berlin","Bessie Smith","Bethel Music","Bette Midler","Beyonce","Bibi Blocksberg","Bibi und Tina","BigXthaPlug","Bill Doggett","Bill Haley & his Comets","Bill Withers","Billy Davis Jr","Billy Joel","Billy Paul","Billy Preston","Billy Swan","Birdy","Bizarrap","Blake Shelton","Blur","Bob Marley & The Wailers","Bob Seger","Bobby Darin","Bobby Lewis","Bobby McFerrin","Bobby Vinton","Boney M.","Bonez MC","Bonnie Tyler","Booba","Boston","BoyWithUke","Boyce Avenue","Bradley Cooper","Bread","Brent Faiyaz","Brett Young","Bring Me The Horizon","Britney Spears","Brooks & Dunn","Bruce Channel","Bruno & Marrone","Bryan Adams","Bryce Vine","Buddy Holly","Burna Boy","C. Tangana","CKay","CRO","Camilo","Capital Bra","Captain & Tennille","Cardi B","Carin Leon","Carlos Vives","Carly Simon","Carpenters","Cavetown","Celine Dion","Central Cee","Chaka Khan","Champs","Charlie Rich","Chayanne","Cheat Codes","Cher","Chic","Chicago","Chris Brown","Chris Isaak","Chris Young","Christina Aguilera","Christina Perri","Christopher Cross","Chuck Berry","Ciara","Cigarettes After Sex","Cliff Edwards (Ukelele Ike)","Cody Johnson","Colbie Caillat","Colby O'Donis","Cole Swindell","Coleman Hawkins","Contours","Coolio","Count Basie","Cris Mj","Culture Club","Cyndi Lauper","D-Block Europe","DAY6","DJ Khaled","DJ Luian","DJ Nelson","DMX","DNCE","DaVido","Dadju","Daft Punk","Dan + Shay","Daniel Powter","Danny Ocean","Darius Rucker","Dave","David Bowie","David Guetta","Daya","Dean Martin","Deee-Lite","Deep Purple","Deftones","Demi Lovato","Dennis Lloyd","Denzel Curry","Dermot Kennedy","Desiigner","Devo","Dewa 19","Dexys Midnight Runners","Diddy","Dido","Die drei !!!","Diego & Victor Hugo","Diljit Dosanjh","Dimitri Vegas & Like Mike","Dinah Shore","Dionne Warwick","Dire Straits","Disclosure","Dixie Cups","Doja Cat","Dolly Parton","Don Diablo","Don Henley","Don McLean","Don Omar","Donna Summer","Donovan","Dr. Dre","Drake","Dreamville","Dua Lipa","EMF","ENHYPEN","Earth, Wind & Fire","Ed Sheeran","Eddie Cantor","Eddie Cochran","Eddy Howard","Edgar Winter Group","Edwin Hawkins Singers","Edwin Starr","El Alfa","Eladio Carrion","Electric Light Orchestra","Elevation Worship","Ella Henderson","Ellie Goulding","Elton John","Elvis Presley","Empire of the Sun","En Vogue","Enrique Iglesias","Eslabon Armado","Ethel Waters","Etta James","Evanescence","Exile","Extreme","Faith Hill","Fall Out Boy","Fanny Brice","Farruko","Fats Domino","Fats Waller","Feid","Felix Jaehn","Fergie","Fetty Wap","Fiersa Besari","Fifth Harmony","Fine Young Cannibals","Five Finger Death Punch","Fleetwood Mac","Flo-Rida","Florence + The Machine","Flume","Foo Fighters","Foreigner","Foster The People","Four Aces","Frank Ocean","Frank Sinatra","Frankie Avalon","Frankie Valli","Fred Astaire","Freda Payne","Freddie Dredd","Freddy Fender","French Montana","Fuerza Regida","Fujii Kaze","Future","G-Eazy","Garfunkel and Oates","Gary Lewis & The Playboys","Gary Numan","Gene Autry","Gene Chandler","Gene Vincent","George Michael","George Strait","Gera MX","Ghost","Ghostemane","Gigi D'Agostino","Gladys Knight & The Pips","Glass Animals","Glee Cast","Gloria Gaynor","Godsmack","Gorillaz","Gotye","Grand Funk Railroad","Green Day","Grouplove","Grupo Firme","Grupo Marca Registrada","Gryffin","Gucci Mane","Guess Who","Gunna","Gusttavo Lima","Guy Mitchell","Gwen Stefani","Gzuz","H.E.R.","HARDY","Hailee Steinfeld","Halsey","Hans Zimmer","Harris Jayaraj","Harry Chapin","Harry James","Harry Nilsson","Harry Styles","Hayley Williams","Herb Alpert","Herman's Hermits","Hillsong UNITED","Hillsong Worship","Hollywood Undead","Honey Cone","Hoobastank","Hues Corporation","I Prevail","ITZY","IVE","Ice Cube","Ice Spice","Iggy Azalea","Imagine Dragons","Incubus","Internet Money","Isaac Hayes","J Geils Band","J. Cole","JAY-Z","JJ Lin","JP Saxe","JVKE","Jack Harlow","Jack Johnson","Jackie Wilson","Jacquees","James Arthur","James Brown","James TW","James Taylor","Jamie Foxx","Janet Jackson","Janis Joplin","Jason Aldean","Jason Mraz","Jay Chou","Jay Sean","Jay Wheeler","Jaymes Young","Jean Knight","Jeezy","Jennifer Lopez","Jennifer Warnes","Jeremih","Jeremy Zucker","Jerry Lee Lewis","Jerry Murad's Harmonicats","Jess Glynne","Jessie J","Jewel","Jimi Hendrix","Jimin","Jimmie Rodgers","Jimmy Dean","Jo Stafford","Joan Jett & The Blackhearts","Joao Gilberto","Joel Corry","John Fred & The Playboy Band","John Legend","John Mayer","John Williams","Johnnie Ray","Johnnie Taylor","Johnny Cash","Johnny Horton","Johnny Mathis","Johnny Mercer","Johnny Nash","Joji","Jon Bellion","Jonas Blue","Jonas Brothers","Joni James","Jorja Smith","Juan Gabriel","Juan Luis Guerra 4.40","Juanes","Juice Newton","Julia Michaels","Justin Bieber","Justin Quiles","KALEO","KAROL G","KAYTRANADA","KK","KSI","KYLE","Kacey Musgraves","Kane Brown","Kanye West","Karan Aujla","Kate Smith","Katy Perry","Kay Kyser","Ke$ha","Kehlani","Kelly Clarkson","Kenny Chesney","Kenny Loggins","Kenny Rogers","Kenshi Yonezu","Kenya Grace","Kevin Gates","Key Glock","Khalid","Kim Carnes","Kim Petras","Kimbra","Kina","King Gnu","Kings of Leon","Kingsmen","Kitty Kallen","Kodak Black","Kodaline","Kollegah","Kool & The Gang","Kungs","Kygo","Kylie Minogue","LE SSERAFIM","LISA","LMFAO","LUDMILLA","La Adictiva Banda San José de Mesillas","La Oreja de Van Gogh","Labrinth","Lady Antebellum","Lady GaGa","Lainey Wilson","Lana Del Rey","Latto","Lauryn Hill","Lauv","League of Legends","Lee Brice","Leon Bridges","Leona Lewis","Lesley Gore","Leslie Odom Jr.","Liam Payne","Lifehouse","Lil Baby","Lil Dicky","Lil Durk","Lil Mosey","Lil Nas X","Lil Pump","Lil Skies","Lil Tjay","Lil Uzi Vert","Lil Yachty","Lil' Kim","Lil' Wayne","Lin-Manuel Miranda","Linkin Park","Lionel Richie","Lipps Inc","Lisa Loeb","Little Peggy March","Little Richard","Lofi Fruits Music","Lord Huron","Los Del Rio","Los Dos Carnales","Los Lobos","Los Temerarios","Los Tigres Del Norte","Los Tucanes De Tijuana","Lou Reed","Loud Luxury","Louis Jordan","Louis Tomlinson","Love Unlimited","Lovin' Spoonful","Luan Santana","Luciano","Luis Miguel","Luis R Conriquez","Lulu","Lunay","Lupe Fiasco","M","MAX","MC Hammer","MC Ryan SP","MKTO","Mabel","Machine Gun Kelly","Madison Beer","Madonna","Mahalini","Major Lazer","Mambo Kingz","Maneskin","Marco Antonio Solís","Margaret Whiting","Maria Becerra","Mario","Mario Lanza","Mark Ronson","Maroon 5","Marshmello","Martin Garrix","Mary Ford","Mary J Blige","Mary J. Blige","Mary Wells","Matoma","Mau y Ricky","Meek Mill","Megadeth","Melanie","Melanie Martinez","Melendi","Men At Work","Metro Boomin","Michael Bublé","Michael Jackson","Michael McDonald","Michael Sembello","Miguel","Mike Posner","Miley Cyrus","Milky Chance","Minnie Riperton","Miracle Tones","Miranda Lambert","Mohit Chauhan","Mon Laferte","Moneybagg Yo","Monsta X","Mora","Morad","Morat","Mother Mother","Motley Crue","Ms. Lauryn Hill","Mumford & Sons","Muse","Mya","Myke Towers","NCT 127","NCT DREAM","NEFFEX","Nadin Amizah","Nancy Sinatra","Nat King Cole","Nate Smith","Natti Natasha","Nayer","Neil Diamond","Neil Sedaka","Nekfeu","Nelly","New Vaudeville Band","Next","Nickelback","Nicki Minaj","Nicki Nicole","Nicky Jam","Nina Simone","Ninho","Nipsey Hussle","Nirvana","Niska","No Doubt","Norah Jones","Normani","OMI","ONE OK ROCK","Oasis","Official HIGE DANdism","Offset","Old Dominion","Oliver Heldens","Olivia Rodrigo","Omah Lay","One Direction","Otis Redding","OutKast","Owl City","P Diddy","P!nk","PLK","PNL","Pamungkas","Passenger","Pat Boone","Patsy Cline","Patti LaBelle","Patti Page","Paul & Paula","Paul Revere & the Raiders","Paul Robeson","Paul Russell","Paul Whiteman","Paula Abdul","Peaches & Herb","Pearl Jam","Pee Wee Hunt","Pee Wee King","Pentatonix","Percy Faith","Percy Sledge","Peso Pluma","Peter Cetera","Peter Gabriel","Peter, Paul & Mary","Pharrell Williams","Pierce The Veil","Pineapple StormTv","Pink Floyd","Pink Sweat$","Piso 21","Pitbull","Plan B","Player","Polo G","Pop Smoke","Portugal. The Man","Pouya","Prince","Prince Royce","Pusha T","Quality Control","Queen","Quinn XCII","R. Kelly","RAF Camora","RAYE","REM","REO Speedwagon","Radiohead","Rag'n'Bone Man","Rage Against The Machine","Rahat Fateh Ali Khan","Rainbow Kitten Surprise","Rammstein","Rauw Alejandro","Ray Charles","Ray Parker Jr","Ray Stevens","Red Foley","Red Hot Chili Peppers","Red Velvet","Regard","Regina Belle","Reik","Rels B","Rema","Ricardo Arjona","Rich The Kid","Rick Astley","Rick Dees & his Cast of Idiots","Rick Ross","Rick Springfield","Ricky Martin","Ricky Nelson","Rihanna","Rita Ora","Ritchie Valens","Rizky Febian","Rob Thomas","Roberta Flack","Robin Schulz","Robin Thicke","Rod Stewart","Rod Wave","Roddy Ricch","Roger Miller","Romeo Santos","Rosemary Clooney","Roxette","Roy Acuff","Roy Orbison","Rudimental","Ruel","Ruth B.","Ryan Lewis","SCH","SEVENTEEN","SWV","Sabaton","Sabrina Carpenter","Sachet Tandon","Sachin-Jigar","Sade","Sam Cooke","Sam Feldt","Sam Hunt","Sam Smith","Sam The Sham & The Pharaohs","Sammy Davis Jr","Sammy Kaye","Santana","Sasha Alex Sloan","Savage Garden","Saweetie","Scorpions","Sean Kingston","Sean Paul","Sebastian Yatra","Sech","Seeb","Sezen Aksu","Sfera Ebbasta","Shaggy","Shania Twain","Shawn Mendes","Sheena Easton","Shinedown","Shubh","Sia","Sid Sriram","Sidhu Moose Wala","Silk","Silver Convention","Simon & Garfunkel","Sinead O'Connor","Sir Mix-a-Lot","Sister Sledge","Ski Mask The Slump God","Skillet","Skrillex","Sleeping At Last","Smokey Robinson","Snoop Dogg","Snow Patrol","Soda Stereo","Sonu Nigam","Sophie Ellis-Bextor","Spencer Davis Group","Spice Girls","Stan Getz","Starland Vocal Band","Stephen Sanchez","Steve Aoki","Steve Lacy","Steve Winwood","Stevie B","Sting","Stormzy","Strawberry Alarm Clock","Stray Kids","Stromae","Sublime","Sum 41","Summer Walker","Supertramp","Survivor","Swedish House Mafia","System Of A Down","T-Pain","T.I.","TAEYEON","TKKG","TLC","TOMORROW X TOGETHER","TOTO","TWICE","Tag Team","Tainy","Tammi Terrell","Tanishk Bagchi","Tate McRae","Taylor Swift","Tears For Fears","Tems","Tennessee Ernie Ford","Terence Trent D'Arby","Teresa Brewer","Terry Jacks","The Ames Brothers","The Animals","The B52s","The Bangles","The Beatles","The Black Eyed Peas","The Black Keys","The Box Tops","The Chainsmokers","The Chiffons","The Chordettes","The Clash","The Coasters","The Commodores","The Cowsills","The Cranberries","The Crew-Cuts","The Cure","The Detroit Spinners","The Diamonds","The Doobie Brothers","The Doors","The Drifters","The Emotions","The Eurythmics","The Fireballs","The Flamingos","The Foundations","The Four Seasons","The Fray","The Game","The Go Gos","The Goo Goo Dolls","The Head And The Heart","The Hollies","The Ink Spots","The Isley Brothers","The Jackson 5","The Kid LAROI","The Killers","The Kingston Trio","The Kooks","The Lemon Pipers","The Living Tombstone","The Lumineers","The Mamas & The Papas","The Marvelettes","The McCoys","The Mills Brothers","The Miracles","The Monkees","The Moody Blues","The National","The Neighbourhood","The Notorious B.I.G.","The O'Jays","The Offspring","The Osmonds","The Partridge Family","The Penguins","The Pet Shop Boys","The Platters","The Righteous Brothers","The Rolling Stones","The Ronettes","The Score","The Script","The Seekers","The Shangri-Las","The Smashing Pumpkins","The Staple Singers","The Strokes","The Supremes","The Temptations","The Turtles","The Vamps","The Verve","The Village People","The Weavers","The White Stripes","The Young Rascals","The Zombies","Thelma Houston","Thomas Rhett","Three Days Grace","Three Dog Night","Three Man Down","Timbaland","Timmy Trumpet","Toby Keith","Tom Jones","Tom Petty and the Heartbreakers","Tommy Dorsey","Tommy Edwards","Tommy James & the Shondells","Tone Loc","Toni Braxton","Topic","Tory Lanez","Tove Lo","Trevor Daniel","Trey Songz","Trippie Redd","Trueno","Tulsi Kumar","Tulus","Twenty One Pilots","Two Feet","Ty Dolla $ign","Tyga","Tyler Hubbard","U2","UB40","UZI","Ufo361","Upchurch","V","Vampire Weekend","Van McCoy","Van Morrison","Vance Joy","Vanessa Carlton","Vanessa Williams","Vera Lynn","Vernon Dalhart","Vicente Fernandez","Vishal-Shekhar","Volbeat","WILLOW","Wale","Wallows","Weezer","Wham!","Whitney Houston","Why Don't We","Wilbert Harrison","Wilson Phillips","Wiz Khalifa","Woody Guthrie","Wyclef Jean","XXXTENTACION","Xavi","YG","YNW Melly","YOASOBI","Yandel","Years & Years","Yeat","Yo Gotti","Young Dolph","Young Miko","Young Thug","YoungBoy Never Broke Again","Yung Gravy","Yuuri","Yuvan Shankar Raja","ZAYN","ZZ Top","Zac Brown Band","Zach Bryan","Zara Larsson","aespa","benny blanco","blink-182","d4vd","deadmau5","girl in red","gnash","iann dior","will.i.am"],genre:["Acid House","Acid Jazz","Acid Rock","Acoustic","Acoustic Blues","Afro-Pop","Afrobeat","Alt-Rock","Alternative","Ambient","American Trad Rock","Americana","Anime","Arena Rock","Art-Rock","Avant-Garde","Avant-Punk","Baladas y Boleros","Barbershop","Baroque","Bebop","Big Band","Black Metal","Blue Note","Bluegrass","Blues","Boogaloo","Bop","Bossa Nova","Bounce","Brazilian Funk","Breakbeat","Britpop","CCM","Cajun","Cantopop","Celtic","Celtic Folk","Chamber Music","Chant","Chanukah","Chicago Blues","Chicago House","Chicano","Children’s Music","Chill","Choral","Christian","Christmas","Classical","Club","College Rock","Conjunto","Cool Jazz","Country","Crunk","Dance","Dancehall","Death Metal","Deep House","Delta Blues","Detroit Techno","Dirty South","Disco","Disney","Dixieland","Doo-wop","Downtempo","Dream Pop","Drill","Drinking Songs","Drone","Drum'n'bass","Dub","Dubstep","EDM","Early Music","East Coast Rap","Easter","Easy Listening","Eclectic","Electric Blues","Electro","Electronic","Electronica","Emo","Enka","Environmental","Ethio-jazz","Experimental","Experimental Rock","Flamenco","Folk","Folk-Rock","Forro","French Pop","Funk","Fusion","Gangsta Rap","Garage","German Folk","German Pop","Glam Rock","Gospel","Goth","Grime","Grindcore","Groove","Grunge","Hair Metal","Halloween","Happy","Hard Bop","Hard Dance","Hard Rock","Hardcore","Hardcore Punk","Hardcore Rap","Hardstyle","Healing","Heavy Metal","High Classical","Hip Hop","Holiday","Honky Tonk","House","IDM","Impressionist","Indie","Industrial","Instrumental","J-Dance","J-Idol","J-Pop","J-Punk","J-Rock","J-Ska","J-Synth","Jackin House","Jam Bands","Japanese Pop","Jazz","Jungle","K-Pop","Karaoke","Kayokyoku","Kids","Kitsch","Klezmer","Krautrock","Latin","Latin Jazz","Latin Rap","Local","Lounge","Lullabies","MPB","Mainstream Jazz","Malay","Mandopop","March","Mariachi","Mawwal","Medieval","Meditation","Metal","Metalcore","Minimal Techno","Minimalism","Modern","Motown","Mugham","Musicals","Musique Concrète","Nature","Neo-Soul","Nerdcore","New Acoustic","New Age","New Mex","New Wave","No Wave","Noise","Nordic","Novelty","OPM","Oi!","Old School Rap","Opera","Orchestral","Original Score","Outlaw Country","Pagode","Party","Piano","Polka","Pop","Pop Film","Pop Latino","Post Dubstep","Power Pop","Praise & Worship","Progressive House","Progressive Rock","Proto-punk","Psych Rock","Psychedelic","Punk","Punk Rock","Qawwali","Quiet Storm","R&B","Ragtime","Rainy Day","Rap","Reggae","Reggaeton","Regional Mexicano","Relaxation","Renaissance","Retro","Rock","Rockabilly","Rocksteady","Romance","Romantic","Roots Reggae","Roots Rock","SKA","Sad","Salsa","Samba","Second Line","Sertanejo","Shaabi","Shoegaze","Sleep","Smooth Jazz","Soft Rock","Soul","Soundtrack","Southern Gospel","Southern Rock","Space Rock","Stage And Screen","Steampunk","Summer","Surf","Swamp Pop","Swing","Synth Pop","Tango","Techno","Teen Pop","Tejano","Tex-Mex","Thanksgiving","Traditional","Trance","Trip Hop","Tropical","Underground Rap","Urban","Urban Cowboy","West Coast Rap","Western Swing","World","Worldbeat","Zydeco"],song_name:["(Everything I Do) I Do it For You","(Ghost) Riders in the Sky","(I Can't Get No) Satisfaction","(I've Got a Gal In) Kalamazoo","(I've Had) the Time of My Life","(It's No) Sin","(Just Like) Starting Over","(Let Me Be Your) Teddy Bear","(Put Another Nickel In) Music! Music! Music!","(Sexual) Healing","(Sittin' On) the Dock of the Bay","(They Long to Be) Close to You","(You Keep Me) Hangin' On","(You're My) Soul & Inspiration","(Your Love Keeps Lifting Me) Higher & Higher","12th Street Rag","1999","19th Nervous Breakdown","50 Ways to Leave Your Lover","9 to 5","96 Tears","A Boy Named Sue","A Hard Day's Night","A String of Pearls","A Thousand Miles","A Tree in the Meadow","A Whiter Shade of Pale","A Whole New World (Aladdin's Theme)","A Woman in Love","A-Tisket A-Tasket","ABC","Abracadabra","Ac-cent-tchu-ate the Positive","Addicted to Love","After You've Gone","Afternoon Delight","Again","Against All Odds (Take a Look At Me Now)","Ain't Misbehavin'","Ain't No Mountain High Enough","Ain't No Sunshine","Ain't That a Shame","Airplanes","All Along the Watchtower","All I Have to Do is Dream","All I Wanna Do","All My Lovin' (You're Never Gonna Get It)","All Night Long (All Night)","All Out of Love","All Shook Up","All You Need is Love","Alone","Alone Again (Naturally)","Always On My Mind","American Pie","American Woman","Angie","Another Brick in the Wall (part 2)","Another Day in Paradise","Another Night","Another One Bites the Dust","Apologize","April Showers","Aquarius/Let The Sunshine In","Are You Lonesome Tonight?","Arthur's Theme (Best That You Can Do)","As Time Goes By","At Last","At the Hop","Auf Wiederseh'n Sweetheart","Baby Baby","Baby Come Back","Baby Got Back","Baby Love","Baby One More Time","Bad Day","Bad Girls","Bad Moon Rising","Bad Romance","Bad, Bad Leroy Brown","Baker Street","Ball of Confusion (That's What the World is Today)","Ballad of the Green Berets","Ballerina","Band On the Run","Band of Gold","Battle of New Orleans","Be Bop a Lula","Be My Baby","Be My Love","Beat It","Beautiful Day","Beauty & the Beast","Because I Love You (The Postman Song)","Because You Loved Me","Because of You","Before The Next Teardrop Falls","Begin the Beguine","Behind Closed Doors","Being With You","Believe","Ben","Bennie & the Jets","Besame Mucho","Best of My Love","Bette Davis Eyes","Big Bad John","Big Girls Don't Cry","Billie Jean","Bitter Sweet Symphony","Black Or White","Black Velvet","Blaze of Glory","Bleeding Love","Blue Suede Shoes","Blue Tango","Blueberry Hill","Blurred Lines","Body & Soul","Bohemian Rhapsody","Boogie Oogie Oogie","Boogie Woogie Bugle Boy","Boom Boom Pow","Born in the USA","Born to Be Wild","Born to Run","Boulevard of Broken Dreams","Brand New Key","Brandy (You're A Fine Girl)","Breaking Up is Hard to Do","Breathe","Bridge Over Troubled Water","Brother Louie","Brother, Can You Spare a Dime?","Brown Eyed Girl","Brown Sugar","Build Me Up Buttercup","Burn","Buttons & Bows","Bye Bye Love","Bye Bye, Blackbird","Bye, Bye, Bye","Caldonia Boogie (What Makes Your Big Head So Hard)","California Dreamin'","California Girls","Call Me","Call Me Maybe","Can You Feel the Love Tonight","Can't Buy Me Love","Can't Get Enough of Your Love, Babe","Can't Help Falling in Love","Candle in the Wind '97","Candy Man","Car Wash","Careless Whisper","Cars","Cat's in the Cradle","Cathy's Clown","Celebration","Centerfold","Chain of Fools","Chances Are","Change the World","Chapel of Love","Chattanooga Choo Choo","Chattanoogie Shoe-Shine Boy","Check On It","Cheek to Cheek","Cherish","Cherry Pink & Apple Blossom White","Cold, Cold Heart","Colors of the Wind","Come On Eileen","Come On-a My House","Come Together","Coming Up","Cracklin' Rosie","Crazy","Crazy For You","Crazy Little Thing Called Love","Crazy in Love","Creep","Crimson & Clover","Crocodile Rock","Cry","Cry Like a Baby","Crying","Da Doo Ron Ron (When He Walked Me Home)","Dance to the Music","Dancing Queen","Dancing in the Dark","Dancing in the Street","Dardanella","Daydream Believer","December 1963 (Oh What a Night)","Delicado","Dilemma","Disco Duck","Disco Lady","Disturbia","Dizzy","Do That to Me One More Time","Do Wah Diddy Diddy","Do Ya Think I'm Sexy?","Do You Love Me?","Don't Be Cruel","Don't Fence Me In","Don't Go Breaking My Heart","Don't Leave Me This Way","Don't Let the Stars Get in Your Eyes","Don't Let the Sun Go Down On Me","Don't Speak","Don't Stop 'Til You Get Enough","Don't Worry Be Happy","Don't You (Forget About Me)","Don't You Want Me","Doo Wop (That Thing)","Down","Down Hearted Blues","Down Under","Downtown","Dreamlover","Dreams","Drop it Like It's Hot","Drops of Jupiter (Tell Me)","Duke of Earl","E.T.","Earth Angel","Ebony & Ivory","Eight Days a Week","Empire State Of Mind","End of the Road","Endless Love","Escape (The Pina Colada Song)","Eve of Destruction","Every Breath You Take","Every Little Thing She Does is Magic","Everybody Loves Somebody","Everybody Wants to Rule the World","Everyday People","Eye of the Tiger","Faith","Fallin'","Fame","Family Affair","Fantasy","Fast Car","Feel Good Inc","Feel Like Making Love","Fire & Rain","Firework","Flashdance. What a Feeling","Fly Robin Fly","Foolish Games","Footloose","For What It's Worth (Stop, Hey What's That Sound)","Fortunate Son","Frankenstein","Freak Me","Freebird","Frenesi","Funkytown","Gangsta's Paradise","Georgia On My Mind","Georgy Girl","Get Back","Get Down Tonight","Get Off of My Cloud","Ghostbusters","Gimme Some Lovin'","Girls Just Wanna Have Fun","Give Me Everything","Gives You Hell","Glamorous","Glory of Love","Go Your Own Way","God Bless America","God Bless the Child","Gold Digger","Gonna Make You Sweat (Everybody Dance Now)","Good Lovin'","Good Times","Good Vibrations","Goodbye Yellow Brick Road","Goodnight, Irene","Got to Give it Up","Grease","Great Balls of Fire","Greatest Love of All","Green Onions","Green River","Green Tambourine","Grenade","Groove is in the Heart","Groovin'","Gypsies, Tramps & Thieves","Hair","Hang On Sloopy","Hanging by a Moment","Hanky Panky","Happy Days Are Here Again","Happy Together","Harbour Lights","Hard to Say I'm Sorry","Harper Valley PTA","Have You Ever Really Loved a Woman?","He'll Have to Go","He's So Fine","He's a Rebel","Heart of Glass","Heart of Gold","Heartbreak Hotel","Hello Dolly","Hello, I Love You, Won't You Tell Me Your Name?","Help Me, Rhonda","Help!","Here Without You","Here in My Heart","Hero","Hey Baby","Hey Jude","Hey Paula","Hey There","Hey There Delilah","Hey Ya!","Higher Love","Hips don't lie","Hit the Road, Jack","Hold On","Hollaback Girl","Honey","Honky Tonk","Honky Tonk Woman","Horse With No Name","Hot Child In The City","Hot Stuff","Hotel California","Hound Dog","House of the Rising Sun","How Deep is Your Love?","How Do I Live?","How Do You Mend a Broken Heart","How High the Moon","How Much is That Doggy in the Window?","How Will I Know","How You Remind Me","How to Save a Life","Hungry Heart","Hurt So Good","I Believe I Can Fly","I Can Dream, Can't I?","I Can Help","I Can See Clearly Now","I Can't Get Next to You","I Can't Get Started","I Can't Go For That (No Can Do)","I Can't Help Myself (Sugar Pie, Honey Bunch)","I Can't Stop Loving You","I Don't Want to Miss a Thing","I Fall to Pieces","I Feel Fine","I Feel For You","I Feel Love","I Get Around","I Got You (I Feel Good)","I Got You Babe","I Gotta Feeling","I Heard it Through the Grapevine","I Honestly Love You","I Just Called to Say I Love You","I Just Wanna Be Your Everything","I Kissed A Girl","I Love Rock 'n' Roll","I Need You Now","I Only Have Eyes For You","I Shot the Sheriff","I Still Haven't Found What I'm Looking For","I Swear","I Think I Love You","I Walk the Line","I Wanna Dance With Somebody (Who Loves Me)","I Wanna Love You","I Want You Back","I Want to Hold Your Hand","I Want to Know What Love Is","I Went to Your Wedding","I Will Always Love You","I Will Follow Him","I Will Survive","I Write the Songs","I'll Be Missing You","I'll Be There","I'll Make Love to You","I'll Never Smile Again","I'll Take You There","I'll Walk Alone","I'll be seeing you","I'm Looking Over a Four Leaf Clover","I'm So Lonesome I Could Cry","I'm Sorry","I'm Walking Behind You","I'm Your Boogie Man","I'm Yours","I'm a Believer","I've Heard That Song Before","If (They Made Me a King)","If I Didn't Care","If You Don't Know Me By Now","If You Leave Me Now","Imagine","In Da Club","In the End","In the Ghetto","In the Mood","In the Summertime","In the Year 2525 (Exordium & Terminus)","Incense & Peppermints","Indian Reservation (The Lament Of The Cherokee Reservation Indian)","Instant Karma","Iris","Ironic","Irreplaceable","It Had to Be You","It's All in the Game","It's My Party","It's Now Or Never","It's Still Rock 'n' Roll to Me","It's Too Late","Jack & Diane","Jailhouse Rock","Jessie's Girl","Jive Talkin'","Johnny B Goode","Joy to the World","Judy in Disguise (With Glasses)","Jump","Jumpin' Jack Flash","Just Dance","Just My Imagination (Running Away With Me)","Just the Way You Are","Kansas City","Karma Chameleon","Keep On Loving You","Killing Me Softly With His Song","King of the Road","Kiss","Kiss & Say Goodbye","Kiss From a Rose","Kiss Me","Kiss On My List","Kiss You All Over","Knock On Wood","Knock Three Times","Kokomo","Kryptonite","Kung Fu Fighting","La Bamba","Lady","Lady Marmalade (Voulez-Vous Coucher Aver Moi Ce Soir?)","Last Train to Clarksville","Layla","Le Freak","Leader of the Pack","Lean On Me","Leaving, on a Jet Plane","Let Me Call You Sweetheart","Let Me Love You","Let it Be","Let it Snow! Let it Snow! Let it Snow!","Let's Dance","Let's Get it On","Let's Groove","Let's Hear it For the Boy","Let's Stay Together","Light My Fire","Lights","Like a Prayer","Like a Rolling Stone","Like a Virgin","Little Darlin'","Little Things Mean a Lot","Live & Let Die","Livin' La Vida Loca","Livin' On a Prayer","Living For the City","Locked Out Of Heaven","Lola","Lonely Boy","Long Cool Woman in a Black Dress","Long Tall Sally","Look Away","Lookin' Out My Back Door","Lose Yourself","Losing My Religion","Louie Louie","Love Child","Love Hangover","Love In This Club","Love Is Blue (L'Amour Est Bleu)","Love Letters in the Sand","Love Me Do","Love Me Tender","Love Shack","Love Theme From 'A Star is Born' (Evergreen)","Love Train","Love Will Keep Us Together","Love is a Many Splendoured Thing","Love to Love You Baby","Love's Theme","Loving You","Low","Macarena","Mack the Knife","Maggie May","Magic","Magic Carpet Ride","Make Love to Me","Make it With You","Makin' Whoopee","Mama Told Me Not to Come","Man in the Mirror","Manana (Is Soon Enough For Me)","Maneater","Maniac","Maybellene","Me & Bobby McGee","Me & Mrs Jones","Memories Are Made of This","Mercy Mercy Me (The Ecology)","Mickey","Midnight Train to Georgia","Minnie the Moocher","Miss You","Miss You Much","Mister Sandman","Mmmbop","Mona Lisa","Monday Monday","Money For Nothing","Mony Mony","Mood Indigo","Moonlight Cocktail","Moonlight Serenade","More Than Words","More Than a Feeling","Morning Train (Nine to Five)","Mr Big Stuff","Mr Brightside","Mr Tambourine Man","Mrs Brown You've Got a Lovely Daughter","Mrs Robinson","Mule Train","Music","My Blue Heaven","My Boyfriend's Back","My Eyes Adored You","My Girl","My Guy","My Heart Will Go On","My Life","My Love","My Man","My Prayer","My Sharona","My Sweet Lord","Na Na Hey Hey (Kiss Him Goodbye)","Nature Boy","Near You","Need You Now","Need You Tonight","Never Gonna Give You Up","Night & Day","Night Fever","Nights in White Satin","No One","No Scrubs","Nobody Does it Better","Nothin' on You","Nothing Compares 2 U","Nothing's Gonna Stop Us Now","Ode To Billie Joe","Oh Happy Day","Oh My Papa (O Mein Papa)","Oh, Pretty Woman","Ol' Man River","Ole Buttermilk Sky","On Bended Knee","On My Own","On the Atchison, Topeka & the Santa Fe","One","One Bad Apple","One More Try","One O'Clock Jump","One Sweet Day","One of These Nights","One of Us","Only The Lonely (Know The Way I Feel)","Only You (And You Alone)","Open Arms","Over There","Over the Rainbow","Paint it Black","Papa Don't Preach","Papa Was a Rolling Stone","Papa's Got a Brand New Bag","Paper Doll","Paper Planes","Paperback Writer","Party Rock Anthem","Peg o' My Heart","Peggy Sue","Pennies From Heaven","Penny Lane","People","People Got to Be Free","Personality","Philadelphia Freedom","Physical","Piano Man","Pick Up the Pieces","Pistol Packin' Mama","Play That Funky Music","Please Mr Postman","Poker Face","Pon De Replay","Pony Time","Pop Muzik","Prisoner of Love","Private Eyes","Promiscuous","Proud Mary","Purple Haze","Purple Rain","Puttin' on the Ritz","Que sera sera (Whatever will be will be)","Queen of Hearts","Rag Doll","Rag Mop","Rags to Riches","Raindrops Keep Falling On My Head","Rapture","Ray of Light","Reach Out (I'll Be There)","Red Red Wine","Rehab","Respect","Return to Sender","Reunited","Revolution","Rhapsody in Blue","Rhinestone Cowboy","Rich Girl","Riders On the Storm","Right Back Where We Started From","Ring My Bell","Ring of Fire","Rock Around the Clock","Rock With You","Rock Your Baby","Rock the Boat","Rock the Casbah","Roll Over Beethoven","Roll With It","Rolling In The Deep","Rosanna","Roses Are Red","Royals","Ruby Tuesday","Rudolph, the Red-Nosed Reindeer","Rum & Coca-Cola","Runaround Sue","Runaway","Running Scared","Rush Rush","Sailing","Save the Best For Last","Save the Last Dance For Me","Say It Right","Say My Name","Say Say Say","Say You, Say Me","School's Out","Seasons in the Sun","Secret Love","Sentimental Journey","Sexyback","Sh-Boom (Life Could Be a Dream)","Shadow Dancing","Shake Down","Shake You Down","She Drives Me Crazy","She Loves You","She's a Lady","Shining Star","Shop Around","Shout","Silly Love Songs","Since U Been Gone","Sing, Sing, Sing (With A Swing)","Singing The Blues","Single Ladies (Put A Ring On It)","Sir Duke","Sixteen Tons","Sledgehammer","Sleep Walk","Sleepy Lagoon","Slow Poke","Smells Like Teen Spirit","Smoke Gets in Your Eyes","Smoke On the Water","Smoke! Smoke! Smoke! (That Cigarette)","Smooth","So Much in Love","Soldier Boy","Some Enchanted Evening","Some of These Days","Somebody That I Used to Know","Somebody to Love","Someday","Somethin' Stupid","Something","Soul Man","Spanish Harlem","Spill the Wine","Spinning Wheel","Spirit in the Sky","St George & the Dragonette","St Louis Blues","Stagger Lee","Stairway to Heaven","Stand By Me","Stardust","Stars & Stripes Forever","Stay (I Missed You)","Stayin' Alive","Stop! in the Name of Love","Stormy Weather (Keeps Rainin' All the Time)","Straight Up","Strange Fruit","Stranger On the Shore","Strangers in the Night","Strawberry Fields Forever","Streets of Philadelphia","Stronger","Stuck On You","Sugar Shack","Sugar Sugar","Summer in the City","Summertime Blues","Sunday, Monday or Always","Sunshine Superman","Sunshine of Your Love","Superstar","Superstition","Surfin' USA","Suspicious Minds","Swanee","Sweet Caroline (Good Times Never Seemed So Good)","Sweet Child O' Mine","Sweet Dreams (Are Made of This)","Sweet Georgia Brown","Sweet Home Alabama","Sweet Soul Music","Swinging On a Star","T For Texas (Blue Yodel No 1)","TSOP (The Sound of Philadelphia)","Take Me Home, Country Roads","Take My Breath Away","Take On Me","Take The 'A' Train","Take a Bow","Tammy","Tangerine","Tears in Heaven","Tears of a Clown","Temperature","Tennessee Waltz","Tequila","Tha Crossroads","Thank You (Falettinme be Mice Elf Again)","That Lucky Old Sun (Just Rolls Around Heaven All Day)","That Old Black Magic","That'll Be the Day","That's Amore","That's What Friends Are For","That's the Way (I Like It)","That's the Way Love Goes","The Boy is Mine","The Boys of Summer","The Christmas Song (Chestnuts Roasting On An Open Fire)","The End of the World","The First Time Ever I Saw Your Face","The Girl From Ipanema","The Glow-Worm","The Great Pretender","The Gypsy","The Hustle","The Joker","The Last Dance","The Letter","The Loco-Motion","The Long & Winding Road","The Love You Save","The Morning After","The Power of Love","The Prisoner's Song","The Reason","The Rose","The Sign","The Song From Moulin Rouge (Where Is Your Heart)","The Sounds of Silence","The Streak","The Sweet Escape","The Thing","The Tide is High","The Tracks of My Tears","The Twist","The Wanderer","The Way We Were","The Way You Look Tonight","The Way You Move","Theme From 'A Summer Place'","Theme From 'Greatest American Hero' (Believe It Or Not)","Theme From 'Shaft'","There goes my baby","These Boots Are Made For Walking","Third Man Theme","This Diamond Ring","This Guy's in Love With You","This Land is Your Land","This Love","This Ole House","This Used to Be My Playground","Three Coins in the Fountain","Three Times a Lady","Thrift Shop","Thriller","Ticket to Ride","Tie a Yellow Ribbon 'round the Old Oak Tree","Tiger Rag","Tighten Up","Tik-Toc","Till I Waltz Again With You","Till The End of Time","Time After Time","Time of the Season","To Sir, with Love","Tom Dooley","Tonight's the Night (Gonna Be Alright)","Too Close","Too Young","Tossing & Turning","Total Eclipse of the Heart","Touch Me","Toxic","Travellin' Band","Travellin' Man","Truly Madly Deeply","Turn! Turn! Turn! (To Everything There is a Season)","Tutti Frutti","Twist & Shout","Two Hearts","U Can't Touch This","U Got it Bad","Umbrella","Un-Break My Heart","Unbelievable","Unchained Melody","Uncle Albert (Admiral Halsey)","Under the Boardwalk","Under the Bridge","Unforgettable","Up Around the Bend","Up Up & Away","Up Where We Belong","Upside Down","Use Somebody","Vaya Con Dios (may God Be With You)","Venus","Vision of Love","Viva La Vida","Vogue","Volare","Wabash Cannonball","Waiting For a Girl Like You","Wake Me Up Before You Go Go","Wake Up Little Susie","Walk Don't Run","Walk Like a Man","Walk Like an Egyptian","Walk On By","Walk On the Wild Side","Walk This Way","Wannabe","Want Ads","Wanted","War","Waterfalls","Wayward Wind","We Are Family","We Are Young","We Are the Champions","We Are the World","We Belong Together","We Built This City","We Can Work it Out","We Didn't Start the Fire","We Found Love","We Got The Beat","We Will Rock You","We've Only Just Begun","Weak","Wedding Bell Blues","West End Blues","West End Girls","What Goes Around Comes Around","What a Fool Believes","What'd I Say","What's Going On?","What's Love Got to Do With It?","Whatcha Say","Wheel of Fortune","When Doves Cry","When You Wish Upon a Star","When a Man Loves a Woman","Where Did Our Love Go","Where is the Love?","Whip It","Whispering","White Christmas","White Rabbit","Whole Lotta Love","Whole Lotta Shakin' Goin' On","Whoomp! (There it Is)","Why Do Fools Fall in Love?","Why Don't You Believe Me?","Wichita Lineman","Wicked Game","Wild Thing","Wild Wild West","Will It Go Round In Circles","Will You Love Me Tomorrow","Winchester Cathedral","Wind Beneath My Wings","Wipe Out","Wishing Well","With Or Without You","Without Me","Without You","Woman","Won't Get Fooled Again","Wooly Bully","Working My Way Back to You","YMCA","Yakety Yak","Yeah!","Yellow Rose of Texas","Yesterday","You Ain't Seen Nothin' Yet","You Always Hurt the One You Love","You Are the Sunshine of My Life","You Belong With Me","You Belong to Me","You Can't Hurry Love","You Don't Bring Me Flowers","You Don't Have to Be a Star (To Be in My Show)","You Light Up My Life","You Make Me Feel Brand New","You Make Me Feel Like Dancing","You Really Got Me","You Send Me","You Sexy Thing","You Were Meant for Me","You make Me Wanna","You'll Never Know","You're Beautiful","You're So Vain","You're Still the One","You're the One That I Want","You've Got a Friend","You've Lost That Lovin' Feelin'","Your Cheatin' Heart","Your Song"]},person:{bio_part:["activist","artist","author","blogger","business owner","coach","creator","designer","developer","dreamer","educator","engineer","entrepreneur","environmentalist","film lover","filmmaker","foodie","founder","friend","gamer","geek","grad","inventor","leader","model","musician","nerd","parent","patriot","person","philosopher","photographer","public speaker","scientist","singer","streamer","student","teacher","traveler","veteran","writer"],bio_pattern:["{{person.bio_part}}","{{person.bio_part}}, {{person.bio_part}}","{{person.bio_part}}, {{person.bio_part}}, {{person.bio_part}}","{{person.bio_part}}, {{person.bio_part}}, {{person.bio_part}} {{internet.emoji}}","{{word.noun}} {{person.bio_supporter}}","{{word.noun}} {{person.bio_supporter}}  {{internet.emoji}}","{{word.noun}} {{person.bio_supporter}}, {{person.bio_part}}","{{word.noun}} {{person.bio_supporter}}, {{person.bio_part}} {{internet.emoji}}"],bio_supporter:["advocate","devotee","enthusiast","fan","junkie","lover","supporter"],first_name:{generic:["Aaliyah","Aaron","Abagail","Abbey","Abbie","Abbigail","Abby","Abdiel","Abdul","Abdullah","Abe","Abel","Abelardo","Abigail","Abigale","Abigayle","Abner","Abraham","Ada","Adah","Adalberto","Adaline","Adam","Adan","Addie","Addison","Adela","Adelbert","Adele","Adelia","Adeline","Adell","Adella","Adelle","Aditya","Adolf","Adolfo","Adolph","Adolphus","Adonis","Adrain","Adrian","Adriana","Adrianna","Adriel","Adrien","Adrienne","Afton","Aglae","Agnes","Agustin","Agustina","Ahmad","Ahmed","Aida","Aidan","Aiden","Aileen","Aimee","Aisha","Aiyana","Akeem","Al","Alaina","Alan","Alana","Alanis","Alanna","Alayna","Alba","Albert","Alberta","Albertha","Alberto","Albin","Albina","Alda","Alden","Alec","Aleen","Alejandra","Alejandrin","Alek","Alena","Alene","Alessandra","Alessandro","Alessia","Aletha","Alex","Alexa","Alexander","Alexandra","Alexandre","Alexandrea","Alexandria","Alexandrine","Alexandro","Alexane","Alexanne","Alexie","Alexis","Alexys","Alexzander","Alf","Alfonso","Alfonzo","Alford","Alfred","Alfreda","Alfredo","Ali","Alia","Alice","Alicia","Alisa","Alisha","Alison","Alivia","Aliya","Aliyah","Aliza","Alize","Allan","Allen","Allene","Allie","Allison","Ally","Alphonso","Alta","Althea","Alva","Alvah","Alvena","Alvera","Alverta","Alvina","Alvis","Alyce","Alycia","Alysa","Alysha","Alyson","Alysson","Amalia","Amanda","Amani","Amara","Amari","Amaya","Amber","Ambrose","Amelia","Amelie","Amely","America","Americo","Amie","Amina","Amir","Amira","Amiya","Amos","Amparo","Amy","Amya","Ana","Anabel","Anabelle","Anahi","Anais","Anastacio","Anastasia","Anderson","Andre","Andreane","Andreanne","Andres","Andrew","Andy","Angel","Angela","Angelica","Angelina","Angeline","Angelita","Angelo","Angie","Angus","Anibal","Anika","Anissa","Anita","Aniya","Aniyah","Anjali","Anna","Annabel","Annabell","Annabelle","Annalise","Annamae","Annamarie","Anne","Annetta","Annette","Annie","Ansel","Ansley","Anthony","Antoinette","Antone","Antonetta","Antonette","Antonia","Antonietta","Antonina","Antonio","Antwan","Antwon","Anya","April","Ara","Araceli","Aracely","Arch","Archibald","Ardella","Arden","Ardith","Arely","Ari","Ariane","Arianna","Aric","Ariel","Arielle","Arjun","Arlene","Arlie","Arlo","Armand","Armando","Armani","Arnaldo","Arne","Arno","Arnold","Arnoldo","Arnulfo","Aron","Art","Arthur","Arturo","Arvel","Arvid","Arvilla","Aryanna","Asa","Asha","Ashlee","Ashleigh","Ashley","Ashly","Ashlynn","Ashton","Ashtyn","Asia","Assunta","Astrid","Athena","Aubree","Aubrey","Audie","Audra","Audreanne","Audrey","August","Augusta","Augustine","Augustus","Aurelia","Aurelie","Aurelio","Aurore","Austen","Austin","Austyn","Autumn","Ava","Avery","Avis","Axel","Ayana","Ayden","Ayla","Aylin","Baby","Bailee","Bailey","Barbara","Barney","Baron","Barrett","Barry","Bart","Bartholome","Barton","Baylee","Beatrice","Beau","Beaulah","Bell","Bella","Belle","Ben","Benedict","Benjamin","Bennett","Bennie","Benny","Benton","Berenice","Bernadette","Bernadine","Bernard","Bernardo","Berneice","Bernhard","Bernice","Bernie","Berniece","Bernita","Berry","Bert","Berta","Bertha","Bertram","Bertrand","Beryl","Bessie","Beth","Bethany","Bethel","Betsy","Bette","Bettie","Betty","Bettye","Beulah","Beverly","Bianka","Bill","Billie","Billy","Birdie","Blair","Blaise","Blake","Blanca","Blanche","Blaze","Bo","Bobbie","Bobby","Bonita","Bonnie","Boris","Boyd","Brad","Braden","Bradford","Bradley","Bradly","Brady","Braeden","Brain","Brandi","Brando","Brandon","Brandt","Brandy","Brandyn","Brannon","Branson","Brant","Braulio","Braxton","Brayan","Breana","Breanna","Breanne","Brenda","Brendan","Brenden","Brendon","Brenna","Brennan","Brennon","Brent","Bret","Brett","Bria","Brian","Briana","Brianne","Brice","Bridget","Bridgette","Bridie","Brielle","Brigitte","Brionna","Brisa","Britney","Brittany","Brock","Broderick","Brody","Brook","Brooke","Brooklyn","Brooks","Brown","Bruce","Bryana","Bryce","Brycen","Bryon","Buck","Bud","Buddy","Buford","Bulah","Burdette","Burley","Burnice","Buster","Cade","Caden","Caesar","Caitlyn","Cale","Caleb","Caleigh","Cali","Calista","Callie","Camden","Cameron","Camila","Camilla","Camille","Camren","Camron","Camryn","Camylle","Candace","Candelario","Candice","Candida","Candido","Cara","Carey","Carissa","Carlee","Carleton","Carley","Carli","Carlie","Carlo","Carlos","Carlotta","Carmel","Carmela","Carmella","Carmelo","Carmen","Carmine","Carol","Carolanne","Carole","Carolina","Caroline","Carolyn","Carolyne","Carrie","Carroll","Carson","Carter","Cary","Casandra","Casey","Casimer","Casimir","Casper","Cassandra","Cassandre","Cassidy","Cassie","Catalina","Caterina","Catharine","Catherine","Cathrine","Cathryn","Cathy","Cayla","Ceasar","Cecelia","Cecil","Cecile","Cecilia","Cedrick","Celestine","Celestino","Celia","Celine","Cesar","Chad","Chadd","Chadrick","Chaim","Chance","Chandler","Chanel","Chanelle","Charity","Charlene","Charles","Charley","Charlie","Charlotte","Chase","Chasity","Chauncey","Chaya","Chaz","Chelsea","Chelsey","Chelsie","Chesley","Chester","Chet","Cheyanne","Cheyenne","Chloe","Chris","Christ","Christa","Christelle","Christian","Christiana","Christina","Christine","Christop","Christophe","Christopher","Christy","Chyna","Ciara","Cicero","Cielo","Cierra","Cindy","Citlalli","Clair","Claire","Clara","Clarabelle","Clare","Clarissa","Clark","Claud","Claude","Claudia","Claudie","Claudine","Clay","Clemens","Clement","Clementina","Clementine","Clemmie","Cleo","Cleora","Cleta","Cletus","Cleve","Cleveland","Clifford","Clifton","Clint","Clinton","Clotilde","Clovis","Cloyd","Clyde","Coby","Cody","Colby","Cole","Coleman","Colin","Colleen","Collin","Colt","Colten","Colton","Columbus","Concepcion","Conner","Connie","Connor","Conor","Conrad","Constance","Constantin","Consuelo","Cooper","Cora","Coralie","Corbin","Cordelia","Cordell","Cordia","Cordie","Corene","Corine","Cornelius","Cornell","Corrine","Cortez","Cortney","Cory","Coty","Courtney","Coy","Craig","Crawford","Creola","Cristal","Cristian","Cristina","Cristobal","Cristopher","Cruz","Crystal","Crystel","Cullen","Curt","Curtis","Cydney","Cynthia","Cyril","Cyrus","D'angelo","Dagmar","Dahlia","Daija","Daisha","Daisy","Dakota","Dale","Dallas","Dallin","Dalton","Damaris","Dameon","Damian","Damien","Damion","Damon","Dan","Dana","Dandre","Dane","Dangelo","Danial","Daniela","Daniella","Danielle","Danika","Dannie","Danny","Dante","Danyka","Daphne","Daphnee","Daphney","Darby","Daren","Darian","Dariana","Darien","Dario","Darion","Darius","Darlene","Daron","Darrel","Darrell","Darren","Darrick","Darrin","Darrion","Darron","Darryl","Darwin","Daryl","Dashawn","Dasia","Dave","David","Davin","Davion","Davon","Davonte","Dawn","Dawson","Dax","Dayana","Dayna","Dayne","Dayton","Dean","Deangelo","Deanna","Deborah","Declan","Dedric","Dedrick","Dee","Deion","Deja","Dejah","Dejon","Dejuan","Delaney","Delbert","Delfina","Delia","Delilah","Dell","Della","Delmer","Delores","Delpha","Delphia","Delphine","Delta","Demarco","Demarcus","Demario","Demetris","Demetrius","Demond","Dena","Denis","Dennis","Deon","Deondre","Deontae","Deonte","Dereck","Derek","Derick","Deron","Derrick","Deshaun","Deshawn","Desiree","Desmond","Dessie","Destany","Destin","Destinee","Destiney","Destini","Destiny","Devan","Devante","Deven","Devin","Devon","Devonte","Devyn","Dewayne","Dewitt","Dexter","Diamond","Diana","Dianna","Diego","Dillan","Dillon","Dimitri","Dina","Dino","Dion","Dixie","Dock","Dolly","Dolores","Domenic","Domenica","Domenick","Domenico","Domingo","Dominic","Dominique","Don","Donald","Donato","Donavon","Donna","Donnell","Donnie","Donny","Dora","Dorcas","Dorian","Doris","Dorothea","Dorothy","Dorris","Dortha","Dorthy","Doug","Douglas","Dovie","Doyle","Drake","Drew","Duane","Dudley","Dulce","Duncan","Durward","Dustin","Dusty","Dwight","Dylan","Earl","Earlene","Earline","Earnest","Earnestine","Easter","Easton","Ebba","Ebony","Ed","Eda","Edd","Eddie","Eden","Edgar","Edgardo","Edison","Edmond","Edmund","Edna","Eduardo","Edward","Edwardo","Edwin","Edwina","Edyth","Edythe","Effie","Efrain","Efren","Eileen","Einar","Eino","Eladio","Elaina","Elbert","Elda","Eldon","Eldora","Eldred","Eldridge","Eleanora","Eleanore","Eleazar","Electa","Elena","Elenor","Elenora","Eleonore","Elfrieda","Eli","Elian","Eliane","Elias","Eliezer","Elijah","Elinor","Elinore","Elisa","Elisabeth","Elise","Eliseo","Elisha","Elissa","Eliza","Elizabeth","Ella","Ellen","Ellie","Elliot","Elliott","Ellis","Ellsworth","Elmer","Elmira","Elmo","Elmore","Elna","Elnora","Elody","Eloisa","Eloise","Elouise","Eloy","Elroy","Elsa","Else","Elsie","Elta","Elton","Elva","Elvera","Elvie","Elvis","Elwin","Elwyn","Elyse","Elyssa","Elza","Emanuel","Emelia","Emelie","Emely","Emerald","Emerson","Emery","Emie","Emil","Emile","Emilia","Emiliano","Emilie","Emilio","Emily","Emma","Emmalee","Emmanuel","Emmanuelle","Emmet","Emmett","Emmie","Emmitt","Emmy","Emory","Ena","Enid","Enoch","Enola","Enos","Enrico","Enrique","Ephraim","Era","Eriberto","Eric","Erica","Erich","Erick","Ericka","Erik","Erika","Erin","Erling","Erna","Ernest","Ernestina","Ernestine","Ernesto","Ernie","Ervin","Erwin","Eryn","Esmeralda","Esperanza","Esta","Esteban","Estefania","Estel","Estell","Estella","Estelle","Estevan","Esther","Estrella","Etha","Ethan","Ethel","Ethelyn","Ethyl","Ettie","Eudora","Eugene","Eugenia","Eula","Eulah","Eulalia","Euna","Eunice","Eusebio","Eva","Evalyn","Evan","Evangeline","Evans","Eve","Eveline","Evelyn","Everardo","Everett","Everette","Evert","Evie","Ewald","Ewell","Ezekiel","Ezequiel","Ezra","Fabian","Fabiola","Fae","Fannie","Fanny","Fatima","Faustino","Fausto","Favian","Fay","Faye","Federico","Felicia","Felicita","Felicity","Felipa","Felipe","Felix","Felton","Fermin","Fern","Fernando","Ferne","Fidel","Filiberto","Filomena","Finn","Fiona","Flavie","Flavio","Fleta","Fletcher","Flo","Florence","Florencio","Florian","Florida","Florine","Flossie","Floy","Floyd","Ford","Forest","Forrest","Foster","Frances","Francesca","Francesco","Francis","Francisca","Francisco","Franco","Frank","Frankie","Franz","Fred","Freda","Freddie","Freddy","Frederic","Frederick","Frederik","Frederique","Fredrick","Fredy","Freeda","Freeman","Freida","Frida","Frieda","Friedrich","Fritz","Furman","Gabe","Gabriel","Gabriella","Gabrielle","Gaetano","Gage","Gail","Gardner","Garett","Garfield","Garland","Garnet","Garnett","Garret","Garrett","Garrick","Garrison","Garry","Garth","Gaston","Gavin","Gayle","Gene","General","Genesis","Genevieve","Gennaro","Genoveva","Geo","Geoffrey","George","Georgette","Georgiana","Georgianna","Geovanni","Geovanny","Geovany","Gerald","Geraldine","Gerard","Gerardo","Gerda","Gerhard","Germaine","German","Gerry","Gerson","Gertrude","Gia","Gianni","Gideon","Gilbert","Gilberto","Gilda","Giles","Gillian","Gina","Gino","Giovani","Giovanna","Giovanni","Giovanny","Gisselle","Giuseppe","Gladyce","Gladys","Glen","Glenda","Glenna","Glennie","Gloria","Godfrey","Golda","Golden","Gonzalo","Gordon","Grace","Gracie","Graciela","Grady","Graham","Grant","Granville","Grayce","Grayson","Green","Greg","Gregg","Gregoria","Gregorio","Gregory","Greta","Gretchen","Greyson","Griffin","Grover","Guadalupe","Gudrun","Guido","Guillermo","Guiseppe","Gunnar","Gunner","Gus","Gussie","Gust","Gustave","Guy","Gwen","Gwendolyn","Hadley","Hailee","Hailey","Hailie","Hal","Haleigh","Haley","Halie","Halle","Hallie","Hank","Hanna","Hannah","Hans","Hardy","Harley","Harmon","Harmony","Harold","Harrison","Harry","Harvey","Haskell","Hassan","Hassie","Hattie","Haven","Hayden","Haylee","Hayley","Haylie","Hazel","Hazle","Heath","Heather","Heaven","Heber","Hector","Heidi","Helen","Helena","Helene","Helga","Hellen","Helmer","Heloise","Henderson","Henri","Henriette","Henry","Herbert","Herman","Hermann","Hermina","Herminia","Herminio","Hershel","Herta","Hertha","Hester","Hettie","Hilario","Hilbert","Hilda","Hildegard","Hillard","Hillary","Hilma","Hilton","Hipolito","Hiram","Hobart","Holden","Hollie","Hollis","Holly","Hope","Horace","Horacio","Hortense","Hosea","Houston","Howard","Howell","Hoyt","Hubert","Hudson","Hugh","Hulda","Humberto","Hunter","Hyman","Ian","Ibrahim","Icie","Ida","Idell","Idella","Ignacio","Ignatius","Ike","Ila","Ilene","Iliana","Ima","Imani","Imelda","Immanuel","Imogene","Ines","Irma","Irving","Irwin","Isaac","Isabel","Isabell","Isabella","Isabelle","Isac","Isadore","Isai","Isaiah","Isaias","Isidro","Ismael","Isobel","Isom","Israel","Issac","Itzel","Iva","Ivah","Ivory","Ivy","Izabella","Izaiah","Jabari","Jace","Jacey","Jacinthe","Jacinto","Jack","Jackeline","Jackie","Jacklyn","Jackson","Jacky","Jaclyn","Jacquelyn","Jacques","Jacynthe","Jada","Jade","Jaden","Jadon","Jadyn","Jaeden","Jaida","Jaiden","Jailyn","Jaime","Jairo","Jakayla","Jake","Jakob","Jaleel","Jalen","Jalon","Jalyn","Jamaal","Jamal","Jamar","Jamarcus","Jamel","Jameson","Jamey","Jamie","Jamil","Jamir","Jamison","Jammie","Jan","Jana","Janae","Jane","Janelle","Janessa","Janet","Janice","Janick","Janie","Janis","Janiya","Jannie","Jany","Jaquan","Jaquelin","Jaqueline","Jared","Jaren","Jarod","Jaron","Jarred","Jarrell","Jarret","Jarrett","Jarrod","Jarvis","Jasen","Jasmin","Jason","Jasper","Jaunita","Javier","Javon","Javonte","Jay","Jayce","Jaycee","Jayda","Jayde","Jayden","Jaydon","Jaylan","Jaylen","Jaylin","Jaylon","Jayme","Jayne","Jayson","Jazlyn","Jazmin","Jazmyn","Jazmyne","Jean","Jeanette","Jeanie","Jeanne","Jed","Jedediah","Jedidiah","Jeff","Jefferey","Jeffery","Jeffrey","Jeffry","Jena","Jenifer","Jennie","Jennifer","Jennings","Jennyfer","Jensen","Jerad","Jerald","Jeramie","Jeramy","Jerel","Jeremie","Jeremy","Jermain","Jermaine","Jermey","Jerod","Jerome","Jeromy","Jerrell","Jerrod","Jerrold","Jerry","Jess","Jesse","Jessica","Jessie","Jessika","Jessy","Jessyca","Jesus","Jett","Jettie","Jevon","Jewel","Jewell","Jillian","Jimmie","Jimmy","Jo","Joan","Joana","Joanie","Joanne","Joannie","Joanny","Joany","Joaquin","Jocelyn","Jodie","Jody","Joe","Joel","Joelle","Joesph","Joey","Johan","Johann","Johanna","Johathan","John","Johnathan","Johnathon","Johnnie","Johnny","Johnpaul","Johnson","Jolie","Jon","Jonas","Jonatan","Jonathan","Jonathon","Jordan","Jordane","Jordi","Jordon","Jordy","Jordyn","Jorge","Jose","Josefa","Josefina","Joseph","Josephine","Josh","Joshua","Joshuah","Josiah","Josiane","Josianne","Josie","Josue","Jovan","Jovani","Jovanny","Jovany","Joy","Joyce","Juana","Juanita","Judah","Judd","Jude","Judge","Judson","Judy","Jules","Julia","Julian","Juliana","Julianne","Julie","Julien","Juliet","Julio","Julius","June","Junior","Junius","Justen","Justice","Justina","Justine","Juston","Justus","Justyn","Juvenal","Juwan","Kacey","Kaci","Kacie","Kade","Kaden","Kadin","Kaela","Kaelyn","Kaia","Kailee","Kailey","Kailyn","Kaitlin","Kaitlyn","Kale","Kaleb","Kaleigh","Kaley","Kali","Kallie","Kameron","Kamille","Kamren","Kamron","Kamryn","Kane","Kara","Kareem","Karelle","Karen","Kari","Kariane","Karianne","Karina","Karine","Karl","Karlee","Karley","Karli","Karlie","Karolann","Karson","Kasandra","Kasey","Kassandra","Katarina","Katelin","Katelyn","Katelynn","Katharina","Katherine","Katheryn","Kathleen","Kathlyn","Kathryn","Kathryne","Katlyn","Katlynn","Katrina","Katrine","Kattie","Kavon","Kay","Kaya","Kaycee","Kayden","Kayla","Kaylah","Kaylee","Kayleigh","Kayley","Kayli","Kaylie","Kaylin","Keagan","Keanu","Keara","Keaton","Keegan","Keeley","Keely","Keenan","Keira","Keith","Kellen","Kelley","Kelli","Kellie","Kelly","Kelsi","Kelsie","Kelton","Kelvin","Ken","Kendall","Kendra","Kendrick","Kenna","Kennedi","Kennedy","Kenneth","Kennith","Kenny","Kenton","Kenya","Kenyatta","Kenyon","Keon","Keshaun","Keshawn","Keven","Kevin","Kevon","Keyon","Keyshawn","Khalid","Khalil","Kian","Kiana","Kianna","Kiara","Kiarra","Kiel","Kiera","Kieran","Kiley","Kim","Kimberly","King","Kip","Kira","Kirk","Kirsten","Kirstin","Kitty","Kobe","Koby","Kody","Kolby","Kole","Korbin","Korey","Kory","Kraig","Kris","Krista","Kristian","Kristin","Kristina","Kristofer","Kristoffer","Kristopher","Kristy","Krystal","Krystel","Krystina","Kurt","Kurtis","Kyla","Kyle","Kylee","Kyleigh","Kyler","Kylie","Kyra","Lacey","Lacy","Ladarius","Lafayette","Laila","Laisha","Lamar","Lambert","Lamont","Lance","Landen","Lane","Laney","Larissa","Laron","Larry","Larue","Laura","Laurel","Lauren","Laurence","Lauretta","Lauriane","Laurianne","Laurie","Laurine","Laury","Lauryn","Lavada","Lavern","Laverna","Laverne","Lavina","Lavinia","Lavon","Lavonne","Lawrence","Lawson","Layla","Layne","Lazaro","Lea","Leann","Leanna","Leanne","Leatha","Leda","Lee","Leif","Leila","Leilani","Lela","Lelah","Leland","Lelia","Lempi","Lemuel","Lenna","Lennie","Lenny","Lenora","Lenore","Leo","Leola","Leon","Leonard","Leonardo","Leone","Leonel","Leonie","Leonor","Leonora","Leopold","Leopoldo","Leora","Lera","Lesley","Leslie","Lesly","Lessie","Lester","Leta","Letha","Letitia","Levi","Lew","Lewis","Lexi","Lexie","Lexus","Lia","Liam","Liana","Libbie","Libby","Lila","Lilian","Liliana","Liliane","Lilla","Lillian","Lilliana","Lillie","Lilly","Lily","Lilyan","Lina","Lincoln","Linda","Lindsay","Lindsey","Linnea","Linnie","Linwood","Lionel","Lisa","Lisandro","Lisette","Litzy","Liza","Lizeth","Lizzie","Llewellyn","Lloyd","Logan","Lois","Lola","Lolita","Loma","Lon","London","Lonie","Lonnie","Lonny","Lonzo","Lora","Loraine","Loren","Lorena","Lorenz","Lorenza","Lorenzo","Lori","Lorine","Lorna","Lottie","Lou","Louie","Louisa","Lourdes","Louvenia","Lowell","Loy","Loyal","Loyce","Lucas","Luciano","Lucie","Lucienne","Lucile","Lucinda","Lucio","Lucious","Lucius","Lucy","Ludie","Ludwig","Lue","Luella","Luigi","Luis","Luisa","Lukas","Lula","Lulu","Luna","Lupe","Lura","Lurline","Luther","Luz","Lyda","Lydia","Lyla","Lynn","Lyric","Lysanne","Mabel","Mabelle","Mable","Mac","Macey","Maci","Macie","Mack","Mackenzie","Macy","Madaline","Madalyn","Maddison","Madeline","Madelyn","Madelynn","Madge","Madie","Madilyn","Madisen","Madison","Madisyn","Madonna","Madyson","Mae","Maegan","Maeve","Mafalda","Magali","Magdalen","Magdalena","Maggie","Magnolia","Magnus","Maia","Maida","Maiya","Major","Makayla","Makenna","Makenzie","Malachi","Malcolm","Malika","Malinda","Mallie","Mallory","Malvina","Mandy","Manley","Manuel","Manuela","Mara","Marc","Marcel","Marcelina","Marcelino","Marcella","Marcelle","Marcellus","Marcelo","Marcia","Marco","Marcos","Marcus","Margaret","Margarete","Margarett","Margaretta","Margarette","Margarita","Marge","Margie","Margot","Margret","Marguerite","Maria","Mariah","Mariam","Marian","Mariana","Mariane","Marianna","Marianne","Mariano","Maribel","Marie","Mariela","Marielle","Marietta","Marilie","Marilou","Marilyne","Marina","Mario","Marion","Marisa","Marisol","Maritza","Marjolaine","Marjorie","Marjory","Mark","Markus","Marlee","Marlen","Marlene","Marley","Marlin","Marlon","Marques","Marquis","Marquise","Marshall","Marta","Martin","Martina","Martine","Marty","Marvin","Mary","Maryam","Maryjane","Maryse","Mason","Mateo","Mathew","Mathias","Mathilde","Matilda","Matilde","Matt","Matteo","Mattie","Maud","Maude","Maudie","Maureen","Maurice","Mauricio","Maurine","Maverick","Mavis","Max","Maxie","Maxime","Maximilian","Maximillia","Maximillian","Maximo","Maximus","Maxine","Maxwell","May","Maya","Maybell","Maybelle","Maye","Maymie","Maynard","Mayra","Mazie","Mckayla","Mckenna","Mckenzie","Meagan","Meaghan","Meda","Megane","Meggie","Meghan","Mekhi","Melany","Melba","Melisa","Melissa","Mellie","Melody","Melvin","Melvina","Melyna","Melyssa","Mercedes","Meredith","Merl","Merle","Merlin","Merritt","Mertie","Mervin","Meta","Mia","Micaela","Micah","Michael","Michaela","Michale","Micheal","Michel","Michele","Michelle","Miguel","Mikayla","Mike","Mikel","Milan","Miles","Milford","Miller","Millie","Milo","Milton","Mina","Minerva","Minnie","Miracle","Mireille","Mireya","Misael","Missouri","Misty","Mitchel","Mitchell","Mittie","Modesta","Modesto","Mohamed","Mohammad","Mohammed","Moises","Mollie","Molly","Mona","Monica","Monique","Monroe","Monserrat","Monserrate","Montana","Monte","Monty","Morgan","Moriah","Morris","Mortimer","Morton","Mose","Moses","Moshe","Mossie","Mozell","Mozelle","Muhammad","Muriel","Murl","Murphy","Murray","Mustafa","Mya","Myah","Mylene","Myles","Myra","Myriam","Myrl","Myrna","Myron","Myrtice","Myrtie","Myrtis","Myrtle","Nadia","Nakia","Name","Nannie","Naomi","Naomie","Napoleon","Narciso","Nash","Nasir","Nat","Natalia","Natalie","Natasha","Nathan","Nathanael","Nathanial","Nathaniel","Nathen","Nayeli","Neal","Ned","Nedra","Neha","Neil","Nelda","Nella","Nelle","Nellie","Nels","Nelson","Neoma","Nestor","Nettie","Neva","Newell","Newton","Nia","Nicholas","Nicholaus","Nichole","Nick","Nicklaus","Nickolas","Nico","Nicola","Nicolas","Nicole","Nicolette","Nigel","Nikita","Nikki","Nikko","Niko","Nikolas","Nils","Nina","Noah","Noble","Noe","Noel","Noelia","Noemi","Noemie","Noemy","Nola","Nolan","Nona","Nora","Norbert","Norberto","Norene","Norma","Norris","Norval","Norwood","Nova","Novella","Nya","Nyah","Nyasia","Obie","Oceane","Ocie","Octavia","Oda","Odell","Odessa","Odie","Ofelia","Okey","Ola","Olaf","Ole","Olen","Oleta","Olga","Olin","Oliver","Ollie","Oma","Omari","Omer","Ona","Onie","Opal","Ophelia","Ora","Oral","Oran","Oren","Orie","Orin","Orion","Orland","Orlando","Orlo","Orpha","Orrin","Orval","Orville","Osbaldo","Osborne","Oscar","Osvaldo","Oswald","Oswaldo","Otha","Otho","Otilia","Otis","Ottilie","Ottis","Otto","Ova","Owen","Ozella","Pablo","Paige","Palma","Pamela","Pansy","Paolo","Paris","Parker","Pascale","Pasquale","Pat","Patience","Patricia","Patrick","Patsy","Pattie","Paul","Paula","Pauline","Paxton","Payton","Pearl","Pearlie","Pearline","Pedro","Peggie","Penelope","Percival","Percy","Perry","Pete","Peter","Petra","Peyton","Philip","Phoebe","Phyllis","Pierce","Pierre","Pietro","Pink","Pinkie","Piper","Polly","Porter","Precious","Presley","Preston","Price","Prince","Princess","Priscilla","Providenci","Prudence","Queen","Queenie","Quentin","Quincy","Quinn","Quinten","Quinton","Rachael","Rachel","Rachelle","Rae","Raegan","Rafael","Rafaela","Raheem","Rahsaan","Rahul","Raina","Raleigh","Ralph","Ramiro","Ramon","Ramona","Randal","Randall","Randi","Randy","Ransom","Raoul","Raphael","Raphaelle","Raquel","Rashad","Rashawn","Rasheed","Raul","Raven","Ray","Raymond","Raymundo","Reagan","Reanna","Reba","Rebeca","Rebecca","Rebeka","Rebekah","Reece","Reed","Reese","Regan","Reggie","Reginald","Reid","Reilly","Reina","Reinhold","Remington","Rene","Renee","Ressie","Reta","Retha","Retta","Reuben","Reva","Rex","Rey","Reyes","Reymundo","Reyna","Reynold","Rhea","Rhett","Rhianna","Rhiannon","Rhoda","Ricardo","Richard","Richie","Richmond","Rick","Rickey","Rickie","Ricky","Rico","Rigoberto","Riley","Rita","River","Robb","Robbie","Robert","Roberta","Roberto","Robin","Robyn","Rocio","Rocky","Rod","Roderick","Rodger","Rodolfo","Rodrick","Rodrigo","Roel","Rogelio","Roger","Rogers","Rolando","Rollin","Roma","Romaine","Roman","Ron","Ronaldo","Ronny","Roosevelt","Rory","Rosa","Rosalee","Rosalia","Rosalind","Rosalinda","Rosalyn","Rosamond","Rosanna","Rosario","Roscoe","Rose","Rosella","Roselyn","Rosemarie","Rosemary","Rosendo","Rosetta","Rosie","Rosina","Roslyn","Ross","Rossie","Rowan","Rowena","Rowland","Roxane","Roxanne","Roy","Royal","Royce","Rozella","Ruben","Rubie","Ruby","Rubye","Rudolph","Rudy","Rupert","Russ","Russel","Russell","Rusty","Ruth","Ruthe","Ruthie","Ryan","Ryann","Ryder","Rylan","Rylee","Ryleigh","Ryley","Sabina","Sabrina","Sabryna","Sadie","Sadye","Sage","Saige","Sallie","Sally","Salma","Salvador","Salvatore","Sam","Samanta","Samantha","Samara","Samir","Sammie","Sammy","Samson","Sandra","Sandrine","Sandy","Sanford","Santa","Santiago","Santina","Santino","Santos","Sarah","Sarai","Sarina","Sasha","Saul","Savanah","Savanna","Savannah","Savion","Scarlett","Schuyler","Scot","Scottie","Scotty","Seamus","Sean","Sebastian","Sedrick","Selena","Selina","Selmer","Serena","Serenity","Seth","Shad","Shaina","Shakira","Shana","Shane","Shanel","Shanelle","Shania","Shanie","Shaniya","Shanna","Shannon","Shanny","Shanon","Shany","Sharon","Shaun","Shawn","Shawna","Shaylee","Shayna","Shayne","Shea","Sheila","Sheldon","Shemar","Sheridan","Sherman","Sherwood","Shirley","Shyann","Shyanne","Sibyl","Sid","Sidney","Sienna","Sierra","Sigmund","Sigrid","Sigurd","Silas","Sim","Simeon","Simone","Sincere","Sister","Skye","Skyla","Skylar","Sofia","Soledad","Solon","Sonia","Sonny","Sonya","Sophia","Sophie","Spencer","Stacey","Stacy","Stan","Stanford","Stanley","Stanton","Stefan","Stefanie","Stella","Stephan","Stephania","Stephanie","Stephany","Stephen","Stephon","Sterling","Steve","Stevie","Stewart","Stone","Stuart","Summer","Sunny","Susan","Susana","Susanna","Susie","Suzanne","Sven","Syble","Sydnee","Sydney","Sydni","Sydnie","Sylvan","Sylvester","Sylvia","Tabitha","Tad","Talia","Talon","Tamara","Tamia","Tania","Tanner","Tanya","Tara","Taryn","Tate","Tatum","Tatyana","Taurean","Tavares","Taya","Taylor","Teagan","Ted","Telly","Terence","Teresa","Terrance","Terrell","Terrence","Terrill","Terry","Tess","Tessie","Tevin","Thad","Thaddeus","Thalia","Thea","Thelma","Theo","Theodora","Theodore","Theresa","Therese","Theresia","Theron","Thomas","Thora","Thurman","Tia","Tiana","Tianna","Tiara","Tierra","Tiffany","Tillman","Timmothy","Timmy","Timothy","Tina","Tito","Titus","Tobin","Toby","Tod","Tom","Tomas","Tomasa","Tommie","Toney","Toni","Tony","Torey","Torrance","Torrey","Toy","Trace","Tracey","Tracy","Travis","Travon","Tre","Tremaine","Tremayne","Trent","Trenton","Tressa","Tressie","Treva","Trever","Trevion","Trevor","Trey","Trinity","Trisha","Tristian","Tristin","Triston","Troy","Trudie","Trycia","Trystan","Turner","Twila","Tyler","Tyra","Tyree","Tyreek","Tyrel","Tyrell","Tyrese","Tyrique","Tyshawn","Tyson","Ubaldo","Ulices","Ulises","Una","Unique","Urban","Uriah","Uriel","Ursula","Vada","Valentin","Valentina","Valentine","Valerie","Vallie","Van","Vance","Vanessa","Vaughn","Veda","Velda","Vella","Velma","Velva","Vena","Verda","Verdie","Vergie","Verla","Verlie","Vern","Verna","Verner","Vernice","Vernie","Vernon","Verona","Veronica","Vesta","Vicenta","Vicente","Vickie","Vicky","Victor","Victoria","Vida","Vidal","Vilma","Vince","Vincent","Vincenza","Vincenzo","Vinnie","Viola","Violet","Violette","Virgie","Virgil","Virginia","Virginie","Vita","Vito","Viva","Vivian","Viviane","Vivianne","Vivien","Vivienne","Vladimir","Wade","Waino","Waldo","Walker","Wallace","Walter","Walton","Wanda","Ward","Warren","Watson","Wava","Waylon","Wayne","Webster","Weldon","Wellington","Wendell","Wendy","Werner","Westley","Weston","Whitney","Wilber","Wilbert","Wilburn","Wiley","Wilford","Wilfred","Wilfredo","Wilfrid","Wilhelm","Wilhelmine","Will","Willa","Willard","William","Willie","Willis","Willow","Willy","Wilma","Wilmer","Wilson","Wilton","Winfield","Winifred","Winnifred","Winona","Winston","Woodrow","Wyatt","Wyman","Xander","Xavier","Xzavier","Yadira","Yasmeen","Yasmin","Yasmine","Yazmin","Yesenia","Yessenia","Yolanda","Yoshiko","Yvette","Yvonne","Zachariah","Zachary","Zachery","Zack","Zackary","Zackery","Zakary","Zander","Zane","Zaria","Zechariah","Zelda","Zella","Zelma","Zena","Zetta","Zion","Zita","Zoe","Zoey","Zoie","Zoila","Zola","Zora","Zula"],female:["Ada","Adrienne","Agnes","Alberta","Alexandra","Alexis","Alice","Alicia","Alison","Allison","Alma","Alyssa","Amanda","Amber","Amelia","Amy","Ana","Andrea","Angel","Angela","Angelica","Angelina","Angie","Anita","Ann","Anna","Anne","Annette","Annie","Antoinette","Antonia","April","Arlene","Ashley","Audrey","Barbara","Beatrice","Becky","Belinda","Bernadette","Bernice","Bertha","Bessie","Beth","Bethany","Betsy","Betty","Beulah","Beverly","Billie","Blanca","Blanche","Bobbie","Bonnie","Brandi","Brandy","Brenda","Bridget","Brittany","Brooke","Camille","Candace","Candice","Carla","Carmen","Carol","Carole","Caroline","Carolyn","Carrie","Casey","Cassandra","Catherine","Cathy","Cecelia","Cecilia","Celia","Charlene","Charlotte","Chelsea","Cheryl","Christie","Christina","Christine","Christy","Cindy","Claire","Clara","Claudia","Colleen","Connie","Constance","Cora","Courtney","Cristina","Crystal","Cynthia","Daisy","Dana","Danielle","Darla","Darlene","Dawn","Deanna","Debbie","Deborah","Debra","Delia","Della","Delores","Denise","Desiree","Diana","Diane","Dianna","Dianne","Dixie","Dolores","Donna","Dora","Doreen","Doris","Dorothy","Ebony","Edith","Edna","Eileen","Elaine","Eleanor","Elena","Elisa","Elizabeth","Ella","Ellen","Eloise","Elsa","Elsie","Elvira","Emily","Emma","Erica","Erika","Erin","Erma","Ernestine","Essie","Estelle","Esther","Ethel","Eula","Eunice","Eva","Evelyn","Faith","Fannie","Faye","Felicia","Flora","Florence","Frances","Francis","Freda","Gail","Gayle","Geneva","Genevieve","Georgia","Geraldine","Gertrude","Gina","Ginger","Gladys","Glenda","Gloria","Grace","Gretchen","Guadalupe","Gwen","Gwendolyn","Hannah","Harriet","Hattie","Hazel","Heather","Heidi","Helen","Henrietta","Hilda","Holly","Hope","Ida","Inez","Irene","Iris","Irma","Isabel","Jackie","Jacqueline","Jacquelyn","Jaime","Jamie","Jan","Jana","Jane","Janet","Janice","Janie","Janis","Jasmine","Jean","Jeanette","Jeanne","Jeannette","Jeannie","Jenna","Jennie","Jennifer","Jenny","Jessica","Jessie","Jill","Jo","Joan","Joann","Joanna","Joanne","Jodi","Jody","Johanna","Johnnie","Josefina","Josephine","Joy","Joyce","Juana","Juanita","Judith","Judy","Julia","Julie","June","Kara","Karen","Kari","Karla","Kate","Katherine","Kathleen","Kathryn","Kathy","Katie","Katrina","Kay","Kayla","Kelley","Kelli","Kellie","Kelly","Kendra","Kerry","Kim","Kimberly","Krista","Kristen","Kristi","Kristie","Kristin","Kristina","Kristine","Kristy","Krystal","Lana","Latoya","Laura","Lauren","Laurie","Laverne","Leah","Lee","Leigh","Lela","Lena","Leona","Leslie","Leticia","Lila","Lillian","Lillie","Linda","Lindsay","Lindsey","Lisa","Lois","Lola","Lora","Lorena","Lorene","Loretta","Lori","Lorraine","Louise","Lucia","Lucille","Lucy","Lula","Luz","Lydia","Lynda","Lynette","Lynn","Lynne","Mabel","Mable","Madeline","Mae","Maggie","Mamie","Mandy","Marcella","Marcia","Margaret","Margarita","Margie","Marguerite","Maria","Marian","Marianne","Marie","Marilyn","Marion","Marjorie","Marlene","Marsha","Marta","Martha","Mary","Maryann","Mattie","Maureen","Maxine","May","Megan","Meghan","Melanie","Melba","Melinda","Melissa","Melody","Mercedes","Meredith","Michele","Michelle","Mildred","Mindy","Minnie","Miranda","Miriam","Misty","Molly","Mona","Monica","Monique","Muriel","Myra","Myrtle","Nadine","Nancy","Naomi","Natalie","Natasha","Nellie","Nettie","Nichole","Nicole","Nina","Nora","Norma","Olga","Olive","Olivia","Ollie","Opal","Ora","Pam","Pamela","Pat","Patricia","Patsy","Patti","Patty","Paula","Paulette","Pauline","Pearl","Peggy","Penny","Phyllis","Priscilla","Rachael","Rachel","Ramona","Raquel","Rebecca","Regina","Renee","Rhonda","Rita","Roberta","Robin","Robyn","Rochelle","Rosa","Rosalie","Rose","Rosemarie","Rosemary","Rosie","Roxanne","Ruby","Ruth","Sabrina","Sadie","Sally","Samantha","Sandra","Sandy","Sara","Sarah","Shannon","Shari","Sharon","Shawna","Sheila","Shelia","Shelley","Shelly","Sheri","Sherri","Sherry","Sheryl","Shirley","Silvia","Sonia","Sonja","Sonya","Sophia","Sophie","Stacey","Stacy","Stella","Stephanie","Sue","Susan","Susie","Suzanne","Sylvia","Tabitha","Tamara","Tami","Tammy","Tanya","Tara","Tasha","Teresa","Teri","Terri","Terry","Thelma","Theresa","Tiffany","Tina","Toni","Tonya","Tracey","Traci","Tracy","Tricia","Valerie","Vanessa","Velma","Vera","Verna","Veronica","Vicki","Vickie","Vicky","Victoria","Viola","Violet","Virginia","Vivian","Wanda","Wendy","Whitney","Willie","Wilma","Winifred","Yolanda","Yvette","Yvonne"],male:["Aaron","Abel","Abraham","Adam","Adrian","Al","Alan","Albert","Alberto","Alejandro","Alex","Alexander","Alfonso","Alfred","Alfredo","Allan","Allen","Alonzo","Alton","Alvin","Amos","Andre","Andres","Andrew","Andy","Angel","Angelo","Anthony","Antonio","Archie","Armando","Arnold","Arthur","Arturo","Aubrey","Austin","Barry","Ben","Benjamin","Bennie","Benny","Bernard","Bert","Bill","Billy","Blake","Bob","Bobby","Boyd","Brad","Bradford","Bradley","Brandon","Brendan","Brent","Brett","Brian","Bruce","Bryan","Bryant","Byron","Caleb","Calvin","Cameron","Carl","Carlos","Carlton","Carroll","Cary","Casey","Cecil","Cedric","Cesar","Chad","Charles","Charlie","Chester","Chris","Christian","Christopher","Clarence","Clark","Claude","Clay","Clayton","Clifford","Clifton","Clint","Clinton","Clyde","Cody","Colin","Conrad","Corey","Cornelius","Cory","Courtney","Craig","Curtis","Dale","Dallas","Damon","Dan","Dana","Daniel","Danny","Darin","Darnell","Darrel","Darrell","Darren","Darrin","Darryl","Daryl","Dave","David","Dean","Delbert","Dennis","Derek","Derrick","Devin","Dewey","Dexter","Domingo","Dominic","Dominick","Don","Donald","Donnie","Doug","Douglas","Doyle","Drew","Duane","Dustin","Dwayne","Dwight","Earl","Earnest","Ed","Eddie","Edgar","Edmond","Edmund","Eduardo","Edward","Edwin","Elbert","Elias","Elijah","Ellis","Elmer","Emanuel","Emilio","Emmett","Enrique","Eric","Erick","Erik","Ernest","Ernesto","Ervin","Eugene","Evan","Everett","Felipe","Felix","Fernando","Floyd","Forrest","Francis","Francisco","Frank","Frankie","Franklin","Fred","Freddie","Frederick","Fredrick","Gabriel","Garrett","Garry","Gary","Gene","Geoffrey","George","Gerald","Gerard","Gerardo","Gilbert","Gilberto","Glen","Glenn","Gordon","Grady","Grant","Greg","Gregg","Gregory","Guadalupe","Guillermo","Gustavo","Guy","Harold","Harry","Harvey","Hector","Henry","Herbert","Herman","Homer","Horace","Howard","Hubert","Hugh","Hugo","Ian","Ignacio","Ira","Irvin","Irving","Isaac","Ismael","Israel","Ivan","Jack","Jackie","Jacob","Jaime","Jake","James","Jamie","Jan","Jared","Jason","Javier","Jay","Jean","Jeff","Jeffery","Jeffrey","Jerald","Jeremiah","Jeremy","Jermaine","Jerome","Jerry","Jesse","Jessie","Jesus","Jim","Jimmie","Jimmy","Jody","Joe","Joel","Joey","John","Johnathan","Johnnie","Johnny","Jon","Jonathan","Jonathon","Jordan","Jorge","Jose","Joseph","Josh","Joshua","Juan","Julian","Julio","Julius","Justin","Karl","Keith","Kelly","Kelvin","Ken","Kenneth","Kenny","Kent","Kerry","Kevin","Kim","Kirk","Kristopher","Kurt","Kyle","Lamar","Lance","Larry","Laurence","Lawrence","Lee","Leland","Leo","Leon","Leonard","Leroy","Leslie","Lester","Levi","Lewis","Lionel","Lloyd","Lonnie","Loren","Lorenzo","Louis","Lowell","Lucas","Luis","Luke","Luther","Lyle","Lynn","Mack","Malcolm","Manuel","Marc","Marco","Marcos","Marcus","Mario","Marion","Mark","Marlon","Marshall","Martin","Marty","Marvin","Mathew","Matt","Matthew","Maurice","Max","Melvin","Merle","Michael","Micheal","Miguel","Mike","Milton","Mitchell","Morris","Moses","Myron","Nathan","Nathaniel","Neal","Neil","Nelson","Nicholas","Nick","Nicolas","Noah","Noel","Norman","Oliver","Omar","Orlando","Orville","Oscar","Otis","Owen","Pablo","Pat","Patrick","Paul","Pedro","Percy","Perry","Pete","Peter","Phil","Philip","Phillip","Preston","Rafael","Ralph","Ramiro","Ramon","Randal","Randall","Randolph","Randy","Raul","Ray","Raymond","Reginald","Rene","Rex","Ricardo","Richard","Rick","Rickey","Ricky","Robert","Roberto","Robin","Roderick","Rodney","Rodolfo","Rogelio","Roger","Roland","Rolando","Roman","Ron","Ronald","Ronnie","Roosevelt","Ross","Roy","Ruben","Rudolph","Rudy","Rufus","Russell","Ryan","Salvador","Salvatore","Sam","Sammy","Samuel","Santiago","Santos","Saul","Scott","Sean","Sergio","Seth","Shane","Shannon","Shaun","Shawn","Sheldon","Sherman","Sidney","Simon","Spencer","Stanley","Stephen","Steve","Steven","Stewart","Stuart","Sylvester","Taylor","Ted","Terence","Terrance","Terrell","Terrence","Terry","Theodore","Thomas","Tim","Timmy","Timothy","Toby","Todd","Tom","Tomas","Tommie","Tommy","Tony","Tracy","Travis","Trevor","Troy","Tyler","Tyrone","Van","Vernon","Victor","Vincent","Virgil","Wade","Wallace","Walter","Warren","Wayne","Wendell","Wesley","Wilbert","Wilbur","Wilfred","Willard","William","Willie","Willis","Wilson","Winston","Wm","Woodrow","Zachary"]},gender:["Agender","Androgyne","Androgynous","Bigender","Cis female","Cis male","Cis man","Cis woman","Cis","Cisgender female","Cisgender male","Cisgender man","Cisgender woman","Cisgender","Demi-boy","Demi-girl","Demi-man","Demi-woman","Demiflux","Demigender","F2M","FTM","Female to male trans man","Female to male transgender man","Female to male transsexual man","Female to male","Gender fluid","Gender neutral","Gender nonconforming","Gender questioning","Gender variant","Genderflux","Genderqueer","Hermaphrodite","Intersex man","Intersex person","Intersex woman","Intersex","M2F","MTF","Male to female trans woman","Male to female transgender woman","Male to female transsexual woman","Male to female","Man","Multigender","Neither","Neutrois","Non-binary","Omnigender","Other","Pangender","Polygender","T* man","T* woman","Trans female","Trans male","Trans man","Trans person","Trans woman","Trans","Transsexual female","Transsexual male","Transsexual man","Transsexual person","Transsexual woman","Transsexual","Transgender female","Transgender person","Transmasculine","Trigender","Two* person","Two-spirit person","Two-spirit","Woman","Xenogender"],job_area:["Solutions","Program","Brand","Security","Research","Marketing","Directives","Implementation","Integration","Functionality","Response","Paradigm","Tactics","Identity","Markets","Group","Division","Applications","Optimization","Operations","Infrastructure","Intranet","Communications","Web","Branding","Quality","Assurance","Mobility","Accounts","Data","Creative","Configuration","Accountability","Interactions","Factors","Usability","Metrics"],job_descriptor:["Lead","Senior","Direct","Corporate","Dynamic","Future","Product","National","Regional","District","Central","Global","Customer","Investor","International","Legacy","Forward","Internal","Human","Chief","Principal"],job_title_pattern:["{{person.jobDescriptor}} {{person.jobArea}} {{person.jobType}}"],job_type:["Supervisor","Associate","Executive","Liaison","Officer","Manager","Engineer","Specialist","Director","Coordinator","Administrator","Architect","Analyst","Designer","Planner","Orchestrator","Technician","Developer","Producer","Consultant","Assistant","Facilitator","Agent","Representative","Strategist"],last_name:{generic:["Abbott","Abernathy","Abshire","Adams","Altenwerth","Anderson","Ankunding","Armstrong","Auer","Aufderhar","Bahringer","Bailey","Balistreri","Barrows","Bartell","Bartoletti","Barton","Bashirian","Batz","Bauch","Baumbach","Bayer","Beahan","Beatty","Bechtelar","Becker","Bednar","Beer","Beier","Berge","Bergnaum","Bergstrom","Bernhard","Bernier","Bins","Blanda","Blick","Block","Bode","Boehm","Bogan","Bogisich","Borer","Bosco","Botsford","Boyer","Boyle","Bradtke","Brakus","Braun","Breitenberg","Brekke","Brown","Bruen","Buckridge","Carroll","Carter","Cartwright","Casper","Cassin","Champlin","Christiansen","Cole","Collier","Collins","Conn","Connelly","Conroy","Considine","Corkery","Cormier","Corwin","Cremin","Crist","Crona","Cronin","Crooks","Cruickshank","Cummerata","Cummings","D'Amore","Dach","Daniel","Dare","Daugherty","Davis","Deckow","Denesik","Dibbert","Dickens","Dicki","Dickinson","Dietrich","Donnelly","Dooley","Douglas","Doyle","DuBuque","Durgan","Ebert","Effertz","Emard","Emmerich","Erdman","Ernser","Fadel","Fahey","Farrell","Fay","Feeney","Feest","Feil","Ferry","Fisher","Flatley","Frami","Franecki","Franey","Friesen","Fritsch","Funk","Gerhold","Gerlach","Gibson","Gislason","Gleason","Gleichner","Glover","Goldner","Goodwin","Gorczany","Gottlieb","Goyette","Grady","Graham","Grant","Green","Greenfelder","Greenholt","Grimes","Gulgowski","Gusikowski","Gutkowski","Gutmann","Haag","Hackett","Hagenes","Hahn","Haley","Halvorson","Hamill","Hammes","Hand","Hane","Hansen","Harber","Harris","Hartmann","Harvey","Hauck","Hayes","Heaney","Heathcote","Hegmann","Heidenreich","Heller","Herman","Hermann","Hermiston","Herzog","Hessel","Hettinger","Hickle","Hilll","Hills","Hilpert","Hintz","Hirthe","Hodkiewicz","Hoeger","Homenick","Hoppe","Howe","Howell","Hudson","Huel","Huels","Hyatt","Jacobi","Jacobs","Jacobson","Jakubowski","Jaskolski","Jast","Jenkins","Jerde","Johns","Johnson","Johnston","Jones","Kassulke","Kautzer","Keebler","Keeling","Kemmer","Kerluke","Kertzmann","Kessler","Kiehn","Kihn","Kilback","King","Kirlin","Klein","Kling","Klocko","Koch","Koelpin","Koepp","Kohler","Konopelski","Koss","Kovacek","Kozey","Krajcik","Kreiger","Kris","Kshlerin","Kub","Kuhic","Kuhlman","Kuhn","Kulas","Kunde","Kunze","Kuphal","Kutch","Kuvalis","Labadie","Lakin","Lang","Langosh","Langworth","Larkin","Larson","Leannon","Lebsack","Ledner","Leffler","Legros","Lehner","Lemke","Lesch","Leuschke","Lind","Lindgren","Littel","Little","Lockman","Lowe","Lubowitz","Lueilwitz","Luettgen","Lynch","MacGyver","Macejkovic","Maggio","Mann","Mante","Marks","Marquardt","Marvin","Mayer","Mayert","McClure","McCullough","McDermott","McGlynn","McKenzie","McLaughlin","Medhurst","Mertz","Metz","Miller","Mills","Mitchell","Moen","Mohr","Monahan","Moore","Morar","Morissette","Mosciski","Mraz","Mueller","Muller","Murazik","Murphy","Murray","Nader","Nicolas","Nienow","Nikolaus","Nitzsche","Nolan","O'Connell","O'Conner","O'Hara","O'Keefe","O'Kon","O'Reilly","Oberbrunner","Okuneva","Olson","Ondricka","Orn","Ortiz","Osinski","Pacocha","Padberg","Pagac","Parisian","Parker","Paucek","Pfannerstill","Pfeffer","Pollich","Pouros","Powlowski","Predovic","Price","Prohaska","Prosacco","Purdy","Quigley","Quitzon","Rath","Ratke","Rau","Raynor","Reichel","Reichert","Reilly","Reinger","Rempel","Renner","Reynolds","Rice","Rippin","Ritchie","Robel","Roberts","Rodriguez","Rogahn","Rohan","Rolfson","Romaguera","Roob","Rosenbaum","Rowe","Ruecker","Runolfsdottir","Runolfsson","Runte","Russel","Rutherford","Ryan","Sanford","Satterfield","Sauer","Sawayn","Schaden","Schaefer","Schamberger","Schiller","Schimmel","Schinner","Schmeler","Schmidt","Schmitt","Schneider","Schoen","Schowalter","Schroeder","Schulist","Schultz","Schumm","Schuppe","Schuster","Senger","Shanahan","Shields","Simonis","Sipes","Skiles","Smith","Smitham","Spencer","Spinka","Sporer","Stamm","Stanton","Stark","Stehr","Steuber","Stiedemann","Stokes","Stoltenberg","Stracke","Streich","Stroman","Strosin","Swaniawski","Swift","Terry","Thiel","Thompson","Tillman","Torp","Torphy","Towne","Toy","Trantow","Tremblay","Treutel","Tromp","Turcotte","Turner","Ullrich","Upton","Vandervort","Veum","Volkman","Von","VonRueden","Waelchi","Walker","Walsh","Walter","Ward","Waters","Watsica","Weber","Wehner","Weimann","Weissnat","Welch","West","White","Wiegand","Wilderman","Wilkinson","Will","Williamson","Willms","Windler","Wintheiser","Wisoky","Wisozk","Witting","Wiza","Wolf","Wolff","Wuckert","Wunsch","Wyman","Yost","Yundt","Zboncak","Zemlak","Ziemann","Zieme","Zulauf"]},last_name_pattern:{generic:[{value:"{{person.last_name.generic}}",weight:95},{value:"{{person.last_name.generic}}-{{person.last_name.generic}}",weight:5}]},middle_name:{generic:["Addison","Alex","Anderson","Angel","Arden","August","Austin","Avery","Bailey","Billie","Blake","Bowie","Brooklyn","Cameron","Charlie","Corey","Dakota","Drew","Elliott","Ellis","Emerson","Finley","Gray","Greer","Harper","Hayden","Jaden","James","Jamie","Jordan","Jules","Kai","Kendall","Kennedy","Kyle","Leslie","Logan","London","Marlowe","Micah","Nico","Noah","North","Parker","Phoenix","Quinn","Reagan","Reese","Reign","Riley","River","Robin","Rory","Rowan","Ryan","Sage","Sasha","Sawyer","Shawn","Shiloh","Skyler","Taylor"],female:["Abigail","Adele","Alex","Alice","Alisha","Amber","Amelia","Amora","Anaïs","Angelou","Anika","Anise","Annabel","Anne","Aphrodite","Aretha","Arya","Ashton","Aster","Audrey","Avery","Bailee","Bay","Belle","Beth","Billie","Blair","Blaise","Blake","Blanche","Blue","Bree","Brielle","Brienne","Brooke","Caleen","Candice","Caprice","Carelyn","Caylen","Celine","Cerise","Cia","Claire","Claudia","Clementine","Coral","Coraline","Dahlia","Dakota","Dawn","Della","Demi","Denise","Denver","Devine","Devon","Diana","Dylan","Ebony","Eden","Eleanor","Elein","Elizabeth","Ellen","Elodie","Eloise","Ember","Emma","Erin","Eyre","Faith","Farrah","Fawn","Fayre","Fern","France","Francis","Frida","Genisis","Georgia","Grace","Gwen","Harley","Harper","Hazel","Helen","Hippolyta","Holly","Hope","Imani","Iowa","Ireland","Irene","Iris","Isa","Isla","Ivy","Jade","Jane","Jazz","Jean","Jess","Jett","Jo","Joan","Jolie","Jordan","Josie","Journey","Joy","Jules","Julien","Juliet","Juniper","Justice","Kali","Karma","Kat","Kate","Kennedy","Keva","Kylie","Lake","Lane","Lark","Layla","Lee","Leigh","Leona","Lexi","London","Lou","Louise","Love","Luna","Lux","Lynn","Lyric","Maddie","Mae","Marie","Matilda","Maude","Maybel","Meadow","Medusa","Mercy","Michelle","Mirabel","Monroe","Morgan","Nalia","Naomi","Nova","Olive","Paige","Parker","Pax","Pearl","Penelope","Phoenix","Quinn","Rae","Rain","Raven","Ray","Raye","Rebel","Reese","Reeve","Regan","Riley","River","Robin","Rory","Rose","Royal","Ruth","Rylie","Sage","Sam","Saturn","Scout","Serena","Sky","Skylar","Sofia","Sophia","Storm","Sue","Suzanne","Sydney","Taylen","Taylor","Teagan","Tempest","Tenley","Thea","Trinity","Valerie","Venus","Vera","Violet","Willow","Winter","Xena","Zaylee","Zion","Zoe"],male:["Ace","Aiden","Alexander","Ander","Anthony","Asher","August","Aziel","Bear","Beckham","Benjamin","Buddy","Calvin","Carter","Charles","Christopher","Clyde","Cooper","Daniel","David","Dior","Dylan","Elijah","Ellis","Emerson","Ethan","Ezra","Fletcher","Flynn","Gabriel","Grayson","Gus","Hank","Harrison","Hendrix","Henry","Houston","Hudson","Hugh","Isaac","Jack","Jackson","Jacob","Jakobe","James","Jaxon","Jaxtyn","Jayden","John","Joseph","Josiah","Jude","Julian","Karsyn","Kenji","Kobe","Kylo","Lennon","Leo","Levi","Liam","Lincoln","Logan","Louis","Lucas","Lucky","Luke","Mason","Mateo","Matthew","Maverick","Michael","Monroe","Nixon","Ocean","Oliver","Otis","Otto","Owen","Ozzy","Parker","Rocky","Samuel","Sebastian","Sonny","Teddy","Theo","Theodore","Thomas","Truett","Walter","Warren","Watson","William","Wison","Wyatt","Ziggy","Zyair"]},name:[{value:"{{person.firstName}} {{person.lastName}}",weight:49},{value:"{{person.prefix}} {{person.firstName}} {{person.lastName}}",weight:7},{value:"{{person.firstName}} {{person.lastName}} {{person.suffix}}",weight:7},{value:"{{person.prefix}} {{person.firstName}} {{person.lastName}} {{person.suffix}}",weight:1}],prefix:{generic:["Dr.","Miss","Mr.","Mrs.","Ms."],female:["Dr.","Miss","Mrs.","Ms."],male:["Dr.","Mr."]},sex:["female","male"],suffix:["Jr.","Sr.","I","II","III","IV","V","MD","DDS","PhD","DVM"],western_zodiac_sign:["Aquarius","Pisces","Aries","Taurus","Gemini","Cancer","Leo","Virgo","Libra","Scorpio","Sagittarius","Capricorn"]},phone_number:{format:{human:["!##-!##-####","(!##) !##-####","1-!##-!##-####","!##.!##.####","!##-!##-#### x###","(!##) !##-#### x###","1-!##-!##-#### x###","!##.!##.#### x###","!##-!##-#### x####","(!##) !##-#### x####","1-!##-!##-#### x####","!##.!##.#### x####","!##-!##-#### x#####","(!##) !##-#### x#####","1-!##-!##-#### x#####","!##.!##.#### x#####"],international:["+1!##!######"],national:["(!##) !##-####"]}},science:{chemical_element:[{symbol:"H",name:"Hydrogen",atomicNumber:1},{symbol:"He",name:"Helium",atomicNumber:2},{symbol:"Li",name:"Lithium",atomicNumber:3},{symbol:"Be",name:"Beryllium",atomicNumber:4},{symbol:"B",name:"Boron",atomicNumber:5},{symbol:"C",name:"Carbon",atomicNumber:6},{symbol:"N",name:"Nitrogen",atomicNumber:7},{symbol:"O",name:"Oxygen",atomicNumber:8},{symbol:"F",name:"Fluorine",atomicNumber:9},{symbol:"Ne",name:"Neon",atomicNumber:10},{symbol:"Na",name:"Sodium",atomicNumber:11},{symbol:"Mg",name:"Magnesium",atomicNumber:12},{symbol:"Al",name:"Aluminium",atomicNumber:13},{symbol:"Si",name:"Silicon",atomicNumber:14},{symbol:"P",name:"Phosphorus",atomicNumber:15},{symbol:"S",name:"Sulfur",atomicNumber:16},{symbol:"Cl",name:"Chlorine",atomicNumber:17},{symbol:"Ar",name:"Argon",atomicNumber:18},{symbol:"K",name:"Potassium",atomicNumber:19},{symbol:"Ca",name:"Calcium",atomicNumber:20},{symbol:"Sc",name:"Scandium",atomicNumber:21},{symbol:"Ti",name:"Titanium",atomicNumber:22},{symbol:"V",name:"Vanadium",atomicNumber:23},{symbol:"Cr",name:"Chromium",atomicNumber:24},{symbol:"Mn",name:"Manganese",atomicNumber:25},{symbol:"Fe",name:"Iron",atomicNumber:26},{symbol:"Co",name:"Cobalt",atomicNumber:27},{symbol:"Ni",name:"Nickel",atomicNumber:28},{symbol:"Cu",name:"Copper",atomicNumber:29},{symbol:"Zn",name:"Zinc",atomicNumber:30},{symbol:"Ga",name:"Gallium",atomicNumber:31},{symbol:"Ge",name:"Germanium",atomicNumber:32},{symbol:"As",name:"Arsenic",atomicNumber:33},{symbol:"Se",name:"Selenium",atomicNumber:34},{symbol:"Br",name:"Bromine",atomicNumber:35},{symbol:"Kr",name:"Krypton",atomicNumber:36},{symbol:"Rb",name:"Rubidium",atomicNumber:37},{symbol:"Sr",name:"Strontium",atomicNumber:38},{symbol:"Y",name:"Yttrium",atomicNumber:39},{symbol:"Zr",name:"Zirconium",atomicNumber:40},{symbol:"Nb",name:"Niobium",atomicNumber:41},{symbol:"Mo",name:"Molybdenum",atomicNumber:42},{symbol:"Tc",name:"Technetium",atomicNumber:43},{symbol:"Ru",name:"Ruthenium",atomicNumber:44},{symbol:"Rh",name:"Rhodium",atomicNumber:45},{symbol:"Pd",name:"Palladium",atomicNumber:46},{symbol:"Ag",name:"Silver",atomicNumber:47},{symbol:"Cd",name:"Cadmium",atomicNumber:48},{symbol:"In",name:"Indium",atomicNumber:49},{symbol:"Sn",name:"Tin",atomicNumber:50},{symbol:"Sb",name:"Antimony",atomicNumber:51},{symbol:"Te",name:"Tellurium",atomicNumber:52},{symbol:"I",name:"Iodine",atomicNumber:53},{symbol:"Xe",name:"Xenon",atomicNumber:54},{symbol:"Cs",name:"Caesium",atomicNumber:55},{symbol:"Ba",name:"Barium",atomicNumber:56},{symbol:"La",name:"Lanthanum",atomicNumber:57},{symbol:"Ce",name:"Cerium",atomicNumber:58},{symbol:"Pr",name:"Praseodymium",atomicNumber:59},{symbol:"Nd",name:"Neodymium",atomicNumber:60},{symbol:"Pm",name:"Promethium",atomicNumber:61},{symbol:"Sm",name:"Samarium",atomicNumber:62},{symbol:"Eu",name:"Europium",atomicNumber:63},{symbol:"Gd",name:"Gadolinium",atomicNumber:64},{symbol:"Tb",name:"Terbium",atomicNumber:65},{symbol:"Dy",name:"Dysprosium",atomicNumber:66},{symbol:"Ho",name:"Holmium",atomicNumber:67},{symbol:"Er",name:"Erbium",atomicNumber:68},{symbol:"Tm",name:"Thulium",atomicNumber:69},{symbol:"Yb",name:"Ytterbium",atomicNumber:70},{symbol:"Lu",name:"Lutetium",atomicNumber:71},{symbol:"Hf",name:"Hafnium",atomicNumber:72},{symbol:"Ta",name:"Tantalum",atomicNumber:73},{symbol:"W",name:"Tungsten",atomicNumber:74},{symbol:"Re",name:"Rhenium",atomicNumber:75},{symbol:"Os",name:"Osmium",atomicNumber:76},{symbol:"Ir",name:"Iridium",atomicNumber:77},{symbol:"Pt",name:"Platinum",atomicNumber:78},{symbol:"Au",name:"Gold",atomicNumber:79},{symbol:"Hg",name:"Mercury",atomicNumber:80},{symbol:"Tl",name:"Thallium",atomicNumber:81},{symbol:"Pb",name:"Lead",atomicNumber:82},{symbol:"Bi",name:"Bismuth",atomicNumber:83},{symbol:"Po",name:"Polonium",atomicNumber:84},{symbol:"At",name:"Astatine",atomicNumber:85},{symbol:"Rn",name:"Radon",atomicNumber:86},{symbol:"Fr",name:"Francium",atomicNumber:87},{symbol:"Ra",name:"Radium",atomicNumber:88},{symbol:"Ac",name:"Actinium",atomicNumber:89},{symbol:"Th",name:"Thorium",atomicNumber:90},{symbol:"Pa",name:"Protactinium",atomicNumber:91},{symbol:"U",name:"Uranium",atomicNumber:92},{symbol:"Np",name:"Neptunium",atomicNumber:93},{symbol:"Pu",name:"Plutonium",atomicNumber:94},{symbol:"Am",name:"Americium",atomicNumber:95},{symbol:"Cm",name:"Curium",atomicNumber:96},{symbol:"Bk",name:"Berkelium",atomicNumber:97},{symbol:"Cf",name:"Californium",atomicNumber:98},{symbol:"Es",name:"Einsteinium",atomicNumber:99},{symbol:"Fm",name:"Fermium",atomicNumber:100},{symbol:"Md",name:"Mendelevium",atomicNumber:101},{symbol:"No",name:"Nobelium",atomicNumber:102},{symbol:"Lr",name:"Lawrencium",atomicNumber:103},{symbol:"Rf",name:"Rutherfordium",atomicNumber:104},{symbol:"Db",name:"Dubnium",atomicNumber:105},{symbol:"Sg",name:"Seaborgium",atomicNumber:106},{symbol:"Bh",name:"Bohrium",atomicNumber:107},{symbol:"Hs",name:"Hassium",atomicNumber:108},{symbol:"Mt",name:"Meitnerium",atomicNumber:109},{symbol:"Ds",name:"Darmstadtium",atomicNumber:110},{symbol:"Rg",name:"Roentgenium",atomicNumber:111},{symbol:"Cn",name:"Copernicium",atomicNumber:112},{symbol:"Nh",name:"Nihonium",atomicNumber:113},{symbol:"Fl",name:"Flerovium",atomicNumber:114},{symbol:"Mc",name:"Moscovium",atomicNumber:115},{symbol:"Lv",name:"Livermorium",atomicNumber:116},{symbol:"Ts",name:"Tennessine",atomicNumber:117},{symbol:"Og",name:"Oganesson",atomicNumber:118}],unit:[{name:"meter",symbol:"m"},{name:"second",symbol:"s"},{name:"mole",symbol:"mol"},{name:"ampere",symbol:"A"},{name:"kelvin",symbol:"K"},{name:"candela",symbol:"cd"},{name:"kilogram",symbol:"kg"},{name:"radian",symbol:"rad"},{name:"hertz",symbol:"Hz"},{name:"newton",symbol:"N"},{name:"pascal",symbol:"Pa"},{name:"joule",symbol:"J"},{name:"watt",symbol:"W"},{name:"coulomb",symbol:"C"},{name:"volt",symbol:"V"},{name:"ohm",symbol:"Ω"},{name:"tesla",symbol:"T"},{name:"degree Celsius",symbol:"°C"},{name:"lumen",symbol:"lm"},{name:"becquerel",symbol:"Bq"},{name:"gray",symbol:"Gy"},{name:"sievert",symbol:"Sv"},{name:"steradian",symbol:"sr"},{name:"farad",symbol:"F"},{name:"siemens",symbol:"S"},{name:"weber",symbol:"Wb"},{name:"henry",symbol:"H"},{name:"lux",symbol:"lx"},{name:"katal",symbol:"kat"}]},team:{creature:["ants","bats","bears","bees","birds","buffalo","cats","chickens","cattle","dogs","dolphins","ducks","elephants","fishes","foxes","frogs","geese","goats","horses","kangaroos","lions","monkeys","owls","oxen","penguins","people","pigs","rabbits","sheep","tigers","whales","wolves","zebras","banshees","crows","black cats","chimeras","ghosts","conspirators","dragons","dwarves","elves","enchanters","exorcists","sons","foes","giants","gnomes","goblins","gooses","griffins","lycanthropes","nemesis","ogres","oracles","prophets","sorcerors","spiders","spirits","vampires","warlocks","vixens","werewolves","witches","worshipers","zombies","druids"],name:["{{location.state}} {{team.creature}}"]},vehicle:{bicycle_type:["Adventure Road Bicycle","BMX Bicycle","City Bicycle","Cruiser Bicycle","Cyclocross Bicycle","Dual-Sport Bicycle","Fitness Bicycle","Flat-Foot Comfort Bicycle","Folding Bicycle","Hybrid Bicycle","Mountain Bicycle","Recumbent Bicycle","Road Bicycle","Tandem Bicycle","Touring Bicycle","Track/Fixed-Gear Bicycle","Triathlon/Time Trial Bicycle","Tricycle"],fuel:["Diesel","Electric","Gasoline","Hybrid"],manufacturer:["Aston Martin","Audi","BMW","BYD","Bentley","Bugatti","Cadillac","Chevrolet","Chrysler","Citroën","Dodge","Ferrari","Fiat","Ford","Honda","Hyundai","Jaguar","Jeep","Kia","Lamborghini","Land Rover","MG","Mahindra & Mahindra","Maruti","Maserati","Mazda","Mercedes Benz","Mini","Mitsubishi","NIO","Nissan","Peugeot","Polestar","Porsche","Renault","Rivian","Rolls Royce","Skoda","Smart","Subaru","Suzuki","Tata","Tesla","Toyota","Vauxhall","Volkswagen","Volvo"],model:["1","2","911","A4","A8","ATS","Accord","Alpine","Altima","Aventador","Beetle","CTS","CX-9","Camaro","Camry","Challenger","Charger","Civic","Colorado","Corvette","Countach","Cruze","Durango","El Camino","Element","Escalade","Expedition","Explorer","F-150","Fiesta","Focus","Fortwo","Golf","Grand Caravan","Grand Cherokee","Impala","Jetta","Land Cruiser","LeBaron","Malibu","Mercielago","Model 3","Model S","Model T","Model X","Model Y","Mustang","PT Cruiser","Prius","Ranchero","Roadster","Sentra","Silverado","Spyder","Taurus","V90","Volt","Wrangler","XC90","XTS"],type:["Cargo Van","Convertible","Coupe","Crew Cab Pickup","Extended Cab Pickup","Hatchback","Minivan","Passenger Van","SUV","Sedan","Wagon"]},word:{adjective:["abandoned","able","acceptable","acclaimed","accomplished","accurate","aching","acidic","actual","admired","adolescent","advanced","affectionate","afraid","aged","aggravating","aggressive","agile","agitated","agreeable","ajar","alarmed","alert","alienated","alive","all","altruistic","amazing","ambitious","ample","amused","angelic","anguished","animated","annual","another","antique","any","apprehensive","appropriate","apt","arid","artistic","ashamed","assured","astonishing","athletic","austere","authentic","authorized","avaricious","average","aware","awesome","awful","babyish","back","bad","baggy","bare","basic","beloved","beneficial","best","better","big","biodegradable","bitter","black","black-and-white","blank","blaring","bleak","blind","blond","blue","blushing","bogus","boiling","bony","boring","bossy","both","bouncy","bowed","brave","breakable","bright","brilliant","brisk","broken","brown","bruised","bulky","burdensome","burly","bustling","busy","buttery","buzzing","calculating","candid","carefree","careless","caring","cautious","cavernous","celebrated","charming","cheap","cheerful","chilly","chubby","circular","classic","clean","clear","clear-cut","close","closed","cloudy","clueless","clumsy","cluttered","coarse","colorful","colorless","colossal","comfortable","common","compassionate","competent","complete","complicated","concerned","concrete","confused","considerate","content","cool","cooperative","coordinated","corny","corrupt","courageous","courteous","crafty","crazy","creamy","creative","criminal","critical","crooked","crowded","cruel","crushing","cuddly","cultivated","cumbersome","curly","cute","damaged","damp","dapper","dark","darling","dazzling","dead","deadly","deafening","dearest","decent","decisive","deep","defenseless","defensive","deficient","definite","definitive","delectable","delicious","delirious","dense","dental","dependable","dependent","descriptive","deserted","determined","devoted","different","difficult","digital","diligent","dim","direct","dirty","discrete","disloyal","dismal","distant","distinct","distorted","doting","downright","drab","dramatic","dreary","dual","dull","dutiful","each","early","earnest","easy","ecstatic","edible","educated","elastic","elderly","electric","elegant","elementary","elliptical","eminent","emotional","empty","enchanted","enchanting","energetic","enlightened","enraged","entire","equatorial","essential","esteemed","ethical","everlasting","every","evil","exalted","excellent","excitable","excited","exhausted","exotic","expensive","experienced","expert","extra-large","extroverted","failing","faint","fair","fake","familiar","fantastic","far","far-flung","far-off","faraway","fat","fatal","fatherly","favorable","favorite","fearless","feline","filthy","fine","finished","firm","first","firsthand","fixed","flashy","flawed","flawless","flickering","flimsy","flowery","fluffy","flustered","focused","fond","foolhardy","foolish","forceful","formal","forsaken","fortunate","fragrant","frail","frank","free","french","frequent","friendly","frightened","frilly","frivolous","frizzy","front","frozen","frugal","fruitful","functional","funny","fussy","fuzzy","gaseous","general","gentle","genuine","gifted","gigantic","giving","glaring","glass","gleaming","glittering","gloomy","glorious","glossy","glum","golden","good","good-natured","gorgeous","graceful","gracious","grandiose","granular","grave","gray","great","greedy","grim","grimy","gripping","grizzled","grouchy","grounded","growing","grown","grubby","gruesome","grumpy","guilty","gullible","gummy","hairy","handsome","handy","happy","happy-go-lucky","hard-to-find","harmful","hasty","hateful","haunting","heartfelt","heavenly","heavy","hefty","helpful","helpless","hidden","hoarse","hollow","homely","honorable","honored","hopeful","hospitable","hot","huge","humble","humiliating","hungry","hurtful","husky","icy","ideal","idealistic","idolized","ignorant","ill","ill-fated","illiterate","illustrious","imaginary","imaginative","immaculate","immediate","immense","impartial","impassioned","impeccable","impish","impolite","important","impossible","impractical","impressionable","impressive","improbable","impure","inborn","incomparable","incomplete","inconsequential","indelible","indolent","inexperienced","infamous","infatuated","inferior","infinite","informal","innocent","insecure","insidious","insignificant","insistent","instructive","intelligent","intent","interesting","internal","international","intrepid","ironclad","irresponsible","jagged","jam-packed","jaunty","jealous","jittery","joyful","joyous","jubilant","judicious","juicy","jumbo","junior","juvenile","kaleidoscopic","key","knotty","knowledgeable","known","kooky","kosher","lanky","last","lasting","late","lavish","lawful","lazy","leading","lean","left","legal","light","lighthearted","likable","likely","limited","limp","limping","linear","lined","liquid","little","live","lively","livid","lone","lonely","long","long-term","lost","lovable","lovely","low","lucky","lumbering","lumpy","lustrous","mad","made-up","magnificent","majestic","major","male","mammoth","married","marvelous","massive","mature","meager","mealy","mean","measly","meaty","mediocre","medium","memorable","menacing","merry","messy","metallic","mild","milky","mindless","minor","minty","miserable","miserly","misguided","mixed","moist","monstrous","monthly","monumental","moral","motionless","muddy","muffled","multicolored","mundane","murky","mushy","musty","muted","mysterious","narrow","natural","naughty","nautical","near","neat","necessary","needy","negative","neglected","negligible","neighboring","nervous","new","next","nice","nifty","nimble","nippy","nocturnal","normal","noted","noteworthy","noxious","numb","nutritious","obedient","oblong","obvious","odd","oddball","official","oily","old","old-fashioned","only","optimal","optimistic","orange","orderly","ordinary","ornate","ornery","other","our","outgoing","outlandish","outlying","outrageous","outstanding","oval","overcooked","overdue","palatable","pale","paltry","parallel","parched","partial","passionate","pastel","peaceful","peppery","perfumed","perky","personal","pertinent","pessimistic","petty","phony","physical","pink","pitiful","plain","pleasant","pleased","pleasing","plump","pointed","pointless","polished","polite","political","poor","portly","posh","possible","potable","powerful","powerless","practical","precious","present","prestigious","pretty","pricey","prickly","primary","prime","private","probable","productive","profitable","profuse","proper","proud","prudent","punctual","puny","pure","purple","pushy","putrid","puzzled","qualified","quarrelsome","quarterly","queasy","querulous","questionable","quick","quick-witted","quiet","quintessential","quixotic","radiant","ragged","rapid","rare","raw","realistic","reasonable","recent","reckless","rectangular","red","reflecting","regal","regular","remarkable","remorseful","repentant","respectful","responsible","rewarding","rich","right","rigid","ripe","roasted","robust","rosy","rotating","rotten","rough","round","rowdy","royal","rubbery","ruddy","rundown","runny","rural","rusty","sad","salty","same","sandy","sarcastic","sardonic","scaly","scared","scary","scented","scientific","scornful","scratchy","second","second-hand","secondary","secret","self-assured","self-reliant","selfish","sentimental","separate","serene","serpentine","severe","shabby","shadowy","shady","shallow","shameful","shameless","shimmering","shiny","shocked","shoddy","short","short-term","showy","shrill","shy","sick","silent","silky","silver","similar","simple","simplistic","sinful","sizzling","skeletal","sleepy","slight","slimy","slow","slushy","small","smart","smoggy","smooth","smug","snappy","snarling","sneaky","sniveling","snoopy","sociable","soft","soggy","somber","some","sophisticated","sore","sorrowful","soulful","soupy","sour","spanish","sparkling","sparse","specific","speedy","spherical","spiffy","spirited","spiteful","splendid","spotless","square","squeaky","squiggly","stable","staid","stained","stale","standard","stark","steel","steep","sticky","stiff","stingy","stormy","straight","strange","strict","strident","striking","strong","stunning","stupendous","sturdy","stylish","subdued","submissive","substantial","subtle","suburban","sudden","sugary","sunny","super","superb","superficial","superior","supportive","sure-footed","surprised","svelte","sweet","swift","talkative","tall","tame","tangible","tasty","tattered","taut","tedious","teeming","tempting","tender","tense","tepid","terrible","that","these","thick","thin","thorny","thorough","those","thrifty","tidy","tight","timely","tinted","tiny","tired","torn","total","tough","tragic","trained","triangular","tricky","trim","trivial","troubled","true","trusting","trustworthy","trusty","turbulent","twin","ugly","ultimate","unaware","uncomfortable","uncommon","unconscious","understated","uneven","unfinished","unfit","unfortunate","unhappy","unhealthy","uniform","unimportant","unique","unkempt","unknown","unlawful","unlined","unlucky","unpleasant","unrealistic","unripe","unruly","unselfish","unsightly","unsteady","unsung","untidy","untimely","untried","untrue","unused","unusual","unwelcome","unwieldy","unwilling","unwritten","upbeat","upright","upset","urban","usable","useless","utilized","utter","vague","vain","valuable","variable","vast","velvety","vengeful","vibrant","victorious","violent","vivacious","vivid","voluminous","warlike","warm","warmhearted","warped","wasteful","waterlogged","watery","wavy","wealthy","weary","webbed","wee","weekly","weighty","weird","well-documented","well-groomed","well-lit","well-made","well-off","well-to-do","well-worn","which","whimsical","whirlwind","whispered","white","whole","whopping","wicked","wide","wide-eyed","wiggly","willing","wilted","winding","windy","winged","wise","witty","wobbly","woeful","wonderful","wordy","worldly","worse","worst","worthless","worthwhile","worthy","wrathful","wretched","writhing","wrong","wry","yearly","yellow","yellowish","young","youthful","yummy","zany","zealous","zesty"],adverb:["abnormally","absentmindedly","accidentally","acidly","actually","adventurously","afterwards","almost","always","angrily","annually","anxiously","arrogantly","awkwardly","badly","bashfully","beautifully","bitterly","bleakly","blindly","blissfully","boastfully","boldly","bravely","briefly","brightly","briskly","broadly","busily","calmly","carefully","carelessly","cautiously","certainly","cheerfully","clearly","cleverly","closely","coaxingly","colorfully","commonly","continually","coolly","correctly","courageously","crossly","cruelly","curiously","daily","daintily","dearly","deceivingly","deeply","defiantly","deliberately","delightfully","diligently","dimly","doubtfully","dreamily","easily","elegantly","energetically","enormously","enthusiastically","equally","especially","even","evenly","eventually","exactly","excitedly","extremely","fairly","faithfully","famously","far","fast","fatally","ferociously","fervently","fiercely","fondly","foolishly","fortunately","frankly","frantically","freely","frenetically","frightfully","fully","furiously","generally","generously","gently","gladly","gleefully","gracefully","gratefully","greatly","greedily","happily","hastily","healthily","heavily","helpfully","helplessly","highly","honestly","hopelessly","hourly","hungrily","immediately","innocently","inquisitively","instantly","intensely","intently","interestingly","inwardly","irritably","jaggedly","jealously","joshingly","jovially","joyfully","joyously","jubilantly","judgementally","justly","keenly","kiddingly","kindheartedly","kindly","kissingly","knavishly","knottily","knowingly","knowledgeably","kookily","lazily","less","lightly","likely","limply","lively","loftily","longingly","loosely","loudly","lovingly","loyally","madly","majestically","meaningfully","mechanically","merrily","miserably","mockingly","monthly","more","mortally","mostly","mysteriously","naturally","nearly","neatly","needily","nervously","never","nicely","noisily","not","obediently","obnoxiously","oddly","offensively","officially","often","only","openly","optimistically","overconfidently","owlishly","painfully","partially","patiently","perfectly","physically","playfully","politely","poorly","positively","potentially","powerfully","promptly","properly","punctually","quaintly","quarrelsomely","queasily","questionably","questioningly","quicker","quickly","quietly","quirkily","quizzically","rapidly","rarely","readily","really","reassuringly","recklessly","regularly","reluctantly","repeatedly","reproachfully","restfully","righteously","rightfully","rigidly","roughly","rudely","sadly","safely","scarcely","scarily","searchingly","sedately","seemingly","seldom","selfishly","separately","seriously","shakily","sharply","sheepishly","shrilly","shyly","silently","sleepily","slowly","smoothly","softly","solemnly","solidly","sometimes","soon","speedily","stealthily","sternly","strictly","successfully","suddenly","surprisingly","suspiciously","sweetly","swiftly","sympathetically","tenderly","tensely","terribly","thankfully","thoroughly","thoughtfully","tightly","tomorrow","too","tremendously","triumphantly","truly","truthfully","ultimately","unabashedly","unaccountably","unbearably","unethically","unexpectedly","unfortunately","unimpressively","unnaturally","unnecessarily","upbeat","upliftingly","upright","upside-down","upward","upwardly","urgently","usefully","uselessly","usually","utterly","vacantly","vaguely","vainly","valiantly","vastly","verbally","very","viciously","victoriously","violently","vivaciously","voluntarily","warmly","weakly","wearily","well","wetly","wholly","wildly","willfully","wisely","woefully","wonderfully","worriedly","wrongly","yawningly","yearly","yearningly","yesterday","yieldingly","youthfully"],conjunction:["after","although","and","as","because","before","but","consequently","even","finally","for","furthermore","hence","how","however","if","inasmuch","incidentally","indeed","instead","lest","likewise","meanwhile","nor","now","once","or","provided","since","so","supposing","than","that","though","till","unless","until","what","when","whenever","where","whereas","wherever","whether","which","while","who","whoever","whose","why","yet"],interjection:["yuck","oh","phooey","blah","boo","whoa","yowza","huzzah","boohoo","fooey","geez","pfft","ew","ah","yum","brr","hm","yahoo","aha","woot","drat","gah","meh","psst","aw","ugh","yippee","eek","gee","bah","gadzooks","duh","ha","mmm","ouch","phew","ack","uh-huh","gosh","hmph","pish","zowie","er","ick","oof","um"],noun:["CD","SUV","abacus","academics","accelerator","accompanist","account","accountability","acquaintance","ad","adaptation","address","adrenalin","adult","advancement","advertisement","adviser","affect","affiliate","aftermath","agreement","airbus","aircraft","airline","airmail","airman","airport","alb","alert","allegation","alliance","alligator","allocation","almighty","amendment","amnesty","analogy","angle","annual","antelope","anticodon","apparatus","appliance","approach","apricot","arcade","archaeology","armchair","armoire","asset","assist","atrium","attraction","availability","avalanche","awareness","babushka","backbone","backburn","bakeware","bandwidth","bar","barge","baritone","barracks","baseboard","basket","bathhouse","bathrobe","battle","begonia","behest","bell","bench","bend","beret","best-seller","bid","bidet","bin","birdbath","birdcage","birth","blight","blossom","blowgun","bob","bog","bonfire","bonnet","bookcase","bookend","boulevard","bourgeoisie","bowler","bowling","boyfriend","brace","bracelet","bran","breastplate","brief","brochure","brook","brush","bug","bump","bungalow","cafe","cake","calculus","cannon","cantaloupe","cap","cappelletti","captain","caption","carboxyl","cardboard","carnival","case","casement","cash","casket","cassava","castanet","catalyst","cauliflower","cellar","celsius","cemetery","ceramic","ceramics","certification","chainstay","chairperson","challenge","championship","chap","chapel","character","characterization","charlatan","charm","chasuble","cheese","cheetah","chiffonier","chops","chow","cinder","cinema","circumference","citizen","clamp","clavicle","cleaner","climb","co-producer","coal","coast","cod","coil","coin","coliseum","collaboration","collectivization","colon","colonialism","comestible","commercial","commodity","community","comparison","completion","complication","compromise","concentration","configuration","confusion","conservation","conservative","consistency","contractor","contrail","convection","conversation","cook","coordination","cop-out","cope","cork","cornet","corporation","corral","cosset","costume","couch","council","councilman","countess","courtroom","cow","creator","creature","crest","cricket","crocodile","cross-contamination","cruelty","cuckoo","curl","custody","custom","cutlet","cutover","cycle","daddy","dandelion","dash","daughter","dead","decision","deck","declaration","decongestant","decryption","deduction","deed","deer","defendant","density","department","dependency","deployment","depot","derby","descendant","descent","design","designation","desk","detective","devastation","developing","developmental","devil","diagram","digestive","digit","dime","director","disadvantage","disappointment","disclosure","disconnection","discourse","dish","disk","disposer","distinction","diver","diversity","dividend","divine","doing","doorpost","doubter","draft","draw","dream","dredger","dress","drive","drug","duffel","dulcimer","dusk","duster","dwell","e-mail","earth","ecliptic","ectoderm","edge","editor","effector","eggplant","electronics","elevation","elevator","elver","embarrassment","embossing","emergent","encouragement","entry","epic","equal","essence","eternity","ethyl","euphonium","event","exasperation","excess","executor","exhaust","expansion","expense","experience","exploration","extension","extent","exterior","eyebrow","eyeliner","farm","farmer","fat","fax","feather","fedora","fellow","fen","fencing","ferret","festival","fibre","filter","final","finding","finer","finger","fireplace","fisherman","fishery","fit","flame","flat","fledgling","flight","flint","flood","flu","fog","fold","folklore","follower","following","foodstuffs","footrest","forage","forager","forgery","fork","formamide","formation","formula","fort","fowl","fraudster","freckle","freezing","freight","fuel","fun","fund","fundraising","futon","gallery","galoshes","gastropod","gazebo","gerbil","ghost","giant","gift","giggle","glider","gloom","goat","godfather","godparent","going","goodwill","governance","government","gown","gradient","graffiti","grandpa","grandson","granny","grass","gray","gripper","grouper","guacamole","guard","guidance","guide","gym","gymnast","habit","haircut","halt","hamburger","hammock","handful","handle","handover","harp","haversack","hawk","heartache","heartbeat","heating","hello","help","hepatitis","heroine","hexagon","hierarchy","hippodrome","honesty","hoof","hope","horde","hornet","horst","hose","hospitalization","hovel","hovercraft","hubris","humidity","humor","hundred","hunger","hunt","husband","hutch","hydrant","hydrocarbon","hydrolyse","hydrolyze","hyena","hygienic","hyphenation","ice-cream","icebreaker","igloo","ignorance","illusion","impact","import","importance","impostor","in-joke","incandescence","independence","individual","information","injunction","innovation","insolence","inspection","instance","institute","instruction","instructor","integer","intellect","intent","interchange","interior","intervention","interviewer","invite","iridescence","issue","jacket","jazz","jellyfish","jet","jogging","joy","juggernaut","jump","jungle","junior","jury","kettledrum","kick","kielbasa","kinase","king","kiss","kit","knickers","knight","knitting","knuckle","label","labourer","lace","lady","lamp","language","larva","lashes","laughter","lava","lawmaker","lay","leading","league","legend","legging","legislature","lender","license","lid","lieu","lifestyle","lift","linseed","litter","loaf","lobster","longboat","lotion","lounge","louse","lox","loyalty","luck","lyre","maestro","mainstream","maintainer","majority","makeover","making","mallard","management","manner","mantua","marathon","march","marimba","marketplace","marksman","markup","marten","massage","masterpiece","mathematics","meadow","meal","meander","meatloaf","mechanic","median","membership","mentor","merit","metabolite","metal","middle","midwife","milestone","millet","minion","minister","minor","minority","mixture","mobility","molasses","mom","moment","monasticism","monocle","monster","morbidity","morning","mortise","mountain","mouser","mousse","mozzarella","muscat","mythology","napkin","necklace","nectarine","negotiation","nephew","nerve","netsuke","newsletter","newsprint","newsstand","nightlife","noon","nougat","nucleotidase","nudge","numeracy","numeric","nun","obedience","obesity","object","obligation","ocelot","octave","offset","oil","omelet","onset","opera","operating","optimal","orchid","order","ostrich","other","outlaw","outrun","outset","overcoat","overheard","overload","ownership","pacemaker","packaging","paintwork","palate","pants","pantyhose","papa","parade","parsnip","partridge","passport","pasta","patroller","pear","pearl","pecan","pendant","peninsula","pension","peony","pepper","perfection","permafrost","perp","petal","petticoat","pharmacopoeia","phrase","pick","piglet","pigpen","pigsty","pile","pillbox","pillow","pilot","pine","pinstripe","place","plain","planula","plastic","platter","platypus","pleasure","pliers","plugin","plumber","pneumonia","pocket-watch","poetry","polarisation","polyester","pomelo","pop","poppy","popularity","populist","porter","possession","postbox","precedent","premeditation","premier","premise","premium","pressure","presume","priesthood","printer","privilege","procurement","produce","programme","prohibition","promise","pronoun","providence","provider","provision","publication","publicity","pulse","punctuation","pupil","puppet","puritan","quart","quinoa","quit","railway","range","rationale","ravioli","rawhide","reach","reasoning","reboot","receptor","recommendation","reconsideration","recovery","redesign","relative","release","remark","reorganisation","repeat","replacement","reporter","representation","republican","request","requirement","reservation","resolve","resource","responsibility","restaurant","retention","retrospectivity","reward","ribbon","rim","riser","roadway","role","rosemary","roundabout","rubric","ruin","rule","runway","rust","safe","sailor","saloon","sand","sandbar","sanity","sarong","sauerkraut","saw","scaffold","scale","scarification","scenario","schedule","schnitzel","scholarship","scorn","scorpion","scout","scrap","scratch","seafood","seagull","seal","season","secrecy","secret","section","sediment","self-confidence","sermon","sesame","settler","shadowbox","shark","shipper","shore","shoulder","sideboard","siege","sightseeing","signature","silk","simple","singing","skean","skeleton","skyline","skyscraper","slide","slime","slipper","smog","smoke","sock","soliloquy","solution","solvency","someplace","sonar","sonata","sonnet","soup","soybean","space","spear","spirit","spork","sport","spring","sprinkles","squid","stall","starboard","statue","status","stay","steak","steeple","step","step-mother","sticker","stir-fry","stitcher","stock","stool","story","strait","stranger","strategy","straw","stump","subexpression","submitter","subsidy","substitution","suitcase","summary","summer","sunbeam","sundae","supplier","surface","sushi","suspension","sustenance","swanling","swath","sweatshop","swim","swine","swing","switch","switchboard","swordfish","synergy","t-shirt","tabletop","tackle","tail","tapioca","taro","tarragon","taxicab","teammate","technician","technologist","tectonics","tenant","tenement","tennis","tentacle","teriyaki","term","testimonial","testing","thigh","thongs","thorn","thread","thunderbolt","thyme","tinderbox","toaster","tomatillo","tomb","tomography","tool","tooth","toothbrush","toothpick","topsail","traditionalism","traffic","translation","transom","transparency","trash","travel","tray","trench","tribe","tributary","trick","trolley","tuba","tuber","tune-up","turret","tusk","tuxedo","typeface","typewriter","unblinking","underneath","underpants","understanding","unibody","unique","unit","utilization","valentine","validity","valley","valuable","vanadyl","vein","velocity","venom","version","verve","vestment","veto","viability","vibraphone","vibration","vicinity","video","violin","vision","vista","vol","volleyball","wafer","waist","wallaby","warming","wasabi","waterspout","wear","wedding","whack","whale","wheel","widow","wilderness","willow","window","wombat","word","worth","wriggler","yak","yarmulke","yeast","yin","yogurt","zebra","zen"],preposition:["a","abaft","aboard","about","above","absent","across","afore","after","against","along","alongside","amid","amidst","among","amongst","an","anenst","anti","apropos","apud","around","as","aside","astride","at","athwart","atop","barring","before","behind","below","beneath","beside","besides","between","beyond","but","by","circa","concerning","considering","despite","down","during","except","excepting","excluding","failing","following","for","forenenst","from","given","in","including","inside","into","lest","like","mid","midst","minus","modulo","near","next","notwithstanding","of","off","on","onto","opposite","out","outside","over","pace","past","per","plus","pro","qua","regarding","round","sans","save","since","than","the","through","throughout","till","times","to","toward","towards","under","underneath","unlike","until","unto","up","upon","versus","via","vice","with","within","without","worth"],verb:["abnegate","abscond","abseil","absolve","accentuate","accept","access","accessorise","accompany","account","accredit","achieve","acknowledge","acquire","adjourn","adjudge","admonish","adumbrate","advocate","afford","airbrush","ameliorate","amend","amount","anaesthetise","analyse","anesthetize","anneal","annex","antagonize","ape","apologise","apostrophize","appertain","appreciate","appropriate","approximate","arbitrate","archive","arraign","arrange","ascertain","ascribe","assail","atomize","attend","attest","attribute","augment","avow","axe","baa","banish","bank","baptise","battle","beard","beep","behold","belabor","bemuse","besmirch","bestride","better","bewail","bicycle","bide","bind","biodegrade","blacken","blaspheme","bleach","blend","blink","bliss","bloom","bludgeon","bobble","boggle","bolster","book","boom","bootleg","border","bore","boss","braid","brand","brandish","break","breed","broadcast","broadside","brood","browse","buck","burgeon","bus","butter","buzzing","camouflage","cannibalise","canter","cap","capitalise","capitalize","capsize","card","carouse","carp","carpool","catalog","catalyze","catch","categorise","cease","celebrate","censor","certify","char","charter","chase","chatter","chime","chip","christen","chromakey","chunder","chunter","cinch","circle","circulate","circumnavigate","clamor","clamour","claw","cleave","clinch","clinking","clone","clonk","coagulate","coexist","coincide","collaborate","colligate","colorize","colour","comb","come","commandeer","commemorate","communicate","compete","conceal","conceptualize","conclude","concrete","condense","cone","confide","confirm","confiscate","confound","confute","congregate","conjecture","connect","consign","construe","contradict","contrast","contravene","controvert","convalesce","converse","convince","convoke","coop","cop","corner","covenant","cow","crackle","cram","crank","creak","creaking","cripple","croon","cross","crumble","crystallize","culminate","culture","curry","curse","customise","cycle","dally","dampen","darn","debit","debut","decide","decode","decouple","decriminalize","deduce","deduct","deflate","deflect","deform","defrag","degenerate","degrease","delete","delight","deliquesce","demob","demobilise","democratize","demonstrate","denitrify","deny","depart","depend","deplore","deploy","deprave","depute","dereference","describe","desecrate","deselect","destock","detain","develop","devise","dial","dicker","digitize","dilate","disapprove","disarm","disbar","discontinue","disgorge","dishearten","dishonor","disinherit","dislocate","dispense","display","dispose","disrespect","dissemble","ditch","divert","dock","doodle","downchange","downshift","dowse","draft","drag","drain","dramatize","drowse","drum","dwell","economise","edge","efface","egg","eke","electrify","embalm","embed","embody","emboss","emerge","emphasise","emphasize","emulsify","encode","endow","enfold","engage","engender","enhance","enlist","enrage","enrich","enroll","entice","entomb","entrench","entwine","equate","essay","etch","eulogise","even","evince","exacerbate","exaggerate","exalt","exempt","exonerate","expatiate","explode","expostulate","extract","extricate","eyeglasses","fabricate","facilitate","factorise","factorize","fail","fall","familiarize","fashion","father","fathom","fax","federate","feminize","fence","fess","fictionalize","fiddle","fidget","fill","flash","fleck","flight","floodlight","floss","fluctuate","fluff","fly","focalise","foot","forearm","forecast","foretell","forgather","forgo","fork","form","forswear","founder","fraternise","fray","frizz","fumigate","function","furlough","fuss","gad","gallivant","galvanize","gape","garage","garrote","gasp","gestate","give","glimmer","glisten","gloat","gloss","glow","gnash","gnaw","goose","govern","grade","graduate","graft","grok","guest","guilt","gulp","gum","gurn","gust","gut","guzzle","ham","harangue","harvest","hassle","haul","haze","headline","hearten","heighten","highlight","hoick","hold","hole","hollow","holster","home","homeschool","hoot","horn","horse","hotfoot","house","hover","howl","huddle","huff","hunger","hunt","husk","hype","hypothesise","hypothesize","idle","ignite","imagineer","impact","impanel","implode","incinerate","incline","inculcate","industrialize","ingratiate","inhibit","inject","innovate","inscribe","insert","insist","inspect","institute","institutionalize","intend","intermarry","intermesh","intermix","internalise","internalize","internationalize","intrigue","inure","inveigle","inventory","investigate","irk","iterate","jaywalk","jell","jeopardise","jiggle","jive","joint","jot","jut","keel","knife","knit","know","kowtow","lack","lampoon","large","leap","lecture","legitimize","lend","libel","liberalize","license","ligate","list","lobotomise","lock","log","loose","low","lowball","machine","magnetize","major","make","malfunction","manage","manipulate","maroon","masculinize","mash","mask","masquerade","massage","masticate","materialise","matter","maul","memorise","merge","mesh","metabolise","microblog","microchip","micromanage","militate","mill","minister","minor","misappropriate","miscalculate","misfire","misjudge","miskey","mismatch","mispronounce","misread","misreport","misspend","mob","mobilise","mobilize","moisten","mooch","moor","moralise","mortar","mosh","mothball","motivate","motor","mould","mount","muddy","mummify","mutate","mystify","nab","narrate","narrowcast","nasalise","nauseate","navigate","neaten","neck","neglect","norm","notarize","object","obscure","observe","obsess","obstruct","obtrude","offend","offset","option","orchestrate","orient","orientate","outbid","outdo","outfit","outflank","outfox","outnumber","outrank","outrun","outsource","overburden","overcharge","overcook","overdub","overfeed","overload","overplay","overproduce","overreact","override","overspend","overstay","overtrain","overvalue","overwork","own","oxidise","oxidize","oxygenate","pace","pack","pale","pant","paralyse","parody","part","pause","pave","penalise","persecute","personalise","perspire","pertain","peter","pike","pillory","pinion","pip","pity","pivot","pixellate","plagiarise","plait","plan","please","pluck","ponder","popularize","portray","prance","preclude","preheat","prejudge","preregister","presell","preside","pretend","print","prioritize","probate","probe","proceed","procrastinate","profane","progress","proliferate","proofread","propound","proselytise","provision","pry","publicize","puff","pull","pulp","pulverize","purse","put","putrefy","quadruple","quaff","quantify","quarrel","quash","quaver","question","quiet","quintuple","quip","quit","rag","rally","ramp","randomize","rationalise","rationalize","ravage","ravel","react","readies","readjust","readmit","ready","reapply","rear","reassemble","rebel","reboot","reborn","rebound","rebuff","rebuild","rebuke","recede","reckon","reclassify","recompense","reconstitute","record","recount","redact","redevelop","redound","redraw","redress","reel","refer","reference","refine","reflate","refute","regulate","reiterate","rejigger","rejoin","rekindle","relaunch","relieve","remand","remark","reopen","reorient","replicate","repossess","represent","reprimand","reproach","reprove","repurpose","requite","reschedule","resort","respray","restructure","retool","retract","revere","revitalise","revoke","reword","rewrite","ride","ridge","rim","ring","rise","rival","roger","rosin","rot","rout","row","rue","rule","safeguard","sashay","sate","satirise","satirize","satisfy","saturate","savour","scale","scamper","scar","scare","scarper","scent","schematise","scheme","schlep","scoff","scoop","scope","scotch","scowl","scrabble","scram","scramble","scrape","screw","scruple","scrutinise","scuffle","scuttle","search","secularize","see","segregate","sell","sense","sensitize","sequester","serenade","serialize","serve","service","settle","sew","shaft","sham","shampoo","shanghai","shear","sheathe","shell","shinny","shirk","shoot","shoulder","shout","shovel","showboat","shred","shrill","shudder","shush","sidetrack","sign","silt","sin","singe","sit","sizzle","skateboard","ski","slake","slap","slather","sleet","slink","slip","slope","slump","smarten","smuggle","snack","sneak","sniff","snoop","snow","snowplow","snuggle","soap","solace","solder","solicit","source","spark","spattering","spectacles","spectate","spellcheck","spew","spice","spirit","splash","splay","split","splosh","splurge","spook","square","squirm","stabilise","stable","stack","stage","stake","starch","state","statement","stiffen","stigmatize","sting","stint","stoop","store","storyboard","stratify","structure","stuff","stunt","substantiate","subtract","suckle","suffice","suffocate","summarise","sun","sunbathe","sunder","sup","surge","surprise","swat","swathe","sway","swear","swelter","swerve","swill","swing","symbolise","synthesise","syringe","table","tabulate","tag","tame","tank","tankful","tarry","task","taxicab","team","telescope","tenant","terraform","terrorise","testify","think","throbbing","thump","tighten","toady","toe","tough","tousle","traduce","train","transcend","transplant","trash","treasure","treble","trek","trial","tromp","trouser","trust","tune","tut","twine","twist","typify","unbalance","uncork","uncover","underachieve","undergo","underplay","unearth","unfreeze","unfurl","unlearn","unscramble","unzip","uproot","upsell","usher","vacation","vamoose","vanish","vary","veg","venture","verify","vet","veto","volunteer","vulgarise","waft","wallop","waltz","warp","wash","waver","weary","weatherize","wedge","weep","weight","welcome","westernise","westernize","while","whine","whisper","whistle","whitewash","whup","wilt","wing","wire","wisecrack","wolf","wound","wring","writ","yak","yawn","yearn","yuppify"]}},Buffer=__webpack_require__("./node_modules/buffer/index.js").Buffer,console=__webpack_require__("./node_modules/console-browserify/index.js"),chunk_ES2KDHJ2_m=class extends Error{};var chunk_ES2KDHJ2_x=class{constructor(e){this.faker=e,function chunk_ES2KDHJ2_Ce(i){let e=Object.getPrototypeOf(i);do{for(let r of Object.getOwnPropertyNames(e))"function"==typeof i[r]&&"constructor"!==r&&(i[r]=i[r].bind(i));e=Object.getPrototypeOf(e)}while(e!==Object.prototype)}(this)}},chunk_ES2KDHJ2_p=class extends chunk_ES2KDHJ2_x{constructor(r){super(r),this.faker=r}},chunk_ES2KDHJ2_Ne=(t=>(t.Narrowbody="narrowbody",t.Regional="regional",t.Widebody="widebody",t))(chunk_ES2KDHJ2_Ne||{}),chunk_ES2KDHJ2_kr=["0","1","2","3","4","5","6","7","8","9"],xr=["0","O","1","I","L"],Ar={regional:20,narrowbody:35,widebody:60},Er={regional:["A","B","C","D"],narrowbody:["A","B","C","D","E","F"],widebody:["A","B","C","D","E","F","G","H","J","K"]},chunk_ES2KDHJ2_F=class extends chunk_ES2KDHJ2_p{airport(){return this.faker.helpers.arrayElement(this.faker.definitions.airline.airport)}airline(){return this.faker.helpers.arrayElement(this.faker.definitions.airline.airline)}airplane(){return this.faker.helpers.arrayElement(this.faker.definitions.airline.airplane)}recordLocator(e={}){let{allowNumerics:r=!1,allowVisuallySimilarCharacters:t=!1}=e,a=[];return r||a.push(...chunk_ES2KDHJ2_kr),t||a.push(...xr),this.faker.string.alphanumeric({length:6,casing:"upper",exclude:a})}seat(e={}){let{aircraftType:r="narrowbody"}=e,t=Ar[r],a=Er[r];return`${this.faker.number.int({min:1,max:t})}${this.faker.helpers.arrayElement(a)}`}aircraftType(){return this.faker.helpers.enumValue(chunk_ES2KDHJ2_Ne)}flightNumber(e={}){let{length:r={min:1,max:4},addLeadingZeros:t=!1}=e,a=this.faker.string.numeric({length:r,allowLeadingZeros:!1});return t?a.padStart(4,"0"):a}},chunk_ES2KDHJ2_De=(n=>(n.SRGB="sRGB",n.DisplayP3="display-p3",n.REC2020="rec2020",n.A98RGB="a98-rgb",n.ProphotoRGB="prophoto-rgb",n))(chunk_ES2KDHJ2_De||{}),chunk_ES2KDHJ2_Re=(c=>(c.RGB="rgb",c.RGBA="rgba",c.HSL="hsl",c.HSLA="hsla",c.HWB="hwb",c.CMYK="cmyk",c.LAB="lab",c.LCH="lch",c.COLOR="color",c))(chunk_ES2KDHJ2_Re||{});function chunk_ES2KDHJ2_Le(i){return i.map((r=>{if(r%1!=0){let a=new ArrayBuffer(4);return new DataView(a).setFloat32(0,r),chunk_ES2KDHJ2_Le([...new Uint8Array(a)]).replaceAll(" ","")}return(r>>>0).toString(2).padStart(8,"0")})).join(" ")}function chunk_ES2KDHJ2_A(i){return Math.round(100*i)}function chunk_ES2KDHJ2_D(i,e,r="rgb",t="sRGB"){switch(e){case"css":return function chunk_ES2KDHJ2_Sr(i,e="rgb",r="sRGB"){switch(e){case"rgba":return`rgba(${i[0]}, ${i[1]}, ${i[2]}, ${i[3]})`;case"color":return`color(${r} ${i[0]} ${i[1]} ${i[2]})`;case"cmyk":return`cmyk(${chunk_ES2KDHJ2_A(i[0])}%, ${chunk_ES2KDHJ2_A(i[1])}%, ${chunk_ES2KDHJ2_A(i[2])}%, ${chunk_ES2KDHJ2_A(i[3])}%)`;case"hsl":return`hsl(${i[0]}deg ${chunk_ES2KDHJ2_A(i[1])}% ${chunk_ES2KDHJ2_A(i[2])}%)`;case"hsla":return`hsl(${i[0]}deg ${chunk_ES2KDHJ2_A(i[1])}% ${chunk_ES2KDHJ2_A(i[2])}% / ${chunk_ES2KDHJ2_A(i[3])})`;case"hwb":return`hwb(${i[0]} ${chunk_ES2KDHJ2_A(i[1])}% ${chunk_ES2KDHJ2_A(i[2])}%)`;case"lab":return`lab(${chunk_ES2KDHJ2_A(i[0])}% ${i[1]} ${i[2]})`;case"lch":return`lch(${chunk_ES2KDHJ2_A(i[0])}% ${i[1]} ${i[2]})`;case"rgb":return`rgb(${i[0]}, ${i[1]}, ${i[2]})`}}(i,r,t);case"binary":return chunk_ES2KDHJ2_Le(i);case"decimal":return i}}var chunk_ES2KDHJ2_G=class extends chunk_ES2KDHJ2_p{human(){return this.faker.helpers.arrayElement(this.faker.definitions.color.human)}space(){return this.faker.helpers.arrayElement(this.faker.definitions.color.space)}cssSupportedFunction(){return this.faker.helpers.enumValue(chunk_ES2KDHJ2_Re)}cssSupportedSpace(){return this.faker.helpers.enumValue(chunk_ES2KDHJ2_De)}rgb(e={}){let o,{format:r="hex",includeAlpha:t=!1,prefix:a="#",casing:n="lower"}=e,s="rgb";return"hex"===r?(o=this.faker.string.hexadecimal({length:t?8:6,prefix:""}),o=function wr(i,e){let{prefix:r,casing:t}=e;switch(t){case"upper":i=i.toUpperCase();break;case"lower":i=i.toLowerCase()}return r&&(i=r+i),i}(o,{prefix:a,casing:n}),o):(o=Array.from({length:3},(()=>this.faker.number.int(255))),t&&(o.push(this.faker.number.float({multipleOf:.01})),s="rgba"),chunk_ES2KDHJ2_D(o,r,s))}cmyk(e={}){let{format:r="decimal"}=e;return chunk_ES2KDHJ2_D(Array.from({length:4},(()=>this.faker.number.float({multipleOf:.01}))),r,"cmyk")}hsl(e={}){let{format:r="decimal",includeAlpha:t=!1}=e,a=[this.faker.number.int(360)];for(let n=0;n<(e?.includeAlpha?3:2);n++)a.push(this.faker.number.float({multipleOf:.01}));return chunk_ES2KDHJ2_D(a,r,t?"hsla":"hsl")}hwb(e={}){let{format:r="decimal"}=e,t=[this.faker.number.int(360)];for(let a=0;a<2;a++)t.push(this.faker.number.float({multipleOf:.01}));return chunk_ES2KDHJ2_D(t,r,"hwb")}lab(e={}){let{format:r="decimal"}=e,t=[this.faker.number.float({multipleOf:1e-6})];for(let a=0;a<2;a++)t.push(this.faker.number.float({min:-100,max:100,multipleOf:1e-4}));return chunk_ES2KDHJ2_D(t,r,"lab")}lch(e={}){let{format:r="decimal"}=e,t=[this.faker.number.float({multipleOf:1e-6})];for(let a=0;a<2;a++)t.push(this.faker.number.float({max:230,multipleOf:.1}));return chunk_ES2KDHJ2_D(t,r,"lch")}colorByCSSColorSpace(e={}){let{format:r="decimal",space:t="sRGB"}=e;return chunk_ES2KDHJ2_D(Array.from({length:3},(()=>this.faker.number.float({multipleOf:1e-4}))),r,"color",t)}},chunk_ES2KDHJ2_be=(a=>(a.Legacy="legacy",a.Segwit="segwit",a.Bech32="bech32",a.Taproot="taproot",a))(chunk_ES2KDHJ2_be||{}),chunk_ES2KDHJ2_Pe=(r=>(r.Mainnet="mainnet",r.Testnet="testnet",r))(chunk_ES2KDHJ2_Pe||{}),chunk_ES2KDHJ2_Be={legacy:{prefix:{mainnet:"1",testnet:"m"},length:{min:26,max:34},casing:"mixed",exclude:"0OIl"},segwit:{prefix:{mainnet:"3",testnet:"2"},length:{min:26,max:34},casing:"mixed",exclude:"0OIl"},bech32:{prefix:{mainnet:"bc1",testnet:"tb1"},length:{min:42,max:42},casing:"lower",exclude:"1bBiIoO"},taproot:{prefix:{mainnet:"bc1p",testnet:"tb1p"},length:{min:62,max:62},casing:"lower",exclude:"1bBiIoO"}},chunk_ES2KDHJ2_de=typeof Buffer>"u"||!chunk_ES2KDHJ2_ve("base64")?i=>{let e=(new TextEncoder).encode(i),r=Array.from(e,(t=>String.fromCodePoint(t))).join("");return btoa(r)}:i=>Buffer.from(i).toString("base64"),chunk_ES2KDHJ2_ge=typeof Buffer>"u"||!chunk_ES2KDHJ2_ve("base64url")?i=>chunk_ES2KDHJ2_de(i).replaceAll("+","-").replaceAll("/","_").replaceAll(/=+$/g,""):i=>Buffer.from(i).toString("base64url");function chunk_ES2KDHJ2_ve(i){try{return"string"==typeof Buffer.from("test").toString(i)}catch{return!1}}function chunk_ES2KDHJ2_w(i){let{deprecated:e,since:r,until:t,proposed:a}=i,n=`[@faker-js/faker]: ${e} is deprecated`;r&&(n+=` since v${r}`),t&&(n+=` and will be removed in v${t}`),a&&(n+=`. Please use ${a} instead`),console.warn(`${n}.`)}var Mr=Object.fromEntries([["А","A"],["а","a"],["Б","B"],["б","b"],["В","V"],["в","v"],["Г","G"],["г","g"],["Д","D"],["д","d"],["ъе","ye"],["Ъе","Ye"],["ъЕ","yE"],["ЪЕ","YE"],["Е","E"],["е","e"],["Ё","Yo"],["ё","yo"],["Ж","Zh"],["ж","zh"],["З","Z"],["з","z"],["И","I"],["и","i"],["ый","iy"],["Ый","Iy"],["ЫЙ","IY"],["ыЙ","iY"],["Й","Y"],["й","y"],["К","K"],["к","k"],["Л","L"],["л","l"],["М","M"],["м","m"],["Н","N"],["н","n"],["О","O"],["о","o"],["П","P"],["п","p"],["Р","R"],["р","r"],["С","S"],["с","s"],["Т","T"],["т","t"],["У","U"],["у","u"],["Ф","F"],["ф","f"],["Х","Kh"],["х","kh"],["Ц","Ts"],["ц","ts"],["Ч","Ch"],["ч","ch"],["Ш","Sh"],["ш","sh"],["Щ","Sch"],["щ","sch"],["Ъ",""],["ъ",""],["Ы","Y"],["ы","y"],["Ь",""],["ь",""],["Э","E"],["э","e"],["Ю","Yu"],["ю","yu"],["Я","Ya"],["я","ya"]]),Tr=Object.fromEntries([["α","a"],["β","v"],["γ","g"],["δ","d"],["ε","e"],["ζ","z"],["η","i"],["θ","th"],["ι","i"],["κ","k"],["λ","l"],["μ","m"],["ν","n"],["ξ","ks"],["ο","o"],["π","p"],["ρ","r"],["σ","s"],["τ","t"],["υ","y"],["φ","f"],["χ","x"],["ψ","ps"],["ω","o"],["ά","a"],["έ","e"],["ί","i"],["ό","o"],["ύ","y"],["ή","i"],["ώ","o"],["ς","s"],["ϊ","i"],["ΰ","y"],["ϋ","y"],["ΐ","i"],["Α","A"],["Β","B"],["Γ","G"],["Δ","D"],["Ε","E"],["Ζ","Z"],["Η","I"],["Θ","TH"],["Ι","I"],["Κ","K"],["Λ","L"],["Μ","M"],["Ν","N"],["Ξ","KS"],["Ο","O"],["Π","P"],["Ρ","R"],["Σ","S"],["Τ","T"],["Υ","Y"],["Φ","F"],["Χ","X"],["Ψ","PS"],["Ω","O"],["Ά","A"],["Έ","E"],["Ί","I"],["Ό","O"],["Ύ","Y"],["Ή","I"],["Ώ","O"],["Ϊ","I"],["Ϋ","Y"]]),chunk_ES2KDHJ2_Cr=Object.fromEntries([["ء","e"],["آ","a"],["أ","a"],["ؤ","w"],["إ","i"],["ئ","y"],["ا","a"],["ب","b"],["ة","t"],["ت","t"],["ث","th"],["ج","j"],["ح","h"],["خ","kh"],["د","d"],["ذ","dh"],["ر","r"],["ز","z"],["س","s"],["ش","sh"],["ص","s"],["ض","d"],["ط","t"],["ظ","z"],["ع","e"],["غ","gh"],["ـ","_"],["ف","f"],["ق","q"],["ك","k"],["ل","l"],["م","m"],["ن","n"],["ه","h"],["و","w"],["ى","a"],["ي","y"],["َ‎","a"],["ُ","u"],["ِ‎","i"]]),Nr=Object.fromEntries([["ա","a"],["Ա","A"],["բ","b"],["Բ","B"],["գ","g"],["Գ","G"],["դ","d"],["Դ","D"],["ե","ye"],["Ե","Ye"],["զ","z"],["Զ","Z"],["է","e"],["Է","E"],["ը","y"],["Ը","Y"],["թ","t"],["Թ","T"],["ժ","zh"],["Ժ","Zh"],["ի","i"],["Ի","I"],["լ","l"],["Լ","L"],["խ","kh"],["Խ","Kh"],["ծ","ts"],["Ծ","Ts"],["կ","k"],["Կ","K"],["հ","h"],["Հ","H"],["ձ","dz"],["Ձ","Dz"],["ղ","gh"],["Ղ","Gh"],["ճ","tch"],["Ճ","Tch"],["մ","m"],["Մ","M"],["յ","y"],["Յ","Y"],["ն","n"],["Ն","N"],["շ","sh"],["Շ","Sh"],["ո","vo"],["Ո","Vo"],["չ","ch"],["Չ","Ch"],["պ","p"],["Պ","P"],["ջ","j"],["Ջ","J"],["ռ","r"],["Ռ","R"],["ս","s"],["Ս","S"],["վ","v"],["Վ","V"],["տ","t"],["Տ","T"],["ր","r"],["Ր","R"],["ց","c"],["Ց","C"],["ու","u"],["ՈՒ","U"],["Ու","U"],["փ","p"],["Փ","P"],["ք","q"],["Ք","Q"],["օ","o"],["Օ","O"],["ֆ","f"],["Ֆ","F"],["և","yev"]]),chunk_ES2KDHJ2_ye={...Mr,...Tr,...chunk_ES2KDHJ2_Cr,...Object.fromEntries([["چ","ch"],["ک","k"],["گ","g"],["پ","p"],["ژ","zh"],["ی","y"]]),...Nr,...Object.fromEntries([["א","a"],["ב","b"],["ג","g"],["ד","d"],["ה","h"],["ו","v"],["ז","z"],["ח","ch"],["ט","t"],["י","y"],["כ","k"],["ך","kh"],["ל","l"],["ם","m"],["מ","m"],["ן","n"],["נ","n"],["ס","s"],["ע","a"],["פ","f"],["ף","ph"],["צ","ts"],["ץ","ts"],["ק","k"],["ר","r"],["ש","sh"],["ת","t"],["ו","v"]])},Lr=(u=>(u.Any="any",u.Loopback="loopback",u.PrivateA="private-a",u.PrivateB="private-b",u.PrivateC="private-c",u.TestNet1="test-net-1",u.TestNet2="test-net-2",u.TestNet3="test-net-3",u.LinkLocal="link-local",u.Multicast="multicast",u))(Lr||{}),Pr={any:"0.0.0.0/0",loopback:"127.0.0.0/8","private-a":"10.0.0.0/8","private-b":"172.16.0.0/12","private-c":"192.168.0.0/16","test-net-1":"192.0.2.0/24","test-net-2":"198.51.100.0/24","test-net-3":"203.0.113.0/24","link-local":"169.254.0.0/16",multicast:"224.0.0.0/4"};function chunk_ES2KDHJ2_$e(i){return null!==/^[a-z][a-z-]*[a-z]$/i.exec(i)}function chunk_ES2KDHJ2_Ie(i,e){let r=i.helpers.slugify(e);if(chunk_ES2KDHJ2_$e(r))return r;let t=i.helpers.slugify(i.lorem.word());return chunk_ES2KDHJ2_$e(t)?t:i.string.alpha({casing:"lower",length:i.number.int({min:4,max:8})})}function chunk_ES2KDHJ2_ke(i,e){return Math.floor((i.number.int(256)+e)/2).toString(16).padStart(2,"0")}var chunk_ES2KDHJ2_O=class extends chunk_ES2KDHJ2_p{email(e={}){let{firstName:r,lastName:t,provider:a=this.faker.helpers.arrayElement(this.faker.definitions.internet.free_email),allowSpecialCharacters:n=!1}=e,o=this.username({firstName:r,lastName:t});if(o=o.replaceAll(/[^A-Za-z0-9._+-]+/g,""),o=o.substring(0,50),n){let s=[..."._-"],l=[...".!#$%&'*+-/=?^_`{|}~"];o=o.replace(this.faker.helpers.arrayElement(s),this.faker.helpers.arrayElement(l))}return o=o.replaceAll(/\.{2,}/g,"."),o=o.replace(/^\./,""),o=o.replace(/\.$/,""),`${o}@${a}`}exampleEmail(e={}){let{firstName:r,lastName:t,allowSpecialCharacters:a=!1}=e,n=this.faker.helpers.arrayElement(this.faker.definitions.internet.example_email);return this.email({firstName:r,lastName:t,provider:n,allowSpecialCharacters:a})}userName(e={}){return chunk_ES2KDHJ2_w({deprecated:"faker.internet.userName()",proposed:"faker.internet.username()",since:"9.1.0",until:"10.0.0"}),this.username(e)}username(e={}){let{firstName:r=this.faker.person.firstName(),lastName:t=this.faker.person.lastName(),lastName:a}=e,n=this.faker.helpers.arrayElement([".","_"]),o=this.faker.number.int(99),s=[()=>`${r}${n}${t}${o}`,()=>`${r}${n}${t}`];a||s.push((()=>`${r}${o}`));let l=this.faker.helpers.arrayElement(s)();return l=l.normalize("NFKD").replaceAll(/[\u0300-\u036F]/g,""),l=[...l].map((c=>{if(chunk_ES2KDHJ2_ye[c])return chunk_ES2KDHJ2_ye[c];let u=c.codePointAt(0)??Number.NaN;return u<128?c:u.toString(36)})).join(""),l=l.toString().replaceAll("'",""),l=l.replaceAll(" ",""),l}displayName(e={}){let{firstName:r=this.faker.person.firstName(),lastName:t=this.faker.person.lastName()}=e,a=this.faker.helpers.arrayElement([".","_"]),n=this.faker.number.int(99),o=[()=>`${r}${n}`,()=>`${r}${a}${t}`,()=>`${r}${a}${t}${n}`],s=this.faker.helpers.arrayElement(o)();return s=s.toString().replaceAll("'",""),s=s.replaceAll(" ",""),s}protocol(){return this.faker.helpers.arrayElement(["http","https"])}httpMethod(){return this.faker.helpers.arrayElement(["GET","POST","PUT","DELETE","PATCH"])}httpStatusCode(e={}){let{types:r=Object.keys(this.faker.definitions.internet.http_status_code)}=e,t=this.faker.helpers.arrayElement(r);return this.faker.helpers.arrayElement(this.faker.definitions.internet.http_status_code[t])}url(e={}){let{appendSlash:r=this.faker.datatype.boolean(),protocol:t="https"}=e;return`${t}://${this.domainName()}${r?"/":""}`}domainName(){return`${this.domainWord()}.${this.domainSuffix()}`}domainSuffix(){return this.faker.helpers.arrayElement(this.faker.definitions.internet.domain_suffix)}domainWord(){return`${chunk_ES2KDHJ2_Ie(this.faker,this.faker.word.adjective())}-${chunk_ES2KDHJ2_Ie(this.faker,this.faker.word.noun())}`.toLowerCase()}ip(){return this.faker.datatype.boolean()?this.ipv4():this.ipv6()}ipv4(e={}){let{network:r="any",cidrBlock:t=Pr[r]}=e;if(!/^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\/\d{1,2}$/.test(t))throw new chunk_ES2KDHJ2_m(`Invalid CIDR block provided: ${t}. Must be in the format x.x.x.x/y.`);let[a,n]=t.split("/"),o=4294967295>>>Number.parseInt(n),[s,l,c,u]=a.split(".").map(Number),b=(s<<24|l<<16|c<<8|u)&~o|this.faker.number.int(o);return[b>>>24&255,b>>>16&255,b>>>8&255,255&b].join(".")}ipv6(){return Array.from({length:8},(()=>this.faker.string.hexadecimal({length:4,casing:"lower",prefix:""}))).join(":")}port(){return this.faker.number.int(65535)}userAgent(){return this.faker.helpers.fake(this.faker.definitions.internet.user_agent_pattern)}color(e={}){chunk_ES2KDHJ2_w({deprecated:"faker.internet.color()",proposed:"faker.color.rgb()",since:"9.6.0",until:"10.0.0"});let{redBase:r=0,greenBase:t=0,blueBase:a=0}=e;return`#${chunk_ES2KDHJ2_ke(this.faker,r)}${chunk_ES2KDHJ2_ke(this.faker,t)}${chunk_ES2KDHJ2_ke(this.faker,a)}`}mac(e={}){"string"==typeof e&&(e={separator:e});let t,{separator:r=":"}=e,a="";for([":","-",""].includes(r)||(r=":"),t=0;t<12;t++)a+=this.faker.number.hex(15),t%2==1&&11!==t&&(a+=r);return a}password(e={}){let r=/[aeiouAEIOU]$/,t=/[bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ]$/,a=(c,u,h,f)=>{if(f.length>=c)return f;u&&(h=t.test(f)?r:t);let g=this.faker.number.int(94)+33,b=String.fromCodePoint(g);return u&&(b=b.toLowerCase()),h.test(b)?a(c,u,h,f+b):a(c,u,h,f)},{length:n=15,memorable:o=!1,pattern:s=/\w/,prefix:l=""}=e;return a(n,o,s,l)}emoji(e={}){let{types:r=Object.keys(this.faker.definitions.internet.emoji)}=e,t=this.faker.helpers.arrayElement(r);return this.faker.helpers.arrayElement(this.faker.definitions.internet.emoji[t])}jwtAlgorithm(){return this.faker.helpers.arrayElement(this.faker.definitions.internet.jwt_algorithm)}jwt(e={}){let{refDate:r=this.faker.defaultRefDate()}=e,t=this.faker.date.recent({refDate:r}),{header:a={alg:this.jwtAlgorithm(),typ:"JWT"},payload:n={iat:Math.round(t.valueOf()/1e3),exp:Math.round(this.faker.date.soon({refDate:t}).valueOf()/1e3),nbf:Math.round(this.faker.date.anytime({refDate:r}).valueOf()/1e3),iss:this.faker.company.name(),sub:this.faker.string.uuid(),aud:this.faker.string.uuid(),jti:this.faker.string.uuid()}}=e;return`${chunk_ES2KDHJ2_ge(JSON.stringify(a))}.${chunk_ES2KDHJ2_ge(JSON.stringify(n))}.${this.faker.string.alphanumeric(64)}`}},chunk_ES2KDHJ2_e=(r=>(r.Female="female",r.Male="male",r))(chunk_ES2KDHJ2_e||{});function chunk_ES2KDHJ2_R(i,e,r){let{generic:t,female:a,male:n}=r;switch(e){case"female":return a??t;case"male":return n??t;default:return t??i.helpers.arrayElement([a,n])??[]}}var chunk_ES2KDHJ2_U=class extends chunk_ES2KDHJ2_p{firstName(e){return this.faker.helpers.arrayElement(chunk_ES2KDHJ2_R(this.faker,e,this.faker.definitions.person.first_name))}lastName(e){if(null!=this.faker.rawDefinitions.person?.last_name_pattern){let r=this.faker.helpers.weightedArrayElement(chunk_ES2KDHJ2_R(this.faker,e,this.faker.rawDefinitions.person.last_name_pattern));return this.faker.helpers.fake(r)}return this.faker.helpers.arrayElement(chunk_ES2KDHJ2_R(this.faker,e,this.faker.definitions.person.last_name))}middleName(e){return this.faker.helpers.arrayElement(chunk_ES2KDHJ2_R(this.faker,e,this.faker.definitions.person.middle_name))}fullName(e={}){let{sex:r=this.faker.helpers.arrayElement(["female","male"]),firstName:t=this.firstName(r),lastName:a=this.lastName(r)}=e,n=this.faker.helpers.weightedArrayElement(this.faker.definitions.person.name);return this.faker.helpers.mustache(n,{"person.prefix":()=>this.prefix(r),"person.firstName":()=>t,"person.middleName":()=>this.middleName(r),"person.lastName":()=>a,"person.suffix":()=>this.suffix()})}gender(){return this.faker.helpers.arrayElement(this.faker.definitions.person.gender)}sex(){return this.faker.helpers.arrayElement(this.faker.definitions.person.sex)}sexType(){return this.faker.helpers.enumValue(chunk_ES2KDHJ2_e)}bio(){let{bio_pattern:e}=this.faker.definitions.person;return this.faker.helpers.fake(e)}prefix(e){return this.faker.helpers.arrayElement(chunk_ES2KDHJ2_R(this.faker,e,this.faker.definitions.person.prefix))}suffix(){return this.faker.helpers.arrayElement(this.faker.definitions.person.suffix)}jobTitle(){return this.faker.helpers.fake(this.faker.definitions.person.job_title_pattern)}jobDescriptor(){return this.faker.helpers.arrayElement(this.faker.definitions.person.job_descriptor)}jobArea(){return this.faker.helpers.arrayElement(this.faker.definitions.person.job_area)}jobType(){return this.faker.helpers.arrayElement(this.faker.definitions.person.job_type)}zodiacSign(){return this.faker.helpers.arrayElement(this.faker.definitions.person.western_zodiac_sign)}},{imul:chunk_ES2KDHJ2_Ae,trunc:chunk_ES2KDHJ2_Ee}=Math;function chunk_ES2KDHJ2_Fe(i){return"number"==typeof i?chunk_ES2KDHJ2_Ge(i):function $r(i){let e=chunk_ES2KDHJ2_Ge(19650218),r=1,t=0;for(let a=Math.max(624,i.length);0!==a;--a){let n=e[r-1]^e[r-1]>>>30;e[r]=chunk_ES2KDHJ2_Ee((e[r]^chunk_ES2KDHJ2_Ae(n,1664525))+i[t]+t),r++,t++,r>=624&&(e[0]=e[623],r=1),t>=i.length&&(t=0)}for(let a=623;0!==a;a--)e[r]=chunk_ES2KDHJ2_Ee((e[r]^chunk_ES2KDHJ2_Ae(e[r-1]^e[r-1]>>>30,1566083941))-r),r++,r>=624&&(e[0]=e[623],r=1);return e[0]=2147483648,e}(i)}function chunk_ES2KDHJ2_Ge(i){let e=Array.from({length:624});e[0]=i;for(let r=1;624!==r;++r){let t=e[r-1]^e[r-1]>>>30;e[r]=chunk_ES2KDHJ2_Ee(chunk_ES2KDHJ2_Ae(1812433253,t)+r)}return e}function chunk_ES2KDHJ2_xe(i){for(let r=0;227!==r;++r){let t=(2147483648&i[r])+(2147483647&i[r+1]);i[r]=i[r+397]^t>>>1^2567483615&-(1&t)}for(let r=227;623!==r;++r){let t=(2147483648&i[r])+(2147483647&i[r+1]);i[r]=i[r+397-624]^t>>>1^2567483615&-(1&t)}let e=(2147483648&i[623])+(2147483647&i[0]);return i[623]=i[396]^e>>>1^2567483615&-(1&e),i}var chunk_ES2KDHJ2_L=class{constructor(e=Math.random()*Number.MAX_SAFE_INTEGER,r=chunk_ES2KDHJ2_xe(chunk_ES2KDHJ2_Fe(e)),t=0){this.states=r,this.index=t}nextU32(){let e=this.states[this.index];return e^=this.states[this.index]>>>11,e^=e<<7&2636928640,e^=e<<15&4022730752,e^=e>>>18,++this.index>=624&&(this.states=chunk_ES2KDHJ2_xe(this.states),this.index=0),e>>>0}nextF32(){return 2.3283064365386963e-10*this.nextU32()}nextU53(){return 67108864*(this.nextU32()>>>5)+(this.nextU32()>>>6)}nextF53(){return 11102230246251565e-32*this.nextU53()}seed(e){this.states=chunk_ES2KDHJ2_xe(chunk_ES2KDHJ2_Fe(e)),this.index=0}};function chunk_ES2KDHJ2_P(){return Math.ceil(Math.random()*Number.MAX_SAFE_INTEGER)}var chunk_ES2KDHJ2_K=class extends chunk_ES2KDHJ2_x{boolean(e={}){"number"==typeof e&&(e={probability:e});let{probability:r=.5}=e;return!(r<=0)&&(r>=1||this.faker.number.float()<r)}};function chunk_ES2KDHJ2_S(i,e="refDate"){let r=new Date(i);if(Number.isNaN(r.valueOf()))throw new chunk_ES2KDHJ2_m(`Invalid ${e} date: ${i.toString()}`);return r}var chunk_ES2KDHJ2_j=()=>{throw new chunk_ES2KDHJ2_m("You cannot edit the locale data on the faker instance")};function chunk_ES2KDHJ2_Ue(i){let e={};return new Proxy(i,{has:()=>!0,get:(r,t)=>"symbol"==typeof t||"nodeType"===t?r[t]:t in e?e[t]:e[t]=function Ir(i,e={}){return new Proxy(e,{has:(r,t)=>null!=r[t],get(r,t){let a=r[t];return"symbol"==typeof t||"nodeType"===t||chunk_ES2KDHJ2_H(a,i,t.toString()),a},set:chunk_ES2KDHJ2_j,deleteProperty:chunk_ES2KDHJ2_j})}(t,r[t]),set:chunk_ES2KDHJ2_j,deleteProperty:chunk_ES2KDHJ2_j})}function chunk_ES2KDHJ2_H(i,...e){if(null===i)throw new chunk_ES2KDHJ2_m(`The locale data for '${e.join(".")}' aren't applicable to this locale.\n  If you think this is a bug, please report it at: https://github.com/faker-js/faker`);if(void 0===i)throw new chunk_ES2KDHJ2_m(`The locale data for '${e.join(".")}' are missing in this locale.\n  If this is a custom Faker instance, please make sure all required locales are used e.g. '[de_AT, de, en, base]'.\n  Please contribute the missing data to the project or use a locale/Faker instance that has these data.\n  For more information see https://fakerjs.dev/guide/localization.html`)}var chunk_ES2KDHJ2_B=class extends chunk_ES2KDHJ2_x{anytime(e={}){let{refDate:r=this.faker.defaultRefDate()}=e,t=chunk_ES2KDHJ2_S(r).getTime();return this.between({from:t-31536e6,to:t+31536e6})}past(e={}){let{years:r=1,refDate:t=this.faker.defaultRefDate()}=e;if(r<=0)throw new chunk_ES2KDHJ2_m("Years must be greater than 0.");let a=chunk_ES2KDHJ2_S(t).getTime();return this.between({from:a-365*r*24*3600*1e3,to:a-1e3})}future(e={}){let{years:r=1,refDate:t=this.faker.defaultRefDate()}=e;if(r<=0)throw new chunk_ES2KDHJ2_m("Years must be greater than 0.");let a=chunk_ES2KDHJ2_S(t).getTime();return this.between({from:a+1e3,to:a+365*r*24*3600*1e3})}between(e){if(null==e||null==e.from||null==e.to)throw new chunk_ES2KDHJ2_m("Must pass an options object with `from` and `to` values.");let{from:r,to:t}=e,a=chunk_ES2KDHJ2_S(r,"from").getTime(),n=chunk_ES2KDHJ2_S(t,"to").getTime();if(a>n)throw new chunk_ES2KDHJ2_m("`from` date must be before `to` date.");return new Date(this.faker.number.int({min:a,max:n}))}betweens(e){if(null==e||null==e.from||null==e.to)throw new chunk_ES2KDHJ2_m("Must pass an options object with `from` and `to` values.");let{from:r,to:t,count:a=3}=e;return this.faker.helpers.multiple((()=>this.between({from:r,to:t})),{count:a}).sort(((n,o)=>n.getTime()-o.getTime()))}recent(e={}){let{days:r=1,refDate:t=this.faker.defaultRefDate()}=e;if(r<=0)throw new chunk_ES2KDHJ2_m("Days must be greater than 0.");let a=chunk_ES2KDHJ2_S(t).getTime();return this.between({from:a-24*r*3600*1e3,to:a-1e3})}soon(e={}){let{days:r=1,refDate:t=this.faker.defaultRefDate()}=e;if(r<=0)throw new chunk_ES2KDHJ2_m("Days must be greater than 0.");let a=chunk_ES2KDHJ2_S(t).getTime();return this.between({from:a+1e3,to:a+24*r*3600*1e3})}birthdate(e={}){let{mode:r="age",min:t=18,max:a=80,refDate:n=this.faker.defaultRefDate(),mode:o,min:s,max:l}=e;if([s,l,o].filter((f=>null!=f)).length%3!=0)throw new chunk_ES2KDHJ2_m("The 'min', 'max', and 'mode' options must be set together.");let u=chunk_ES2KDHJ2_S(n),h=u.getUTCFullYear();switch(r){case"age":{let g=new Date(u).setUTCFullYear(h-a-1)+864e5,b=new Date(u).setUTCFullYear(h-t);if(g>b)throw new chunk_ES2KDHJ2_m(`Max age ${a} should be greater than or equal to min age ${t}.`);return this.between({from:g,to:b})}case"year":{let f=new Date(Date.UTC(0,0,2)).setUTCFullYear(t),g=new Date(Date.UTC(0,11,30)).setUTCFullYear(a);if(f>g)throw new chunk_ES2KDHJ2_m(`Max year ${a} should be greater than or equal to min year ${t}.`);return this.between({from:f,to:g})}}}},chunk_ES2KDHJ2_V=class extends chunk_ES2KDHJ2_B{constructor(r){super(r),this.faker=r}month(r={}){let o,{abbreviated:t=!1,context:a=!1}=r,n=this.faker.definitions.date.month;o=t?a&&null!=n.abbr_context?"abbr_context":"abbr":a&&null!=n.wide_context?"wide_context":"wide";let s=n[o];return chunk_ES2KDHJ2_H(s,"date.month",o),this.faker.helpers.arrayElement(s)}weekday(r={}){let o,{abbreviated:t=!1,context:a=!1}=r,n=this.faker.definitions.date.weekday;o=t?a&&null!=n.abbr_context?"abbr_context":"abbr":a&&null!=n.wide_context?"wide_context":"wide";let s=n[o];return chunk_ES2KDHJ2_H(s,"date.weekday",o),this.faker.helpers.arrayElement(s)}timeZone(){return this.faker.helpers.arrayElement(this.faker.definitions.date.time_zone)}},_r=/\.|\(/;function Fr(i,e,r){let[t,a]=function Gr(i){let e=i.indexOf(")",1);if(-1===e)throw new chunk_ES2KDHJ2_m(`Missing closing parenthesis in '${i}'`);for(;-1!==e;){let t=i.substring(1,e);try{return[e,JSON.parse(`[${t}]`)]}catch{if(!t.includes("'")&&!t.includes('"'))try{return[e,JSON.parse(`["${t}"]`)]}catch{}}e=i.indexOf(")",e+1)}e=i.lastIndexOf(")");let r=i.substring(1,e);return[e,[r]]}(i),n=i[t+1];switch(n){case".":case"(":case void 0:break;default:throw new chunk_ES2KDHJ2_m(`Expected dot ('.'), open parenthesis ('('), or nothing after function call but got '${n}'`)}return[t+("."===n?2:1),e.map((o=>"function"==typeof o?o(...a):(console.warn(`[@faker-js/faker]: Invoking expressions which are not functions is deprecated since v9.0 and will be removed in v10.0.\nPlease remove the parentheses or replace the expression with an actual function.\n${r}\n${" ".repeat(r.length-i.length)}^`),o)))]}function Or(i,e){let r=_r.exec(i),t="."===(r?.[0]??""),a=r?.index??i.length,n=i.substring(0,a);if(0===n.length)throw new chunk_ES2KDHJ2_m(`Expression parts cannot be empty in '${i}'`);let o=i[a+1];if(t&&(null==o||"."===o||"("===o))throw new chunk_ES2KDHJ2_m(`Found dot without property name in '${i}'`);return[a+(t?1:0),e.map((s=>function Ur(i,e){switch(typeof i){case"function":try{i=i()}catch{return}return i?.[e];case"object":return i?.[e];default:return}}(s,n)))]}function chunk_ES2KDHJ2_je(i){let e=function Kr(i){i=i.replaceAll(/[\s-]/g,"");let e=0,r=!1;for(let t=i.length-1;t>=0;t--){let a=Number.parseInt(i[t]);r&&(a*=2,a>9&&(a=a%10+1)),e+=a,r=!r}return e%10}(i.replace(/L?$/,"0"));return 0===e?0:10-e}function chunk_ES2KDHJ2_He(i,e,r,t){let a=1;if(e)switch(e){case"?":a=i.datatype.boolean()?0:1;break;case"*":{let n=1;for(;i.datatype.boolean();)n*=2;a=i.number.int({min:0,max:n});break}case"+":{let n=1;for(;i.datatype.boolean();)n*=2;a=i.number.int({min:1,max:n});break}default:throw new chunk_ES2KDHJ2_m("Unknown quantifier symbol provided.")}else null!=r&&null!=t?a=i.number.int({min:Number.parseInt(r),max:Number.parseInt(t)}):null!=r&&null==t&&(a=Number.parseInt(r));return a}function chunk_ES2KDHJ2_we(i,e="",r="#"){let t="";for(let a=0;a<e.length;a++)e.charAt(a)===r?t+=i.number.int(9):"!"===e.charAt(a)?t+=i.number.int({min:2,max:9}):t+=e.charAt(a);return t}var chunk_ES2KDHJ2_v=class extends chunk_ES2KDHJ2_x{slugify(e=""){return e.normalize("NFKD").replaceAll(/[\u0300-\u036F]/g,"").replaceAll(" ","-").replaceAll(/[^\w.-]+/g,"")}replaceSymbols(e=""){let r=["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],t="";for(let a=0;a<e.length;a++)"#"===e.charAt(a)?t+=this.faker.number.int(9):"?"===e.charAt(a)?t+=this.arrayElement(r):"*"===e.charAt(a)?t+=this.faker.datatype.boolean()?this.arrayElement(r):this.faker.number.int(9):t+=e.charAt(a);return t}replaceCreditCardSymbols(e="6453-####-####-####-###L",r="#"){e=function jr(i,e=""){let n,o,s,l,r=/(.)\{(\d+),(\d+)\}/,t=/(.)\{(\d+)\}/,a=/\[(\d+)-(\d+)\]/,c=r.exec(e);for(;null!=c;)n=Number.parseInt(c[2]),o=Number.parseInt(c[3]),n>o&&(s=o,o=n,n=s),l=i.number.int({min:n,max:o}),e=e.slice(0,c.index)+c[1].repeat(l)+e.slice(c.index+c[0].length),c=r.exec(e);for(c=t.exec(e);null!=c;)l=Number.parseInt(c[2]),e=e.slice(0,c.index)+c[1].repeat(l)+e.slice(c.index+c[0].length),c=t.exec(e);for(c=a.exec(e);null!=c;)n=Number.parseInt(c[1]),o=Number.parseInt(c[2]),n>o&&(s=o,o=n,n=s),e=e.slice(0,c.index)+i.number.int({min:n,max:o}).toString()+e.slice(c.index+c[0].length),c=a.exec(e);return e}(this.faker,e);let t=chunk_ES2KDHJ2_je(e=chunk_ES2KDHJ2_we(this.faker,e,r));return e.replace("L",String(t))}fromRegExp(e){let r=!1;e instanceof RegExp&&(r=e.flags.includes("i"),e=e.toString(),e=/\/(.+?)\//.exec(e)?.[1]??"");let t,a,n,o=/([.A-Za-z0-9])(?:\{(\d+)(?:,(\d+)|)\}|(\?|\*|\+))(?![^[]*]|[^{]*})/,s=o.exec(e);for(;null!=s;){let y,f=s[2],g=s[3],b=s[4];n=chunk_ES2KDHJ2_He(this.faker,b,f,g),y="."===s[1]?this.faker.string.alphanumeric(n):r?this.faker.string.fromCharacters([s[1].toLowerCase(),s[1].toUpperCase()],n):s[1].repeat(n),e=e.slice(0,s.index)+y+e.slice(s.index+s[0].length),s=o.exec(e)}let l=/(\d-\d|\w-\w|\d|\w|[-!@#$&()`.+,/"])/,c=/\[(\^|)(-|)(.+?)\](?:\{(\d+)(?:,(\d+)|)\}|(\?|\*|\+)|)/;for(s=c.exec(e);null!=s;){let f="^"===s[1],g="-"===s[2],b=s[4],y=s[5],N=s[6],k=[],_=s[3],C=l.exec(_);for(g&&k.push(45);null!=C;){if(C[0].includes("-")){let E=C[0].split("-").map((d=>d.codePointAt(0)??Number.NaN));if(t=E[0],a=E[1],t>a)throw new chunk_ES2KDHJ2_m("Character range provided is out of order.");for(let d=t;d<=a;d++)if(r&&Number.isNaN(Number(String.fromCodePoint(d)))){let Te=String.fromCodePoint(d);k.push(Te.toUpperCase().codePointAt(0)??Number.NaN,Te.toLowerCase().codePointAt(0)??Number.NaN)}else k.push(d)}else r&&Number.isNaN(Number(C[0]))?k.push(C[0].toUpperCase().codePointAt(0)??Number.NaN,C[0].toLowerCase().codePointAt(0)??Number.NaN):k.push(C[0].codePointAt(0)??Number.NaN);_=_.substring(C[0].length),C=l.exec(_)}if(n=chunk_ES2KDHJ2_He(this.faker,N,b,y),f){let E=-1;for(let d=48;d<=57;d++)E=k.indexOf(d),E>-1?k.splice(E,1):k.push(d);for(let d=65;d<=90;d++)E=k.indexOf(d),E>-1?k.splice(E,1):k.push(d);for(let d=97;d<=122;d++)E=k.indexOf(d),E>-1?k.splice(E,1):k.push(d)}let yr=this.multiple((()=>String.fromCodePoint(this.arrayElement(k))),{count:n}).join("");e=e.slice(0,s.index)+yr+e.slice(s.index+s[0].length),s=c.exec(e)}let u=/(.)\{(\d+),(\d+)\}/;for(s=u.exec(e);null!=s;){if(t=Number.parseInt(s[2]),a=Number.parseInt(s[3]),t>a)throw new chunk_ES2KDHJ2_m("Numbers out of order in {} quantifier.");n=this.faker.number.int({min:t,max:a}),e=e.slice(0,s.index)+s[1].repeat(n)+e.slice(s.index+s[0].length),s=u.exec(e)}let h=/(.)\{(\d+)\}/;for(s=h.exec(e);null!=s;)n=Number.parseInt(s[2]),e=e.slice(0,s.index)+s[1].repeat(n)+e.slice(s.index+s[0].length),s=h.exec(e);return e}shuffle(e,r={}){let{inplace:t=!1}=r;t||(e=[...e]);for(let a=e.length-1;a>0;--a){let n=this.faker.number.int(a);[e[a],e[n]]=[e[n],e[a]]}return e}uniqueArray(e,r){if(Array.isArray(e)){let n=[...new Set(e)];return this.shuffle(n).splice(0,r)}let t=new Set;try{if("function"==typeof e){let a=1e3*r,n=0;for(;t.size<r&&n<a;)t.add(e()),n++}}catch{}return[...t]}mustache(e,r){if(null==e)return"";for(let t in r){let a=new RegExp(`{{${t}}}`,"g"),n=r[t];"string"==typeof n&&(n=n.replaceAll("$","$$$$")),e=e.replace(a,n)}return e}maybe(e,r={}){if(this.faker.datatype.boolean(r))return e()}objectKey(e){let r=Object.keys(e);return this.arrayElement(r)}objectValue(e){return e[this.faker.helpers.objectKey(e)]}objectEntry(e){let r=this.faker.helpers.objectKey(e);return[r,e[r]]}arrayElement(e){if(0===e.length)throw new chunk_ES2KDHJ2_m("Cannot get value from empty dataset.");return e[e.length>1?this.faker.number.int({max:e.length-1}):0]}weightedArrayElement(e){if(0===e.length)throw new chunk_ES2KDHJ2_m("weightedArrayElement expects an array with at least one element");if(!e.every((n=>n.weight>0)))throw new chunk_ES2KDHJ2_m("weightedArrayElement expects an array of { weight, value } objects where weight is a positive number");let r=e.reduce(((n,{weight:o})=>n+o),0),t=this.faker.number.float({min:0,max:r}),a=0;for(let{weight:n,value:o}of e)if(a+=n,t<a)return o;return e.at(-1).value}arrayElements(e,r){if(0===e.length)return[];let t=this.rangeToNumber(r??{min:1,max:e.length});if(t>=e.length)return this.shuffle(e);if(t<=0)return[];let s,l,a=[...e],n=e.length,o=n-t;for(;n-- >o;)l=this.faker.number.int(n),s=a[l],a[l]=a[n],a[n]=s;return a.slice(o)}enumValue(e){let r=Object.keys(e).filter((a=>Number.isNaN(Number(a))));return e[this.arrayElement(r)]}rangeToNumber(e){return"number"==typeof e?e:this.faker.number.int(e)}multiple(e,r={}){let t=this.rangeToNumber(r.count??3);return t<=0?[]:Array.from({length:t},e)}},chunk_ES2KDHJ2_z=class extends chunk_ES2KDHJ2_v{constructor(r){super(r),this.faker=r}fake(r){let t=(r="string"==typeof r?r:this.arrayElement(r)).search(/{{[a-z]/),a=r.indexOf("}}",t);if(-1===t||-1===a)return r;let s=function chunk_ES2KDHJ2_Ke(i,e,r=[e,e.rawDefinitions]){if(0===i.length)throw new chunk_ES2KDHJ2_m("Eval expression cannot be empty.");if(0===r.length)throw new chunk_ES2KDHJ2_m("Eval entrypoints cannot be empty.");let t=r,a=i;do{let o;a.startsWith("(")?[o,t]=Fr(a,t,i):[o,t]=Or(a,t),a=a.substring(o),t=t.filter((s=>null!=s)).map((s=>Array.isArray(s)?e.helpers.arrayElement(s):s))}while(a.length>0&&t.length>0);if(0===t.length)throw new chunk_ES2KDHJ2_m(`Cannot resolve expression '${i}'`);let n=t[0];return"function"==typeof n?n():n}(r.substring(t+2,a+2).replace("}}","").replace("{{",""),this.faker),l=String(s),c=r.substring(0,t)+l+r.substring(a+2);return this.fake(c)}},chunk_ES2KDHJ2_W=class extends chunk_ES2KDHJ2_x{int(e={}){"number"==typeof e&&(e={max:e});let{min:r=0,max:t=Number.MAX_SAFE_INTEGER,multipleOf:a=1}=e;if(!Number.isInteger(a))throw new chunk_ES2KDHJ2_m("multipleOf should be an integer.");if(a<=0)throw new chunk_ES2KDHJ2_m("multipleOf should be greater than 0.");let n=Math.ceil(r/a),o=Math.floor(t/a);if(n===o)return n*a;if(o<n)throw new chunk_ES2KDHJ2_m(t>=r?`No suitable integer value between ${r} and ${t} found.`:`Max ${t} should be greater than min ${r}.`);let l=this.faker._randomizer.next(),c=o-n+1;return Math.floor(l*c+n)*a}float(e={}){"number"==typeof e&&(e={max:e});let{min:r=0,max:t=1,fractionDigits:a,multipleOf:n,multipleOf:o=(null==a?void 0:10**-a)}=e;if(t===r)return r;if(t<r)throw new chunk_ES2KDHJ2_m(`Max ${t} should be greater than min ${r}.`);if(null!=a){if(null!=n)throw new chunk_ES2KDHJ2_m("multipleOf and fractionDigits cannot be set at the same time.");if(!Number.isInteger(a))throw new chunk_ES2KDHJ2_m("fractionDigits should be an integer.");if(a<0)throw new chunk_ES2KDHJ2_m("fractionDigits should be greater than or equal to 0.")}if(null!=o){if(o<=0)throw new chunk_ES2KDHJ2_m("multipleOf should be greater than 0.");let c=Math.log10(o),u=o<1&&Number.isInteger(c)?10**-c:1/o;return this.int({min:r*u,max:t*u})/u}return this.faker._randomizer.next()*(t-r)+r}binary(e={}){"number"==typeof e&&(e={max:e});let{min:r=0,max:t=1}=e;return this.int({max:t,min:r}).toString(2)}octal(e={}){"number"==typeof e&&(e={max:e});let{min:r=0,max:t=7}=e;return this.int({max:t,min:r}).toString(8)}hex(e={}){"number"==typeof e&&(e={max:e});let{min:r=0,max:t=15}=e;return this.int({max:t,min:r}).toString(16)}bigInt(e={}){("bigint"==typeof e||"number"==typeof e||"string"==typeof e||"boolean"==typeof e)&&(e={max:e});let r=BigInt(e.min??0),t=BigInt(e.max??r+BigInt(999999999999999)),a=BigInt(e.multipleOf??1);if(t<r)throw new chunk_ES2KDHJ2_m(`Max ${t} should be larger than min ${r}.`);if(a<=BigInt(0))throw new chunk_ES2KDHJ2_m("multipleOf should be greater than 0.");let n=r/a+(r%a>0n?1n:0n),o=t/a-(t%a<0n?1n:0n);if(n===o)return n*a;if(o<n)throw new chunk_ES2KDHJ2_m(`No suitable bigint value between ${r} and ${t} found.`);let s=o-n+1n;return(n+BigInt(this.faker.string.numeric({length:s.toString(10).length,allowLeadingZeros:!0}))%s)*a}romanNumeral(e={}){"number"==typeof e&&(e={max:e});let{min:a=1,max:n=3999}=e;if(a<1)throw new chunk_ES2KDHJ2_m(`Min value ${a} should be 1 or greater.`);if(n>3999)throw new chunk_ES2KDHJ2_m(`Max value ${n} should be 3999 or less.`);let o=this.int({min:a,max:n}),s=[["M",1e3],["CM",900],["D",500],["CD",400],["C",100],["XC",90],["L",50],["XL",40],["X",10],["IX",9],["V",5],["IV",4],["I",1]],l="";for(let[c,u]of s)l+=c.repeat(Math.floor(o/u)),o%=u;return l}};var chunk_ES2KDHJ2_Y=[..."ABCDEFGHIJKLMNOPQRSTUVWXYZ"],chunk_ES2KDHJ2_Z=[..."abcdefghijklmnopqrstuvwxyz"],chunk_ES2KDHJ2_ze=[..."0123456789"],chunk_ES2KDHJ2_J=class extends chunk_ES2KDHJ2_x{fromCharacters(e,r=1){if((r=this.faker.helpers.rangeToNumber(r))<=0)return"";if("string"==typeof e&&(e=[...e]),0===e.length)throw new chunk_ES2KDHJ2_m("Unable to generate string: No characters to select from.");return this.faker.helpers.multiple((()=>this.faker.helpers.arrayElement(e)),{count:r}).join("")}alpha(e={}){"number"==typeof e&&(e={length:e});let r=this.faker.helpers.rangeToNumber(e.length??1);if(r<=0)return"";let n,{casing:t="mixed"}=e,{exclude:a=[]}=e;switch("string"==typeof a&&(a=[...a]),t){case"upper":n=[...chunk_ES2KDHJ2_Y];break;case"lower":n=[...chunk_ES2KDHJ2_Z];break;case"mixed":n=[...chunk_ES2KDHJ2_Z,...chunk_ES2KDHJ2_Y]}return n=n.filter((o=>!a.includes(o))),this.fromCharacters(n,r)}alphanumeric(e={}){"number"==typeof e&&(e={length:e});let r=this.faker.helpers.rangeToNumber(e.length??1);if(r<=0)return"";let{casing:t="mixed"}=e,{exclude:a=[]}=e;"string"==typeof a&&(a=[...a]);let n=[...chunk_ES2KDHJ2_ze];switch(t){case"upper":n.push(...chunk_ES2KDHJ2_Y);break;case"lower":n.push(...chunk_ES2KDHJ2_Z);break;case"mixed":n.push(...chunk_ES2KDHJ2_Z,...chunk_ES2KDHJ2_Y)}return n=n.filter((o=>!a.includes(o))),this.fromCharacters(n,r)}binary(e={}){let{prefix:r="0b"}=e,t=r;return t+=this.fromCharacters(["0","1"],e.length??1),t}octal(e={}){let{prefix:r="0o"}=e,t=r;return t+=this.fromCharacters(["0","1","2","3","4","5","6","7"],e.length??1),t}hexadecimal(e={}){let{casing:r="mixed",prefix:t="0x"}=e,a=this.faker.helpers.rangeToNumber(e.length??1);if(a<=0)return t;let n=this.fromCharacters(["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f","A","B","C","D","E","F"],a);return"upper"===r?n=n.toUpperCase():"lower"===r&&(n=n.toLowerCase()),`${t}${n}`}numeric(e={}){"number"==typeof e&&(e={length:e});let r=this.faker.helpers.rangeToNumber(e.length??1);if(r<=0)return"";let{allowLeadingZeros:t=!0}=e,{exclude:a=[]}=e;"string"==typeof a&&(a=[...a]);let n=chunk_ES2KDHJ2_ze.filter((s=>!a.includes(s)));if(0===n.length||1===n.length&&!t&&"0"===n[0])throw new chunk_ES2KDHJ2_m("Unable to generate numeric string, because all possible digits are excluded.");let o="";return!t&&!a.includes("0")&&(o+=this.faker.helpers.arrayElement(n.filter((s=>"0"!==s)))),o+=this.fromCharacters(n,r-o.length),o}sample(e=10){e=this.faker.helpers.rangeToNumber(e);let r={min:33,max:125},t="";for(;t.length<e;)t+=String.fromCodePoint(this.faker.number.int(r));return t}uuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replaceAll("x",(()=>this.faker.number.hex({min:0,max:15}))).replaceAll("y",(()=>this.faker.number.hex({min:8,max:11})))}ulid(e={}){let{refDate:r=this.faker.defaultRefDate()}=e;return function chunk_ES2KDHJ2_Ve(i){let e=i.valueOf(),r="";for(let t=10;t>0;t--){let a=e%32;r="0123456789ABCDEFGHJKMNPQRSTVWXYZ"[a]+r,e=(e-a)/32}return r}(chunk_ES2KDHJ2_S(r))+this.fromCharacters("0123456789ABCDEFGHJKMNPQRSTVWXYZ",16)}nanoid(e=21){if((e=this.faker.helpers.rangeToNumber(e))<=0)return"";let r=[{value:()=>this.alphanumeric(1),weight:62},{value:()=>this.faker.helpers.arrayElement(["_","-"]),weight:2}],t="";for(;t.length<e;){t+=this.faker.helpers.weightedArrayElement(r)()}return t}symbol(e=1){return this.fromCharacters(["!",'"',"#","$","%","&","'","(",")","*","+",",","-",".","/",":",";","<","=",">","?","@","[","\\","]","^","_","`","{","|","}","~"],e)}},chunk_ES2KDHJ2_$=class{_defaultRefDate=()=>new Date;get defaultRefDate(){return this._defaultRefDate}setDefaultRefDate(e=(()=>new Date)){this._defaultRefDate="function"==typeof e?e:()=>new Date(e)}_randomizer;datatype=new chunk_ES2KDHJ2_K(this);date=new chunk_ES2KDHJ2_B(this);helpers=new chunk_ES2KDHJ2_v(this);number=new chunk_ES2KDHJ2_W(this);string=new chunk_ES2KDHJ2_J(this);constructor(e={}){let{randomizer:r,seed:t}=e;null!=r&&null!=t&&r.seed(t),this._randomizer=r??function chunk_ES2KDHJ2_Oe(i=chunk_ES2KDHJ2_P()){let e=new chunk_ES2KDHJ2_L(i);return{next:()=>e.nextF53(),seed(r){e.seed(r)}}}(t)}seed(e=chunk_ES2KDHJ2_P()){return this._randomizer.seed(e),e}};new chunk_ES2KDHJ2_$;var chunk_ES2KDHJ2_X=class extends chunk_ES2KDHJ2_p{dog(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.dog)}cat(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.cat)}snake(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.snake)}bear(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.bear)}lion(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.lion)}cetacean(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.cetacean)}horse(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.horse)}bird(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.bird)}cow(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.cow)}fish(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.fish)}crocodilia(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.crocodilia)}insect(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.insect)}rabbit(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.rabbit)}rodent(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.rodent)}type(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.type)}petName(){return this.faker.helpers.arrayElement(this.faker.definitions.animal.pet_name)}},chunk_ES2KDHJ2_Q=class extends chunk_ES2KDHJ2_p{author(){return this.faker.helpers.arrayElement(this.faker.definitions.book.author)}format(){return this.faker.helpers.arrayElement(this.faker.definitions.book.format)}genre(){return this.faker.helpers.arrayElement(this.faker.definitions.book.genre)}publisher(){return this.faker.helpers.arrayElement(this.faker.definitions.book.publisher)}series(){return this.faker.helpers.arrayElement(this.faker.definitions.book.series)}title(){return this.faker.helpers.arrayElement(this.faker.definitions.book.title)}},Hr={0:[[1999999,2],[2279999,3],[2289999,4],[3689999,3],[3699999,4],[6389999,3],[6397999,4],[6399999,7],[6449999,3],[6459999,7],[6479999,3],[6489999,7],[6549999,3],[6559999,4],[6999999,3],[8499999,4],[8999999,5],[9499999,6],[9999999,7]],1:[[99999,3],[299999,2],[349999,3],[399999,4],[499999,3],[699999,2],[999999,4],[3979999,3],[5499999,4],[6499999,5],[6799999,4],[6859999,5],[7139999,4],[7169999,3],[7319999,4],[7399999,7],[7749999,5],[7753999,7],[7763999,5],[7764999,7],[7769999,5],[7782999,7],[7899999,5],[7999999,4],[8004999,5],[8049999,5],[8379999,5],[8384999,7],[8671999,5],[8675999,4],[8697999,5],[9159999,6],[9165059,7],[9168699,6],[9169079,7],[9195999,6],[9196549,7],[9729999,6],[9877999,4],[9911499,6],[9911999,7],[9989899,6],[9999999,7]]},chunk_ES2KDHJ2_q=class extends chunk_ES2KDHJ2_p{department(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.department)}productName(){return`${this.productAdjective()} ${this.productMaterial()} ${this.product()}`}price(e={}){let{dec:r=2,max:t=1e3,min:a=1,symbol:n=""}=e;if(a<0||t<0)return`${n}0`;if(a===t)return`${n}${a.toFixed(r)}`;let o=this.faker.number.float({min:a,max:t,fractionDigits:r});if(0===r)return`${n}${o.toFixed(r)}`;let c=.1**r,f=o-o*10**r%10*c+this.faker.helpers.weightedArrayElement([{weight:5,value:9},{weight:3,value:5},{weight:1,value:0},{weight:1,value:this.faker.number.int({min:0,max:9})}])*c;return a<=f&&f<=t?`${n}${f.toFixed(r)}`:`${n}${o.toFixed(r)}`}productAdjective(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_name.adjective)}productMaterial(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_name.material)}product(){return this.faker.helpers.arrayElement(this.faker.definitions.commerce.product_name.product)}productDescription(){return this.faker.helpers.fake(this.faker.definitions.commerce.product_description)}isbn(e={}){"number"==typeof e&&(e={variant:e});let{variant:r=13,separator:t="-"}=e,[n,o]=this.faker.helpers.objectEntry(Hr),s=this.faker.string.numeric(8),l=Number.parseInt(s.slice(0,-1)),c=o.find((([y])=>l<=y))?.[1];if(!c)throw new chunk_ES2KDHJ2_m(`Unable to find a registrant length for the group ${n}`);let f=["978",n,s.slice(0,c),s.slice(c)];10===r&&f.shift();let g=f.join(""),b=0;for(let y=0;y<r-1;y++){b+=(10===r?y+1:y%2?3:1)*Number.parseInt(g[y])}return b=10===r?b%11:(10-b%10)%10,f.push(10===b?"X":b.toString()),f.join(t)}},chunk_ES2KDHJ2_ee=class extends chunk_ES2KDHJ2_p{name(){return this.faker.helpers.fake(this.faker.definitions.company.name_pattern)}catchPhrase(){return[this.catchPhraseAdjective(),this.catchPhraseDescriptor(),this.catchPhraseNoun()].join(" ")}buzzPhrase(){return[this.buzzVerb(),this.buzzAdjective(),this.buzzNoun()].join(" ")}catchPhraseAdjective(){return this.faker.helpers.arrayElement(this.faker.definitions.company.adjective)}catchPhraseDescriptor(){return this.faker.helpers.arrayElement(this.faker.definitions.company.descriptor)}catchPhraseNoun(){return this.faker.helpers.arrayElement(this.faker.definitions.company.noun)}buzzAdjective(){return this.faker.helpers.arrayElement(this.faker.definitions.company.buzz_adjective)}buzzVerb(){return this.faker.helpers.arrayElement(this.faker.definitions.company.buzz_verb)}buzzNoun(){return this.faker.helpers.arrayElement(this.faker.definitions.company.buzz_noun)}},chunk_ES2KDHJ2_re=class extends chunk_ES2KDHJ2_p{column(){return this.faker.helpers.arrayElement(this.faker.definitions.database.column)}type(){return this.faker.helpers.arrayElement(this.faker.definitions.database.type)}collation(){return this.faker.helpers.arrayElement(this.faker.definitions.database.collation)}engine(){return this.faker.helpers.arrayElement(this.faker.definitions.database.engine)}mongodbObjectId(){return this.faker.string.hexadecimal({length:24,casing:"lower",prefix:""})}},Vr={alpha:["A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z"],formats:[{country:"AL",total:28,bban:[{type:"n",count:8},{type:"c",count:16}],format:"ALkk bbbs sssx cccc cccc cccc cccc"},{country:"AD",total:24,bban:[{type:"n",count:8},{type:"c",count:12}],format:"ADkk bbbb ssss cccc cccc cccc"},{country:"AT",total:20,bban:[{type:"n",count:5},{type:"n",count:11}],format:"ATkk bbbb bccc cccc cccc"},{country:"AZ",total:28,bban:[{type:"a",count:4},{type:"n",count:20}],format:"AZkk bbbb cccc cccc cccc cccc cccc"},{country:"BH",total:22,bban:[{type:"a",count:4},{type:"c",count:14}],format:"BHkk bbbb cccc cccc cccc cc"},{country:"BE",total:16,bban:[{type:"n",count:3},{type:"n",count:9}],format:"BEkk bbbc cccc ccxx"},{country:"BA",total:20,bban:[{type:"n",count:6},{type:"n",count:10}],format:"BAkk bbbs sscc cccc ccxx"},{country:"BR",total:29,bban:[{type:"n",count:13},{type:"n",count:10},{type:"a",count:1},{type:"c",count:1}],format:"BRkk bbbb bbbb ssss sccc cccc ccct n"},{country:"BG",total:22,bban:[{type:"a",count:4},{type:"n",count:6},{type:"c",count:8}],format:"BGkk bbbb ssss ddcc cccc cc"},{country:"CR",total:22,bban:[{type:"n",count:1},{type:"n",count:3},{type:"n",count:14}],format:"CRkk xbbb cccc cccc cccc cc"},{country:"HR",total:21,bban:[{type:"n",count:7},{type:"n",count:10}],format:"HRkk bbbb bbbc cccc cccc c"},{country:"CY",total:28,bban:[{type:"n",count:8},{type:"c",count:16}],format:"CYkk bbbs ssss cccc cccc cccc cccc"},{country:"CZ",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"CZkk bbbb ssss sscc cccc cccc"},{country:"DK",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"DKkk bbbb cccc cccc cc"},{country:"DO",total:28,bban:[{type:"a",count:4},{type:"n",count:20}],format:"DOkk bbbb cccc cccc cccc cccc cccc"},{country:"TL",total:23,bban:[{type:"n",count:3},{type:"n",count:16}],format:"TLkk bbbc cccc cccc cccc cxx"},{country:"EE",total:20,bban:[{type:"n",count:4},{type:"n",count:12}],format:"EEkk bbss cccc cccc cccx"},{country:"FO",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"FOkk bbbb cccc cccc cx"},{country:"FI",total:18,bban:[{type:"n",count:6},{type:"n",count:8}],format:"FIkk bbbb bbcc cccc cx"},{country:"FR",total:27,bban:[{type:"n",count:10},{type:"c",count:11},{type:"n",count:2}],format:"FRkk bbbb bggg ggcc cccc cccc cxx"},{country:"GE",total:22,bban:[{type:"a",count:2},{type:"n",count:16}],format:"GEkk bbcc cccc cccc cccc cc"},{country:"DE",total:22,bban:[{type:"n",count:8},{type:"n",count:10}],format:"DEkk bbbb bbbb cccc cccc cc"},{country:"GI",total:23,bban:[{type:"a",count:4},{type:"c",count:15}],format:"GIkk bbbb cccc cccc cccc ccc"},{country:"GR",total:27,bban:[{type:"n",count:7},{type:"c",count:16}],format:"GRkk bbbs sssc cccc cccc cccc ccc"},{country:"GL",total:18,bban:[{type:"n",count:4},{type:"n",count:10}],format:"GLkk bbbb cccc cccc cc"},{country:"GT",total:28,bban:[{type:"c",count:4},{type:"c",count:4},{type:"c",count:16}],format:"GTkk bbbb mmtt cccc cccc cccc cccc"},{country:"HU",total:28,bban:[{type:"n",count:8},{type:"n",count:16}],format:"HUkk bbbs sssk cccc cccc cccc cccx"},{country:"IS",total:26,bban:[{type:"n",count:6},{type:"n",count:16}],format:"ISkk bbbb sscc cccc iiii iiii ii"},{country:"IE",total:22,bban:[{type:"c",count:4},{type:"n",count:6},{type:"n",count:8}],format:"IEkk aaaa bbbb bbcc cccc cc"},{country:"IL",total:23,bban:[{type:"n",count:6},{type:"n",count:13}],format:"ILkk bbbn nncc cccc cccc ccc"},{country:"IT",total:27,bban:[{type:"a",count:1},{type:"n",count:10},{type:"c",count:12}],format:"ITkk xaaa aabb bbbc cccc cccc ccc"},{country:"JO",total:30,bban:[{type:"a",count:4},{type:"n",count:4},{type:"n",count:18}],format:"JOkk bbbb nnnn cccc cccc cccc cccc cc"},{country:"KZ",total:20,bban:[{type:"n",count:3},{type:"c",count:13}],format:"KZkk bbbc cccc cccc cccc"},{country:"XK",total:20,bban:[{type:"n",count:4},{type:"n",count:12}],format:"XKkk bbbb cccc cccc cccc"},{country:"KW",total:30,bban:[{type:"a",count:4},{type:"c",count:22}],format:"KWkk bbbb cccc cccc cccc cccc cccc cc"},{country:"LV",total:21,bban:[{type:"a",count:4},{type:"c",count:13}],format:"LVkk bbbb cccc cccc cccc c"},{country:"LB",total:28,bban:[{type:"n",count:4},{type:"c",count:20}],format:"LBkk bbbb cccc cccc cccc cccc cccc"},{country:"LI",total:21,bban:[{type:"n",count:5},{type:"c",count:12}],format:"LIkk bbbb bccc cccc cccc c"},{country:"LT",total:20,bban:[{type:"n",count:5},{type:"n",count:11}],format:"LTkk bbbb bccc cccc cccc"},{country:"LU",total:20,bban:[{type:"n",count:3},{type:"c",count:13}],format:"LUkk bbbc cccc cccc cccc"},{country:"MK",total:19,bban:[{type:"n",count:3},{type:"c",count:10},{type:"n",count:2}],format:"MKkk bbbc cccc cccc cxx"},{country:"MT",total:31,bban:[{type:"a",count:4},{type:"n",count:5},{type:"c",count:18}],format:"MTkk bbbb ssss sccc cccc cccc cccc ccc"},{country:"MR",total:27,bban:[{type:"n",count:10},{type:"n",count:13}],format:"MRkk bbbb bsss sscc cccc cccc cxx"},{country:"MU",total:30,bban:[{type:"a",count:4},{type:"n",count:4},{type:"n",count:15},{type:"a",count:3}],format:"MUkk bbbb bbss cccc cccc cccc 000d dd"},{country:"MC",total:27,bban:[{type:"n",count:10},{type:"c",count:11},{type:"n",count:2}],format:"MCkk bbbb bsss sscc cccc cccc cxx"},{country:"MD",total:24,bban:[{type:"c",count:2},{type:"c",count:18}],format:"MDkk bbcc cccc cccc cccc cccc"},{country:"ME",total:22,bban:[{type:"n",count:3},{type:"n",count:15}],format:"MEkk bbbc cccc cccc cccc xx"},{country:"NL",total:18,bban:[{type:"a",count:4},{type:"n",count:10}],format:"NLkk bbbb cccc cccc cc"},{country:"NO",total:15,bban:[{type:"n",count:4},{type:"n",count:7}],format:"NOkk bbbb cccc ccx"},{country:"PK",total:24,bban:[{type:"a",count:4},{type:"n",count:16}],format:"PKkk bbbb cccc cccc cccc cccc"},{country:"PS",total:29,bban:[{type:"c",count:4},{type:"n",count:9},{type:"n",count:12}],format:"PSkk bbbb xxxx xxxx xccc cccc cccc c"},{country:"PL",total:28,bban:[{type:"n",count:8},{type:"n",count:16}],format:"PLkk bbbs sssx cccc cccc cccc cccc"},{country:"PT",total:25,bban:[{type:"n",count:8},{type:"n",count:13}],format:"PTkk bbbb ssss cccc cccc cccx x"},{country:"QA",total:29,bban:[{type:"a",count:4},{type:"c",count:21}],format:"QAkk bbbb cccc cccc cccc cccc cccc c"},{country:"RO",total:24,bban:[{type:"a",count:4},{type:"c",count:16}],format:"ROkk bbbb cccc cccc cccc cccc"},{country:"SM",total:27,bban:[{type:"a",count:1},{type:"n",count:10},{type:"c",count:12}],format:"SMkk xaaa aabb bbbc cccc cccc ccc"},{country:"SA",total:24,bban:[{type:"n",count:2},{type:"c",count:18}],format:"SAkk bbcc cccc cccc cccc cccc"},{country:"RS",total:22,bban:[{type:"n",count:3},{type:"n",count:15}],format:"RSkk bbbc cccc cccc cccc xx"},{country:"SK",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"SKkk bbbb ssss sscc cccc cccc"},{country:"SI",total:19,bban:[{type:"n",count:5},{type:"n",count:10}],format:"SIkk bbss sccc cccc cxx"},{country:"ES",total:24,bban:[{type:"n",count:10},{type:"n",count:10}],format:"ESkk bbbb gggg xxcc cccc cccc"},{country:"SE",total:24,bban:[{type:"n",count:3},{type:"n",count:17}],format:"SEkk bbbc cccc cccc cccc cccc"},{country:"CH",total:21,bban:[{type:"n",count:5},{type:"c",count:12}],format:"CHkk bbbb bccc cccc cccc c"},{country:"TN",total:24,bban:[{type:"n",count:5},{type:"n",count:15}],format:"TNkk bbss sccc cccc cccc cccc"},{country:"TR",total:26,bban:[{type:"n",count:5},{type:"n",count:1},{type:"n",count:16}],format:"TRkk bbbb bxcc cccc cccc cccc cc"},{country:"AE",total:23,bban:[{type:"n",count:3},{type:"n",count:16}],format:"AEkk bbbc cccc cccc cccc ccc"},{country:"GB",total:22,bban:[{type:"a",count:4},{type:"n",count:6},{type:"n",count:8}],format:"GBkk bbbb ssss sscc cccc cc"},{country:"VG",total:24,bban:[{type:"a",count:4},{type:"n",count:16}],format:"VGkk bbbb cccc cccc cccc cccc"}],iso3166:["AD","AE","AF","AG","AI","AL","AM","AO","AQ","AR","AS","AT","AU","AW","AX","AZ","BA","BB","BD","BE","BF","BG","BH","BI","BJ","BL","BM","BN","BO","BQ","BR","BS","BT","BV","BW","BY","BZ","CA","CC","CD","CF","CG","CH","CI","CK","CL","CM","CN","CO","CR","CU","CV","CW","CX","CY","CZ","DE","DJ","DK","DM","DO","DZ","EC","EE","EG","EH","ER","ES","ET","FI","FJ","FK","FM","FO","FR","GA","GB","GD","GE","GF","GG","GH","GI","GL","GM","GN","GP","GQ","GR","GS","GT","GU","GW","GY","HK","HM","HN","HR","HT","HU","ID","IE","IL","IM","IN","IO","IQ","IR","IS","IT","JE","JM","JO","JP","KE","KG","KH","KI","KM","KN","KP","KR","KW","KY","KZ","LA","LB","LC","LI","LK","LR","LS","LT","LU","LV","LY","MA","MC","MD","ME","MF","MG","MH","MK","ML","MM","MN","MO","MP","MQ","MR","MS","MT","MU","MV","MW","MX","MY","MZ","NA","NC","NE","NF","NG","NI","NL","NO","NP","NR","NU","NZ","OM","PA","PE","PF","PG","PH","PK","PL","PM","PN","PR","PS","PT","PW","PY","QA","RE","RO","RS","RU","RW","SA","SB","SC","SD","SE","SG","SH","SI","SJ","SK","SL","SM","SN","SO","SR","SS","ST","SV","SX","SY","SZ","TC","TD","TF","TG","TH","TJ","TK","TL","TM","TN","TO","TR","TT","TV","TW","TZ","UA","UG","UM","US","UY","UZ","VA","VC","VE","VG","VI","VN","VU","WF","WS","XK","YE","YT","ZA","ZM","ZW"],mod97:i=>{let e=0;for(let r of i)e=(10*e+ +r)%97;return e},pattern10:["01","02","03","04","05","06","07","08","09"],pattern100:["001","002","003","004","005","006","007","008","009"],toDigitString:i=>i.replaceAll(/[A-Z]/gi,(e=>String((e.toUpperCase().codePointAt(0)??Number.NaN)-55)))},chunk_ES2KDHJ2_M=Vr;var chunk_ES2KDHJ2_te=class extends chunk_ES2KDHJ2_p{accountNumber(e={}){"number"==typeof e&&(e={length:e});let{length:r=8}=e;return this.faker.string.numeric({length:r,allowLeadingZeros:!0})}accountName(){return[this.faker.helpers.arrayElement(this.faker.definitions.finance.account_type),"Account"].join(" ")}routingNumber(){let e=this.faker.string.numeric({length:8,allowLeadingZeros:!0}),r=0;for(let t=0;t<e.length;t+=3)r+=3*Number(e[t]),r+=7*Number(e[t+1]),r+=Number(e[t+2])||0;return`${e}${10*Math.ceil(r/10)-r}`}maskedNumber(e={}){chunk_ES2KDHJ2_w({deprecated:"faker.finance.maskedNumber()",proposed:"faker.finance.iban().replace(/(?<=.{4})\\w(?=.{2})/g, '*') or a similar approach",since:"9.3.0",until:"10.0.0"}),"number"==typeof e&&(e={length:e});let{ellipsis:r=!0,length:t=4,parens:a=!0}=e,n=this.faker.string.numeric({length:t});return r&&(n=`...${n}`),a&&(n=`(${n})`),n}amount(e={}){let{autoFormat:r=!1,dec:t=2,max:a=1e3,min:n=0,symbol:o=""}=e,s=this.faker.number.float({max:a,min:n,fractionDigits:t});return o+(r?s.toLocaleString(void 0,{minimumFractionDigits:t}):s.toFixed(t))}transactionType(){return this.faker.helpers.arrayElement(this.faker.definitions.finance.transaction_type)}currency(){return this.faker.helpers.arrayElement(this.faker.definitions.finance.currency)}currencyCode(){return this.currency().code}currencyName(){return this.currency().name}currencySymbol(){let e;do{e=this.currency().symbol}while(0===e.length);return e}currencyNumericCode(){return this.currency().numericCode}bitcoinAddress(e={}){let{type:r=this.faker.helpers.enumValue(chunk_ES2KDHJ2_be),network:t="mainnet"}=e,a=chunk_ES2KDHJ2_Be[r],n=a.prefix[t],o=this.faker.number.int(a.length);return n+this.faker.string.alphanumeric({length:o-n.length,casing:a.casing,exclude:a.exclude})}litecoinAddress(){let e=this.faker.number.int({min:26,max:33});return this.faker.string.fromCharacters("LM3")+this.faker.string.fromCharacters("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ",e-1)}creditCardNumber(e={}){"string"==typeof e&&(e={issuer:e});let t,{issuer:r=""}=e,a=this.faker.definitions.finance.credit_card,n=r.toLowerCase();if(n in a)t=this.faker.helpers.arrayElement(a[n]);else if(r.includes("#"))t=r;else{let o=this.faker.helpers.objectValue(a);t=this.faker.helpers.arrayElement(o)}return t=t.replaceAll("/",""),this.faker.helpers.replaceCreditCardSymbols(t)}creditCardCVV(){return this.faker.string.numeric({length:3,allowLeadingZeros:!0})}creditCardIssuer(){return this.faker.helpers.objectKey(this.faker.definitions.finance.credit_card)}pin(e={}){"number"==typeof e&&(e={length:e});let{length:r=4}=e;if(r<1)throw new chunk_ES2KDHJ2_m("minimum length is 1");return this.faker.string.numeric({length:r,allowLeadingZeros:!0})}ethereumAddress(){return this.faker.string.hexadecimal({length:40,casing:"lower"})}iban(e={}){let{countryCode:r,formatted:t=!1}=e,a=r?chunk_ES2KDHJ2_M.formats.find((c=>c.country===r)):this.faker.helpers.arrayElement(chunk_ES2KDHJ2_M.formats);if(!a)throw new chunk_ES2KDHJ2_m(`Country code ${r} not supported.`);let n="",o=0;for(let c of a.bban){let u=c.count;for(o+=c.count;u>0;)"a"===c.type?n+=this.faker.helpers.arrayElement(chunk_ES2KDHJ2_M.alpha):"c"===c.type?this.faker.datatype.boolean(.8)?n+=this.faker.number.int(9):n+=this.faker.helpers.arrayElement(chunk_ES2KDHJ2_M.alpha):u>=3&&this.faker.datatype.boolean(.3)?this.faker.datatype.boolean()?(n+=this.faker.helpers.arrayElement(chunk_ES2KDHJ2_M.pattern100),u-=2):(n+=this.faker.helpers.arrayElement(chunk_ES2KDHJ2_M.pattern10),u--):n+=this.faker.number.int(9),u--;n=n.substring(0,o)}let s=98-chunk_ES2KDHJ2_M.mod97(chunk_ES2KDHJ2_M.toDigitString(`${n}${a.country}00`));s<10&&(s=`0${s}`);let l=`${a.country}${s}${n}`;return t?function zr(i){let e="";for(let r=0;r<i.length;r+=4)e+=`${i.substring(r,r+4)} `;return e.trimEnd()}(l):l}bic(e={}){let{includeBranchCode:r=this.faker.datatype.boolean()}=e;return`${this.faker.string.alpha({length:4,casing:"upper"})}${this.faker.helpers.arrayElement(chunk_ES2KDHJ2_M.iso3166)}${this.faker.string.alphanumeric({length:2,casing:"upper"})}${r?this.faker.datatype.boolean()?this.faker.string.alphanumeric({length:3,casing:"upper"}):"XXX":""}`}transactionDescription(){return this.faker.helpers.fake(this.faker.definitions.finance.transaction_description_pattern)}};function chunk_ES2KDHJ2_Ye(i){return i.split(" ").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" ")}var chunk_ES2KDHJ2_ae=class extends chunk_ES2KDHJ2_p{adjective(){return this.faker.helpers.arrayElement(this.faker.definitions.food.adjective)}description(){return this.faker.helpers.fake(this.faker.definitions.food.description_pattern)}dish(){return this.faker.datatype.boolean()?chunk_ES2KDHJ2_Ye(this.faker.helpers.fake(this.faker.definitions.food.dish_pattern)):chunk_ES2KDHJ2_Ye(this.faker.helpers.arrayElement(this.faker.definitions.food.dish))}ethnicCategory(){return this.faker.helpers.arrayElement(this.faker.definitions.food.ethnic_category)}fruit(){return this.faker.helpers.arrayElement(this.faker.definitions.food.fruit)}ingredient(){return this.faker.helpers.arrayElement(this.faker.definitions.food.ingredient)}meat(){return this.faker.helpers.arrayElement(this.faker.definitions.food.meat)}spice(){return this.faker.helpers.arrayElement(this.faker.definitions.food.spice)}vegetable(){return this.faker.helpers.arrayElement(this.faker.definitions.food.vegetable)}},chunk_ES2KDHJ2_ne=class extends chunk_ES2KDHJ2_p{branch(){return`${this.faker.hacker.noun().replace(" ","-")}-${this.faker.hacker.verb().replace(" ","-")}`}commitEntry(e={}){let{merge:r=this.faker.datatype.boolean({probability:.2}),eol:t="CRLF",refDate:a}=e,n=[`commit ${this.faker.git.commitSha()}`];r&&n.push(`Merge: ${this.commitSha({length:7})} ${this.commitSha({length:7})}`);let o=this.faker.person.firstName(),s=this.faker.person.lastName(),l=this.faker.person.fullName({firstName:o,lastName:s}),c=this.faker.internet.username({firstName:o,lastName:s}),u=this.faker.helpers.arrayElement([l,c]),h=this.faker.internet.email({firstName:o,lastName:s});u=u.replaceAll(/^[.,:;"\\']|[<>\n]|[.,:;"\\']$/g,""),n.push(`Author: ${u} <${h}>`,`Date: ${this.commitDate({refDate:a})}`,"",`${" ".repeat(4)}${this.commitMessage()}`,"");let f="CRLF"===t?"\r\n":"\n";return n.join(f)}commitMessage(){return`${this.faker.hacker.verb()} ${this.faker.hacker.adjective()} ${this.faker.hacker.noun()}`}commitDate(e={}){let{refDate:r=this.faker.defaultRefDate()}=e,n=this.faker.date.recent({days:1,refDate:r}),o=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][n.getUTCDay()],s=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"][n.getUTCMonth()],l=n.getUTCDate(),c=n.getUTCHours().toString().padStart(2,"0"),u=n.getUTCMinutes().toString().padStart(2,"0"),h=n.getUTCSeconds().toString().padStart(2,"0"),f=n.getUTCFullYear(),g=this.faker.number.int({min:-11,max:12});return`${o} ${s} ${l} ${c}:${u}:${h} ${f} ${g>=0?"+":"-"}${Math.abs(g).toString().padStart(2,"0")}00`}commitSha(e={}){let{length:r=40}=e;return this.faker.string.hexadecimal({length:r,casing:"lower",prefix:""})}},chunk_ES2KDHJ2_ie=class extends chunk_ES2KDHJ2_p{abbreviation(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.abbreviation)}adjective(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.adjective)}noun(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.noun)}verb(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.verb)}ingverb(){return this.faker.helpers.arrayElement(this.faker.definitions.hacker.ingverb)}phrase(){let e={abbreviation:this.abbreviation,adjective:this.adjective,ingverb:this.ingverb,noun:this.noun,verb:this.verb},r=this.faker.helpers.arrayElement(this.faker.definitions.hacker.phrase);return this.faker.helpers.mustache(r,e)}},chunk_ES2KDHJ2_oe=class extends chunk_ES2KDHJ2_p{avatar(){return this.faker.helpers.arrayElement([this.personPortrait,this.avatarGitHub])()}avatarGitHub(){return`https://avatars.githubusercontent.com/u/${this.faker.number.int(1e8)}`}personPortrait(e={}){let{sex:r=this.faker.person.sexType(),size:t=512}=e;return`https://cdn.jsdelivr.net/gh/faker-js/assets-person-portrait/${r}/${t}/${this.faker.number.int({min:0,max:99})}.jpg`}avatarLegacy(){return chunk_ES2KDHJ2_w({deprecated:"faker.image.avatarLegacy()",proposed:"faker.image.avatar() or faker.image.personPortrait()",since:"9.0.2",until:"10.0.0"}),`https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/${this.faker.number.int(1249)}.jpg`}url(e={}){let{width:r=this.faker.number.int({min:1,max:3999}),height:t=this.faker.number.int({min:1,max:3999})}=e;return this.faker.helpers.arrayElement([this.urlLoremFlickr,({width:n,height:o})=>this.urlPicsumPhotos({width:n,height:o,grayscale:!1,blur:0})])({width:r,height:t})}urlLoremFlickr(e={}){let{width:r=this.faker.number.int({min:1,max:3999}),height:t=this.faker.number.int({min:1,max:3999}),category:a}=e;return`https://loremflickr.com/${r}/${t}${null==a?"":`/${a}`}?lock=${this.faker.number.int()}`}urlPicsumPhotos(e={}){let{width:r=this.faker.number.int({min:1,max:3999}),height:t=this.faker.number.int({min:1,max:3999}),grayscale:a=this.faker.datatype.boolean(),blur:n=this.faker.number.int({max:10})}=e,o=`https://picsum.photos/seed/${this.faker.string.alphanumeric({length:{min:5,max:10}})}/${r}/${t}`,s="number"==typeof n&&n>=1&&n<=10;return(a||s)&&(o+="?",a&&(o+="grayscale"),a&&s&&(o+="&"),s&&(o+=`blur=${n}`)),o}urlPlaceholder(e={}){chunk_ES2KDHJ2_w({deprecated:"faker.image.urlPlaceholder()",proposed:"faker.image.url() or faker.image.dataUri()",since:"9.4.0",until:"10.0.0"});let{width:r=this.faker.number.int({min:1,max:3500}),height:t=this.faker.number.int({min:1,max:3500}),backgroundColor:a=this.faker.color.rgb({format:"hex",prefix:""}),textColor:n=this.faker.color.rgb({format:"hex",prefix:""}),format:o=this.faker.helpers.arrayElement(["gif","jpeg","jpg","png","webp"]),text:s=this.faker.lorem.words()}=e,l="https://via.placeholder.com";return l+=`/${r}`,l+=`x${t}`,l+=`/${a}`,l+=`/${n}`,l+=`.${o}`,l+=`?text=${encodeURIComponent(s)}`,l}dataUri(e={}){let{width:r=this.faker.number.int({min:1,max:3999}),height:t=this.faker.number.int({min:1,max:3999}),color:a=this.faker.color.rgb(),type:n=this.faker.helpers.arrayElement(["svg-uri","svg-base64"])}=e,o=`<svg xmlns="http://www.w3.org/2000/svg" version="1.1" baseProfile="full" width="${r}" height="${t}"><rect width="100%" height="100%" fill="${a}"/><text x="${r/2}" y="${t/2}" font-size="20" alignment-baseline="middle" text-anchor="middle" fill="white">${r}x${t}</text></svg>`;return"svg-uri"===n?`data:image/svg+xml;charset=UTF-8,${encodeURIComponent(o)}`:`data:image/svg+xml;base64,${chunk_ES2KDHJ2_de(o)}`}},chunk_ES2KDHJ2_se=class extends chunk_ES2KDHJ2_p{zipCode(e={}){"string"==typeof e&&(e={format:e});let{state:r}=e;if(null!=r){let a=this.faker.definitions.location.postcode_by_state[r];if(null==a)throw new chunk_ES2KDHJ2_m(`No zip code definition found for state "${r}"`);return this.faker.helpers.fake(a)}let{format:t=this.faker.definitions.location.postcode}=e;return"string"==typeof t&&(t=[t]),t=this.faker.helpers.arrayElement(t),this.faker.helpers.replaceSymbols(t)}city(){return this.faker.helpers.fake(this.faker.definitions.location.city_pattern)}buildingNumber(){return this.faker.helpers.arrayElement(this.faker.definitions.location.building_number).replaceAll(/#+/g,(e=>this.faker.string.numeric({length:e.length,allowLeadingZeros:!1})))}street(){return this.faker.helpers.fake(this.faker.definitions.location.street_pattern)}streetAddress(e={}){"boolean"==typeof e&&(e={useFullAddress:e});let{useFullAddress:r}=e,a=this.faker.definitions.location.street_address[r?"full":"normal"];return this.faker.helpers.fake(a)}secondaryAddress(){return this.faker.helpers.fake(this.faker.definitions.location.secondary_address).replaceAll(/#+/g,(e=>this.faker.string.numeric({length:e.length,allowLeadingZeros:!1})))}county(){return this.faker.helpers.arrayElement(this.faker.definitions.location.county)}country(){return this.faker.helpers.arrayElement(this.faker.definitions.location.country)}continent(){return this.faker.helpers.arrayElement(this.faker.definitions.location.continent)}countryCode(e={}){"string"==typeof e&&(e={variant:e});let{variant:r="alpha-2"}=e,t=(()=>{switch(r){case"numeric":return"numeric";case"alpha-3":return"alpha3";case"alpha-2":return"alpha2"}})();return this.faker.helpers.arrayElement(this.faker.definitions.location.country_code)[t]}state(e={}){let{abbreviated:r=!1}=e,t=r?this.faker.definitions.location.state_abbr:this.faker.definitions.location.state;return this.faker.helpers.arrayElement(t)}latitude(e={}){let{max:r=90,min:t=-90,precision:a=4}=e;return this.faker.number.float({min:t,max:r,fractionDigits:a})}longitude(e={}){let{max:r=180,min:t=-180,precision:a=4}=e;return this.faker.number.float({max:r,min:t,fractionDigits:a})}direction(e={}){let{abbreviated:r=!1}=e;return r?this.faker.helpers.arrayElement([...this.faker.definitions.location.direction.cardinal_abbr,...this.faker.definitions.location.direction.ordinal_abbr]):this.faker.helpers.arrayElement([...this.faker.definitions.location.direction.cardinal,...this.faker.definitions.location.direction.ordinal])}cardinalDirection(e={}){let{abbreviated:r=!1}=e;return r?this.faker.helpers.arrayElement(this.faker.definitions.location.direction.cardinal_abbr):this.faker.helpers.arrayElement(this.faker.definitions.location.direction.cardinal)}ordinalDirection(e={}){let{abbreviated:r=!1}=e;return r?this.faker.helpers.arrayElement(this.faker.definitions.location.direction.ordinal_abbr):this.faker.helpers.arrayElement(this.faker.definitions.location.direction.ordinal)}nearbyGPSCoordinate(e={}){let{origin:r,radius:t=10,isMetric:a=!1}=e;if(null==r)return[this.latitude(),this.longitude()];let n=this.faker.number.float({max:2*Math.PI,fractionDigits:5}),o=a?t:1.60934*t,u=.995*this.faker.number.float({max:o,fractionDigits:3})/(4e4/360),h=[r[0]+Math.sin(n)*u,r[1]+Math.cos(n)*u];return h[0]=h[0]%180,(h[0]<-90||h[0]>90)&&(h[0]=180*Math.sign(h[0])-h[0],h[1]+=180),h[1]=(h[1]%360+540)%360-180,[h[0],h[1]]}timeZone(){return this.faker.helpers.arrayElement(this.faker.definitions.location.time_zone)}language(){return this.faker.helpers.arrayElement(this.faker.definitions.location.language)}};var chunk_ES2KDHJ2_Me={fail:()=>{throw new chunk_ES2KDHJ2_m("No words found that match the given length.")},closest:(i,e)=>{let r=function chunk_ES2KDHJ2_Ze(i,e,r=(t=>t)){let t={};for(let a of i){let n=e(a);void 0===t[n]&&(t[n]=[]),t[n].push(r(a))}return t}(i,(s=>s.length)),t=Object.keys(r).map(Number),a=Math.min(...t),n=Math.max(...t),o=Math.min(e.min-a,n-e.max);return i.filter((s=>s.length===e.min-o||s.length===e.max+o))},shortest:i=>{let e=Math.min(...i.map((r=>r.length)));return i.filter((r=>r.length===e))},longest:i=>{let e=Math.max(...i.map((r=>r.length)));return i.filter((r=>r.length===e))},"any-length":i=>[...i]};function chunk_ES2KDHJ2_T(i){let{wordList:e,length:r,strategy:t="any-length"}=i;if(null!=r){let a="number"==typeof r?o=>o.length===r:o=>o.length>=r.min&&o.length<=r.max,n=e.filter(a);return n.length>0?n:"number"==typeof r?chunk_ES2KDHJ2_Me[t](e,{min:r,max:r}):chunk_ES2KDHJ2_Me[t](e,r)}return"shortest"===t||"longest"===t?chunk_ES2KDHJ2_Me[t](e):[...e]}var chunk_ES2KDHJ2_ce=class extends chunk_ES2KDHJ2_p{word(e={}){return"number"==typeof e&&(e={length:e}),this.faker.helpers.arrayElement(chunk_ES2KDHJ2_T({...e,wordList:this.faker.definitions.lorem.word}))}words(e=3){return this.faker.helpers.multiple((()=>this.word()),{count:e}).join(" ")}sentence(e={min:3,max:10}){let r=this.words(e);return`${r.charAt(0).toUpperCase()+r.substring(1)}.`}slug(e=3){let r=this.words(e);return this.faker.helpers.slugify(r)}sentences(e={min:2,max:6},r=" "){return this.faker.helpers.multiple((()=>this.sentence()),{count:e}).join(r)}paragraph(e=3){return this.sentences(e)}paragraphs(e=3,r="\n"){return this.faker.helpers.multiple((()=>this.paragraph()),{count:e}).join(r)}text(){return this[this.faker.helpers.arrayElement(["sentence","sentences","paragraph","paragraphs","lines"])]()}lines(e={min:1,max:5}){return this.sentences(e,"\n")}},chunk_ES2KDHJ2_le=class extends chunk_ES2KDHJ2_p{album(){return this.faker.helpers.arrayElement(this.faker.definitions.music.album)}artist(){return this.faker.helpers.arrayElement(this.faker.definitions.music.artist)}genre(){return this.faker.helpers.arrayElement(this.faker.definitions.music.genre)}songName(){return this.faker.helpers.arrayElement(this.faker.definitions.music.song_name)}},chunk_ES2KDHJ2_me=class extends chunk_ES2KDHJ2_p{number(e={}){let{style:r="human"}=e,a=this.faker.definitions.phone_number.format[r];if(!a)throw new Error(`No definitions for ${r} in this locale`);let n=this.faker.helpers.arrayElement(a);return chunk_ES2KDHJ2_we(this.faker,n)}imei(){return this.faker.helpers.replaceCreditCardSymbols("##-######-######-L","#")}},chunk_ES2KDHJ2_ue=class extends chunk_ES2KDHJ2_p{chemicalElement(){return this.faker.helpers.arrayElement(this.faker.definitions.science.chemical_element)}unit(){return this.faker.helpers.arrayElement(this.faker.definitions.science.unit)}},Yr=["video","audio","image","text","application"],Zr=["application/pdf","audio/mpeg","audio/wav","image/png","image/jpeg","image/gif","video/mp4","video/mpeg","text/html"],Jr=["en","wl","ww"],chunk_ES2KDHJ2_Je={index:"o",slot:"s",mac:"x",pci:"p"},Xr=["SUN","MON","TUE","WED","THU","FRI","SAT"],chunk_ES2KDHJ2_pe=class extends chunk_ES2KDHJ2_p{fileName(e={}){let{extensionCount:r=1}=e,t=this.faker.word.words().toLowerCase().replaceAll(/\W/g,"_"),a=this.faker.helpers.multiple((()=>this.fileExt()),{count:r}).join(".");return 0===a.length?t:`${t}.${a}`}commonFileName(e){return`${this.fileName({extensionCount:0})}.${e||this.commonFileExt()}`}mimeType(){let e=Object.keys(this.faker.definitions.system.mime_type);return this.faker.helpers.arrayElement(e)}commonFileType(){return this.faker.helpers.arrayElement(Yr)}commonFileExt(){return this.fileExt(this.faker.helpers.arrayElement(Zr))}fileType(){let e=this.faker.definitions.system.mime_type,r=new Set(Object.keys(e).map((t=>t.split("/")[0])));return this.faker.helpers.arrayElement([...r])}fileExt(e){let r=this.faker.definitions.system.mime_type;if("string"==typeof e)return this.faker.helpers.arrayElement(r[e].extensions);let t=new Set(Object.values(r).flatMap((({extensions:a})=>a)));return this.faker.helpers.arrayElement([...t])}directoryPath(){let e=this.faker.definitions.system.directory_path;return this.faker.helpers.arrayElement(e)}filePath(){return`${this.directoryPath()}/${this.fileName()}`}semver(){return[this.faker.number.int(9),this.faker.number.int(20),this.faker.number.int(20)].join(".")}networkInterface(e={}){let a,{interfaceType:r=this.faker.helpers.arrayElement(Jr),interfaceSchema:t=this.faker.helpers.objectKey(chunk_ES2KDHJ2_Je)}=e,n="";switch(t){case"index":a=this.faker.string.numeric();break;case"slot":a=`${this.faker.string.numeric()}${this.faker.helpers.maybe((()=>`f${this.faker.string.numeric()}`))??""}${this.faker.helpers.maybe((()=>`d${this.faker.string.numeric()}`))??""}`;break;case"mac":a=this.faker.internet.mac("");break;case"pci":n=this.faker.helpers.maybe((()=>`P${this.faker.string.numeric()}`))??"",a=`${this.faker.string.numeric()}s${this.faker.string.numeric()}${this.faker.helpers.maybe((()=>`f${this.faker.string.numeric()}`))??""}${this.faker.helpers.maybe((()=>`d${this.faker.string.numeric()}`))??""}`}return`${n}${r}${chunk_ES2KDHJ2_Je[t]}${a}`}cron(e={}){let{includeYear:r=!1,includeNonStandard:t=!1}=e,a=[this.faker.number.int(59),"*"],n=[this.faker.number.int(23),"*"],o=[this.faker.number.int({min:1,max:31}),"*","?"],s=[this.faker.number.int({min:1,max:12}),"*"],l=[this.faker.number.int(6),this.faker.helpers.arrayElement(Xr),"*","?"],c=[this.faker.number.int({min:1970,max:2099}),"*"],u=this.faker.helpers.arrayElement(a),h=this.faker.helpers.arrayElement(n),f=this.faker.helpers.arrayElement(o),g=this.faker.helpers.arrayElement(s),b=this.faker.helpers.arrayElement(l),y=this.faker.helpers.arrayElement(c),N=`${u} ${h} ${f} ${g} ${b}`;r&&(N+=` ${y}`);return!t||this.faker.datatype.boolean()?N:this.faker.helpers.arrayElement(["@annually","@daily","@hourly","@monthly","@reboot","@weekly","@yearly"])}},chunk_ES2KDHJ2_he=class extends chunk_ES2KDHJ2_p{vehicle(){return`${this.manufacturer()} ${this.model()}`}manufacturer(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.manufacturer)}model(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.model)}type(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.type)}fuel(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.fuel)}vin(){let e=["o","i","q","O","I","Q"];return`${this.faker.string.alphanumeric({length:10,casing:"upper",exclude:e})}${this.faker.string.alpha({length:1,casing:"upper",exclude:e})}${this.faker.string.alphanumeric({length:1,casing:"upper",exclude:e})}${this.faker.string.numeric({length:5,allowLeadingZeros:!0})}`}color(){return this.faker.color.human()}vrm(){return`${this.faker.string.alpha({length:2,casing:"upper"})}${this.faker.string.numeric({length:2,allowLeadingZeros:!0})}${this.faker.string.alpha({length:3,casing:"upper"})}`}bicycle(){return this.faker.helpers.arrayElement(this.faker.definitions.vehicle.bicycle_type)}},chunk_ES2KDHJ2_fe=class extends chunk_ES2KDHJ2_p{adjective(e={}){return"number"==typeof e&&(e={length:e}),this.faker.helpers.arrayElement(chunk_ES2KDHJ2_T({...e,wordList:this.faker.definitions.word.adjective}))}adverb(e={}){return"number"==typeof e&&(e={length:e}),this.faker.helpers.arrayElement(chunk_ES2KDHJ2_T({...e,wordList:this.faker.definitions.word.adverb}))}conjunction(e={}){return"number"==typeof e&&(e={length:e}),this.faker.helpers.arrayElement(chunk_ES2KDHJ2_T({...e,wordList:this.faker.definitions.word.conjunction}))}interjection(e={}){return"number"==typeof e&&(e={length:e}),this.faker.helpers.arrayElement(chunk_ES2KDHJ2_T({...e,wordList:this.faker.definitions.word.interjection}))}noun(e={}){return"number"==typeof e&&(e={length:e}),this.faker.helpers.arrayElement(chunk_ES2KDHJ2_T({...e,wordList:this.faker.definitions.word.noun}))}preposition(e={}){return"number"==typeof e&&(e={length:e}),this.faker.helpers.arrayElement(chunk_ES2KDHJ2_T({...e,wordList:this.faker.definitions.word.preposition}))}verb(e={}){return"number"==typeof e&&(e={length:e}),this.faker.helpers.arrayElement(chunk_ES2KDHJ2_T({...e,wordList:this.faker.definitions.word.verb}))}sample(e={}){let r=this.faker.helpers.shuffle([this.adjective,this.adverb,this.conjunction,this.interjection,this.noun,this.preposition,this.verb]);for(let t of r)try{return t(e)}catch{continue}throw new chunk_ES2KDHJ2_m("No matching word data available for the current locale")}words(e={}){"number"==typeof e&&(e={count:e});let{count:r={min:1,max:3}}=e;return this.faker.helpers.multiple((()=>this.sample()),{count:r}).join(" ")}},chunk_ES2KDHJ2_I=["Africa/Abidjan","Africa/Accra","Africa/Addis_Ababa","Africa/Algiers","Africa/Asmara","Africa/Bamako","Africa/Bangui","Africa/Banjul","Africa/Bissau","Africa/Blantyre","Africa/Brazzaville","Africa/Bujumbura","Africa/Cairo","Africa/Casablanca","Africa/Ceuta","Africa/Conakry","Africa/Dakar","Africa/Dar_es_Salaam","Africa/Djibouti","Africa/Douala","Africa/El_Aaiun","Africa/Freetown","Africa/Gaborone","Africa/Harare","Africa/Johannesburg","Africa/Juba","Africa/Kampala","Africa/Khartoum","Africa/Kigali","Africa/Kinshasa","Africa/Lagos","Africa/Libreville","Africa/Lome","Africa/Luanda","Africa/Lubumbashi","Africa/Lusaka","Africa/Malabo","Africa/Maputo","Africa/Maseru","Africa/Mbabane","Africa/Mogadishu","Africa/Monrovia","Africa/Nairobi","Africa/Ndjamena","Africa/Niamey","Africa/Nouakchott","Africa/Ouagadougou","Africa/Porto-Novo","Africa/Sao_Tome","Africa/Tripoli","Africa/Tunis","Africa/Windhoek","America/Adak","America/Anchorage","America/Anguilla","America/Antigua","America/Araguaina","America/Argentina/Buenos_Aires","America/Argentina/Catamarca","America/Argentina/Cordoba","America/Argentina/Jujuy","America/Argentina/La_Rioja","America/Argentina/Mendoza","America/Argentina/Rio_Gallegos","America/Argentina/Salta","America/Argentina/San_Juan","America/Argentina/San_Luis","America/Argentina/Tucuman","America/Argentina/Ushuaia","America/Aruba","America/Asuncion","America/Atikokan","America/Bahia","America/Bahia_Banderas","America/Barbados","America/Belem","America/Belize","America/Blanc-Sablon","America/Boa_Vista","America/Bogota","America/Boise","America/Cambridge_Bay","America/Campo_Grande","America/Cancun","America/Caracas","America/Cayenne","America/Cayman","America/Chicago","America/Chihuahua","America/Ciudad_Juarez","America/Costa_Rica","America/Creston","America/Cuiaba","America/Curacao","America/Danmarkshavn","America/Dawson","America/Dawson_Creek","America/Denver","America/Detroit","America/Dominica","America/Edmonton","America/Eirunepe","America/El_Salvador","America/Fort_Nelson","America/Fortaleza","America/Glace_Bay","America/Goose_Bay","America/Grand_Turk","America/Grenada","America/Guadeloupe","America/Guatemala","America/Guayaquil","America/Guyana","America/Halifax","America/Havana","America/Hermosillo","America/Indiana/Indianapolis","America/Indiana/Knox","America/Indiana/Marengo","America/Indiana/Petersburg","America/Indiana/Tell_City","America/Indiana/Vevay","America/Indiana/Vincennes","America/Indiana/Winamac","America/Inuvik","America/Iqaluit","America/Jamaica","America/Juneau","America/Kentucky/Louisville","America/Kentucky/Monticello","America/Kralendijk","America/La_Paz","America/Lima","America/Los_Angeles","America/Lower_Princes","America/Maceio","America/Managua","America/Manaus","America/Marigot","America/Martinique","America/Matamoros","America/Mazatlan","America/Menominee","America/Merida","America/Metlakatla","America/Mexico_City","America/Miquelon","America/Moncton","America/Monterrey","America/Montevideo","America/Montserrat","America/Nassau","America/New_York","America/Nome","America/Noronha","America/North_Dakota/Beulah","America/North_Dakota/Center","America/North_Dakota/New_Salem","America/Nuuk","America/Ojinaga","America/Panama","America/Paramaribo","America/Phoenix","America/Port-au-Prince","America/Port_of_Spain","America/Porto_Velho","America/Puerto_Rico","America/Punta_Arenas","America/Rankin_Inlet","America/Recife","America/Regina","America/Resolute","America/Rio_Branco","America/Santarem","America/Santiago","America/Santo_Domingo","America/Sao_Paulo","America/Scoresbysund","America/Sitka","America/St_Barthelemy","America/St_Johns","America/St_Kitts","America/St_Lucia","America/St_Thomas","America/St_Vincent","America/Swift_Current","America/Tegucigalpa","America/Thule","America/Tijuana","America/Toronto","America/Tortola","America/Vancouver","America/Whitehorse","America/Winnipeg","America/Yakutat","America/Yellowknife","Antarctica/Casey","Antarctica/Davis","Antarctica/DumontDUrville","Antarctica/Macquarie","Antarctica/Mawson","Antarctica/McMurdo","Antarctica/Palmer","Antarctica/Rothera","Antarctica/Syowa","Antarctica/Troll","Antarctica/Vostok","Arctic/Longyearbyen","Asia/Aden","Asia/Almaty","Asia/Amman","Asia/Anadyr","Asia/Aqtau","Asia/Aqtobe","Asia/Ashgabat","Asia/Atyrau","Asia/Baghdad","Asia/Bahrain","Asia/Baku","Asia/Bangkok","Asia/Barnaul","Asia/Beirut","Asia/Bishkek","Asia/Brunei","Asia/Chita","Asia/Choibalsan","Asia/Colombo","Asia/Damascus","Asia/Dhaka","Asia/Dili","Asia/Dubai","Asia/Dushanbe","Asia/Famagusta","Asia/Gaza","Asia/Hebron","Asia/Ho_Chi_Minh","Asia/Hong_Kong","Asia/Hovd","Asia/Irkutsk","Asia/Jakarta","Asia/Jayapura","Asia/Jerusalem","Asia/Kabul","Asia/Kamchatka","Asia/Karachi","Asia/Kathmandu","Asia/Khandyga","Asia/Kolkata","Asia/Krasnoyarsk","Asia/Kuala_Lumpur","Asia/Kuching","Asia/Kuwait","Asia/Macau","Asia/Magadan","Asia/Makassar","Asia/Manila","Asia/Muscat","Asia/Nicosia","Asia/Novokuznetsk","Asia/Novosibirsk","Asia/Omsk","Asia/Oral","Asia/Phnom_Penh","Asia/Pontianak","Asia/Pyongyang","Asia/Qatar","Asia/Qostanay","Asia/Qyzylorda","Asia/Riyadh","Asia/Sakhalin","Asia/Samarkand","Asia/Seoul","Asia/Shanghai","Asia/Singapore","Asia/Srednekolymsk","Asia/Taipei","Asia/Tashkent","Asia/Tbilisi","Asia/Tehran","Asia/Thimphu","Asia/Tokyo","Asia/Tomsk","Asia/Ulaanbaatar","Asia/Urumqi","Asia/Ust-Nera","Asia/Vientiane","Asia/Vladivostok","Asia/Yakutsk","Asia/Yangon","Asia/Yekaterinburg","Asia/Yerevan","Atlantic/Azores","Atlantic/Bermuda","Atlantic/Canary","Atlantic/Cape_Verde","Atlantic/Faroe","Atlantic/Madeira","Atlantic/Reykjavik","Atlantic/South_Georgia","Atlantic/St_Helena","Atlantic/Stanley","Australia/Adelaide","Australia/Brisbane","Australia/Broken_Hill","Australia/Darwin","Australia/Eucla","Australia/Hobart","Australia/Lindeman","Australia/Lord_Howe","Australia/Melbourne","Australia/Perth","Australia/Sydney","Europe/Amsterdam","Europe/Andorra","Europe/Astrakhan","Europe/Athens","Europe/Belgrade","Europe/Berlin","Europe/Bratislava","Europe/Brussels","Europe/Bucharest","Europe/Budapest","Europe/Busingen","Europe/Chisinau","Europe/Copenhagen","Europe/Dublin","Europe/Gibraltar","Europe/Guernsey","Europe/Helsinki","Europe/Isle_of_Man","Europe/Istanbul","Europe/Jersey","Europe/Kaliningrad","Europe/Kirov","Europe/Kyiv","Europe/Lisbon","Europe/Ljubljana","Europe/London","Europe/Luxembourg","Europe/Madrid","Europe/Malta","Europe/Mariehamn","Europe/Minsk","Europe/Monaco","Europe/Moscow","Europe/Oslo","Europe/Paris","Europe/Podgorica","Europe/Prague","Europe/Riga","Europe/Rome","Europe/Samara","Europe/San_Marino","Europe/Sarajevo","Europe/Saratov","Europe/Simferopol","Europe/Skopje","Europe/Sofia","Europe/Stockholm","Europe/Tallinn","Europe/Tirane","Europe/Ulyanovsk","Europe/Vaduz","Europe/Vatican","Europe/Vienna","Europe/Vilnius","Europe/Volgograd","Europe/Warsaw","Europe/Zagreb","Europe/Zurich","Indian/Antananarivo","Indian/Chagos","Indian/Christmas","Indian/Cocos","Indian/Comoro","Indian/Kerguelen","Indian/Mahe","Indian/Maldives","Indian/Mauritius","Indian/Mayotte","Indian/Reunion","Pacific/Apia","Pacific/Auckland","Pacific/Bougainville","Pacific/Chatham","Pacific/Chuuk","Pacific/Easter","Pacific/Efate","Pacific/Fakaofo","Pacific/Fiji","Pacific/Funafuti","Pacific/Galapagos","Pacific/Gambier","Pacific/Guadalcanal","Pacific/Guam","Pacific/Honolulu","Pacific/Kanton","Pacific/Kiritimati","Pacific/Kosrae","Pacific/Kwajalein","Pacific/Majuro","Pacific/Marquesas","Pacific/Midway","Pacific/Nauru","Pacific/Niue","Pacific/Norfolk","Pacific/Noumea","Pacific/Pago_Pago","Pacific/Palau","Pacific/Pitcairn","Pacific/Pohnpei","Pacific/Port_Moresby","Pacific/Rarotonga","Pacific/Saipan","Pacific/Tahiti","Pacific/Tarawa","Pacific/Tongatapu","Pacific/Wake","Pacific/Wallis"],Fi={color:{space:["Academy Color Encoding System (ACES)","Adobe RGB","Adobe Wide Gamut RGB","British Standard Colour (BS)","CIE 1931 XYZ","CIELAB","CIELUV","CIEUVW","CMY","CMYK","DCI-P3","Display-P3","Federal Standard 595C","HKS","HSL","HSLA","HSLuv","HSV","HWB","LCh","LMS","Munsell Color System","Natural Color System (NSC)","Pantone Matching System (PMS)","ProPhoto RGB Color Space","RAL","RG","RGBA","RGK","Rec. 2020","Rec. 2100","Rec. 601","Rec. 709","Uniform Color Spaces (UCSs)","YDbDr","YIQ","YPbPr","sRGB","sYCC","scRGB","xvYCC"]},database:{collation:["ascii_bin","ascii_general_ci","cp1250_bin","cp1250_general_ci","utf8_bin","utf8_general_ci","utf8_unicode_ci"],engine:["ARCHIVE","BLACKHOLE","CSV","InnoDB","MEMORY","MyISAM"],type:["bigint","binary","bit","blob","boolean","date","datetime","decimal","double","enum","float","geometry","int","mediumint","point","real","serial","set","smallint","text","time","timestamp","tinyint","varchar"]},date:{time_zone:chunk_ES2KDHJ2_I},hacker:{abbreviation:["ADP","AGP","AI","API","ASCII","CLI","COM","CSS","DNS","DRAM","EXE","FTP","GB","HDD","HEX","HTTP","IB","IP","JBOD","JSON","OCR","PCI","PNG","RAM","RSS","SAS","SCSI","SDD","SMS","SMTP","SQL","SSD","SSL","TCP","THX","TLS","UDP","USB","UTF8","VGA","XML","XSS"]},internet:{emoji:{smiley:["😀","😃","😄","😁","😆","😅","🤣","😂","🙂","🙃","😉","😊","😇","🥰","😍","🤩","😘","😗","☺️","😚","😙","🥲","😋","😛","😜","🤪","😝","🤑","🤗","🤭","🤫","🤔","🤐","🤨","😐","😑","😶","😶‍🌫️","😏","😒","🙄","😬","😮‍💨","🤥","😌","😔","😪","🤤","😴","😷","🤒","🤕","🤢","🤮","🤧","🥵","🥶","🥴","😵","😵‍💫","🤯","🤠","🥳","🥸","😎","🤓","🧐","😕","😟","🙁","☹️","😮","😯","😲","😳","🥺","😦","😧","😨","😰","😥","😢","😭","😱","😖","😣","😞","😓","😩","😫","🥱","😤","😡","😠","🤬","😈","👿","💀","☠️","💩","🤡","👹","👺","👻","👽","👾","🤖","😺","😸","😹","😻","😼","😽","🙀","😿","😾","🙈","🙉","🙊","💋","💌","💘","💝","💖","💗","💓","💞","💕","💟","❣️","💔","❤️‍🔥","❤️‍🩹","❤️","🧡","💛","💚","💙","💜","🤎","🖤","🤍","💯","💢","💥","💫","💦","💨","🕳️","💣","💬","👁️‍🗨️","🗨️","🗯️","💭","💤"],body:["👋","👋🏻","👋🏼","👋🏽","👋🏾","👋🏿","🤚","🤚🏻","🤚🏼","🤚🏽","🤚🏾","🤚🏿","🖐️","🖐🏻","🖐🏼","🖐🏽","🖐🏾","🖐🏿","✋","✋🏻","✋🏼","✋🏽","✋🏾","✋🏿","🖖","🖖🏻","🖖🏼","🖖🏽","🖖🏾","🖖🏿","👌","👌🏻","👌🏼","👌🏽","👌🏾","👌🏿","🤌","🤌🏻","🤌🏼","🤌🏽","🤌🏾","🤌🏿","🤏","🤏🏻","🤏🏼","🤏🏽","🤏🏾","🤏🏿","✌️","✌🏻","✌🏼","✌🏽","✌🏾","✌🏿","🤞","🤞🏻","🤞🏼","🤞🏽","🤞🏾","🤞🏿","🤟","🤟🏻","🤟🏼","🤟🏽","🤟🏾","🤟🏿","🤘","🤘🏻","🤘🏼","🤘🏽","🤘🏾","🤘🏿","🤙","🤙🏻","🤙🏼","🤙🏽","🤙🏾","🤙🏿","👈","👈🏻","👈🏼","👈🏽","👈🏾","👈🏿","👉","👉🏻","👉🏼","👉🏽","👉🏾","👉🏿","👆","👆🏻","👆🏼","👆🏽","👆🏾","👆🏿","🖕","🖕🏻","🖕🏼","🖕🏽","🖕🏾","🖕🏿","👇","👇🏻","👇🏼","👇🏽","👇🏾","👇🏿","☝️","☝🏻","☝🏼","☝🏽","☝🏾","☝🏿","👍","👍🏻","👍🏼","👍🏽","👍🏾","👍🏿","👎","👎🏻","👎🏼","👎🏽","👎🏾","👎🏿","✊","✊🏻","✊🏼","✊🏽","✊🏾","✊🏿","👊","👊🏻","👊🏼","👊🏽","👊🏾","👊🏿","🤛","🤛🏻","🤛🏼","🤛🏽","🤛🏾","🤛🏿","🤜","🤜🏻","🤜🏼","🤜🏽","🤜🏾","🤜🏿","👏","👏🏻","👏🏼","👏🏽","👏🏾","👏🏿","🙌","🙌🏻","🙌🏼","🙌🏽","🙌🏾","🙌🏿","👐","👐🏻","👐🏼","👐🏽","👐🏾","👐🏿","🤲","🤲🏻","🤲🏼","🤲🏽","🤲🏾","🤲🏿","🤝","🙏","🙏🏻","🙏🏼","🙏🏽","🙏🏾","🙏🏿","✍️","✍🏻","✍🏼","✍🏽","✍🏾","✍🏿","💅","💅🏻","💅🏼","💅🏽","💅🏾","💅🏿","🤳","🤳🏻","🤳🏼","🤳🏽","🤳🏾","🤳🏿","💪","💪🏻","💪🏼","💪🏽","💪🏾","💪🏿","🦾","🦿","🦵","🦵🏻","🦵🏼","🦵🏽","🦵🏾","🦵🏿","🦶","🦶🏻","🦶🏼","🦶🏽","🦶🏾","🦶🏿","👂","👂🏻","👂🏼","👂🏽","👂🏾","👂🏿","🦻","🦻🏻","🦻🏼","🦻🏽","🦻🏾","🦻🏿","👃","👃🏻","👃🏼","👃🏽","👃🏾","👃🏿","🧠","🫀","🫁","🦷","🦴","👀","👁️","👅","👄"],person:["👶","👶🏻","👶🏼","👶🏽","👶🏾","👶🏿","🧒","🧒🏻","🧒🏼","🧒🏽","🧒🏾","🧒🏿","👦","👦🏻","👦🏼","👦🏽","👦🏾","👦🏿","👧","👧🏻","👧🏼","👧🏽","👧🏾","👧🏿","🧑","🧑🏻","🧑🏼","🧑🏽","🧑🏾","🧑🏿","👱","👱🏻","👱🏼","👱🏽","👱🏾","👱🏿","👨","👨🏻","👨🏼","👨🏽","👨🏾","👨🏿","🧔","🧔🏻","🧔🏼","🧔🏽","🧔🏾","🧔🏿","🧔‍♂️","🧔🏻‍♂️","🧔🏼‍♂️","🧔🏽‍♂️","🧔🏾‍♂️","🧔🏿‍♂️","🧔‍♀️","🧔🏻‍♀️","🧔🏼‍♀️","🧔🏽‍♀️","🧔🏾‍♀️","🧔🏿‍♀️","👨‍🦰","👨🏻‍🦰","👨🏼‍🦰","👨🏽‍🦰","👨🏾‍🦰","👨🏿‍🦰","👨‍🦱","👨🏻‍🦱","👨🏼‍🦱","👨🏽‍🦱","👨🏾‍🦱","👨🏿‍🦱","👨‍🦳","👨🏻‍🦳","👨🏼‍🦳","👨🏽‍🦳","👨🏾‍🦳","👨🏿‍🦳","👨‍🦲","👨🏻‍🦲","👨🏼‍🦲","👨🏽‍🦲","👨🏾‍🦲","👨🏿‍🦲","👩","👩🏻","👩🏼","👩🏽","👩🏾","👩🏿","👩‍🦰","👩🏻‍🦰","👩🏼‍🦰","👩🏽‍🦰","👩🏾‍🦰","👩🏿‍🦰","🧑‍🦰","🧑🏻‍🦰","🧑🏼‍🦰","🧑🏽‍🦰","🧑🏾‍🦰","🧑🏿‍🦰","👩‍🦱","👩🏻‍🦱","👩🏼‍🦱","👩🏽‍🦱","👩🏾‍🦱","👩🏿‍🦱","🧑‍🦱","🧑🏻‍🦱","🧑🏼‍🦱","🧑🏽‍🦱","🧑🏾‍🦱","🧑🏿‍🦱","👩‍🦳","👩🏻‍🦳","👩🏼‍🦳","👩🏽‍🦳","👩🏾‍🦳","👩🏿‍🦳","🧑‍🦳","🧑🏻‍🦳","🧑🏼‍🦳","🧑🏽‍🦳","🧑🏾‍🦳","🧑🏿‍🦳","👩‍🦲","👩🏻‍🦲","👩🏼‍🦲","👩🏽‍🦲","👩🏾‍🦲","👩🏿‍🦲","🧑‍🦲","🧑🏻‍🦲","🧑🏼‍🦲","🧑🏽‍🦲","🧑🏾‍🦲","🧑🏿‍🦲","👱‍♀️","👱🏻‍♀️","👱🏼‍♀️","👱🏽‍♀️","👱🏾‍♀️","👱🏿‍♀️","👱‍♂️","👱🏻‍♂️","👱🏼‍♂️","👱🏽‍♂️","👱🏾‍♂️","👱🏿‍♂️","🧓","🧓🏻","🧓🏼","🧓🏽","🧓🏾","🧓🏿","👴","👴🏻","👴🏼","👴🏽","👴🏾","👴🏿","👵","👵🏻","👵🏼","👵🏽","👵🏾","👵🏿","🙍","🙍🏻","🙍🏼","🙍🏽","🙍🏾","🙍🏿","🙍‍♂️","🙍🏻‍♂️","🙍🏼‍♂️","🙍🏽‍♂️","🙍🏾‍♂️","🙍🏿‍♂️","🙍‍♀️","🙍🏻‍♀️","🙍🏼‍♀️","🙍🏽‍♀️","🙍🏾‍♀️","🙍🏿‍♀️","🙎","🙎🏻","🙎🏼","🙎🏽","🙎🏾","🙎🏿","🙎‍♂️","🙎🏻‍♂️","🙎🏼‍♂️","🙎🏽‍♂️","🙎🏾‍♂️","🙎🏿‍♂️","🙎‍♀️","🙎🏻‍♀️","🙎🏼‍♀️","🙎🏽‍♀️","🙎🏾‍♀️","🙎🏿‍♀️","🙅","🙅🏻","🙅🏼","🙅🏽","🙅🏾","🙅🏿","🙅‍♂️","🙅🏻‍♂️","🙅🏼‍♂️","🙅🏽‍♂️","🙅🏾‍♂️","🙅🏿‍♂️","🙅‍♀️","🙅🏻‍♀️","🙅🏼‍♀️","🙅🏽‍♀️","🙅🏾‍♀️","🙅🏿‍♀️","🙆","🙆🏻","🙆🏼","🙆🏽","🙆🏾","🙆🏿","🙆‍♂️","🙆🏻‍♂️","🙆🏼‍♂️","🙆🏽‍♂️","🙆🏾‍♂️","🙆🏿‍♂️","🙆‍♀️","🙆🏻‍♀️","🙆🏼‍♀️","🙆🏽‍♀️","🙆🏾‍♀️","🙆🏿‍♀️","💁","💁🏻","💁🏼","💁🏽","💁🏾","💁🏿","💁‍♂️","💁🏻‍♂️","💁🏼‍♂️","💁🏽‍♂️","💁🏾‍♂️","💁🏿‍♂️","💁‍♀️","💁🏻‍♀️","💁🏼‍♀️","💁🏽‍♀️","💁🏾‍♀️","💁🏿‍♀️","🙋","🙋🏻","🙋🏼","🙋🏽","🙋🏾","🙋🏿","🙋‍♂️","🙋🏻‍♂️","🙋🏼‍♂️","🙋🏽‍♂️","🙋🏾‍♂️","🙋🏿‍♂️","🙋‍♀️","🙋🏻‍♀️","🙋🏼‍♀️","🙋🏽‍♀️","🙋🏾‍♀️","🙋🏿‍♀️","🧏","🧏🏻","🧏🏼","🧏🏽","🧏🏾","🧏🏿","🧏‍♂️","🧏🏻‍♂️","🧏🏼‍♂️","🧏🏽‍♂️","🧏🏾‍♂️","🧏🏿‍♂️","🧏‍♀️","🧏🏻‍♀️","🧏🏼‍♀️","🧏🏽‍♀️","🧏🏾‍♀️","🧏🏿‍♀️","🙇","🙇🏻","🙇🏼","🙇🏽","🙇🏾","🙇🏿","🙇‍♂️","🙇🏻‍♂️","🙇🏼‍♂️","🙇🏽‍♂️","🙇🏾‍♂️","🙇🏿‍♂️","🙇‍♀️","🙇🏻‍♀️","🙇🏼‍♀️","🙇🏽‍♀️","🙇🏾‍♀️","🙇🏿‍♀️","🤦","🤦🏻","🤦🏼","🤦🏽","🤦🏾","🤦🏿","🤦‍♂️","🤦🏻‍♂️","🤦🏼‍♂️","🤦🏽‍♂️","🤦🏾‍♂️","🤦🏿‍♂️","🤦‍♀️","🤦🏻‍♀️","🤦🏼‍♀️","🤦🏽‍♀️","🤦🏾‍♀️","🤦🏿‍♀️","🤷","🤷🏻","🤷🏼","🤷🏽","🤷🏾","🤷🏿","🤷‍♂️","🤷🏻‍♂️","🤷🏼‍♂️","🤷🏽‍♂️","🤷🏾‍♂️","🤷🏿‍♂️","🤷‍♀️","🤷🏻‍♀️","🤷🏼‍♀️","🤷🏽‍♀️","🤷🏾‍♀️","🤷🏿‍♀️","🧑‍⚕️","🧑🏻‍⚕️","🧑🏼‍⚕️","🧑🏽‍⚕️","🧑🏾‍⚕️","🧑🏿‍⚕️","👨‍⚕️","👨🏻‍⚕️","👨🏼‍⚕️","👨🏽‍⚕️","👨🏾‍⚕️","👨🏿‍⚕️","👩‍⚕️","👩🏻‍⚕️","👩🏼‍⚕️","👩🏽‍⚕️","👩🏾‍⚕️","👩🏿‍⚕️","🧑‍🎓","🧑🏻‍🎓","🧑🏼‍🎓","🧑🏽‍🎓","🧑🏾‍🎓","🧑🏿‍🎓","👨‍🎓","👨🏻‍🎓","👨🏼‍🎓","👨🏽‍🎓","👨🏾‍🎓","👨🏿‍🎓","👩‍🎓","👩🏻‍🎓","👩🏼‍🎓","👩🏽‍🎓","👩🏾‍🎓","👩🏿‍🎓","🧑‍🏫","🧑🏻‍🏫","🧑🏼‍🏫","🧑🏽‍🏫","🧑🏾‍🏫","🧑🏿‍🏫","👨‍🏫","👨🏻‍🏫","👨🏼‍🏫","👨🏽‍🏫","👨🏾‍🏫","👨🏿‍🏫","👩‍🏫","👩🏻‍🏫","👩🏼‍🏫","👩🏽‍🏫","👩🏾‍🏫","👩🏿‍🏫","🧑‍⚖️","🧑🏻‍⚖️","🧑🏼‍⚖️","🧑🏽‍⚖️","🧑🏾‍⚖️","🧑🏿‍⚖️","👨‍⚖️","👨🏻‍⚖️","👨🏼‍⚖️","👨🏽‍⚖️","👨🏾‍⚖️","👨🏿‍⚖️","👩‍⚖️","👩🏻‍⚖️","👩🏼‍⚖️","👩🏽‍⚖️","👩🏾‍⚖️","👩🏿‍⚖️","🧑‍🌾","🧑🏻‍🌾","🧑🏼‍🌾","🧑🏽‍🌾","🧑🏾‍🌾","🧑🏿‍🌾","👨‍🌾","👨🏻‍🌾","👨🏼‍🌾","👨🏽‍🌾","👨🏾‍🌾","👨🏿‍🌾","👩‍🌾","👩🏻‍🌾","👩🏼‍🌾","👩🏽‍🌾","👩🏾‍🌾","👩🏿‍🌾","🧑‍🍳","🧑🏻‍🍳","🧑🏼‍🍳","🧑🏽‍🍳","🧑🏾‍🍳","🧑🏿‍🍳","👨‍🍳","👨🏻‍🍳","👨🏼‍🍳","👨🏽‍🍳","👨🏾‍🍳","👨🏿‍🍳","👩‍🍳","👩🏻‍🍳","👩🏼‍🍳","👩🏽‍🍳","👩🏾‍🍳","👩🏿‍🍳","🧑‍🔧","🧑🏻‍🔧","🧑🏼‍🔧","🧑🏽‍🔧","🧑🏾‍🔧","🧑🏿‍🔧","👨‍🔧","👨🏻‍🔧","👨🏼‍🔧","👨🏽‍🔧","👨🏾‍🔧","👨🏿‍🔧","👩‍🔧","👩🏻‍🔧","👩🏼‍🔧","👩🏽‍🔧","👩🏾‍🔧","👩🏿‍🔧","🧑‍🏭","🧑🏻‍🏭","🧑🏼‍🏭","🧑🏽‍🏭","🧑🏾‍🏭","🧑🏿‍🏭","👨‍🏭","👨🏻‍🏭","👨🏼‍🏭","👨🏽‍🏭","👨🏾‍🏭","👨🏿‍🏭","👩‍🏭","👩🏻‍🏭","👩🏼‍🏭","👩🏽‍🏭","👩🏾‍🏭","👩🏿‍🏭","🧑‍💼","🧑🏻‍💼","🧑🏼‍💼","🧑🏽‍💼","🧑🏾‍💼","🧑🏿‍💼","👨‍💼","👨🏻‍💼","👨🏼‍💼","👨🏽‍💼","👨🏾‍💼","👨🏿‍💼","👩‍💼","👩🏻‍💼","👩🏼‍💼","👩🏽‍💼","👩🏾‍💼","👩🏿‍💼","🧑‍🔬","🧑🏻‍🔬","🧑🏼‍🔬","🧑🏽‍🔬","🧑🏾‍🔬","🧑🏿‍🔬","👨‍🔬","👨🏻‍🔬","👨🏼‍🔬","👨🏽‍🔬","👨🏾‍🔬","👨🏿‍🔬","👩‍🔬","👩🏻‍🔬","👩🏼‍🔬","👩🏽‍🔬","👩🏾‍🔬","👩🏿‍🔬","🧑‍💻","🧑🏻‍💻","🧑🏼‍💻","🧑🏽‍💻","🧑🏾‍💻","🧑🏿‍💻","👨‍💻","👨🏻‍💻","👨🏼‍💻","👨🏽‍💻","👨🏾‍💻","👨🏿‍💻","👩‍💻","👩🏻‍💻","👩🏼‍💻","👩🏽‍💻","👩🏾‍💻","👩🏿‍💻","🧑‍🎤","🧑🏻‍🎤","🧑🏼‍🎤","🧑🏽‍🎤","🧑🏾‍🎤","🧑🏿‍🎤","👨‍🎤","👨🏻‍🎤","👨🏼‍🎤","👨🏽‍🎤","👨🏾‍🎤","👨🏿‍🎤","👩‍🎤","👩🏻‍🎤","👩🏼‍🎤","👩🏽‍🎤","👩🏾‍🎤","👩🏿‍🎤","🧑‍🎨","🧑🏻‍🎨","🧑🏼‍🎨","🧑🏽‍🎨","🧑🏾‍🎨","🧑🏿‍🎨","👨‍🎨","👨🏻‍🎨","👨🏼‍🎨","👨🏽‍🎨","👨🏾‍🎨","👨🏿‍🎨","👩‍🎨","👩🏻‍🎨","👩🏼‍🎨","👩🏽‍🎨","👩🏾‍🎨","👩🏿‍🎨","🧑‍✈️","🧑🏻‍✈️","🧑🏼‍✈️","🧑🏽‍✈️","🧑🏾‍✈️","🧑🏿‍✈️","👨‍✈️","👨🏻‍✈️","👨🏼‍✈️","👨🏽‍✈️","👨🏾‍✈️","👨🏿‍✈️","👩‍✈️","👩🏻‍✈️","👩🏼‍✈️","👩🏽‍✈️","👩🏾‍✈️","👩🏿‍✈️","🧑‍🚀","🧑🏻‍🚀","🧑🏼‍🚀","🧑🏽‍🚀","🧑🏾‍🚀","🧑🏿‍🚀","👨‍🚀","👨🏻‍🚀","👨🏼‍🚀","👨🏽‍🚀","👨🏾‍🚀","👨🏿‍🚀","👩‍🚀","👩🏻‍🚀","👩🏼‍🚀","👩🏽‍🚀","👩🏾‍🚀","👩🏿‍🚀","🧑‍🚒","🧑🏻‍🚒","🧑🏼‍🚒","🧑🏽‍🚒","🧑🏾‍🚒","🧑🏿‍🚒","👨‍🚒","👨🏻‍🚒","👨🏼‍🚒","👨🏽‍🚒","👨🏾‍🚒","👨🏿‍🚒","👩‍🚒","👩🏻‍🚒","👩🏼‍🚒","👩🏽‍🚒","👩🏾‍🚒","👩🏿‍🚒","👮","👮🏻","👮🏼","👮🏽","👮🏾","👮🏿","👮‍♂️","👮🏻‍♂️","👮🏼‍♂️","👮🏽‍♂️","👮🏾‍♂️","👮🏿‍♂️","👮‍♀️","👮🏻‍♀️","👮🏼‍♀️","👮🏽‍♀️","👮🏾‍♀️","👮🏿‍♀️","🕵️","🕵🏻","🕵🏼","🕵🏽","🕵🏾","🕵🏿","🕵️‍♂️","🕵🏻‍♂️","🕵🏼‍♂️","🕵🏽‍♂️","🕵🏾‍♂️","🕵🏿‍♂️","🕵️‍♀️","🕵🏻‍♀️","🕵🏼‍♀️","🕵🏽‍♀️","🕵🏾‍♀️","🕵🏿‍♀️","💂","💂🏻","💂🏼","💂🏽","💂🏾","💂🏿","💂‍♂️","💂🏻‍♂️","💂🏼‍♂️","💂🏽‍♂️","💂🏾‍♂️","💂🏿‍♂️","💂‍♀️","💂🏻‍♀️","💂🏼‍♀️","💂🏽‍♀️","💂🏾‍♀️","💂🏿‍♀️","🥷","🥷🏻","🥷🏼","🥷🏽","🥷🏾","🥷🏿","👷","👷🏻","👷🏼","👷🏽","👷🏾","👷🏿","👷‍♂️","👷🏻‍♂️","👷🏼‍♂️","👷🏽‍♂️","👷🏾‍♂️","👷🏿‍♂️","👷‍♀️","👷🏻‍♀️","👷🏼‍♀️","👷🏽‍♀️","👷🏾‍♀️","👷🏿‍♀️","🤴","🤴🏻","🤴🏼","🤴🏽","🤴🏾","🤴🏿","👸","👸🏻","👸🏼","👸🏽","👸🏾","👸🏿","👳","👳🏻","👳🏼","👳🏽","👳🏾","👳🏿","👳‍♂️","👳🏻‍♂️","👳🏼‍♂️","👳🏽‍♂️","👳🏾‍♂️","👳🏿‍♂️","👳‍♀️","👳🏻‍♀️","👳🏼‍♀️","👳🏽‍♀️","👳🏾‍♀️","👳🏿‍♀️","👲","👲🏻","👲🏼","👲🏽","👲🏾","👲🏿","🧕","🧕🏻","🧕🏼","🧕🏽","🧕🏾","🧕🏿","🤵","🤵🏻","🤵🏼","🤵🏽","🤵🏾","🤵🏿","🤵‍♂️","🤵🏻‍♂️","🤵🏼‍♂️","🤵🏽‍♂️","🤵🏾‍♂️","🤵🏿‍♂️","🤵‍♀️","🤵🏻‍♀️","🤵🏼‍♀️","🤵🏽‍♀️","🤵🏾‍♀️","🤵🏿‍♀️","👰","👰🏻","👰🏼","👰🏽","👰🏾","👰🏿","👰‍♂️","👰🏻‍♂️","👰🏼‍♂️","👰🏽‍♂️","👰🏾‍♂️","👰🏿‍♂️","👰‍♀️","👰🏻‍♀️","👰🏼‍♀️","👰🏽‍♀️","👰🏾‍♀️","👰🏿‍♀️","🤰","🤰🏻","🤰🏼","🤰🏽","🤰🏾","🤰🏿","🤱","🤱🏻","🤱🏼","🤱🏽","🤱🏾","🤱🏿","👩‍🍼","👩🏻‍🍼","👩🏼‍🍼","👩🏽‍🍼","👩🏾‍🍼","👩🏿‍🍼","👨‍🍼","👨🏻‍🍼","👨🏼‍🍼","👨🏽‍🍼","👨🏾‍🍼","👨🏿‍🍼","🧑‍🍼","🧑🏻‍🍼","🧑🏼‍🍼","🧑🏽‍🍼","🧑🏾‍🍼","🧑🏿‍🍼","👼","👼🏻","👼🏼","👼🏽","👼🏾","👼🏿","🎅","🎅🏻","🎅🏼","🎅🏽","🎅🏾","🎅🏿","🤶","🤶🏻","🤶🏼","🤶🏽","🤶🏾","🤶🏿","🧑‍🎄","🧑🏻‍🎄","🧑🏼‍🎄","🧑🏽‍🎄","🧑🏾‍🎄","🧑🏿‍🎄","🦸","🦸🏻","🦸🏼","🦸🏽","🦸🏾","🦸🏿","🦸‍♂️","🦸🏻‍♂️","🦸🏼‍♂️","🦸🏽‍♂️","🦸🏾‍♂️","🦸🏿‍♂️","🦸‍♀️","🦸🏻‍♀️","🦸🏼‍♀️","🦸🏽‍♀️","🦸🏾‍♀️","🦸🏿‍♀️","🦹","🦹🏻","🦹🏼","🦹🏽","🦹🏾","🦹🏿","🦹‍♂️","🦹🏻‍♂️","🦹🏼‍♂️","🦹🏽‍♂️","🦹🏾‍♂️","🦹🏿‍♂️","🦹‍♀️","🦹🏻‍♀️","🦹🏼‍♀️","🦹🏽‍♀️","🦹🏾‍♀️","🦹🏿‍♀️","🧙","🧙🏻","🧙🏼","🧙🏽","🧙🏾","🧙🏿","🧙‍♂️","🧙🏻‍♂️","🧙🏼‍♂️","🧙🏽‍♂️","🧙🏾‍♂️","🧙🏿‍♂️","🧙‍♀️","🧙🏻‍♀️","🧙🏼‍♀️","🧙🏽‍♀️","🧙🏾‍♀️","🧙🏿‍♀️","🧚","🧚🏻","🧚🏼","🧚🏽","🧚🏾","🧚🏿","🧚‍♂️","🧚🏻‍♂️","🧚🏼‍♂️","🧚🏽‍♂️","🧚🏾‍♂️","🧚🏿‍♂️","🧚‍♀️","🧚🏻‍♀️","🧚🏼‍♀️","🧚🏽‍♀️","🧚🏾‍♀️","🧚🏿‍♀️","🧛","🧛🏻","🧛🏼","🧛🏽","🧛🏾","🧛🏿","🧛‍♂️","🧛🏻‍♂️","🧛🏼‍♂️","🧛🏽‍♂️","🧛🏾‍♂️","🧛🏿‍♂️","🧛‍♀️","🧛🏻‍♀️","🧛🏼‍♀️","🧛🏽‍♀️","🧛🏾‍♀️","🧛🏿‍♀️","🧜","🧜🏻","🧜🏼","🧜🏽","🧜🏾","🧜🏿","🧜‍♂️","🧜🏻‍♂️","🧜🏼‍♂️","🧜🏽‍♂️","🧜🏾‍♂️","🧜🏿‍♂️","🧜‍♀️","🧜🏻‍♀️","🧜🏼‍♀️","🧜🏽‍♀️","🧜🏾‍♀️","🧜🏿‍♀️","🧝","🧝🏻","🧝🏼","🧝🏽","🧝🏾","🧝🏿","🧝‍♂️","🧝🏻‍♂️","🧝🏼‍♂️","🧝🏽‍♂️","🧝🏾‍♂️","🧝🏿‍♂️","🧝‍♀️","🧝🏻‍♀️","🧝🏼‍♀️","🧝🏽‍♀️","🧝🏾‍♀️","🧝🏿‍♀️","🧞","🧞‍♂️","🧞‍♀️","🧟","🧟‍♂️","🧟‍♀️","💆","💆🏻","💆🏼","💆🏽","💆🏾","💆🏿","💆‍♂️","💆🏻‍♂️","💆🏼‍♂️","💆🏽‍♂️","💆🏾‍♂️","💆🏿‍♂️","💆‍♀️","💆🏻‍♀️","💆🏼‍♀️","💆🏽‍♀️","💆🏾‍♀️","💆🏿‍♀️","💇","💇🏻","💇🏼","💇🏽","💇🏾","💇🏿","💇‍♂️","💇🏻‍♂️","💇🏼‍♂️","💇🏽‍♂️","💇🏾‍♂️","💇🏿‍♂️","💇‍♀️","💇🏻‍♀️","💇🏼‍♀️","💇🏽‍♀️","💇🏾‍♀️","💇🏿‍♀️","🚶","🚶🏻","🚶🏼","🚶🏽","🚶🏾","🚶🏿","🚶‍♂️","🚶🏻‍♂️","🚶🏼‍♂️","🚶🏽‍♂️","🚶🏾‍♂️","🚶🏿‍♂️","🚶‍♀️","🚶🏻‍♀️","🚶🏼‍♀️","🚶🏽‍♀️","🚶🏾‍♀️","🚶🏿‍♀️","🧍","🧍🏻","🧍🏼","🧍🏽","🧍🏾","🧍🏿","🧍‍♂️","🧍🏻‍♂️","🧍🏼‍♂️","🧍🏽‍♂️","🧍🏾‍♂️","🧍🏿‍♂️","🧍‍♀️","🧍🏻‍♀️","🧍🏼‍♀️","🧍🏽‍♀️","🧍🏾‍♀️","🧍🏿‍♀️","🧎","🧎🏻","🧎🏼","🧎🏽","🧎🏾","🧎🏿","🧎‍♂️","🧎🏻‍♂️","🧎🏼‍♂️","🧎🏽‍♂️","🧎🏾‍♂️","🧎🏿‍♂️","🧎‍♀️","🧎🏻‍♀️","🧎🏼‍♀️","🧎🏽‍♀️","🧎🏾‍♀️","🧎🏿‍♀️","🧑‍🦯","🧑🏻‍🦯","🧑🏼‍🦯","🧑🏽‍🦯","🧑🏾‍🦯","🧑🏿‍🦯","👨‍🦯","👨🏻‍🦯","👨🏼‍🦯","👨🏽‍🦯","👨🏾‍🦯","👨🏿‍🦯","👩‍🦯","👩🏻‍🦯","👩🏼‍🦯","👩🏽‍🦯","👩🏾‍🦯","👩🏿‍🦯","🧑‍🦼","🧑🏻‍🦼","🧑🏼‍🦼","🧑🏽‍🦼","🧑🏾‍🦼","🧑🏿‍🦼","👨‍🦼","👨🏻‍🦼","👨🏼‍🦼","👨🏽‍🦼","👨🏾‍🦼","👨🏿‍🦼","👩‍🦼","👩🏻‍🦼","👩🏼‍🦼","👩🏽‍🦼","👩🏾‍🦼","👩🏿‍🦼","🧑‍🦽","🧑🏻‍🦽","🧑🏼‍🦽","🧑🏽‍🦽","🧑🏾‍🦽","🧑🏿‍🦽","👨‍🦽","👨🏻‍🦽","👨🏼‍🦽","👨🏽‍🦽","👨🏾‍🦽","👨🏿‍🦽","👩‍🦽","👩🏻‍🦽","👩🏼‍🦽","👩🏽‍🦽","👩🏾‍🦽","👩🏿‍🦽","🏃","🏃🏻","🏃🏼","🏃🏽","🏃🏾","🏃🏿","🏃‍♂️","🏃🏻‍♂️","🏃🏼‍♂️","🏃🏽‍♂️","🏃🏾‍♂️","🏃🏿‍♂️","🏃‍♀️","🏃🏻‍♀️","🏃🏼‍♀️","🏃🏽‍♀️","🏃🏾‍♀️","🏃🏿‍♀️","💃","💃🏻","💃🏼","💃🏽","💃🏾","💃🏿","🕺","🕺🏻","🕺🏼","🕺🏽","🕺🏾","🕺🏿","🕴️","🕴🏻","🕴🏼","🕴🏽","🕴🏾","🕴🏿","👯","👯‍♂️","👯‍♀️","🧖","🧖🏻","🧖🏼","🧖🏽","🧖🏾","🧖🏿","🧖‍♂️","🧖🏻‍♂️","🧖🏼‍♂️","🧖🏽‍♂️","🧖🏾‍♂️","🧖🏿‍♂️","🧖‍♀️","🧖🏻‍♀️","🧖🏼‍♀️","🧖🏽‍♀️","🧖🏾‍♀️","🧖🏿‍♀️","🧗","🧗🏻","🧗🏼","🧗🏽","🧗🏾","🧗🏿","🧗‍♂️","🧗🏻‍♂️","🧗🏼‍♂️","🧗🏽‍♂️","🧗🏾‍♂️","🧗🏿‍♂️","🧗‍♀️","🧗🏻‍♀️","🧗🏼‍♀️","🧗🏽‍♀️","🧗🏾‍♀️","🧗🏿‍♀️","🤺","🏇","🏇🏻","🏇🏼","🏇🏽","🏇🏾","🏇🏿","⛷️","🏂","🏂🏻","🏂🏼","🏂🏽","🏂🏾","🏂🏿","🏌️","🏌🏻","🏌🏼","🏌🏽","🏌🏾","🏌🏿","🏌️‍♂️","🏌🏻‍♂️","🏌🏼‍♂️","🏌🏽‍♂️","🏌🏾‍♂️","🏌🏿‍♂️","🏌️‍♀️","🏌🏻‍♀️","🏌🏼‍♀️","🏌🏽‍♀️","🏌🏾‍♀️","🏌🏿‍♀️","🏄","🏄🏻","🏄🏼","🏄🏽","🏄🏾","🏄🏿","🏄‍♂️","🏄🏻‍♂️","🏄🏼‍♂️","🏄🏽‍♂️","🏄🏾‍♂️","🏄🏿‍♂️","🏄‍♀️","🏄🏻‍♀️","🏄🏼‍♀️","🏄🏽‍♀️","🏄🏾‍♀️","🏄🏿‍♀️","🚣","🚣🏻","🚣🏼","🚣🏽","🚣🏾","🚣🏿","🚣‍♂️","🚣🏻‍♂️","🚣🏼‍♂️","🚣🏽‍♂️","🚣🏾‍♂️","🚣🏿‍♂️","🚣‍♀️","🚣🏻‍♀️","🚣🏼‍♀️","🚣🏽‍♀️","🚣🏾‍♀️","🚣🏿‍♀️","🏊","🏊🏻","🏊🏼","🏊🏽","🏊🏾","🏊🏿","🏊‍♂️","🏊🏻‍♂️","🏊🏼‍♂️","🏊🏽‍♂️","🏊🏾‍♂️","🏊🏿‍♂️","🏊‍♀️","🏊🏻‍♀️","🏊🏼‍♀️","🏊🏽‍♀️","🏊🏾‍♀️","🏊🏿‍♀️","⛹️","⛹🏻","⛹🏼","⛹🏽","⛹🏾","⛹🏿","⛹️‍♂️","⛹🏻‍♂️","⛹🏼‍♂️","⛹🏽‍♂️","⛹🏾‍♂️","⛹🏿‍♂️","⛹️‍♀️","⛹🏻‍♀️","⛹🏼‍♀️","⛹🏽‍♀️","⛹🏾‍♀️","⛹🏿‍♀️","🏋️","🏋🏻","🏋🏼","🏋🏽","🏋🏾","🏋🏿","🏋️‍♂️","🏋🏻‍♂️","🏋🏼‍♂️","🏋🏽‍♂️","🏋🏾‍♂️","🏋🏿‍♂️","🏋️‍♀️","🏋🏻‍♀️","🏋🏼‍♀️","🏋🏽‍♀️","🏋🏾‍♀️","🏋🏿‍♀️","🚴","🚴🏻","🚴🏼","🚴🏽","🚴🏾","🚴🏿","🚴‍♂️","🚴🏻‍♂️","🚴🏼‍♂️","🚴🏽‍♂️","🚴🏾‍♂️","🚴🏿‍♂️","🚴‍♀️","🚴🏻‍♀️","🚴🏼‍♀️","🚴🏽‍♀️","🚴🏾‍♀️","🚴🏿‍♀️","🚵","🚵🏻","🚵🏼","🚵🏽","🚵🏾","🚵🏿","🚵‍♂️","🚵🏻‍♂️","🚵🏼‍♂️","🚵🏽‍♂️","🚵🏾‍♂️","🚵🏿‍♂️","🚵‍♀️","🚵🏻‍♀️","🚵🏼‍♀️","🚵🏽‍♀️","🚵🏾‍♀️","🚵🏿‍♀️","🤸","🤸🏻","🤸🏼","🤸🏽","🤸🏾","🤸🏿","🤸‍♂️","🤸🏻‍♂️","🤸🏼‍♂️","🤸🏽‍♂️","🤸🏾‍♂️","🤸🏿‍♂️","🤸‍♀️","🤸🏻‍♀️","🤸🏼‍♀️","🤸🏽‍♀️","🤸🏾‍♀️","🤸🏿‍♀️","🤼","🤼‍♂️","🤼‍♀️","🤽","🤽🏻","🤽🏼","🤽🏽","🤽🏾","🤽🏿","🤽‍♂️","🤽🏻‍♂️","🤽🏼‍♂️","🤽🏽‍♂️","🤽🏾‍♂️","🤽🏿‍♂️","🤽‍♀️","🤽🏻‍♀️","🤽🏼‍♀️","🤽🏽‍♀️","🤽🏾‍♀️","🤽🏿‍♀️","🤾","🤾🏻","🤾🏼","🤾🏽","🤾🏾","🤾🏿","🤾‍♂️","🤾🏻‍♂️","🤾🏼‍♂️","🤾🏽‍♂️","🤾🏾‍♂️","🤾🏿‍♂️","🤾‍♀️","🤾🏻‍♀️","🤾🏼‍♀️","🤾🏽‍♀️","🤾🏾‍♀️","🤾🏿‍♀️","🤹","🤹🏻","🤹🏼","🤹🏽","🤹🏾","🤹🏿","🤹‍♂️","🤹🏻‍♂️","🤹🏼‍♂️","🤹🏽‍♂️","🤹🏾‍♂️","🤹🏿‍♂️","🤹‍♀️","🤹🏻‍♀️","🤹🏼‍♀️","🤹🏽‍♀️","🤹🏾‍♀️","🤹🏿‍♀️","🧘","🧘🏻","🧘🏼","🧘🏽","🧘🏾","🧘🏿","🧘‍♂️","🧘🏻‍♂️","🧘🏼‍♂️","🧘🏽‍♂️","🧘🏾‍♂️","🧘🏿‍♂️","🧘‍♀️","🧘🏻‍♀️","🧘🏼‍♀️","🧘🏽‍♀️","🧘🏾‍♀️","🧘🏿‍♀️","🛀","🛀🏻","🛀🏼","🛀🏽","🛀🏾","🛀🏿","🛌","🛌🏻","🛌🏼","🛌🏽","🛌🏾","🛌🏿","🧑‍🤝‍🧑","🧑🏻‍🤝‍🧑🏻","🧑🏻‍🤝‍🧑🏼","🧑🏻‍🤝‍🧑🏽","🧑🏻‍🤝‍🧑🏾","🧑🏻‍🤝‍🧑🏿","🧑🏼‍🤝‍🧑🏻","🧑🏼‍🤝‍🧑🏼","🧑🏼‍🤝‍🧑🏽","🧑🏼‍🤝‍🧑🏾","🧑🏼‍🤝‍🧑🏿","🧑🏽‍🤝‍🧑🏻","🧑🏽‍🤝‍🧑🏼","🧑🏽‍🤝‍🧑🏽","🧑🏽‍🤝‍🧑🏾","🧑🏽‍🤝‍🧑🏿","🧑🏾‍🤝‍🧑🏻","🧑🏾‍🤝‍🧑🏼","🧑🏾‍🤝‍🧑🏽","🧑🏾‍🤝‍🧑🏾","🧑🏾‍🤝‍🧑🏿","🧑🏿‍🤝‍🧑🏻","🧑🏿‍🤝‍🧑🏼","🧑🏿‍🤝‍🧑🏽","🧑🏿‍🤝‍🧑🏾","🧑🏿‍🤝‍🧑🏿","👭","👭🏻","👩🏻‍🤝‍👩🏼","👩🏻‍🤝‍👩🏽","👩🏻‍🤝‍👩🏾","👩🏻‍🤝‍👩🏿","👩🏼‍🤝‍👩🏻","👭🏼","👩🏼‍🤝‍👩🏽","👩🏼‍🤝‍👩🏾","👩🏼‍🤝‍👩🏿","👩🏽‍🤝‍👩🏻","👩🏽‍🤝‍👩🏼","👭🏽","👩🏽‍🤝‍👩🏾","👩🏽‍🤝‍👩🏿","👩🏾‍🤝‍👩🏻","👩🏾‍🤝‍👩🏼","👩🏾‍🤝‍👩🏽","👭🏾","👩🏾‍🤝‍👩🏿","👩🏿‍🤝‍👩🏻","👩🏿‍🤝‍👩🏼","👩🏿‍🤝‍👩🏽","👩🏿‍🤝‍👩🏾","👭🏿","👫","👫🏻","👩🏻‍🤝‍👨🏼","👩🏻‍🤝‍👨🏽","👩🏻‍🤝‍👨🏾","👩🏻‍🤝‍👨🏿","👩🏼‍🤝‍👨🏻","👫🏼","👩🏼‍🤝‍👨🏽","👩🏼‍🤝‍👨🏾","👩🏼‍🤝‍👨🏿","👩🏽‍🤝‍👨🏻","👩🏽‍🤝‍👨🏼","👫🏽","👩🏽‍🤝‍👨🏾","👩🏽‍🤝‍👨🏿","👩🏾‍🤝‍👨🏻","👩🏾‍🤝‍👨🏼","👩🏾‍🤝‍👨🏽","👫🏾","👩🏾‍🤝‍👨🏿","👩🏿‍🤝‍👨🏻","👩🏿‍🤝‍👨🏼","👩🏿‍🤝‍👨🏽","👩🏿‍🤝‍👨🏾","👫🏿","👬","👬🏻","👨🏻‍🤝‍👨🏼","👨🏻‍🤝‍👨🏽","👨🏻‍🤝‍👨🏾","👨🏻‍🤝‍👨🏿","👨🏼‍🤝‍👨🏻","👬🏼","👨🏼‍🤝‍👨🏽","👨🏼‍🤝‍👨🏾","👨🏼‍🤝‍👨🏿","👨🏽‍🤝‍👨🏻","👨🏽‍🤝‍👨🏼","👬🏽","👨🏽‍🤝‍👨🏾","👨🏽‍🤝‍👨🏿","👨🏾‍🤝‍👨🏻","👨🏾‍🤝‍👨🏼","👨🏾‍🤝‍👨🏽","👬🏾","👨🏾‍🤝‍👨🏿","👨🏿‍🤝‍👨🏻","👨🏿‍🤝‍👨🏼","👨🏿‍🤝‍👨🏽","👨🏿‍🤝‍👨🏾","👬🏿","💏","💏🏻","💏🏼","💏🏽","💏🏾","💏🏿","🧑🏻‍❤️‍💋‍🧑🏼","🧑🏻‍❤️‍💋‍🧑🏽","🧑🏻‍❤️‍💋‍🧑🏾","🧑🏻‍❤️‍💋‍🧑🏿","🧑🏼‍❤️‍💋‍🧑🏻","🧑🏼‍❤️‍💋‍🧑🏽","🧑🏼‍❤️‍💋‍🧑🏾","🧑🏼‍❤️‍💋‍🧑🏿","🧑🏽‍❤️‍💋‍🧑🏻","🧑🏽‍❤️‍💋‍🧑🏼","🧑🏽‍❤️‍💋‍🧑🏾","🧑🏽‍❤️‍💋‍🧑🏿","🧑🏾‍❤️‍💋‍🧑🏻","🧑🏾‍❤️‍💋‍🧑🏼","🧑🏾‍❤️‍💋‍🧑🏽","🧑🏾‍❤️‍💋‍🧑🏿","🧑🏿‍❤️‍💋‍🧑🏻","🧑🏿‍❤️‍💋‍🧑🏼","🧑🏿‍❤️‍💋‍🧑🏽","🧑🏿‍❤️‍💋‍🧑🏾","👩‍❤️‍💋‍👨","👩🏻‍❤️‍💋‍👨🏻","👩🏻‍❤️‍💋‍👨🏼","👩🏻‍❤️‍💋‍👨🏽","👩🏻‍❤️‍💋‍👨🏾","👩🏻‍❤️‍💋‍👨🏿","👩🏼‍❤️‍💋‍👨🏻","👩🏼‍❤️‍💋‍👨🏼","👩🏼‍❤️‍💋‍👨🏽","👩🏼‍❤️‍💋‍👨🏾","👩🏼‍❤️‍💋‍👨🏿","👩🏽‍❤️‍💋‍👨🏻","👩🏽‍❤️‍💋‍👨🏼","👩🏽‍❤️‍💋‍👨🏽","👩🏽‍❤️‍💋‍👨🏾","👩🏽‍❤️‍💋‍👨🏿","👩🏾‍❤️‍💋‍👨🏻","👩🏾‍❤️‍💋‍👨🏼","👩🏾‍❤️‍💋‍👨🏽","👩🏾‍❤️‍💋‍👨🏾","👩🏾‍❤️‍💋‍👨🏿","👩🏿‍❤️‍💋‍👨🏻","👩🏿‍❤️‍💋‍👨🏼","👩🏿‍❤️‍💋‍👨🏽","👩🏿‍❤️‍💋‍👨🏾","👩🏿‍❤️‍💋‍👨🏿","👨‍❤️‍💋‍👨","👨🏻‍❤️‍💋‍👨🏻","👨🏻‍❤️‍💋‍👨🏼","👨🏻‍❤️‍💋‍👨🏽","👨🏻‍❤️‍💋‍👨🏾","👨🏻‍❤️‍💋‍👨🏿","👨🏼‍❤️‍💋‍👨🏻","👨🏼‍❤️‍💋‍👨🏼","👨🏼‍❤️‍💋‍👨🏽","👨🏼‍❤️‍💋‍👨🏾","👨🏼‍❤️‍💋‍👨🏿","👨🏽‍❤️‍💋‍👨🏻","👨🏽‍❤️‍💋‍👨🏼","👨🏽‍❤️‍💋‍👨🏽","👨🏽‍❤️‍💋‍👨🏾","👨🏽‍❤️‍💋‍👨🏿","👨🏾‍❤️‍💋‍👨🏻","👨🏾‍❤️‍💋‍👨🏼","👨🏾‍❤️‍💋‍👨🏽","👨🏾‍❤️‍💋‍👨🏾","👨🏾‍❤️‍💋‍👨🏿","👨🏿‍❤️‍💋‍👨🏻","👨🏿‍❤️‍💋‍👨🏼","👨🏿‍❤️‍💋‍👨🏽","👨🏿‍❤️‍💋‍👨🏾","👨🏿‍❤️‍💋‍👨🏿","👩‍❤️‍💋‍👩","👩🏻‍❤️‍💋‍👩🏻","👩🏻‍❤️‍💋‍👩🏼","👩🏻‍❤️‍💋‍👩🏽","👩🏻‍❤️‍💋‍👩🏾","👩🏻‍❤️‍💋‍👩🏿","👩🏼‍❤️‍💋‍👩🏻","👩🏼‍❤️‍💋‍👩🏼","👩🏼‍❤️‍💋‍👩🏽","👩🏼‍❤️‍💋‍👩🏾","👩🏼‍❤️‍💋‍👩🏿","👩🏽‍❤️‍💋‍👩🏻","👩🏽‍❤️‍💋‍👩🏼","👩🏽‍❤️‍💋‍👩🏽","👩🏽‍❤️‍💋‍👩🏾","👩🏽‍❤️‍💋‍👩🏿","👩🏾‍❤️‍💋‍👩🏻","👩🏾‍❤️‍💋‍👩🏼","👩🏾‍❤️‍💋‍👩🏽","👩🏾‍❤️‍💋‍👩🏾","👩🏾‍❤️‍💋‍👩🏿","👩🏿‍❤️‍💋‍👩🏻","👩🏿‍❤️‍💋‍👩🏼","👩🏿‍❤️‍💋‍👩🏽","👩🏿‍❤️‍💋‍👩🏾","👩🏿‍❤️‍💋‍👩🏿","💑","💑🏻","💑🏼","💑🏽","💑🏾","💑🏿","🧑🏻‍❤️‍🧑🏼","🧑🏻‍❤️‍🧑🏽","🧑🏻‍❤️‍🧑🏾","🧑🏻‍❤️‍🧑🏿","🧑🏼‍❤️‍🧑🏻","🧑🏼‍❤️‍🧑🏽","🧑🏼‍❤️‍🧑🏾","🧑🏼‍❤️‍🧑🏿","🧑🏽‍❤️‍🧑🏻","🧑🏽‍❤️‍🧑🏼","🧑🏽‍❤️‍🧑🏾","🧑🏽‍❤️‍🧑🏿","🧑🏾‍❤️‍🧑🏻","🧑🏾‍❤️‍🧑🏼","🧑🏾‍❤️‍🧑🏽","🧑🏾‍❤️‍🧑🏿","🧑🏿‍❤️‍🧑🏻","🧑🏿‍❤️‍🧑🏼","🧑🏿‍❤️‍🧑🏽","🧑🏿‍❤️‍🧑🏾","👩‍❤️‍👨","👩🏻‍❤️‍👨🏻","👩🏻‍❤️‍👨🏼","👩🏻‍❤️‍👨🏽","👩🏻‍❤️‍👨🏾","👩🏻‍❤️‍👨🏿","👩🏼‍❤️‍👨🏻","👩🏼‍❤️‍👨🏼","👩🏼‍❤️‍👨🏽","👩🏼‍❤️‍👨🏾","👩🏼‍❤️‍👨🏿","👩🏽‍❤️‍👨🏻","👩🏽‍❤️‍👨🏼","👩🏽‍❤️‍👨🏽","👩🏽‍❤️‍👨🏾","👩🏽‍❤️‍👨🏿","👩🏾‍❤️‍👨🏻","👩🏾‍❤️‍👨🏼","👩🏾‍❤️‍👨🏽","👩🏾‍❤️‍👨🏾","👩🏾‍❤️‍👨🏿","👩🏿‍❤️‍👨🏻","👩🏿‍❤️‍👨🏼","👩🏿‍❤️‍👨🏽","👩🏿‍❤️‍👨🏾","👩🏿‍❤️‍👨🏿","👨‍❤️‍👨","👨🏻‍❤️‍👨🏻","👨🏻‍❤️‍👨🏼","👨🏻‍❤️‍👨🏽","👨🏻‍❤️‍👨🏾","👨🏻‍❤️‍👨🏿","👨🏼‍❤️‍👨🏻","👨🏼‍❤️‍👨🏼","👨🏼‍❤️‍👨🏽","👨🏼‍❤️‍👨🏾","👨🏼‍❤️‍👨🏿","👨🏽‍❤️‍👨🏻","👨🏽‍❤️‍👨🏼","👨🏽‍❤️‍👨🏽","👨🏽‍❤️‍👨🏾","👨🏽‍❤️‍👨🏿","👨🏾‍❤️‍👨🏻","👨🏾‍❤️‍👨🏼","👨🏾‍❤️‍👨🏽","👨🏾‍❤️‍👨🏾","👨🏾‍❤️‍👨🏿","👨🏿‍❤️‍👨🏻","👨🏿‍❤️‍👨🏼","👨🏿‍❤️‍👨🏽","👨🏿‍❤️‍👨🏾","👨🏿‍❤️‍👨🏿","👩‍❤️‍👩","👩🏻‍❤️‍👩🏻","👩🏻‍❤️‍👩🏼","👩🏻‍❤️‍👩🏽","👩🏻‍❤️‍👩🏾","👩🏻‍❤️‍👩🏿","👩🏼‍❤️‍👩🏻","👩🏼‍❤️‍👩🏼","👩🏼‍❤️‍👩🏽","👩🏼‍❤️‍👩🏾","👩🏼‍❤️‍👩🏿","👩🏽‍❤️‍👩🏻","👩🏽‍❤️‍👩🏼","👩🏽‍❤️‍👩🏽","👩🏽‍❤️‍👩🏾","👩🏽‍❤️‍👩🏿","👩🏾‍❤️‍👩🏻","👩🏾‍❤️‍👩🏼","👩🏾‍❤️‍👩🏽","👩🏾‍❤️‍👩🏾","👩🏾‍❤️‍👩🏿","👩🏿‍❤️‍👩🏻","👩🏿‍❤️‍👩🏼","👩🏿‍❤️‍👩🏽","👩🏿‍❤️‍👩🏾","👩🏿‍❤️‍👩🏿","👪","👨‍👩‍👦","👨‍👩‍👧","👨‍👩‍👧‍👦","👨‍👩‍👦‍👦","👨‍👩‍👧‍👧","👨‍👨‍👦","👨‍👨‍👧","👨‍👨‍👧‍👦","👨‍👨‍👦‍👦","👨‍👨‍👧‍👧","👩‍👩‍👦","👩‍👩‍👧","👩‍👩‍👧‍👦","👩‍👩‍👦‍👦","👩‍👩‍👧‍👧","👨‍👦","👨‍👦‍👦","👨‍👧","👨‍👧‍👦","👨‍👧‍👧","👩‍👦","👩‍👦‍👦","👩‍👧","👩‍👧‍👦","👩‍👧‍👧","🗣️","👤","👥","🫂","👣"],nature:["🐵","🐒","🦍","🦧","🐶","🐕","🦮","🐕‍🦺","🐩","🐺","🦊","🦝","🐱","🐈","🐈‍⬛","🦁","🐯","🐅","🐆","🐴","🐎","🦄","🦓","🦌","🦬","🐮","🐂","🐃","🐄","🐷","🐖","🐗","🐽","🐏","🐑","🐐","🐪","🐫","🦙","🦒","🐘","🦣","🦏","🦛","🐭","🐁","🐀","🐹","🐰","🐇","🐿️","🦫","🦔","🦇","🐻","🐻‍❄️","🐨","🐼","🦥","🦦","🦨","🦘","🦡","🐾","🦃","🐔","🐓","🐣","🐤","🐥","🐦","🐧","🕊️","🦅","🦆","🦢","🦉","🦤","🪶","🦩","🦚","🦜","🐸","🐊","🐢","🦎","🐍","🐲","🐉","🦕","🦖","🐳","🐋","🐬","🦭","🐟","🐠","🐡","🦈","🐙","🐚","🐌","🦋","🐛","🐜","🐝","🪲","🐞","🦗","🪳","🕷️","🕸️","🦂","🦟","🪰","🪱","🦠","💐","🌸","💮","🏵️","🌹","🥀","🌺","🌻","🌼","🌷","🌱","🪴","🌲","🌳","🌴","🌵","🌾","🌿","☘️","🍀","🍁","🍂","🍃"],food:["🍇","🍈","🍉","🍊","🍋","🍌","🍍","🥭","🍎","🍏","🍐","🍑","🍒","🍓","🫐","🥝","🍅","🫒","🥥","🥑","🍆","🥔","🥕","🌽","🌶️","🫑","🥒","🥬","🥦","🧄","🧅","🍄","🥜","🌰","🍞","🥐","🥖","🫓","🥨","🥯","🥞","🧇","🧀","🍖","🍗","🥩","🥓","🍔","🍟","🍕","🌭","🥪","🌮","🌯","🫔","🥙","🧆","🥚","🍳","🥘","🍲","🫕","🥣","🥗","🍿","🧈","🧂","🥫","🍱","🍘","🍙","🍚","🍛","🍜","🍝","🍠","🍢","🍣","🍤","🍥","🥮","🍡","🥟","🥠","🥡","🦀","🦞","🦐","🦑","🦪","🍦","🍧","🍨","🍩","🍪","🎂","🍰","🧁","🥧","🍫","🍬","🍭","🍮","🍯","🍼","🥛","☕","🫖","🍵","🍶","🍾","🍷","🍸","🍹","🍺","🍻","🥂","🥃","🥤","🧋","🧃","🧉","🧊","🥢","🍽️","🍴","🥄","🔪","🏺"],travel:["🌍","🌎","🌏","🌐","🗺️","🗾","🧭","🏔️","⛰️","🌋","🗻","🏕️","🏖️","🏜️","🏝️","🏞️","🏟️","🏛️","🏗️","🧱","🪨","🪵","🛖","🏘️","🏚️","🏠","🏡","🏢","🏣","🏤","🏥","🏦","🏨","🏩","🏪","🏫","🏬","🏭","🏯","🏰","💒","🗼","🗽","⛪","🕌","🛕","🕍","⛩️","🕋","⛲","⛺","🌁","🌃","🏙️","🌄","🌅","🌆","🌇","🌉","♨️","🎠","🎡","🎢","💈","🎪","🚂","🚃","🚄","🚅","🚆","🚇","🚈","🚉","🚊","🚝","🚞","🚋","🚌","🚍","🚎","🚐","🚑","🚒","🚓","🚔","🚕","🚖","🚗","🚘","🚙","🛻","🚚","🚛","🚜","🏎️","🏍️","🛵","🦽","🦼","🛺","🚲","🛴","🛹","🛼","🚏","🛣️","🛤️","🛢️","⛽","🚨","🚥","🚦","🛑","🚧","⚓","⛵","🛶","🚤","🛳️","⛴️","🛥️","🚢","✈️","🛩️","🛫","🛬","🪂","💺","🚁","🚟","🚠","🚡","🛰️","🚀","🛸","🛎️","🧳","⌛","⏳","⌚","⏰","⏱️","⏲️","🕰️","🕛","🕧","🕐","🕜","🕑","🕝","🕒","🕞","🕓","🕟","🕔","🕠","🕕","🕡","🕖","🕢","🕗","🕣","🕘","🕤","🕙","🕥","🕚","🕦","🌑","🌒","🌓","🌔","🌕","🌖","🌗","🌘","🌙","🌚","🌛","🌜","🌡️","☀️","🌝","🌞","🪐","⭐","🌟","🌠","🌌","☁️","⛅","⛈️","🌤️","🌥️","🌦️","🌧️","🌨️","🌩️","🌪️","🌫️","🌬️","🌀","🌈","🌂","☂️","☔","⛱️","⚡","❄️","☃️","⛄","☄️","🔥","💧","🌊"],activity:["🎃","🎄","🎆","🎇","🧨","✨","🎈","🎉","🎊","🎋","🎍","🎎","🎏","🎐","🎑","🧧","🎀","🎁","🎗️","🎟️","🎫","🎖️","🏆","🏅","🥇","🥈","🥉","⚽","⚾","🥎","🏀","🏐","🏈","🏉","🎾","🥏","🎳","🏏","🏑","🏒","🥍","🏓","🏸","🥊","🥋","🥅","⛳","⛸️","🎣","🤿","🎽","🎿","🛷","🥌","🎯","🪀","🪁","🎱","🔮","🪄","🧿","🎮","🕹️","🎰","🎲","🧩","🧸","🪅","🪆","♠️","♥️","♦️","♣️","♟️","🃏","🀄","🎴","🎭","🖼️","🎨","🧵","🪡","🧶","🪢"],object:["👓","🕶️","🥽","🥼","🦺","👔","👕","👖","🧣","🧤","🧥","🧦","👗","👘","🥻","🩱","🩲","🩳","👙","👚","👛","👜","👝","🛍️","🎒","🩴","👞","👟","🥾","🥿","👠","👡","🩰","👢","👑","👒","🎩","🎓","🧢","🪖","⛑️","📿","💄","💍","💎","🔇","🔈","🔉","🔊","📢","📣","📯","🔔","🔕","🎼","🎵","🎶","🎙️","🎚️","🎛️","🎤","🎧","📻","🎷","🪗","🎸","🎹","🎺","🎻","🪕","🥁","🪘","📱","📲","☎️","📞","📟","📠","🔋","🔌","💻","🖥️","🖨️","⌨️","🖱️","🖲️","💽","💾","💿","📀","🧮","🎥","🎞️","📽️","🎬","📺","📷","📸","📹","📼","🔍","🔎","🕯️","💡","🔦","🏮","🪔","📔","📕","📖","📗","📘","📙","📚","📓","📒","📃","📜","📄","📰","🗞️","📑","🔖","🏷️","💰","🪙","💴","💵","💶","💷","💸","💳","🧾","💹","✉️","📧","📨","📩","📤","📥","📦","📫","📪","📬","📭","📮","🗳️","✏️","✒️","🖋️","🖊️","🖌️","🖍️","📝","💼","📁","📂","🗂️","📅","📆","🗒️","🗓️","📇","📈","📉","📊","📋","📌","📍","📎","🖇️","📏","📐","✂️","🗃️","🗄️","🗑️","🔒","🔓","🔏","🔐","🔑","🗝️","🔨","🪓","⛏️","⚒️","🛠️","🗡️","⚔️","🔫","🪃","🏹","🛡️","🪚","🔧","🪛","🔩","⚙️","🗜️","⚖️","🦯","🔗","⛓️","🪝","🧰","🧲","🪜","⚗️","🧪","🧫","🧬","🔬","🔭","📡","💉","🩸","💊","🩹","🩺","🚪","🛗","🪞","🪟","🛏️","🛋️","🪑","🚽","🪠","🚿","🛁","🪤","🪒","🧴","🧷","🧹","🧺","🧻","🪣","🧼","🪥","🧽","🧯","🛒","🚬","⚰️","🪦","⚱️","🗿","🪧"],symbol:["🏧","🚮","🚰","♿","🚹","🚺","🚻","🚼","🚾","🛂","🛃","🛄","🛅","⚠️","🚸","⛔","🚫","🚳","🚭","🚯","🚱","🚷","📵","🔞","☢️","☣️","⬆️","↗️","➡️","↘️","⬇️","↙️","⬅️","↖️","↕️","↔️","↩️","↪️","⤴️","⤵️","🔃","🔄","🔙","🔚","🔛","🔜","🔝","🛐","⚛️","🕉️","✡️","☸️","☯️","✝️","☦️","☪️","☮️","🕎","🔯","♈","♉","♊","♋","♌","♍","♎","♏","♐","♑","♒","♓","⛎","🔀","🔁","🔂","▶️","⏩","⏭️","⏯️","◀️","⏪","⏮️","🔼","⏫","🔽","⏬","⏸️","⏹️","⏺️","⏏️","🎦","🔅","🔆","📶","📳","📴","♀️","♂️","⚧️","✖️","➕","➖","➗","♾️","‼️","⁉️","❓","❔","❕","❗","〰️","💱","💲","⚕️","♻️","⚜️","🔱","📛","🔰","⭕","✅","☑️","✔️","❌","❎","➰","➿","〽️","✳️","✴️","❇️","©️","®️","™️","#️⃣","*️⃣","0️⃣","1️⃣","2️⃣","3️⃣","4️⃣","5️⃣","6️⃣","7️⃣","8️⃣","9️⃣","🔟","🔠","🔡","🔢","🔣","🔤","🅰️","🆎","🅱️","🆑","🆒","🆓","ℹ️","🆔","Ⓜ️","🆕","🆖","🅾️","🆗","🅿️","🆘","🆙","🆚","🈁","🈂️","🈷️","🈶","🈯","🉐","🈹","🈚","🈲","🉑","🈸","🈴","🈳","㊗️","㊙️","🈺","🈵","🔴","🟠","🟡","🟢","🔵","🟣","🟤","⚫","⚪","🟥","🟧","🟨","🟩","🟦","🟪","🟫","⬛","⬜","◼️","◻️","◾","◽","▪️","▫️","🔶","🔷","🔸","🔹","🔺","🔻","💠","🔘","🔳","🔲"],flag:["🏁","🚩","🎌","🏴","🏳️","🏳️‍🌈","🏳️‍⚧️","🏴‍☠️","🇦🇨","🇦🇩","🇦🇪","🇦🇫","🇦🇬","🇦🇮","🇦🇱","🇦🇲","🇦🇴","🇦🇶","🇦🇷","🇦🇸","🇦🇹","🇦🇺","🇦🇼","🇦🇽","🇦🇿","🇧🇦","🇧🇧","🇧🇩","🇧🇪","🇧🇫","🇧🇬","🇧🇭","🇧🇮","🇧🇯","🇧🇱","🇧🇲","🇧🇳","🇧🇴","🇧🇶","🇧🇷","🇧🇸","🇧🇹","🇧🇻","🇧🇼","🇧🇾","🇧🇿","🇨🇦","🇨🇨","🇨🇩","🇨🇫","🇨🇬","🇨🇭","🇨🇮","🇨🇰","🇨🇱","🇨🇲","🇨🇳","🇨🇴","🇨🇵","🇨🇷","🇨🇺","🇨🇻","🇨🇼","🇨🇽","🇨🇾","🇨🇿","🇩🇪","🇩🇬","🇩🇯","🇩🇰","🇩🇲","🇩🇴","🇩🇿","🇪🇦","🇪🇨","🇪🇪","🇪🇬","🇪🇭","🇪🇷","🇪🇸","🇪🇹","🇪🇺","🇫🇮","🇫🇯","🇫🇰","🇫🇲","🇫🇴","🇫🇷","🇬🇦","🇬🇧","🇬🇩","🇬🇪","🇬🇫","🇬🇬","🇬🇭","🇬🇮","🇬🇱","🇬🇲","🇬🇳","🇬🇵","🇬🇶","🇬🇷","🇬🇸","🇬🇹","🇬🇺","🇬🇼","🇬🇾","🇭🇰","🇭🇲","🇭🇳","🇭🇷","🇭🇹","🇭🇺","🇮🇨","🇮🇩","🇮🇪","🇮🇱","🇮🇲","🇮🇳","🇮🇴","🇮🇶","🇮🇷","🇮🇸","🇮🇹","🇯🇪","🇯🇲","🇯🇴","🇯🇵","🇰🇪","🇰🇬","🇰🇭","🇰🇮","🇰🇲","🇰🇳","🇰🇵","🇰🇷","🇰🇼","🇰🇾","🇰🇿","🇱🇦","🇱🇧","🇱🇨","🇱🇮","🇱🇰","🇱🇷","🇱🇸","🇱🇹","🇱🇺","🇱🇻","🇱🇾","🇲🇦","🇲🇨","🇲🇩","🇲🇪","🇲🇫","🇲🇬","🇲🇭","🇲🇰","🇲🇱","🇲🇲","🇲🇳","🇲🇴","🇲🇵","🇲🇶","🇲🇷","🇲🇸","🇲🇹","🇲🇺","🇲🇻","🇲🇼","🇲🇽","🇲🇾","🇲🇿","🇳🇦","🇳🇨","🇳🇪","🇳🇫","🇳🇬","🇳🇮","🇳🇱","🇳🇴","🇳🇵","🇳🇷","🇳🇺","🇳🇿","🇴🇲","🇵🇦","🇵🇪","🇵🇫","🇵🇬","🇵🇭","🇵🇰","🇵🇱","🇵🇲","🇵🇳","🇵🇷","🇵🇸","🇵🇹","🇵🇼","🇵🇾","🇶🇦","🇷🇪","🇷🇴","🇷🇸","🇷🇺","🇷🇼","🇸🇦","🇸🇧","🇸🇨","🇸🇩","🇸🇪","🇸🇬","🇸🇭","🇸🇮","🇸🇯","🇸🇰","🇸🇱","🇸🇲","🇸🇳","🇸🇴","🇸🇷","🇸🇸","🇸🇹","🇸🇻","🇸🇽","🇸🇾","🇸🇿","🇹🇦","🇹🇨","🇹🇩","🇹🇫","🇹🇬","🇹🇭","🇹🇯","🇹🇰","🇹🇱","🇹🇲","🇹🇳","🇹🇴","🇹🇷","🇹🇹","🇹🇻","🇹🇼","🇹🇿","🇺🇦","🇺🇬","🇺🇲","🇺🇳","🇺🇸","🇺🇾","🇺🇿","🇻🇦","🇻🇨","🇻🇪","🇻🇬","🇻🇮","🇻🇳","🇻🇺","🇼🇫","🇼🇸","🇽🇰","🇾🇪","🇾🇹","🇿🇦","🇿🇲","🇿🇼"]},http_status_code:{informational:[100,101,102,103],success:[200,201,202,203,204,205,206,207,208,226],redirection:[300,301,302,303,304,305,306,307,308],clientError:[400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,421,422,423,424,425,426,428,429,431,451],serverError:[500,501,502,503,504,505,506,507,508,510,511]},jwt_algorithm:["HS256","HS384","HS512","RS256","RS384","RS512","ES256","ES384","ES512","PS256","PS384","PS512","none"],user_agent_pattern:['Mozilla/5.0 (compatible; MSIE {{number.int({"min":6,"max":10})}}.0; Windows NT {{helpers.arrayElement(["5.1","5.2","6.0","6.1","6.2","6.3","10.0"])}}; Trident/{{number.int({"min":4,"max":7})}}.0)','Mozilla/5.0 (Windows NT {{helpers.arrayElement(["5.1","5.2","6.0","6.1","6.2","6.3","10.0"])}}; Win64; x64) AppleWebKit/{{number.int({"min":536,"max":605})}}.{{number.int({"min":0,"max":99})}} (KHTML, like Gecko) Chrome/{{number.int({"min":55,"max":131})}}.{{system.semver}} Safari/{{number.int({"min":536,"max":605})}}.{{number.int({"min":0,"max":99})}} Edg/{{number.int({"min":110,"max":131})}}.{{system.semver}}','Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/{{number.int({"min":536,"max":605})}}.{{number.int({"min":0,"max":99})}}.{{number.int({"min":0,"max":99})}} (KHTML, like Gecko) Version/16.1 Safari/{{number.int({"min":536,"max":605})}}.{{number.int({"min":0,"max":99})}}.{{number.int({"min":0,"max":99})}}','Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:{{number.int({"min":75, "max":133})}}.0) Gecko/20100101 Firefox/{{number.int({"min":75, "max":133})}}.0','Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_15_7) AppleWebKit/{{number.int({"min":536,"max":605})}}.{{number.int({"min":0,"max":99})}}.{{number.int({"min":0,"max":99})}} (KHTML, like Gecko) Chrome/{{number.int({"min":55,"max":131})}}.{{system.semver}} Safari/{{number.int({"min":536,"max":605})}}.{{number.int({"min":0,"max":99})}}.{{number.int({"min":0,"max":99})}}','Mozilla/5.0 (X11; Linux x86_64; rv:{{number.int({"min":75,"max":133})}}.0) Gecko/20100101 Firefox/{{number.int({"min":75,"max":133})}}.0',"FakerBot/{{system.semver}}","Googlebot/2.1 (+http://www.google.com/bot.html)",'Mozilla/5.0 (iPhone; CPU iPhone OS {{number.int({"min":10,"max":18})}}_{{number.int({"min":0,"max":4})}} like Mac OS X) AppleWebKit/{{number.int({"min":536,"max":605})}}.{{number.int({"min":0,"max":99})}}.{{number.int({"min":0,"max":99})}} (KHTML, like Gecko) Version/{{number.int({"min":10,"max":18})}}_{{number.int({"min":0,"max":4})}} Mobile/15E148 Safari/{{number.int({"min":536,"max":605})}}.{{number.int({"min":0,"max":99})}}','Mozilla/5.0 (Linux; Android {{number.int({"min":5,"max":13})}}; {{helpers.arrayElement(["SM-G998U","SM-G998B","SM-G998N","SM-G998P","SM-T800"])}}) AppleWebKit/{{number.int({"min":536,"max":605})}}.{{number.int({"min":0,"max":99})}} (KHTML, like Gecko) Chrome/{{number.int({"min":55,"max":131})}}.{{system.semver}} Mobile Safari/{{number.int({"min":536,"max":605})}}.{{number.int({"min":0,"max":99})}}']},location:{country_code:[{alpha2:"AD",alpha3:"AND",numeric:"020"},{alpha2:"AE",alpha3:"ARE",numeric:"784"},{alpha2:"AF",alpha3:"AFG",numeric:"004"},{alpha2:"AG",alpha3:"ATG",numeric:"028"},{alpha2:"AI",alpha3:"AIA",numeric:"660"},{alpha2:"AL",alpha3:"ALB",numeric:"008"},{alpha2:"AM",alpha3:"ARM",numeric:"051"},{alpha2:"AO",alpha3:"AGO",numeric:"024"},{alpha2:"AQ",alpha3:"ATA",numeric:"010"},{alpha2:"AR",alpha3:"ARG",numeric:"032"},{alpha2:"AS",alpha3:"ASM",numeric:"016"},{alpha2:"AT",alpha3:"AUT",numeric:"040"},{alpha2:"AU",alpha3:"AUS",numeric:"036"},{alpha2:"AW",alpha3:"ABW",numeric:"533"},{alpha2:"AX",alpha3:"ALA",numeric:"248"},{alpha2:"AZ",alpha3:"AZE",numeric:"031"},{alpha2:"BA",alpha3:"BIH",numeric:"070"},{alpha2:"BB",alpha3:"BRB",numeric:"052"},{alpha2:"BD",alpha3:"BGD",numeric:"050"},{alpha2:"BE",alpha3:"BEL",numeric:"056"},{alpha2:"BF",alpha3:"BFA",numeric:"854"},{alpha2:"BG",alpha3:"BGR",numeric:"100"},{alpha2:"BH",alpha3:"BHR",numeric:"048"},{alpha2:"BI",alpha3:"BDI",numeric:"108"},{alpha2:"BJ",alpha3:"BEN",numeric:"204"},{alpha2:"BL",alpha3:"BLM",numeric:"652"},{alpha2:"BM",alpha3:"BMU",numeric:"060"},{alpha2:"BN",alpha3:"BRN",numeric:"096"},{alpha2:"BO",alpha3:"BOL",numeric:"068"},{alpha2:"BQ",alpha3:"BES",numeric:"535"},{alpha2:"BR",alpha3:"BRA",numeric:"076"},{alpha2:"BS",alpha3:"BHS",numeric:"044"},{alpha2:"BT",alpha3:"BTN",numeric:"064"},{alpha2:"BV",alpha3:"BVT",numeric:"074"},{alpha2:"BW",alpha3:"BWA",numeric:"072"},{alpha2:"BY",alpha3:"BLR",numeric:"112"},{alpha2:"BZ",alpha3:"BLZ",numeric:"084"},{alpha2:"CA",alpha3:"CAN",numeric:"124"},{alpha2:"CC",alpha3:"CCK",numeric:"166"},{alpha2:"CD",alpha3:"COD",numeric:"180"},{alpha2:"CF",alpha3:"CAF",numeric:"140"},{alpha2:"CG",alpha3:"COG",numeric:"178"},{alpha2:"CH",alpha3:"CHE",numeric:"756"},{alpha2:"CI",alpha3:"CIV",numeric:"384"},{alpha2:"CK",alpha3:"COK",numeric:"184"},{alpha2:"CL",alpha3:"CHL",numeric:"152"},{alpha2:"CM",alpha3:"CMR",numeric:"120"},{alpha2:"CN",alpha3:"CHN",numeric:"156"},{alpha2:"CO",alpha3:"COL",numeric:"170"},{alpha2:"CR",alpha3:"CRI",numeric:"188"},{alpha2:"CU",alpha3:"CUB",numeric:"192"},{alpha2:"CV",alpha3:"CPV",numeric:"132"},{alpha2:"CW",alpha3:"CUW",numeric:"531"},{alpha2:"CX",alpha3:"CXR",numeric:"162"},{alpha2:"CY",alpha3:"CYP",numeric:"196"},{alpha2:"CZ",alpha3:"CZE",numeric:"203"},{alpha2:"DE",alpha3:"DEU",numeric:"276"},{alpha2:"DJ",alpha3:"DJI",numeric:"262"},{alpha2:"DK",alpha3:"DNK",numeric:"208"},{alpha2:"DM",alpha3:"DMA",numeric:"212"},{alpha2:"DO",alpha3:"DOM",numeric:"214"},{alpha2:"DZ",alpha3:"DZA",numeric:"012"},{alpha2:"EC",alpha3:"ECU",numeric:"218"},{alpha2:"EE",alpha3:"EST",numeric:"233"},{alpha2:"EG",alpha3:"EGY",numeric:"818"},{alpha2:"EH",alpha3:"ESH",numeric:"732"},{alpha2:"ER",alpha3:"ERI",numeric:"232"},{alpha2:"ES",alpha3:"ESP",numeric:"724"},{alpha2:"ET",alpha3:"ETH",numeric:"231"},{alpha2:"FI",alpha3:"FIN",numeric:"246"},{alpha2:"FJ",alpha3:"FJI",numeric:"242"},{alpha2:"FK",alpha3:"FLK",numeric:"238"},{alpha2:"FM",alpha3:"FSM",numeric:"583"},{alpha2:"FO",alpha3:"FRO",numeric:"234"},{alpha2:"FR",alpha3:"FRA",numeric:"250"},{alpha2:"GA",alpha3:"GAB",numeric:"266"},{alpha2:"GB",alpha3:"GBR",numeric:"826"},{alpha2:"GD",alpha3:"GRD",numeric:"308"},{alpha2:"GE",alpha3:"GEO",numeric:"268"},{alpha2:"GF",alpha3:"GUF",numeric:"254"},{alpha2:"GG",alpha3:"GGY",numeric:"831"},{alpha2:"GH",alpha3:"GHA",numeric:"288"},{alpha2:"GI",alpha3:"GIB",numeric:"292"},{alpha2:"GL",alpha3:"GRL",numeric:"304"},{alpha2:"GM",alpha3:"GMB",numeric:"270"},{alpha2:"GN",alpha3:"GIN",numeric:"324"},{alpha2:"GP",alpha3:"GLP",numeric:"312"},{alpha2:"GQ",alpha3:"GNQ",numeric:"226"},{alpha2:"GR",alpha3:"GRC",numeric:"300"},{alpha2:"GS",alpha3:"SGS",numeric:"239"},{alpha2:"GT",alpha3:"GTM",numeric:"320"},{alpha2:"GU",alpha3:"GUM",numeric:"316"},{alpha2:"GW",alpha3:"GNB",numeric:"624"},{alpha2:"GY",alpha3:"GUY",numeric:"328"},{alpha2:"HK",alpha3:"HKG",numeric:"344"},{alpha2:"HM",alpha3:"HMD",numeric:"334"},{alpha2:"HN",alpha3:"HND",numeric:"340"},{alpha2:"HR",alpha3:"HRV",numeric:"191"},{alpha2:"HT",alpha3:"HTI",numeric:"332"},{alpha2:"HU",alpha3:"HUN",numeric:"348"},{alpha2:"ID",alpha3:"IDN",numeric:"360"},{alpha2:"IE",alpha3:"IRL",numeric:"372"},{alpha2:"IL",alpha3:"ISR",numeric:"376"},{alpha2:"IM",alpha3:"IMN",numeric:"833"},{alpha2:"IN",alpha3:"IND",numeric:"356"},{alpha2:"IO",alpha3:"IOT",numeric:"086"},{alpha2:"IQ",alpha3:"IRQ",numeric:"368"},{alpha2:"IR",alpha3:"IRN",numeric:"364"},{alpha2:"IS",alpha3:"ISL",numeric:"352"},{alpha2:"IT",alpha3:"ITA",numeric:"380"},{alpha2:"JE",alpha3:"JEY",numeric:"832"},{alpha2:"JM",alpha3:"JAM",numeric:"388"},{alpha2:"JO",alpha3:"JOR",numeric:"400"},{alpha2:"JP",alpha3:"JPN",numeric:"392"},{alpha2:"KE",alpha3:"KEN",numeric:"404"},{alpha2:"KG",alpha3:"KGZ",numeric:"417"},{alpha2:"KH",alpha3:"KHM",numeric:"116"},{alpha2:"KI",alpha3:"KIR",numeric:"296"},{alpha2:"KM",alpha3:"COM",numeric:"174"},{alpha2:"KN",alpha3:"KNA",numeric:"659"},{alpha2:"KP",alpha3:"PRK",numeric:"408"},{alpha2:"KR",alpha3:"KOR",numeric:"410"},{alpha2:"KW",alpha3:"KWT",numeric:"414"},{alpha2:"KY",alpha3:"CYM",numeric:"136"},{alpha2:"KZ",alpha3:"KAZ",numeric:"398"},{alpha2:"LA",alpha3:"LAO",numeric:"418"},{alpha2:"LB",alpha3:"LBN",numeric:"422"},{alpha2:"LC",alpha3:"LCA",numeric:"662"},{alpha2:"LI",alpha3:"LIE",numeric:"438"},{alpha2:"LK",alpha3:"LKA",numeric:"144"},{alpha2:"LR",alpha3:"LBR",numeric:"430"},{alpha2:"LS",alpha3:"LSO",numeric:"426"},{alpha2:"LT",alpha3:"LTU",numeric:"440"},{alpha2:"LU",alpha3:"LUX",numeric:"442"},{alpha2:"LV",alpha3:"LVA",numeric:"428"},{alpha2:"LY",alpha3:"LBY",numeric:"434"},{alpha2:"MA",alpha3:"MAR",numeric:"504"},{alpha2:"MC",alpha3:"MCO",numeric:"492"},{alpha2:"MD",alpha3:"MDA",numeric:"498"},{alpha2:"ME",alpha3:"MNE",numeric:"499"},{alpha2:"MF",alpha3:"MAF",numeric:"663"},{alpha2:"MG",alpha3:"MDG",numeric:"450"},{alpha2:"MH",alpha3:"MHL",numeric:"584"},{alpha2:"MK",alpha3:"MKD",numeric:"807"},{alpha2:"ML",alpha3:"MLI",numeric:"466"},{alpha2:"MM",alpha3:"MMR",numeric:"104"},{alpha2:"MN",alpha3:"MNG",numeric:"496"},{alpha2:"MO",alpha3:"MAC",numeric:"446"},{alpha2:"MP",alpha3:"MNP",numeric:"580"},{alpha2:"MQ",alpha3:"MTQ",numeric:"474"},{alpha2:"MR",alpha3:"MRT",numeric:"478"},{alpha2:"MS",alpha3:"MSR",numeric:"500"},{alpha2:"MT",alpha3:"MLT",numeric:"470"},{alpha2:"MU",alpha3:"MUS",numeric:"480"},{alpha2:"MV",alpha3:"MDV",numeric:"462"},{alpha2:"MW",alpha3:"MWI",numeric:"454"},{alpha2:"MX",alpha3:"MEX",numeric:"484"},{alpha2:"MY",alpha3:"MYS",numeric:"458"},{alpha2:"MZ",alpha3:"MOZ",numeric:"508"},{alpha2:"NA",alpha3:"NAM",numeric:"516"},{alpha2:"NC",alpha3:"NCL",numeric:"540"},{alpha2:"NE",alpha3:"NER",numeric:"562"},{alpha2:"NF",alpha3:"NFK",numeric:"574"},{alpha2:"NG",alpha3:"NGA",numeric:"566"},{alpha2:"NI",alpha3:"NIC",numeric:"558"},{alpha2:"NL",alpha3:"NLD",numeric:"528"},{alpha2:"NO",alpha3:"NOR",numeric:"578"},{alpha2:"NP",alpha3:"NPL",numeric:"524"},{alpha2:"NR",alpha3:"NRU",numeric:"520"},{alpha2:"NU",alpha3:"NIU",numeric:"570"},{alpha2:"NZ",alpha3:"NZL",numeric:"554"},{alpha2:"OM",alpha3:"OMN",numeric:"512"},{alpha2:"PA",alpha3:"PAN",numeric:"591"},{alpha2:"PE",alpha3:"PER",numeric:"604"},{alpha2:"PF",alpha3:"PYF",numeric:"258"},{alpha2:"PG",alpha3:"PNG",numeric:"598"},{alpha2:"PH",alpha3:"PHL",numeric:"608"},{alpha2:"PK",alpha3:"PAK",numeric:"586"},{alpha2:"PL",alpha3:"POL",numeric:"616"},{alpha2:"PM",alpha3:"SPM",numeric:"666"},{alpha2:"PN",alpha3:"PCN",numeric:"612"},{alpha2:"PR",alpha3:"PRI",numeric:"630"},{alpha2:"PS",alpha3:"PSE",numeric:"275"},{alpha2:"PT",alpha3:"PRT",numeric:"620"},{alpha2:"PW",alpha3:"PLW",numeric:"585"},{alpha2:"PY",alpha3:"PRY",numeric:"600"},{alpha2:"QA",alpha3:"QAT",numeric:"634"},{alpha2:"RE",alpha3:"REU",numeric:"638"},{alpha2:"RO",alpha3:"ROU",numeric:"642"},{alpha2:"RS",alpha3:"SRB",numeric:"688"},{alpha2:"RU",alpha3:"RUS",numeric:"643"},{alpha2:"RW",alpha3:"RWA",numeric:"646"},{alpha2:"SA",alpha3:"SAU",numeric:"682"},{alpha2:"SB",alpha3:"SLB",numeric:"090"},{alpha2:"SC",alpha3:"SYC",numeric:"690"},{alpha2:"SD",alpha3:"SDN",numeric:"729"},{alpha2:"SE",alpha3:"SWE",numeric:"752"},{alpha2:"SG",alpha3:"SGP",numeric:"702"},{alpha2:"SH",alpha3:"SHN",numeric:"654"},{alpha2:"SI",alpha3:"SVN",numeric:"705"},{alpha2:"SJ",alpha3:"SJM",numeric:"744"},{alpha2:"SK",alpha3:"SVK",numeric:"703"},{alpha2:"SL",alpha3:"SLE",numeric:"694"},{alpha2:"SM",alpha3:"SMR",numeric:"674"},{alpha2:"SN",alpha3:"SEN",numeric:"686"},{alpha2:"SO",alpha3:"SOM",numeric:"706"},{alpha2:"SR",alpha3:"SUR",numeric:"740"},{alpha2:"SS",alpha3:"SSD",numeric:"728"},{alpha2:"ST",alpha3:"STP",numeric:"678"},{alpha2:"SV",alpha3:"SLV",numeric:"222"},{alpha2:"SX",alpha3:"SXM",numeric:"534"},{alpha2:"SY",alpha3:"SYR",numeric:"760"},{alpha2:"SZ",alpha3:"SWZ",numeric:"748"},{alpha2:"TC",alpha3:"TCA",numeric:"796"},{alpha2:"TD",alpha3:"TCD",numeric:"148"},{alpha2:"TF",alpha3:"ATF",numeric:"260"},{alpha2:"TG",alpha3:"TGO",numeric:"768"},{alpha2:"TH",alpha3:"THA",numeric:"764"},{alpha2:"TJ",alpha3:"TJK",numeric:"762"},{alpha2:"TK",alpha3:"TKL",numeric:"772"},{alpha2:"TL",alpha3:"TLS",numeric:"626"},{alpha2:"TM",alpha3:"TKM",numeric:"795"},{alpha2:"TN",alpha3:"TUN",numeric:"788"},{alpha2:"TO",alpha3:"TON",numeric:"776"},{alpha2:"TR",alpha3:"TUR",numeric:"792"},{alpha2:"TT",alpha3:"TTO",numeric:"780"},{alpha2:"TV",alpha3:"TUV",numeric:"798"},{alpha2:"TW",alpha3:"TWN",numeric:"158"},{alpha2:"TZ",alpha3:"TZA",numeric:"834"},{alpha2:"UA",alpha3:"UKR",numeric:"804"},{alpha2:"UG",alpha3:"UGA",numeric:"800"},{alpha2:"UM",alpha3:"UMI",numeric:"581"},{alpha2:"US",alpha3:"USA",numeric:"840"},{alpha2:"UY",alpha3:"URY",numeric:"858"},{alpha2:"UZ",alpha3:"UZB",numeric:"860"},{alpha2:"VA",alpha3:"VAT",numeric:"336"},{alpha2:"VC",alpha3:"VCT",numeric:"670"},{alpha2:"VE",alpha3:"VEN",numeric:"862"},{alpha2:"VG",alpha3:"VGB",numeric:"092"},{alpha2:"VI",alpha3:"VIR",numeric:"850"},{alpha2:"VN",alpha3:"VNM",numeric:"704"},{alpha2:"VU",alpha3:"VUT",numeric:"548"},{alpha2:"WF",alpha3:"WLF",numeric:"876"},{alpha2:"WS",alpha3:"WSM",numeric:"882"},{alpha2:"YE",alpha3:"YEM",numeric:"887"},{alpha2:"YT",alpha3:"MYT",numeric:"175"},{alpha2:"ZA",alpha3:"ZAF",numeric:"710"},{alpha2:"ZM",alpha3:"ZMB",numeric:"894"},{alpha2:"ZW",alpha3:"ZWE",numeric:"716"}],time_zone:chunk_ES2KDHJ2_I},metadata:{title:"Base",code:"base"},system:{directory_path:["/Applications","/bin","/boot","/boot/defaults","/dev","/etc","/etc/defaults","/etc/mail","/etc/namedb","/etc/periodic","/etc/ppp","/home","/home/user","/home/user/dir","/lib","/Library","/lost+found","/media","/mnt","/net","/Network","/opt","/opt/bin","/opt/include","/opt/lib","/opt/sbin","/opt/share","/private","/private/tmp","/private/var","/proc","/rescue","/root","/sbin","/selinux","/srv","/sys","/System","/tmp","/Users","/usr","/usr/X11R6","/usr/bin","/usr/include","/usr/lib","/usr/libdata","/usr/libexec","/usr/local/bin","/usr/local/src","/usr/obj","/usr/ports","/usr/sbin","/usr/share","/usr/src","/var","/var/log","/var/mail","/var/spool","/var/tmp","/var/yp"],mime_type:{"application/epub+zip":{extensions:["epub"]},"application/gzip":{extensions:["gz"]},"application/java-archive":{extensions:["jar","war","ear"]},"application/json":{extensions:["json","map"]},"application/ld+json":{extensions:["jsonld"]},"application/msword":{extensions:["doc","dot"]},"application/octet-stream":{extensions:["bin","dms","lrf","mar","so","dist","distz","pkg","bpk","dump","elc","deploy","exe","dll","deb","dmg","iso","img","msi","msp","msm","buffer"]},"application/ogg":{extensions:["ogx"]},"application/pdf":{extensions:["pdf"]},"application/rtf":{extensions:["rtf"]},"application/vnd.amazon.ebook":{extensions:["azw"]},"application/vnd.apple.installer+xml":{extensions:["mpkg"]},"application/vnd.mozilla.xul+xml":{extensions:["xul"]},"application/vnd.ms-excel":{extensions:["xls","xlm","xla","xlc","xlt","xlw"]},"application/vnd.ms-fontobject":{extensions:["eot"]},"application/vnd.ms-powerpoint":{extensions:["ppt","pps","pot"]},"application/vnd.oasis.opendocument.presentation":{extensions:["odp"]},"application/vnd.oasis.opendocument.spreadsheet":{extensions:["ods"]},"application/vnd.oasis.opendocument.text":{extensions:["odt"]},"application/vnd.openxmlformats-officedocument.presentationml.presentation":{extensions:["pptx"]},"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":{extensions:["xlsx"]},"application/vnd.openxmlformats-officedocument.wordprocessingml.document":{extensions:["docx"]},"application/vnd.rar":{extensions:["rar"]},"application/vnd.visio":{extensions:["vsd","vst","vss","vsw"]},"application/x-7z-compressed":{extensions:["7z"]},"application/x-abiword":{extensions:["abw"]},"application/x-bzip":{extensions:["bz"]},"application/x-bzip2":{extensions:["bz2","boz"]},"application/x-csh":{extensions:["csh"]},"application/x-freearc":{extensions:["arc"]},"application/x-httpd-php":{extensions:["php"]},"application/x-sh":{extensions:["sh"]},"application/x-tar":{extensions:["tar"]},"application/xhtml+xml":{extensions:["xhtml","xht"]},"application/xml":{extensions:["xml","xsl","xsd","rng"]},"application/zip":{extensions:["zip"]},"audio/3gpp":{extensions:["3gpp"]},"audio/3gpp2":{extensions:["3g2"]},"audio/aac":{extensions:["aac"]},"audio/midi":{extensions:["mid","midi","kar","rmi"]},"audio/mpeg":{extensions:["mpga","mp2","mp2a","mp3","m2a","m3a"]},"audio/ogg":{extensions:["oga","ogg","spx","opus"]},"audio/opus":{extensions:["opus"]},"audio/wav":{extensions:["wav"]},"audio/webm":{extensions:["weba"]},"font/otf":{extensions:["otf"]},"font/ttf":{extensions:["ttf"]},"font/woff":{extensions:["woff"]},"font/woff2":{extensions:["woff2"]},"image/avif":{extensions:["avif"]},"image/bmp":{extensions:["bmp"]},"image/gif":{extensions:["gif"]},"image/jpeg":{extensions:["jpeg","jpg","jpe"]},"image/png":{extensions:["png"]},"image/svg+xml":{extensions:["svg","svgz"]},"image/tiff":{extensions:["tif","tiff"]},"image/vnd.microsoft.icon":{extensions:["ico"]},"image/webp":{extensions:["webp"]},"text/calendar":{extensions:["ics","ifb"]},"text/css":{extensions:["css"]},"text/csv":{extensions:["csv"]},"text/html":{extensions:["html","htm","shtml"]},"text/javascript":{extensions:["js","mjs"]},"text/plain":{extensions:["txt","text","conf","def","list","log","in","ini"]},"video/3gpp":{extensions:["3gp","3gpp"]},"video/3gpp2":{extensions:["3g2"]},"video/mp2t":{extensions:["ts"]},"video/mp4":{extensions:["mp4","mp4v","mpg4"]},"video/mpeg":{extensions:["mpeg","mpg","mpe","m1v","m2v"]},"video/ogg":{extensions:["ogv"]},"video/webm":{extensions:["webm"]},"video/x-msvideo":{extensions:["avi"]}}}},chunk_LSEVNFON_f=new class extends chunk_ES2KDHJ2_${rawDefinitions;definitions;airline=new chunk_ES2KDHJ2_F(this);animal=new chunk_ES2KDHJ2_X(this);book=new chunk_ES2KDHJ2_Q(this);color=new chunk_ES2KDHJ2_G(this);commerce=new chunk_ES2KDHJ2_q(this);company=new chunk_ES2KDHJ2_ee(this);database=new chunk_ES2KDHJ2_re(this);date=new chunk_ES2KDHJ2_V(this);finance=new chunk_ES2KDHJ2_te(this);food=new chunk_ES2KDHJ2_ae(this);git=new chunk_ES2KDHJ2_ne(this);hacker=new chunk_ES2KDHJ2_ie(this);helpers=new chunk_ES2KDHJ2_z(this);image=new chunk_ES2KDHJ2_oe(this);internet=new chunk_ES2KDHJ2_O(this);location=new chunk_ES2KDHJ2_se(this);lorem=new chunk_ES2KDHJ2_ce(this);music=new chunk_ES2KDHJ2_le(this);person=new chunk_ES2KDHJ2_U(this);phone=new chunk_ES2KDHJ2_me(this);science=new chunk_ES2KDHJ2_ue(this);system=new chunk_ES2KDHJ2_pe(this);vehicle=new chunk_ES2KDHJ2_he(this);word=new chunk_ES2KDHJ2_fe(this);get address(){return chunk_ES2KDHJ2_w({deprecated:"faker.address",proposed:"faker.location",since:"8.0",until:"10.0"}),this.location}get name(){return chunk_ES2KDHJ2_w({deprecated:"faker.name",proposed:"faker.person",since:"8.0",until:"10.0"}),this.person}constructor(e){super({randomizer:e.randomizer,seed:e.seed});let{locale:r}=e;if(Array.isArray(r)){if(0===r.length)throw new chunk_ES2KDHJ2_m("The locale option must contain at least one locale definition.");r=function chunk_ES2KDHJ2_We(i){let e={};for(let r of i)for(let t in r){let a=r[t];void 0===e[t]?e[t]={...a}:e[t]={...a,...e[t]}}return e}(r)}this.rawDefinitions=r,this.definitions=chunk_ES2KDHJ2_Ue(this.rawDefinitions)}getMetadata(){return this.rawDefinitions.metadata??{}}}({locale:[ys,Fi]})}}]);